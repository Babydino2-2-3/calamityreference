
var Module;

if (typeof Module === 'undefined') Module = {};

if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {
 var loadPackage = function(metadata) {

    var PACKAGE_PATH;
    if (typeof window === 'object') {
      PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    } else if (typeof location !== 'undefined') {
      // worker
      PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
    } else {
      throw 'using preloaded data can only be done on a web page or in a web worker';
    }
    var PACKAGE_NAME = 'dist/roguejs.1.0.0-69.data';
    var REMOTE_PACKAGE_BASE = 'roguejs.1.0.0-69.data';
    if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
      Module['locateFile'] = Module['locateFilePackage'];
      Module.printErr('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
    }
    var REMOTE_PACKAGE_NAME = typeof Module['locateFile'] === 'function' ?
                              Module['locateFile'](REMOTE_PACKAGE_BASE) :
                              ((Module['filePackagePrefixURL'] || '') + REMOTE_PACKAGE_BASE);
  
    var REMOTE_PACKAGE_SIZE = metadata.remote_package_size;
    var PACKAGE_UUID = metadata.package_uuid;
  
    function fetchRemotePackage(packageName, packageSize, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        var size = packageSize;
        if (event.total) size = event.total;
        if (event.loaded) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: size
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          if (Module['setStatus']) Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };

    function handleError(error) {
      console.error('package error:', error);
    };
  
      var fetched = null, fetchedCallback = null;
      fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);
    
  function runWithFS() {

    function assert(check, msg) {
      if (!check) throw msg + new Error().stack;
    }

    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);

          this.finish(byteArray);

      },
      finish: function(byteArray) {
        var that = this;

        Module['FS_createPreloadedFile'](this.name, null, byteArray, true, true, function() {
          Module['removeRunDependency']('fp ' + that.name);
        }, function() {
          if (that.audio) {
            Module['removeRunDependency']('fp ' + that.name); // workaround for chromium bug 124926 (still no audio with this, but at least we don't hang)
          } else {
            Module.printErr('Preloading file ' + that.name + ' failed');
          }
        }, false, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change

        this.requests[this.name] = null;
      },
    };

        var files = metadata.files;
        for (i = 0; i < files.length; ++i) {
          new DataRequest(files[i].start, files[i].end, files[i].crunched, files[i].audio).open('GET', files[i].filename);
        }

  
    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      assert(arrayBuffer instanceof ArrayBuffer, 'bad input to processPackageData');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      
        // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though
        // (we may be allocating before malloc is ready, during startup).
        if (Module['SPLIT_MEMORY']) Module.printErr('warning: you should run the file packager with --no-heap-copy when SPLIT_MEMORY is used, otherwise copying into the heap may fail due to the splitting');
        var ptr = Module['getMemory'](byteArray.length);
        Module['HEAPU8'].set(byteArray, ptr);
        DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
  
          var files = metadata.files;
          for (i = 0; i < files.length; ++i) {
            DataRequest.prototype.requests[files[i].filename].onload();
          }
              Module['removeRunDependency']('datafile_dist/roguejs.1.0.0-69.data');

    };
    Module['addRunDependency']('datafile_dist/roguejs.1.0.0-69.data');
  
    if (!Module.preloadResults) Module.preloadResults = {};
  
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }
    
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }

 }
 loadPackage({"files": [{"audio": 0, "start": 0, "crunched": 0, "end": 4158, "filename": "/pdcfont.bmp"}, {"audio": 0, "start": 4158, "crunched": 0, "end": 6260, "filename": "/pdcicon.bmp"}], "remote_package_size": 6260, "package_uuid": "905dae3d-9a15-4a7e-b42d-f665d8a86d04"});

})();

// Route URL GET parameters to argc+argv
if (typeof window === "object") {
  Module['arguments'] = window.location.search.substr(1).trim().split('&');
  // If no args were passed arguments = [''], in which case kill the single empty string.
  if (!Module['arguments'][0])
    Module['arguments'] = [];
}
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  getFunctionTables: function (module) {
    if (!module) module = Module;
    var tables = {};
    for (var t in module) {
      if (/^FUNCTION_TABLE_.*/.test(t)) {
        var table = module[t];
        if (typeof table === 'object') tables[t.substr('FUNCTION_TABLE_'.length)] = table;
      }
    }
    return tables;
  },
  alignFunctionTables: function (module) {
    var tables = Runtime.getFunctionTables(module);
    var maxx = 0;
    for (var sig in tables) {
      maxx = Math.max(maxx, tables[sig].length);
    }
    assert(maxx >= 0);
    for (var sig in tables) {
      var table = tables[sig];
      while (table.length < maxx) table.push(0);
    }
    return maxx;
  },
  registerFunctions: function (sigs, newModule) {
    sigs.forEach(function(sig) {
      if (!Module['FUNCTION_TABLE_' + sig]) {
        Module['FUNCTION_TABLE_' + sig] = [];
      }
    });
    var oldMaxx = Runtime.alignFunctionTables(); // align the new tables we may have just added
    var newMaxx = Runtime.alignFunctionTables(newModule);
    var maxx = oldMaxx + newMaxx;
    sigs.forEach(function(sig) {
      var newTable = newModule['FUNCTION_TABLE_' + sig];
      var oldTable = Module['FUNCTION_TABLE_' + sig];
      assert(newTable !== oldTable);
      assert(oldTable.length === oldMaxx);
      for (var i = 0; i < newTable.length; i++) {
        oldTable.push(newTable[i]);
      }
      assert(oldTable.length === maxx);
    });
    assert(maxx === Runtime.alignFunctionTables()); // align the ones we didn't touch
  },
  functionPointers: [],
  addFunction: function (func) {
    Runtime.alignFunctionTables(); // XXX we should rely on this being an invariant
    var tables = Runtime.getFunctionTables();
    var ret = -1;
    for (var sig in tables) {
      var table = tables[sig];
      if (ret < 0) ret = table.length;
      else assert(ret === table.length);
      table.push(func);
    }
    return ret;
  },
  removeFunction: function (index) {
    Runtime.alignFunctionTables(); // XXX we should rely on this being an invariant
    var tables = Runtime.getFunctionTables();
    for (var sig in tables) {
      tables[sig][index] = null;
    }
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (asm) { Runtime.setDynamicTop(DYNAMICTOP); }; if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; if (asm) { Runtime.setDynamicTop(DYNAMICTOP); } return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;


function getSafeHeapType(bytes, isFloat) {
  switch (bytes) {
    case 1: return 'i8';
    case 2: return 'i16';
    case 4: return isFloat ? 'float' : 'i32';
    case 8: return 'double';
    default: assert(0);
  }
}


function SAFE_HEAP_STORE(dest, value, bytes, isFloat) {
  if (dest <= 0) abort('segmentation fault storing ' + bytes + ' bytes to address ' + dest);
  if (dest % bytes !== 0) abort('alignment error storing to address ' + dest + ', which was expected to be aligned to a multiple of ' + bytes);
  if (dest + bytes > Math.max(DYNAMICTOP, STATICTOP)) abort('segmentation fault, exceeded the top of the available heap when storing ' + bytes + ' bytes to address ' + dest + '. STATICTOP=' + STATICTOP + ', DYNAMICTOP=' + DYNAMICTOP);
  assert(DYNAMICTOP <= TOTAL_MEMORY);
  setValue(dest, value, getSafeHeapType(bytes, isFloat), 1);
}
function SAFE_HEAP_STORE_D(dest, value, bytes) {
  SAFE_HEAP_STORE(dest, value, bytes, true);
}

function SAFE_HEAP_LOAD(dest, bytes, unsigned, isFloat) {
  if (dest <= 0) abort('segmentation fault loading ' + bytes + ' bytes from address ' + dest);
  if (dest % bytes !== 0) abort('alignment error loading from address ' + dest + ', which was expected to be aligned to a multiple of ' + bytes);
  if (dest + bytes > Math.max(DYNAMICTOP, STATICTOP)) abort('segmentation fault, exceeded the top of the available heap when loading ' + bytes + ' bytes from address ' + dest + '. STATICTOP=' + STATICTOP + ', DYNAMICTOP=' + DYNAMICTOP);
  assert(DYNAMICTOP <= TOTAL_MEMORY);
  var type = getSafeHeapType(bytes, isFloat);
  var ret = getValue(dest, type, 1);
  if (unsigned) ret = unSign(ret, parseInt(type.substr(1)), 1);
  return ret;
}
function SAFE_HEAP_LOAD_D(dest, bytes, unsigned) {
  return SAFE_HEAP_LOAD(dest, bytes, unsigned, true);
}

function SAFE_FT_MASK(value, mask) {
  var ret = value & mask;
  if (ret !== value) {
    abort('Function table mask error: function pointer is ' + value + ' which is masked by ' + mask + ', the likely cause of this is that the function pointer is being called by the wrong type.');
  }
  return ret;
}

function segfault() {
  abort('segmentation fault');
}
function alignfault() {
  abort('alignment fault');
}
function ftfault() {
  abort('Function table mask error');
}

//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
  if (noSafe) {
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
  } else {
    switch(type) {
      case 'i1': SAFE_HEAP_STORE(((ptr)|0), ((value)|0), 1); break;
      case 'i8': SAFE_HEAP_STORE(((ptr)|0), ((value)|0), 1); break;
      case 'i16': SAFE_HEAP_STORE(((ptr)|0), ((value)|0), 2); break;
      case 'i32': SAFE_HEAP_STORE(((ptr)|0), ((value)|0), 4); break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],SAFE_HEAP_STORE(((ptr)|0), ((tempI64[0])|0), 4),SAFE_HEAP_STORE((((ptr)+(4))|0), ((tempI64[1])|0), 4)); break;
      case 'float': SAFE_HEAP_STORE_D(((ptr)|0), (+(value)), 4); break;
      case 'double': SAFE_HEAP_STORE_D(((ptr)|0), (+(value)), 8); break;
      default: abort('invalid type for setValue: ' + type);
    }
  }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
  if (noSafe) {
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  } else {
    switch(type) {
      case 'i1': return ((SAFE_HEAP_LOAD(((ptr)|0), 1, 0))|0);
      case 'i8': return ((SAFE_HEAP_LOAD(((ptr)|0), 1, 0))|0);
      case 'i16': return ((SAFE_HEAP_LOAD(((ptr)|0), 2, 0))|0);
      case 'i32': return ((SAFE_HEAP_LOAD(((ptr)|0), 4, 0))|0);
      case 'i64': return ((SAFE_HEAP_LOAD(((ptr)|0), 8, 0))|0);
      case 'float': return (+(SAFE_HEAP_LOAD_D(((ptr)|0), 4, 0)));
      case 'double': return (+(SAFE_HEAP_LOAD_D(((ptr)|0), 8, 0)));
      default: abort('invalid type for setValue: ' + type);
    }
  }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = ((SAFE_HEAP_LOAD((((ptr)+(i))|0), 1, 1))|0);
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = ((SAFE_HEAP_LOAD(((ptr++)|0), 1, 0))|0);
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = ((SAFE_HEAP_LOAD((((ptr)+(i*2))|0), 2, 0))|0);
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module["UTF16ToString"] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    SAFE_HEAP_STORE(((outPtr)|0), ((codeUnit)|0), 2);
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  SAFE_HEAP_STORE(((outPtr)|0), ((0)|0), 2);
  return outPtr - startPtr;
}
Module["stringToUTF16"] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module["lengthBytesUTF16"] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = ((SAFE_HEAP_LOAD((((ptr)+(i*4))|0), 4, 0))|0);
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module["UTF32ToString"] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    SAFE_HEAP_STORE(((outPtr)|0), ((codeUnit)|0), 4);
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  SAFE_HEAP_STORE(((outPtr)|0), ((0)|0), 4);
  return outPtr - startPtr;
}
Module["stringToUTF32"] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module["lengthBytesUTF32"] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;



buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    SAFE_HEAP_STORE((((buffer)+(i))|0), ((chr)|0), 1);
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    SAFE_HEAP_STORE(((buffer++)|0), ((array[i])|0), 1);
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    SAFE_HEAP_STORE(((buffer++)|0), ((str.charCodeAt(i))|0), 1);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) SAFE_HEAP_STORE(((buffer)|0), ((0)|0), 1);
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 89248;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0,0,133,206,0,0,0,0,0,0,45,0,0,0,133,206,0,0,0,0,0,0,42,0,0,0,119,48,1,0,0,0,0,0,37,0,0,0,148,206,0,0,0,0,0,0,43,0,0,0,160,206,0,0,0,0,0,0,46,0,0,0,165,206,0,0,0,0,0,0,64,0,0,0,141,0,1,0,0,0,0,0,35,0,0,0,176,206,0,0,0,0,0,0,94,0,0,0,184,206,0,0,0,0,0,0,33,0,0,0,80,54,1,0,0,0,0,0,63,0,0,0,87,54,1,0,0,0,0,0,58,0,0,0,94,54,1,0,0,0,0,0,41,0,0,0,138,54,1,0,0,0,0,0,32,0,0,0,189,206,0,0,0,0,0,0,93,0,0,0,200,206,0,0,0,0,0,0,44,0,0,0,206,206,0,0,0,0,0,0,61,0,0,0,119,54,1,0,0,0,0,0,47,0,0,0,124,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,237,0,0,54,237,0,0,59,237,0,0,65,237,0,0,76,237,0,0,90,237,0,0,110,237,0,0,121,237,0,0,137,237,0,0,156,237,0,0,168,237,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,7,0,0,0,7,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,20,0,0,0,40,0,0,0,80,0,0,0,160,0,0,0,64,1,0,0,128,2,0,0,20,5,0,0,40,10,0,0,80,20,0,0,200,50,0,0,144,101,0,0,80,195,0,0,160,134,1,0,64,13,3,0,128,26,6,0,0,53,12,0,128,132,30,0,0,9,61,0,0,18,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,12,0,0,0,49,120,52,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,186,237,0,0,0,0,0,0,0,8,0,0,10,0,0,0,20,0,0,0,5,0,0,0,2,0,0,0,1,0,0,0,48,120,48,47,48,120,48,0,0,0,0,0,0,0,0,0,0,0,0,0,194,237,0,0,0,0,0,0,0,64,0,0,10,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,49,120,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198,237,0,0,15,0,0,0,0,0,0,0,10,0,0,0,17,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,49,120,50,47,49,120,53,47,49,120,53,0,0,0,0,0,0,0,0,0,206,237,0,0,100,0,0,0,0,8,0,0,10,0,0,0,136,19,0,0,10,0,0,0,255,255,255,255,1,0,0,0,49,120,56,47,49,120,56,47,51,120,49,48,0,0,0,0,0,0,0,0,213,237,0,0,0,0,0,0,0,8,0,0,10,0,0,0,2,0,0,0,1,0,0,0,7,0,0,0,1,0,0,0,49,120,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,237,0,0,0,0,0,0,0,8,0,0,10,0,0,0,80,0,0,0,8,0,0,0,3,0,0,0,1,0,0,0,37,37,37,120,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,237,0,0,20,0,0,0,0,88,0,0,10,0,0,0,208,7,0,0,13,0,0,0,2,0,0,0,1,0,0,0,52,120,51,47,51,120,53,0,0,0,0,0,0,0,0,0,0,0,0,0,239,237,0,0,0,0,0,0,0,8,0,0,10,0,0,0,3,0,0,0,1,0,0,0,5,0,0,0,1,0,0,0,49,120,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,249,237,0,0,0,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,1,0,0,0,9,0,0,0,1,0,0,0,48,120,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,238,0,0,70,0,0,0,0,0,0,0,10,0,0,0,184,11,0,0,15,0,0,0,6,0,0,0,1,0,0,0,50,120,49,50,47,50,120,52,0,0,0,0,0,0,0,0,0,0,0,0,16,238,0,0,0,0,0,0,0,72,0,0,10,0,0,0,1,0,0,0,1,0,0,0,7,0,0,0,1,0,0,0,49,120,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,238,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,3,0,0,0,8,0,0,0,1,0,0,0,49,120,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,238,0,0,40,0,0,0,0,8,0,0,10,0,0,0,200,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,51,120,52,47,51,120,52,47,50,120,53,0,0,0,0,0,0,0,0,0,42,238,0,0,100,0,0,0,0,0,0,0,10,0,0,0,37,0,0,0,3,0,0,0,9,0,0,0,1,0,0,0,48,120,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,238,0,0,15,0,0,0,32,0,0,0,10,0,0,0,5,0,0,0,1,0,0,0,6,0,0,0,1,0,0,0,49,120,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,238,0,0,0,0,0,0,0,4,0,0,10,0,0,0,120,0,0,0,8,0,0,0,3,0,0,0,1,0,0,0,52,120,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,238,0,0,0,0,0,0,0,8,0,0,10,0,0,0,15,0,0,0,3,0,0,0,3,0,0,0,1,0,0,0,49,120,53,47,49,120,53,0,0,0,0,0,0,0,0,0,0,0,0,0,67,238,0,0,0,0,0,0,0,8,0,0,10,0,0,0,9,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,49,120,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,238,0,0,0,0,0,0,0,8,0,0,10,0,0,0,2,0,0,0,1,0,0,0,5,0,0,0,1,0,0,0,49,120,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,238,0,0,50,0,0,0,0,24,0,0,10,0,0,0,120,0,0,0,6,0,0,0,4,0,0,0,1,0,0,0,49,120,56,47,49,120,56,47,50,120,54,0,0,0,0,0,0,0,0,0,91,238,0,0,0,0,0,0,0,8,0,0,10,0,0,0,190,0,0,0,7,0,0,0,254,255,255,255,1,0,0,0,49,120,57,47,49,120,57,47,50,120,57,0,0,0,0,0,0,0,0,0,105,238,0,0,20,0,0,0,0,24,0,0,10,0,0,0,94,1,0,0,8,0,0,0,1,0,0,0,1,0,0,0,49,120,49,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,238,0,0,0,0,0,0,0,0,0,0,10,0,0,0,55,0,0,0,5,0,0,0,4,0,0,0,1,0,0,0,49,120,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,238,0,0,30,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,52,120,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,238,0,0,30,0,0,0,0,0,0,0,10,0,0,0,50,0,0,0,4,0,0,0,6,0,0,0,1,0,0,0,49,120,54,47,49,120,54,0,0,0,0,0,0,0,0,0,0,0,0,0,131,238,0,0,0,0,0,0,0,8,0,0,10,0,0,0,6,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,49,120,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,238,0,0,20,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,152,238,0,0,15,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,162,238,0,0,15,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,184,238,0,0,13,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,195,238,0,0,12,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,206,238,0,0,10,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,218,238,0,0,10,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,230,238,0,0,5,0,0,0,150,0,0,0,0,0,0,0,0,0,0,0,241,238,0,0,7,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,251,238,0,0,8,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,9,239,0,0,8,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,16,239,0,0,13,0,0,0,150,0,0,0,0,0,0,0,0,0,0,0,30,239,0,0,3,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,44,239,0,0,13,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,52,239,0,0,6,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,70,239,0,0,6,0,0,0,105,0,0,0,0,0,0,0,0,0,0,0,86,239,0,0,2,0,0,0,250,0,0,0,0,0,0,0,0,0,0,0,98,239,0,0,5,0,0,0,200,0,0,0,0,0,0,0,0,0,0,0,112,239,0,0,5,0,0,0,190,0,0,0,0,0,0,0,0,0,0,0,123,239,0,0,13,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,140,239,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,150,239,0,0,6,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,161,239,0,0,9,0,0,0,144,1,0,0,0,0,0,0,0,0,0,0,172,239,0,0,9,0,0,0,144,1,0,0,0,0,0,0,0,0,0,0,185,239,0,0,5,0,0,0,24,1,0,0,0,0,0,0,0,0,0,0,202,239,0,0,10,0,0,0,164,1,0,0,0,0,0,0,0,0,0,0,30,239,0,0,10,0,0,0,54,1,0,0,0,0,0,0,0,0,0,0,212,239,0,0,1,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,222,239,0,0,10,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,240,239,0,0,8,0,0,0,184,1,0,0,0,0,0,0,0,0,0,0,250,239,0,0,8,0,0,0,144,1,0,0,0,0,0,0,0,0,0,0,10,240,0,0,4,0,0,0,204,1,0,0,0,0,0,0,0,0,0,0,23,240,0,0,9,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,38,240,0,0,5,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,52,240,0,0,7,0,0,0,214,1,0,0,0,0,0,0,0,0,0,0,60,240,0,0,5,0,0,0,124,1,0,0,0,0,0,0,0,0,0,0,75,240,0,0,7,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,93,240,0,0,4,0,0,0,150,0,0,0,0,0,0,0,0,0,0,0,107,240,0,0,2,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,120,240,0,0,3,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,126,240,0,0,7,0,0,0,160,0,0,0,0,0,0,0,0,0,0,0,140,240,0,0,10,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,156,240,0,0,10,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,172,240,0,0,6,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,188,240,0,0,7,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,203,240,0,0,10,0,0,0,115,0,0,0,0,0,0,0,0,0,0,0,232,240,0,0,3,0,0,0,200,0,0,0,0,0,0,0,0,0,0,0,246,240,0,0,2,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,38,240,0,0,5,0,0,0,165,0,0,0,0,0,0,0,0,0,0,0,5,241,0,0,8,0,0,0,150,0,0,0,0,0,0,0,0,0,0,0,20,241,0,0,4,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,35,241,0,0,7,0,0,0,105,0,0,0,0,0,0,0,0,0,0,0,48,241,0,0,3,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,67,241,0,0,2,0,0,0,250,0,0,0,0,0,0,0,0,0,0,0,81,241,0,0,11,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,86,241,0,0,11,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,97,241,0,0,12,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,106,43,1,0,12,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,107,241,0,0,8,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,114,241,0,0,10,0,0,0,75,0,0,0,0,0,0,0,0,0,0,0,112,43,1,0,12,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,131,241,0,0,12,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,140,241,0,0,12,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,241,0,0,12,0,0,0,250,0,0,0,0,0,0,0,0,0,0,0,152,241,0,0,6,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,165,241,0,0,3,0,0,0,74,1,0,0,0,0,0,0,0,0,0,0,175,241,0,0,3,0,0,0,74,1,0,0,0,0,0,0,0,0,0,0,180,241,0,0,3,0,0,0,74,1,0,0,0,0,0,0,0,0,0,0,185,241,0,0,15,0,0,0,54,1,0,0,0,0,0,0,0,0,0,0,195,241,0,0,10,0,0,0,170,0,0,0,0,0,0,0,0,0,0,0,209,241,0,0,10,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,223,241,0,0,11,0,0,0,94,1,0,0,0,0,0,0,0,0,0,0,236,241,0,0,9,0,0,0,44,1,0,0,0,0,0,0,0,0,0,0,247,241,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,255,241,0,0,6,0,0,0,84,1,0,0,0,0,0,0,0,0,0,0,13,242,0,0,6,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,25,242,0,0,5,0,0,0,24,1,0,0,0,0,0,0,0,0,0,0,63,0,0,0,38,242,0,0,1,0,0,0,47,0,0,0,51,242,0,0,1,0,0,0,104,0,0,0,68,242,0,0,1,0,0,0,106,0,0,0,74,242,0,0,1,0,0,0,107,0,0,0,80,242,0,0,1,0,0,0,108,0,0,0,84,242,0,0,1,0,0,0,121,0,0,0,91,242,0,0,1,0,0,0,117,0,0,0,102,242,0,0,1,0,0,0,98,0,0,0,114,242,0,0,1,0,0,0,110,0,0,0,127,242,0,0,1,0,0,0,72,0,0,0,141,242,0,0,0,0,0,0,74,0,0,0,151,242,0,0,0,0,0,0,75,0,0,0,161,242,0,0,0,0,0,0,76,0,0,0,169,242,0,0,0,0,0,0,89,0,0,0,180,242,0,0,0,0,0,0,85,0,0,0,195,242,0,0,0,0,0,0,66,0,0,0,211,242,0,0,0,0,0,0,78,0,0,0,228,242,0,0,0,0,0,0,8,0,0,0,246,242,0,0,0,0,0,0,10,0,0,0,15,243,0,0,0,0,0,0,11,0,0,0,40,243,0,0,0,0,0,0,12,0,0,0,63,243,0,0,0,0,0,0,25,0,0,0,89,243,0,0,0,0,0,0,21,0,0,0,119,243,0,0,0,0,0,0,2,0,0,0,150,243,0,0,0,0,0,0,14,0,0,0,182,243,0,0,0,0,0,0,0,0,0,0,215,243,0,0,1,0,0,0,0,0,0,0,243,243,0,0,1,0,0,0,102,0,0,0,19,244,0,0,1,0,0,0,116,0,0,0,56,244,0,0,1,0,0,0,109,0,0,0,78,244,0,0,1,0,0,0,122,0,0,0,113,244,0,0,1,0,0,0,94,0,0,0,145,244,0,0,1,0,0,0,115,0,0,0,170,244,0,0,1,0,0,0,62,0,0,0,199,244,0,0,1,0,0,0,60,0,0,0,220,244,0,0,1,0,0,0,46,0,0,0,239,244,0,0,1,0,0,0,44,0,0,0,0,245,0,0,1,0,0,0,105,0,0,0,19,245,0,0,1,0,0,0,73,0,0,0,30,245,0,0,1,0,0,0,113,0,0,0,53,245,0,0,1,0,0,0,114,0,0,0,67,245,0,0,1,0,0,0,101,0,0,0,80,245,0,0,1,0,0,0,119,0,0,0,90,245,0,0,1,0,0,0,87,0,0,0,106,245,0,0,1,0,0,0,84,0,0,0,118,245,0,0,1,0,0,0,80,0,0,0,134,245,0,0,1,0,0,0,82,0,0,0,147,245,0,0,1,0,0,0,100,0,0,0,160,245,0,0,1,0,0,0,99,0,0,0,173,245,0,0,1,0,0,0,97,0,0,0,186,245,0,0,1,0,0,0,41,0,0,0,207,245,0,0,1,0,0,0,93,0,0,0,229,245,0,0,1,0,0,0,61,0,0,0,250,245,0,0,1,0,0,0,64,0,0,0,15,246,0,0,1,0,0,0,68,0,0,0,36,246,0,0,1,0,0,0,111,0,0,0,67,246,0,0,1,0,0,0,18,0,0,0,88,246,0,0,1,0,0,0,16,0,0,0,103,246,0,0,1,0,0,0,27,0,0,0,124,246,0,0,1,0,0,0,83,0,0,0,140,246,0,0,1,0,0,0,81,0,0,0,151,246,0,0,1,0,0,0,33,0,0,0,157,246,0,0,1,0,0,0,70,0,0,0,171,246,0,0,1,0,0,0,118,0,0,0,207,246,0,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([145,0,1,0,174,0,1,0,180,0,1,0,195,0,1,0,145,0,1,0,174,0,1,0,211,0,1,0,225,0,1,0,243,0,1,0,249,0,1,0,9,1,1,0,22,1,1,0,33,1,1,0,41,1,1,0,60,1,1,0,75,1,1,0,249,255,255,255,250,255,255,255,251,255,255,255,252,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,249,255,255,255,250,255,255,255,251,255,255,255,252,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,143,1,1,0,149,1,1,0,160,1,1,0,27,49,1,0,166,1,1,0,172,1,1,0,178,1,1,0,186,1,1,0,191,1,1,0,119,48,1,0,196,1,1,0,202,1,1,0,207,1,1,0,215,1,1,0,222,1,1,0,227,1,1,0,233,1,1,0,91,46,1,0,123,46,1,0,240,1,1,0,244,1,1,0,254,1,1,0,4,2,1,0,14,2,1,0,24,2,1,0,31,2,1,0,37,2,1,0,27,0,0,0,44,2,1,0,25,0,0,0,50,2,1,0,40,0,0,0,62,2,1,0,50,0,0,0,71,2,1,0,40,0,0,0,81,2,1,0,44,1,0,0,89,2,1,0,44,1,0,0,97,2,1,0,225,0,0,0,107,2,1,0,5,0,0,0,115,2,1,0,50,0,0,0,122,2,1,0,150,0,0,0,127,2,1,0,44,1,0,0,138,2,1,0,50,0,0,0,151,2,1,0,50,0,0,0,161,2,1,0,15,0,0,0,170,2,1,0,60,0,0,0,175,2,1,0,200,0,0,0,180,2,1,0,220,0,0,0,186,2,1,0,63,0,0,0,194,2,1,0,94,1,0,0,199,2,1,0,29,1,0,0,208,2,1,0,200,0,0,0,223,2,1,0,50,0,0,0,254,1,1,0,60,0,0,0,4,2,1,0,70,0,0,0,233,2,1,0,44,1,0,0,243,2,1,0,80,0,0,0,26,0,0,0,250,2,1,0,7,3,1,0,13,3,1,0,20,3,1,0,27,3,1,0,33,3,1,0,39,3,1,0,46,3,1,0,55,3,1,0,63,3,1,0,71,3,1,0,81,3,1,0,87,3,1,0,91,3,1,0,102,3,1,0,107,3,1,0,115,3,1,0,121,3,1,0,130,3,1,0,141,3,1,0,150,3,1,0,160,3,1,0,166,3,1,0,172,3,1,0,187,3,1,0,193,3,1,0,198,3,1,0,205,3,1,0,213,3,1,0,222,3,1,0,229,3,1,0,234,3,1,0,241,3,1,0,33,0,0,0,251,3,1,0,4,4,1,0,14,4,1,0,19,4,1,0,25,4,1,0,32,4,1,0,39,4,1,0,119,48,1,0,48,4,1,0,53,4,1,0,58,4,1,0,68,4,1,0,76,4,1,0,83,4,1,0,90,4,1,0,99,4,1,0,123,46,1,0,105,4,1,0,113,4,1,0,117,4,1,0,126,4,1,0,135,4,1,0,22,0,0,0,140,4,1,0,142,4,1,0,145,4,1,0,148,4,1,0,152,4,1,0,156,4,1,0,159,4,1,0,163,4,1,0,167,4,1,0,172,4,1,0,176,4,1,0,180,4,1,0,184,4,1,0,188,4,1,0,193,4,1,0,197,4,1,0,201,4,1,0,204,4,1,0,208,4,1,0,213,4,1,0,217,4,1,0,221,4,1,0,225,4,1,0,230,4,1,0,234,4,1,0,238,4,1,0,241,4,1,0,243,4,1,0,247,4,1,0,250,4,1,0,254,4,1,0,1,5,1,0,5,5,1,0,9,5,1,0,13,5,1,0,17,5,1,0,20,5,1,0,24,5,1,0,28,5,1,0,31,5,1,0,35,5,1,0,39,5,1,0,44,5,1,0,48,5,1,0,52,5,1,0,55,5,1,0,59,5,1,0,61,5,1,0,65,5,1,0,68,5,1,0,70,18,1,0,72,5,1,0,76,5,1,0,79,5,1,0,82,5,1,0,86,5,1,0,90,5,1,0,95,5,1,0,98,5,1,0,103,5,1,0,107,5,1,0,110,5,1,0,113,5,1,0,117,5,1,0,121,5,1,0,125,5,1,0,130,5,1,0,134,5,1,0,138,5,1,0,143,5,1,0,147,5,1,0,151,5,1,0,151,5,1,0,155,5,1,0,159,5,1,0,163,5,1,0,165,5,1,0,168,5,1,0,172,5,1,0,176,5,1,0,180,5,1,0,183,5,1,0,187,5,1,0,191,5,1,0,195,5,1,0,199,5,1,0,202,5,1,0,206,5,1,0,211,5,1,0,214,5,1,0,218,5,1,0,223,5,1,0,226,5,1,0,229,5,1,0,233,5,1,0,237,5,1,0,241,5,1,0,244,5,1,0,248,5,1,0,252,5,1,0,0,6,1,0,4,6,1,0,8,6,1,0,12,6,1,0,16,6,1,0,20,6,1,0,25,6,1,0,29,6,1,0,32,6,1,0,36,6,1,0,40,6,1,0,44,6,1,0,48,6,1,0,51,6,1,0,55,6,1,0,59,6,1,0,64,6,1,0,67,6,1,0,71,6,1,0,76,6,1,0,80,6,1,0,85,6,1,0,87,6,1,0,91,6,1,0,94,6,1,0,97,6,1,0,101,6,1,0,104,6,1,0,108,6,1,0,112,6,1,0,116,6,1,0,120,6,1,0,124,6,1,0,128,6,1,0,133,6,1,0,137,6,1,0,142,6,1,0,146,6,1,0,149,6,1,0,151,6,1,0,155,6,1,0,158,6,1,0,163,6,1,0,167,6,1,0,171,6,1,0,175,6,1,0,179,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,166,51,1,0,234,11,1,0,241,11,1,0,246,11,1,0,10,0,0,0,253,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,237,25,1,0,243,25,1,0,5,209,0,0,1,0,0,0,2,0,0,0,0,26,1,0,6,26,1,0,243,208,0,0,1,0,0,0,2,0,0,0,36,26,1,0,41,26,1,0,249,208,0,0,1,0,0,0,2,0,0,0,74,26,1,0,83,26,1,0,3,209,0,0,1,0,0,0,3,0,0,0,115,26,1,0,122,26,1,0,254,208,0,0,1,0,0,0,2,0,0,0,153,26,1,0,163,26,1,0,7,209,0,0,1,0,0,0,2,0,0,0,195,26,1,0,201,26,1,0,196,2,0,0,4,0,0,0,5,0,0,0,217,26,1,0,222,26,1,0,44,233,0,0,6,0,0,0,7,0,0,0,227,26,1,0,233,26,1,0,34,209,0,0,6,0,0,0,7,0,0,0,239,26,1,0,244,26,1,0,42,217,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,8,0,0,0,20,0,0,0,113,35,1,0,135,35,1,0,0,8,0,0,9,0,0,0,82,3,0,0,179,35,1,0,179,35,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,10,0,0,0,82,3,0,0,42,225,0,0,42,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,11,0,0,0,82,3,0,0,217,35,1,0,1,36,1,0,8,0,0,0,12,0,0,0,30,0,0,0,38,36,1,0,76,36,1,0,1,0,0,0,1,0,0,0,1,0,0,0,253,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,253,255,255,255,253,255,255,255,2,0,0,0,254,255,255,255,0,0,0,0,1,0,0,0,1,0,0,0,140,43,1,0,147,43,1,0,152,43,1,0,167,43,1,0,97,0,0,0,106,43,1,0,1,0,0,0,98,0,0,0,142,49,1,0,1,0,0,0,100,0,0,0,112,43,1,0,1,0,0,0,104,0,0,0,117,43,1,0,0,0,0,0,115,0,0,0,129,43,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,182,41,1,0,217,41,1,0,253,41,1,0,34,42,1,0,72,42,1,0,111,42,1,0,151,42,1,0,151,42,1,0,191,42,1,0,151,42,1,0,231,42,1,0,15,43,1,0,57,43,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+28608);
/* memory initializer */ allocate([2,0,0,0,0,0,0,0,254,255,255,255,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,51,53,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,185,53,1,0,189,53,1,0,255,0,0,0,0,0,0,0,193,53,1,0,197,53,1,0,255,0,0,0,0,0,0,0,201,53,1,0,201,53,1,0,255,0,0,0,0,0,0,0,201,53,1,0,205,53,1,0,2,0,0,0,12,0,0,0,209,53,1,0,213,53,1,0,255,0,0,0,4,0,0,0,217,53,1,0,197,53,1,0,255,0,0,0,0,0,0,0,201,53,1,0,189,53,1,0,255,0,0,0,12,0,0,0,197,53,1,0,185,53,1,0,255,0,0,0,12,0,0,0,205,53,1,0,209,53,1,0,255,0,0,0,4,0,0,0,33,0,0,0,80,54,1,0,0,0,0,0,63,0,0,0,87,54,1,0,0,0,0,0,58,0,0,0,94,54,1,0,0,0,0,0,254,0,0,0,99,54,1,0,0,0,0,0,61,0,0,0,119,54,1,0,0,0,0,0,47,0,0,0,124,54,1,0,0,0,0,0,41,0,0,0,138,54,1,0,0,0,0,0,93,0,0,0,145,54,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,2,0,1,0,3,0,1,0,4,0,1,0,5,0,1,0,6,0,1,0,7,0,1,0,8,0,1,0,9,0,1,0,10,0,1,0,11,0,1,0,12,0,1,0,13,0,1,0,14,0,1,0,15,0,1,0,16,0,1,0,17,0,1,0,18,0,1,0,19,0,1,0,20,0,1,0,21,0,1,0,22,0,1,0,23,0,1,0,24,0,1,0,25,0,1,0,26,0,1,0,27,0,1,0,28,0,1,0,29,0,1,0,30,0,1,0,31,0,1,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,26,0,1,0,27,0,1,0,24,0,1,0,25,0,1,0,47,0,0,0,219,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,4,0,1,0,177,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,248,0,0,0,241,0,0,0,176,0,0,0,15,0,1,0,217,0,0,0,191,0,0,0,218,0,0,0,192,0,0,0,197,0,0,0,45,0,0,0,45,0,0,0,196,0,0,0,45,0,0,0,95,0,0,0,195,0,0,0,180,0,0,0,193,0,0,0,194,0,0,0,179,0,0,0,243,0,0,0,242,0,0,0,227,0,0,0,216,0,0,0,156,0,0,0,249,0,0,0,127,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+40648);
/* memory initializer */ allocate([1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+43292);
/* memory initializer */ allocate([255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,4,0,0,0,0,4,1,135,1,187,1,237,1,0,0,79,4,0,0,0,0,5,1,144,1,188,1,236,1,0,0,82,4,0,0,0,0,3,1,35,2,224,1,234,1,0,0,81,4,0,0,0,0,2,1,36,2,225,1,235,1,0,0,74,4,0,0,0,0,6,1,132,1,191,1,230,1,0,0,77,4,0,0,0,0,102,1,128,1,192,1,233,1,0,0,75,4,0,0,0,0,83,1,140,1,189,1,231,1,0,0,78,4,0,0,0,0,82,1,138,1,190,1,232,1,0,0,73,4,0,0,0,0,75,1,133,1,221,1,223,1,0,0,127,0,0,0,0,0,74,1,125,1,15,2,222,1,0,0,58,4,0,0,0,0,9,1,21,1,33,1,45,1,0,0,59,4,0,0,0,0,10,1,22,1,34,1,46,1,0,0,60,4,0,0,0,0,11,1,23,1,35,1,47,1,0,0,61,4,0,0,0,0,12,1,24,1,36,1,48,1,0,0,62,4,0,0,0,0,13,1,25,1,37,1,49,1,0,0,63,4,0,0,0,0,14,1,26,1,38,1,50,1,0,0,64,4,0,0,0,0,15,1,27,1,39,1,51,1,0,0,65,4,0,0,0,0,16,1,28,1,40,1,52,1,0,0,66,4,0,0,0,0,17,1,29,1,41,1,53,1,0,0,67,4,0,0,0,0,18,1,30,1,42,1,54,1,0,0,68,4,0,0,0,0,19,1,31,1,43,1,55,1,0,0,69,4,0,0,0,0,20,1,32,1,44,1,56,1,0,0,104,4,0,0,0,0,21,1,33,1,45,1,57,1,0,0,105,4,0,0,0,0,22,1,34,1,46,1,58,1,0,0,106,4,0,0,0,0,23,1,35,1,47,1,59,1,0,0,8,0,0,0,0,0,8,0,8,0,249,1,248,1,0,0,9,0,0,0,0,0,9,0,95,1,226,1,227,1,0,0,70,4,0,0,0,0,90,1,141,1,90,1,90,1,0,0,72,4,0,0,0,0,149,1,147,1,149,1,149,1,0,0,156,4,0,0,0,0,77,1,77,1,77,1,77,1,0,0,120,4,0,0,0,0,1,1,1,1,1,1,1,1,0,0,117,4,0,0,0,0,105,1,93,1,94,1,105,1,0,0,118,4,0,0,0,0,111,1,139,1,111,1,111,1,0,0,27,0,0,0,0,0,27,0,27,0,27,0,239,1,0,0,88,4,0,0,1,0,203,1,203,1,204,1,205,1,0,0,87,4,0,0,1,0,209,1,43,0,212,1,216,1,0,0,86,4,0,0,1,0,208,1,45,0,213,1,217,1,0,0,85,4,0,0,1,0,207,1,42,0,215,1,219,1,0,0,84,4,0,0,1,0,202,1,47,0,214,1,218,1,0,0,99,4,0,0,1,0,206,1,46,0,210,1,220,1,0,0,98,4,0,0,1,0,250,1,48,0,251,1,5,2,0,0,89,4,0,0,1,0,199,1,49,0,252,1,6,2,0,0,90,4,0,0,1,0,200,1,50,0,253,1,7,2,0,0,91,4,0,0,1,0,201,1,51,0,254,1,8,2,0,0,92,4,0,0,1,0,196,1,52,0,255,1,9,2,0,0,93,4,0,0,1,0,197,1,53,0,0,2,10,2,0,0,94,4,0,0,1,0,198,1,54,0,1,2,11,2,0,0,95,4,0,0,1,0,193,1,55,0,2,2,12,2,0,0,96,4,0,0,1,0,194,1,56,0,3,2,13,2,0,0,97,4,0,0,1,0,195,1,57,0,4,2,14,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,220,195,0,0,76,196,0,0,188,196,0,0,188,196,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,16,0,0,0,137,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,16,0,0,0,129,86,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,16,0,0,0,121,82,1,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,255,119,101,97,114,0,121,111,117,32,97,114,101,32,97,108,114,101,97,100,121,32,119,101,97,114,105,110,103,32,115,111,109,101,0,46,32,32,89,111,117,39,108,108,32,104,97,118,101,32,116,111,32,116,97,107,101,32,105,116,32,111,102,102,32,102,105,114,115,116,0,121,111,117,32,99,97,110,39,116,32,119,101,97,114,32,116,104,97,116,0,119,101,97,114,105,110,103,32,37,115,0,110,111,116,32,119,101,97,114,105,110,103,32,97,114,109,111,114,0,121,111,117,32,97,114,101,110,39,116,32,119,101,97,114,105,110,103,32,97,110,121,32,97,114,109,111,114,0,119,97,115,0,121,111,117,32,117,115,101,100,32,116,111,32,98,101,0,32,119,101,97,114,105,110,103,32,37,99,41,32,37,115,0,105,110,32,115,111,109,101,32,98,105,122,97,114,114,101,32,112,108,97,99,101,32,40,37,100,44,32,37,100,41,0,0,121,111,117,32,99,97,110,32,109,111,118,101,32,97,103,97,105,110,0,0,116,104,101,114,101,32,105,115,32,0,110,111,116,104,105,110,103,32,104,101,114,101,0,32,116,111,32,112,105,99,107,32,117,112,0,0,73,32,115,101,101,32,0,110,111,32,109,111,110,115,116,101,114,32,116,104,101,114,101,0,121,111,117,32,104,97,118,101,110,39,116,32,116,121,112,101,100,32,97,32,99,111,109,109,97,110,100,32,121,101,116,0,118,101,114,115,105,111,110,32,37,115,46,32,40,109,99,116,101,115,113,32,119,97,115,32,104,101,114,101,41,0,89,111,117,32,104,97,118,101,32,102,111,117,110,100,32,0,110,111,32,116,114,97,112,32,116,104,101,114,101,0,119,105,101,108,100,105,110,103,0,119,101,97,114,105,110,103,0,40,76,41,0,111,110,32,108,101,102,116,32,104,97,110,100,0,40,82,41,0,111,110,32,114,105,103,104,116,32,104,97,110,100,0,121,111,117,32,97,114,101,32,37,115,32,40,0,121,111,117,32,97,114,101,32,0,37,115,32,110,111,116,104,105,110,103,0,105,108,108,101,103,97,108,32,99,111,109,109,97,110,100,32,39,37,115,39,0,97,32,115,101,99,114,101,116,32,100,111,111,114,0,99,104,97,114,97,99,116,101,114,32,121,111,117,32,119,97,110,116,32,104,101,108,112,32,102,111,114,32,40,42,32,102,111,114,32,97,108,108,41,58,32,0,37,115,37,115,0,117,110,107,110,111,119,110,32,99,104,97,114,97,99,116,101,114,32,39,37,115,39,0,119,104,97,116,32,100,111,32,121,111,117,32,119,97,110,116,32,105,100,101,110,116,105,102,105,101,100,63,32,0,117,110,107,110,111,119,110,32,99,104,97,114,97,99,116,101,114,0,39,37,115,39,58,32,37,115,0,73,32,115,101,101,32,110,111,32,119,97,121,32,100,111,119,110,0,121,111,117,32,102,101,101,108,32,97,32,119,114,101,110,99,104,105,110,103,32,115,101,110,115,97,116,105,111,110,32,105,110,32,121,111,117,114,32,103,117,116,0,121,111,117,114,32,119,97,121,32,105,115,32,109,97,103,105,99,97,108,108,121,32,98,108,111,99,107,101,100,0,73,32,115,101,101,32,110,111,32,119,97,121,32,117,112,0,89,111,117,32,99,97,110,39,116,46,32,32,89,111,117,39,114,101,32,102,108,111,97,116,105,110,103,32,111,102,102,32,116,104,101,32,103,114,111,117,110,100,33,0,99,97,108,108,0,121,111,117,32,99,97,110,39,116,32,99,97,108,108,32,116,104,97,116,32,97,110,121,116,104,105,110,103,0,116,104,97,116,32,104,97,115,32,97,108,114,101,97,100,121,32,98,101,101,110,32,105,100,101,110,116,105,102,105,101,100,0,87,97,115,32,0,99,97,108,108,101,100,32,34,37,115,34,0,119,97,108,108,32,111,102,32,97,32,114,111,111,109,0,97,32,115,116,97,105,114,99,97,115,101,0,100,111,111,114,0,114,111,111,109,32,102,108,111,111,114,0,112,97,115,115,97,103,101,0,116,114,97,112,0,115,111,108,105,100,32,114,111,99,107,0,97,114,109,111,114,0,116,104,101,32,65,109,117,108,101,116,32,111,102,32,89,101,110,100,111,114,0,116,114,105,112,112,121,0,99,111,110,102,117,115,101,100,0,121,111,117,32,102,101,101,108,32,108,101,115,115,32,37,115,32,110,111,119,0,102,97,114,32,111,117,116,33,32,32,69,118,101,114,121,116,104,105,110,103,32,105,115,32,97,108,108,32,99,111,115,109,105,99,32,97,103,97,105,110,0,116,104,101,32,118,101,105,108,32,111,102,32,100,97,114,107,110,101,115,115,32,108,105,102,116,115,0,121,111,117,32,102,101,101,108,32,121,111,117,114,115,101,108,102,32,115,108,111,119,105,110,103,32,100,111,119,110,0,116,104,101,32,109,117,110,99,104,105,101,115,32,111,118,101,114,112,111,119,101,114,32,121,111,117,114,32,109,111,116,111,114,32,99,97,112,97,98,105,108,105,116,105,101,115,46,32,32,0,121,111,117,32,102,101,101,108,32,116,111,111,32,119,101,97,107,32,102,114,111,109,32,108,97,99,107,32,111,102,32,102,111,111,100,46,32,32,0,89,111,117,32,102,114,101,97,107,32,111,117,116,0,89,111,117,32,102,97,105,110,116,0,116,104,101,32,109,117,110,99,104,105,101,115,32,97,114,101,32,105,110,116,101,114,102,101,114,105,110,103,32,119,105,116,104,32,121,111,117,114,32,109,111,116,111,114,32,99,97,112,97,98,105,108,105,116,101,115,0,121,111,117,32,97,114,101,32,115,116,97,114,116,105,110,103,32,116,111,32,102,101,101,108,32,119,101,97,107,0,103,101,116,116,105,110,103,32,116,104,101,32,109,117,110,99,104,105,101,115,0,103,101,116,116,105,110,103,32,104,117,110,103,114,121,0,121,111,117,32,97,114,101,32,103,101,116,116,105,110,103,32,116,104,101,32,109,117,110,99,104,105,101,115,0,121,111,117,32,97,114,101,32,115,116,97,114,116,105,110,103,32,116,111,32,103,101,116,32,104,117,110,103,114,121,0,69,118,101,114,121,116,104,105,110,103,32,108,111,111,107,115,32,83,79,32,98,111,114,105,110,103,32,110,111,119,46,0,98,117,109,109,101,114,33,32,32,89,111,117,39,118,101,32,104,105,116,32,116,104,101,32,103,114,111,117,110,100,0,121,111,117,32,102,108,111,97,116,32,103,101,110,116,108,121,32,116,111,32,116,104,101,32,103,114,111,117,110,100,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,108,105,109,101,45,109,111,108,100], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+48876);
/* memory initializer */ allocate([79,118,101,114,119,114,105,116,101,0,83,108,111,119,0,67,108,101,97,114,0,97,32,116,114,97,112,100,111,111,114,0,97,110,32,97,114,114,111,119,32,116,114,97,112,0,97,32,115,108,101,101,112,105,110,103,32,103,97,115,32,116,114,97,112,0,97,32,98,101,97,114,116,114,97,112,0,97,32,116,101,108,101,112,111,114,116,32,116,114,97,112,0,97,32,112,111,105,115,111,110,32,100,97,114,116,32,116,114,97,112,0,97,32,114,117,115,116,32,116,114,97,112,0,97,32,109,121,115,116,101,114,105,111,117,115,32,116,114,97,112,0,97,113,117,97,116,111,114,0,98,97,116,0,99,101,110,116,97,117,114,0,100,114,97,103,111,110,0,101,109,117,0,118,101,110,117,115,32,102,108,121,116,114,97,112,0,103,114,105,102,102,105,110,0,104,111,98,103,111,98,108,105,110,0,105,99,101,32,109,111,110,115,116,101,114,0,106,97,98,98,101,114,119,111,99,107,0,107,101,115,116,114,101,108,0,108,101,112,114,101,99,104,97,117,110,0,109,101,100,117,115,97,0,110,121,109,112,104,0,111,114,99,0,112,104,97,110,116,111,109,0,113,117,97,103,103,97,0,114,97,116,116,108,101,115,110,97,107,101,0,115,110,97,107,101,0,116,114,111,108,108,0,98,108,97,99,107,32,117,110,105,99,111,114,110,0,118,97,109,112,105,114,101,0,119,114,97,105,116,104,0,120,101,114,111,99,0,121,101,116,105,0,122,111,109,98,105,101,0,108,101,97,116,104,101,114,32,97,114,109,111,114,0,114,105,110,103,32,109,97,105,108,0,115,116,117,100,100,101,100,32,108,101,97,116,104,101,114,32,97,114,109,111,114,0,115,99,97,108,101,32,109,97,105,108,0,99,104,97,105,110,32,109,97,105,108,0,115,112,108,105,110,116,32,109,97,105,108,0,98,97,110,100,101,100,32,109,97,105,108,0,112,108,97,116,101,32,109,97,105,108,0,99,111,110,102,117,115,105,111,110,0,104,97,108,108,117,99,105,110,97,116,105,111,110,0,112,111,105,115,111,110,0,103,97,105,110,32,115,116,114,101,110,103,116,104,0,115,101,101,32,105,110,118,105,115,105,98,108,101,0,104,101,97,108,105,110,103,0,109,111,110,115,116,101,114,32,100,101,116,101,99,116,105,111,110,0,109,97,103,105,99,32,100,101,116,101,99,116,105,111,110,0,114,97,105,115,101,32,108,101,118,101,108,0,101,120,116,114,97,32,104,101,97,108,105,110,103,0,104,97,115,116,101,32,115,101,108,102,0,114,101,115,116,111,114,101,32,115,116,114,101,110,103,116,104,0,98,108,105,110,100,110,101,115,115,0,108,101,118,105,116,97,116,105,111,110,0,112,114,111,116,101,99,116,105,111,110,0,97,100,100,32,115,116,114,101,110,103,116,104,0,115,117,115,116,97,105,110,32,115,116,114,101,110,103,116,104,0,115,101,97,114,99,104,105,110,103,0,97,100,111,114,110,109,101,110,116,0,97,103,103,114,97,118,97,116,101,32,109,111,110,115,116,101,114,0,100,101,120,116,101,114,105,116,121,0,105,110,99,114,101,97,115,101,32,100,97,109,97,103,101,0,114,101,103,101,110,101,114,97,116,105,111,110,0,115,108,111,119,32,100,105,103,101,115,116,105,111,110,0,116,101,108,101,112,111,114,116,97,116,105,111,110,0,115,116,101,97,108,116,104,0,109,97,105,110,116,97,105,110,32,97,114,109,111,114,0,109,111,110,115,116,101,114,32,99,111,110,102,117,115,105,111,110,0,109,97,103,105,99,32,109,97,112,112,105,110,103,0,104,111,108,100,32,109,111,110,115,116,101,114,0,115,108,101,101,112,0,101,110,99,104,97,110,116,32,97,114,109,111,114,0,105,100,101,110,116,105,102,121,32,112,111,116,105,111,110,0,105,100,101,110,116,105,102,121,32,115,99,114,111,108,108,0,105,100,101,110,116,105,102,121,32,119,101,97,112,111,110,0,105,100,101,110,116,105,102,121,32,97,114,109,111,114,0,105,100,101,110,116,105,102,121,32,114,105,110,103,44,32,119,97,110,100,32,111,114,32,115,116,97,102,102,0,115,99,97,114,101,32,109,111,110,115,116,101,114,0,102,111,111,100,32,100,101,116,101,99,116,105,111,110,0,101,110,99,104,97,110,116,32,119,101,97,112,111,110,0,99,114,101,97,116,101,32,109,111,110,115,116,101,114,0,114,101,109,111,118,101,32,99,117,114,115,101,0,97,103,103,114,97,118,97,116,101,32,109,111,110,115,116,101,114,115,0,112,114,111,116,101,99,116,32,97,114,109,111,114,0,109,97,99,101,0,108,111,110,103,32,115,119,111,114,100,0,115,104,111,114,116,32,98,111,119,0,100,97,103,103,101,114,0,116,119,111,32,104,97,110,100,101,100,32,115,119,111,114,100,0,115,104,117,114,105,107,101,110,0,115,112,101,97,114,0,108,105,103,104,116,0,105,110,118,105,115,105,98,105,108,105,116,121,0,108,105,103,104,116,110,105,110,103,0,102,105,114,101,0,99,111,108,100,0,112,111,108,121,109,111,114,112,104,0,109,97,103,105,99,32,109,105,115,115,105,108,101,0,104,97,115,116,101,32,109,111,110,115,116,101,114,0,115,108,111,119,32,109,111,110,115,116,101,114,0,100,114,97,105,110,32,108,105,102,101,0,110,111,116,104,105,110,103,0,116,101,108,101,112,111,114,116,32,97,119,97,121,0,116,101,108,101,112,111,114,116,32,116,111,0,99,97,110,99,101,108,108,97,116,105,111,110,0,9,112,114,105,110,116,115,32,104,101,108,112,0,9,105,100,101,110,116,105,102,121,32,111,98,106,101,99,116,0,9,108,101,102,116,0,9,100,111,119,110,0,9,117,112,0,9,114,105,103,104,116,0,9,117,112,32,38,32,108,101,102,116,0,9,117,112,32,38,32,114,105,103,104,116,0,9,100,111,119,110,32,38,32,108,101,102,116,0,9,100,111,119,110,32,38,32,114,105,103,104,116,0,9,114,117,110,32,108,101,102,116,0,9,114,117,110,32,100,111,119,110,0,9,114,117,110,32,117,112,0,9,114,117,110,32,114,105,103,104,116,0,9,114,117,110,32,117,112,32,38,32,108,101,102,116,0,9,114,117,110,32,117,112,32,38,32,114,105,103,104,116,0,9,114,117,110,32,100,111,119,110,32,38,32,108,101,102,116,0,9,114,117,110,32,100,111,119,110,32,38,32,114,105,103,104,116,0,9,114,117,110,32,108,101,102,116,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,114,117,110,32,100,111,119,110,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,114,117,110,32,117,112,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,114,117,110,32,114,105,103,104,116,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,114,117,110,32,117,112,32,38,32,108,101,102,116,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,114,117,110,32,117,112,32,38,32,114,105,103,104,116,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,114,117,110,32,100,111,119,110,32,38,32,108,101,102,116,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,114,117,110,32,100,111,119,110,32,38,32,114,105,103,104,116,32,117,110,116,105,108,32,97,100,106,97,99,101,110,116,0,9,60,83,72,73,70,84,62,60,100,105,114,62,58,32,114,117,110,32,116,104,97,116,32,119,97,121,0,9,60,67,84,82,76,62,60,100,105,114,62,58,32,114,117,110,32,116,105,108,108,32,97,100,106,97,99,101,110,116,0,60,100,105,114,62,9,102,105,103,104,116,32,116,105,108,108,32,100,101,97,116,104,32,111,114,32,110,101,97,114,32,100,101,97,116,104,0,60,100,105,114,62,9,116,104,114,111,119,32,115,111,109,101,116,104,105,110,103,0,60,100,105,114,62,9,109,111,118,101,32,111,110,116,111,32,119,105,116,104,111,117,116,32,112,105,99,107,105,110,103,32,117,112,0,60,100,105,114,62,9,122,97,112,32,97,32,119,97,110,100,32,105,110,32,97,32,100,105,114,101,99,116,105,111,110,0,60,100,105,114,62,9,105,100,101,110,116,105,102,121,32,116,114,97,112,32,116,121,112,101,0,9,115,101,97,114,99,104,32,102,111,114,32,116,114,97,112,47,115,101,99,114,101,116,32,100,111,111,114,0,9,103,111,32,100,111,119,110,32,97,32,115,116,97,105,114,99,97,115,101,0,9,103,111,32,117,112,32,97,32,115,116,97,105,114,99,97,115,101,0,9,114,101,115,116,32,102,111,114,32,97,32,116,117,114,110,0,9,112,105,99,107,32,115,111,109,101,116,104,105,110,103,32,117,112,0,9,105,110,118,101,110,116,111,114,121,0,9,105,110,118,101,110,116,111,114,121,32,115,105,110,103,108,101,32,105,116,101,109,0,9,113,117,97,102,102,32,112,111,116,105,111,110,0,9,114,101,97,100,32,115,99,114,111,108,108,0,9,101,97,116,32,102,111,111,100,0,9,119,105,101,108,100,32,97,32,119,101,97,112,111,110,0,9,119,101,97,114,32,97,114,109,111,114,0,9,116,97,107,101,32,97,114,109,111,114,32,111,102,102,0,9,112,117,116,32,111,110,32,114,105,110,103,0,9,114,101,109,111,118,101,32,114,105,110,103,0,9,100,114,111,112,32,111,98,106,101,99,116,0,9,99,97,108,108,32,111,98,106,101,99,116,0,9,114,101,112,101,97,116,32,108,97,115,116,32,99,111,109,109,97,110,100,0,9,112,114,105,110,116,32,99,117,114,114,101,110,116,32,119,101,97,112,111,110,0,9,112,114,105,110,116,32,99,117,114,114,101,110,116,32,97,114,109,111,114,0,9,112,114,105,110,116,32,99,117,114,114,101,110,116,32,114,105,110,103,115,0,9,112,114,105,110,116,32,99,117,114,114,101,110,116,32,115,116,97,116,115,0,9,114,101,99,97,108,108,32,119,104,97,116,39,115,32,98,101,101,110,32,100,105,115,99,111,118,101,114,101,100,0,9,101,120,97,109,105,110,101,47,115,101,116,32,111,112,116,105,111,110,115,0,9,114,101,100,114,97,119,32,115,99,114,101,101,110,0,9,114,101,112,101,97,116,32,108,97,115,116,32,109,101,115,115,97,103,101,0,9,99,97,110,99,101,108,32,99,111,109,109,97,110,100,0,9,115,97,118,101,32,103,97,109,101,0,9,113,117,105,116,0,9,115,104,101,108,108,32,101,115,99,97,112,101,0,60,100,105,114,62,9,102,105,103,104,116,32,116,105,108,108,32,101,105,116,104,101,114,32,111,102,32,121,111,117,32,100,105,101,115,0,9,112,114,105,110,116,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,0,104,101,97,118,121,33,32,32,84,104,97,116,39,115,32,97,32,110,97,115,116,121,32,99,114,105,116,116,101,114,33,0,119,97,105,116,33,32,32,84,104,97,116,39,115,32,97,32,120,101,114,111,99,33,0,121,111,117,114,32,104,97,110,100,115,32,115,116,111,112,32,103,108,111,119,105,110,103,32,37,115,0,37,115,32,97,112,112,101,97,114,115,32,99,111,110,102,117,115,101,100,0,115,111,109,101,116,104,105,110,103,0,116,104,101,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,104,101,32,37,115,32,104,105,116,115,32,0,121,111,117,32,104,105,116,32,0,32,104,105,116,0,46,32,32,68,101,102,101,97,116,101,100,32,0,121,111,117,32,104,97,118,101,32,0,100,101,102,101,97,116,101,100,32,0,116,104,101,32,37,115,32,109,105,115,115,101,115,32,0,121,111,117,32,109,105,115,115,101,100,32,0,32,37,115,0,46,32,32,0,121,111,117,32,97,114,101,32,102,114,111,122,101,110,0,32,98,121,32,116,104,101,32,37,115,0,121,111,117,32,102,101,101,108,32,97,32,98,105,116,101,32,105,110,32,121,111,117,114,32,108,101,103,32,97,110,100,32,110,111,119,32,102,101,101,108,32,119,101,97,107,101,114,0,97,32,98,105,116,101,32,104,97,115,32,119,101,97,107,101,110,101,100,32,121,111,117,0,97,32,98,105,116,101,32,109,111,109,101,110,116,97,114,105,108,121,32,119,101,97,107,101,110,115,32,121,111,117,0,98,105,116,101,32,104,97,115,32,110,111,32,101,102,102,101,99,116,0,121,111,117,32,115,117,100,100,101,110,108,121,32,102,101,101,108,32,119,101,97,107,101,114,0,37,100,120,49,0,121,111,117,114,32,112,117,114,115,101,32,102,101,101,108,115,32,108,105,103,104,116,101,114,0,115,104,101,32,115,116,111,108,101,32,37,115,33], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+60708);
/* memory initializer */ allocate([121,111,117,0,32,115,99,111,114,101,100,32,97,110,32,101,120,99,101,108,108,101,110,116,32,104,105,116,32,111,110,32,0,32,104,105,116,32,0,32,104,97,118,101,32,105,110,106,117,114,101,100,32,0,32,115,119,105,110,103,32,97,110,100,32,104,105,116,32,0,32,104,97,115,32,105,110,106,117,114,101,100,32,0,32,115,119,105,110,103,115,32,97,110,100,32,104,105,116,115,32,0,32,109,105,115,115,0,32,115,119,105,110,103,32,97,110,100,32,109,105,115,115,0,32,98,97,114,101,108,121,32,109,105,115,115,0,32,100,111,110,39,116,32,104,105,116,0,32,109,105,115,115,101,115,0,32,115,119,105,110,103,115,32,97,110,100,32,109,105,115,115,101,115,0,32,98,97,114,101,108,121,32,109,105,115,115,101,115,0,32,100,111,101,115,110,39,116,32,104,105,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,109,98,101,114,0,97,113,117,97,109,97,114,105,110,101,0,98,108,97,99,107,0,98,114,111,119,110,0,99,108,101,97,114,0,99,114,105,109,115,111,110,0,99,121,97,110,0,101,99,114,117,0,103,114,101,101,110,0,103,114,101,121,0,109,97,103,101,110,116,97,0,111,114,97,110,103,101,0,112,105,110,107,0,112,108,97,105,100,0,112,117,114,112,108,101,0,116,97,110,0,116,97,110,103,101,114,105,110,101,0,116,111,112,97,122,0,116,117,114,113,117,111,105,115,101,0,118,101,114,109,105,108,105,111,110,0,118,105,111,108,101,116,0,119,104,105,116,101,0,121,101,108,108,111,119,0,97,103,97,116,101,0,97,108,101,120,97,110,100,114,105,116,101,0,97,109,101,116,104,121,115,116,0,99,97,114,110,101,108,105,97,110,0,100,105,97,109,111,110,100,0,101,109,101,114,97,108,100,0,103,101,114,109,97,110,105,117,109,0,103,114,97,110,105,116,101,0,103,97,114,110,101,116,0,106,97,100,101,0,107,114,121,112,116,111,110,105,116,101,0,108,97,112,105,115,32,108,97,122,117,108,105,0,109,111,111,110,115,116,111,110,101,0,111,98,115,105,100,105,97,110,0,111,110,121,120,0,111,112,97,108,0,112,101,97,114,108,0,112,101,114,105,100,111,116,0,114,117,98,121,0,115,97,112,112,104,105,114,101,0,115,116,105,98,111,116,97,110,116,97,108,105,116,101,0,116,105,103,101,114,32,101,121,101,0,116,97,97,102,102,101,105,116,101,0,122,105,114,99,111,110,0,97,118,111,99,97,100,111,32,119,111,111,100,0,98,97,108,115,97,0,98,97,109,98,111,111,0,98,97,110,121,97,110,0,98,105,114,99,104,0,99,101,100,97,114,0,99,104,101,114,114,121,0,99,105,110,110,105,98,97,114,0,99,121,112,114,101,115,115,0,100,111,103,119,111,111,100,0,100,114,105,102,116,119,111,111,100,0,101,98,111,110,121,0,101,108,109,0,101,117,99,97,108,121,112,116,117,115,0,102,97,108,108,0,104,101,109,108,111,99,107,0,104,111,108,108,121,0,105,114,111,110,119,111,111,100,0,107,117,107,117,105,32,119,111,111,100,0,109,97,104,111,103,97,110,121,0,109,97,110,122,97,110,105,116,97,0,109,97,112,108,101,0,111,97,107,101,110,0,112,101,114,115,105,109,109,111,110,32,119,111,111,100,0,112,101,99,97,110,0,112,105,110,101,0,112,111,112,108,97,114,0,114,101,100,119,111,111,100,0,114,111,115,101,119,111,111,100,0,115,112,114,117,99,101,0,116,101,97,107,0,119,97,108,110,117,116,0,122,101,98,114,97,119,111,111,100,0,97,108,117,109,105,110,117,109,0,98,101,114,121,108,108,105,117,109,0,98,111,110,101,0,98,114,97,115,115,0,98,114,111,110,122,101,0,99,111,112,112,101,114,0,101,108,101,99,116,114,117,109,0,105,114,111,110,0,108,101,97,100,0,109,97,103,110,101,115,105,117,109,0,109,101,114,99,117,114,121,0,110,105,99,107,101,108,0,112,101,119,116,101,114,0,112,108,97,116,105,110,117,109,0,115,116,101,101,108,0,115,105,108,105,99,111,110,0,116,105,110,0,116,105,116,97,110,105,117,109,0,116,117,110,103,115,116,101,110,0,122,105,110,99,0,97,0,97,98,0,97,103,0,97,107,115,0,97,108,97,0,97,110,0,97,112,112,0,97,114,103,0,97,114,122,101,0,97,115,104,0,98,101,107,0,98,105,101,0,98,105,116,0,98,106,111,114,0,98,108,117,0,98,111,116,0,98,117,0,98,121,116,0,99,111,109,112,0,99,111,110,0,99,111,115,0,99,114,101,0,100,97,108,102,0,100,97,110,0,100,101,110,0,100,111,0,101,0,101,101,112,0,101,108,0,101,110,103,0,101,114,0,101,114,101,0,101,114,107,0,101,115,104,0,101,118,115,0,102,97,0,102,105,100,0,102,114,105,0,102,117,0,103,97,110,0,103,97,114,0,103,108,101,110,0,103,111,112,0,103,114,101,0,104,97,0,104,121,100,0,105,0,105,110,103,0,105,112,0,105,115,104,0,105,116,101,0,105,118,0,106,111,0,107,104,111,0,107,108,105,0,107,108,105,115,0,108,97,0,108,101,99,104,0,109,97,114,0,109,101,0,109,105,0,109,105,99,0,109,105,107,0,109,111,110,0,109,117,110,103,0,109,117,114,0,110,101,106,0,110,101,108,103,0,110,101,112,0,110,101,114,0,110,101,115,0,110,105,104,0,110,105,110,0,111,0,111,100,0,111,111,100,0,111,114,103,0,111,114,110,0,111,120,0,111,120,121,0,112,97,121,0,112,108,101,0,112,108,117,0,112,111,0,112,111,116,0,112,114,111,107,0,114,101,0,114,101,97,0,114,104,111,118,0,114,105,0,114,111,0,114,111,103,0,114,111,107,0,114,111,108,0,115,97,0,115,97,110,0,115,97,116,0,115,101,102,0,115,101,104,0,115,104,117,0,115,107,105,0,115,110,97,0,115,110,101,0,115,110,105,107,0,115,110,111,0,115,111,0,115,111,108,0,115,114,105,0,115,116,97,0,115,117,110,0,116,97,0,116,97,98,0,116,101,109,0,116,104,101,114,0,116,105,0,116,111,120,0,116,114,111,108,0,116,117,101,0,116,117,114,115,0,117,0,117,108,107,0,117,109,0,117,110,0,117,110,105,0,117,114,0,118,97,108,0,118,105,118,0,118,108,121,0,118,111,109,0,119,97,104,0,119,101,100,0,119,101,114,103,0,119,101,120,0,119,104,111,110,0,119,117,110,0,120,111,0,121,0,121,111,116,0,121,117,0,122,97,110,116,0,122,101,98,0,122,105,109,0,122,111,107,0,122,111,110,0,122,117,109], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+65669);
/* memory initializer */ allocate([45,45,77,111,114,101,45,45,0,76,101,118,101,108,58,32,37,100,32,32,71,111,108,100,58,32,37,45,53,100,32,32,72,112,58,32,37,42,100,40,37,42,100,41,32,32,83,116,114,58,32,37,50,100,40,37,100,41,32,32,65,114,109,58,32,37,45,50,100,32,32,69,120,112,58,32,37,100,47,37,108,100,32,32,37,115,0,76,101,118,101,108,58,32,37,100,32,32,71,111,108,100,58,32,37,45,53,100,32,32,72,112,58,32,37,42,100,40,37,42,100,41,32,32,83,116,114,58,32,37,50,100,40,37,100,41,32,32,65,114,109,58,32,37,45,50,100,32,32,69,120,112,58,32,37,100,47,37,100,32,32,37,115,0,72,117,110,103,114,121,0,87,101,97,107,0,70,97,105,110,116,0,0,84,101,110,0,114,111,103,117,101,46,115,97,118,101,0,82,79,71,85,69,79,80,84,83,0,45,115,0,45,100,0,72,101,108,108,111,32,37,115,44,32,106,117,115,116,32,97,32,109,111,109,101,110,116,32,119,104,105,108,101,32,73,32,100,105,103,32,116,104,101,32,100,117,110,103,101,111,110,46,46,46,0,82,111,103,117,101,46,74,83,0,10,83,111,114,114,121,44,32,116,104,101,32,115,99,114,101,101,110,32,109,117,115,116,32,98,101,32,97,116,32,108,101,97,115,116,32,37,100,120,37,100,10,0,79,107,97,121,44,32,98,121,101,32,98,121,101,33,10,0,114,101,97,108,108,121,32,113,117,105,116,63,0,89,111,117,32,113,117,105,116,32,119,105,116,104,32,37,100,32,103,111,108,100,32,112,105,101,99,101,115], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+68414);
/* memory initializer */ allocate([10,91,80,114,101,115,115,32,114,101,116,117,114,110,32,116,111,32,99,111,110,116,105,110,117,101,93,0,117,115,101,114,0,47,0,101,97,116,0,117,103,104,44,32,121,111,117,32,119,111,117,108,100,32,103,101,116,32,105,108,108,32,105,102,32,121,111,117,32,97,116,101,32,116,104,97,116,0,116,104,97,116,39,115,32,73,110,101,100,105,98,108,101,33,0,109,121,44,32,116,104,97,116,32,119,97,115,32,97,32,121,117,109,109,121,32,37,115,0,98,117,109,109,101,114,0,121,117,107,0,37,115,44,32,116,104,105,115,32,102,111,111,100,32,116,97,115,116,101,115,32,97,119,102,117,108,0,111,104,44,32,119,111,119,0,121,117,109,0,37,115,44,32,116,104,97,116,32,116,97,115,116,101,100,32,103,111,111,100,0,119,101,108,99,111,109,101,32,116,111,32,108,101,118,101,108,32,37,100,0,121,111,117,32,102,97,105,110,116,32,102,114,111,109,32,101,120,104,97,117,115,116,105,111,110,0,110,0,84,104,97,116,39,115,32,97,108,114,101,97,100,121,32,0,105,110,32,117,115,101,0,119,104,105,99,104,32,100,105,114,101,99,116,105,111,110,63,32,0,100,105,114,101,99,116,105,111,110,58,32,0,99,97,108,108,32,105,116,58,32,0,119,104,97,116,32,100,111,32,121,111,117,32,119,97,110,116,32,116,111,32,99,97,108,108,32,105,116,63,32,0,33,63,61,47,58,41,93,37,42,44,75,69,66,83,72,0,82,79,90,0,67,81,65,0,89,0,84,87,80,0,85,77,86,71,74,0,75,69,66,83,72,73,82,79,90,76,67,81,65,78,89,70,84,87,80,88,85,77,86,71,74,68,105,116,0,39,0,115,32,103,97,122,101,32,104,97,115,32,99,111,110,102,117,115,101,100,32,121,111,117,0,121,111,117,32,97,114,101,32,115,116,105,108,108,32,115,116,117,99,107,32,105,110,32,116,104,101,32,98,101,97,114,32,116,114,97,112,0,121,111,117,32,97,114,101,32,98,101,105,110,103,32,104,101,108,100,0,121,111,117,32,102,101,108,108,32,105,110,116,111,32,97,32,116,114,97,112,33,0,121,111,117,32,97,114,101,32,99,97,117,103,104,116,32,105,110,32,97,32,98,101,97,114,32,116,114,97,112,0,121,111,117,32,97,114,101,32,115,117,100,100,101,110,108,121,32,105,110,32,97,32,112,97,114,97,108,108,101,108,32,100,105,109,101,110,115,105,111,110,0,116,104,101,32,108,105,103,104,116,32,105,110,32,104,101,114,101,32,115,117,100,100,101,110,108,121,32,115,101,101,109,115,32,37,115,0,121,111,117,32,102,101,101,108,32,97,32,115,116,105,110,103,32,105,110,32,116,104,101,32,115,105,100,101,32,111,102,32,121,111,117,114,32,110,101,99,107,0,109,117,108,116,105,45,99,111,108,111,114,101,100,32,108,105,110,101,115,32,115,119,105,114,108,32,97,114,111,117,110,100,32,121,111,117,44,32,116,104,101,110,32,102,97,100,101,0,97,32,37,115,32,108,105,103,104,116,32,102,108,97,115,104,101,115,32,105,110,32,121,111,117,114,32,101,121,101,115,0,97,32,115,112,105,107,101,32,115,104,111,111,116,115,32,112,97,115,116,32,121,111,117,114,32,101,97,114,33,0,37,115,32,115,112,97,114,107,115,32,100,97,110,99,101,32,97,99,114,111,115,115,32,121,111,117,114,32,97,114,109,111,114,0,121,111,117,32,115,117,100,100,101,110,108,121,32,102,101,101,108,32,118,101,114,121,32,116,104,105,114,115,116,121,0,121,111,117,32,102,101,101,108,32,116,105,109,101,32,115,112,101,101,100,32,117,112,32,115,117,100,100,101,110,108,121,0,116,105,109,101,32,110,111,119,32,115,101,101,109,115,32,116,111,32,98,101,32,103,111,105,110,103,32,115,108,111,119,101,114,0,121,111,117,32,112,97,99,107,32,116,117,114,110,115,32,37,115,33,0,97,32,115,116,114,97,110,103,101,32,119,104,105,116,101,32,109,105,115,116,32,101,110,118,101,108,111,112,115,32,121,111,117,32,97,110,100,32,121,111,117,32,102,97,108,108,32,97,115,108,101,101,112,0,97,110,32,97,114,114,111,119,32,107,105,108,108,101,100,32,121,111,117,0,111,104,32,110,111,33,32,65,110,32,97,114,114,111,119,32,115,104,111,116,32,121,111,117,0,97,110,32,97,114,114,111,119,32,115,104,111,111,116,115,32,112,97,115,116,32,121,111,117,0,97,32,115,109,97,108,108,32,100,97,114,116,32,119,104,105,122,122,101,115,32,98,121,32,121,111,117,114,32,101,97,114,32,97,110,100,32,118,97,110,105,115,104,101,115,0,97,32,112,111,105,115,111,110,101,100,32,100,97,114,116,32,107,105,108,108,101,100,32,121,111,117,0,97,32,115,109,97,108,108,32,100,97,114,116,32,106,117,115,116,32,104,105,116,32,121,111,117,32,105,110,32,116,104,101,32,115,104,111,117,108,100,101,114,0,97,32,103,117,115,104,32,111,102,32,119,97,116,101,114,32,104,105,116,115,32,121,111,117,32,111,110,32,116,104,101,32,104,101,97,100,0,116,104,101,32,114,117,115,116,32,118,97,110,105,115,104,101,115,32,105,110,115,116,97,110,116,108,121,0,121,111,117,114,32,97,114,109,111,114,32,97,112,112,101,97,114,115,32,116,111,32,98,101,32,119,101,97,107,101,114,32,110,111,119,46,32,79,104,32,109,121,33,0,121,111,117,114,32,97,114,109,111,114,32,119,101,97,107,101,110,115,0,84,114,117,101,0,70,97,108,115,101,0,40,84,32,111,114,32,70,41,0,40,79,44,32,83,44,32,111,114,32,67,41,0,37,115,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+69813);
/* memory initializer */ allocate([37,115,32,40,34,37,115,34,41,58,32,0,110,111,0,116,101,114,115,101,0,84,101,114,115,101,32,111,117,116,112,117,116,0,102,108,117,115,104,0,70,108,117,115,104,32,116,121,112,101,97,104,101,97,100,32,100,117,114,105,110,103,32,98,97,116,116,108,101,0,106,117,109,112,0,83,104,111,119,32,112,111,115,105,116,105,111,110,32,111,110,108,121,32,97,116,32,101,110,100,32,111,102,32,114,117,110,0,115,101,101,102,108,111,111,114,0,83,104,111,119,32,116,104,101,32,108,97,109,112,45,105,108,108,117,109,105,110,97,116,101,100,32,102,108,111,111,114,0,112,97,115,115,103,111,0,70,111,108,108,111,119,32,116,117,114,110,105,110,103,115,32,105,110,32,112,97,115,115,97,103,101,119,97,121,115,0,116,111,109,98,115,116,111,110,101,0,80,114,105,110,116,32,111,117,116,32,116,111,109,98,115,116,111,110,101,32,119,104,101,110,32,107,105,108,108,101,100,0,105,110,118,101,110,0,73,110,118,101,110,116,111,114,121,32,115,116,121,108,101,0,110,97,109,101,0,78,97,109,101,0,102,114,117,105,116,0,70,114,117,105,116,0,102,105,108,101,0,83,97,118,101,32,102,105,108,101,0,116,104,101,32,115,99,114,111,108,108,32,116,117,114,110,115,32,116,111,32,100,117,115,116,32,97,115,32,121,111,117,32,112,105,99,107,32,105,116,32,117,112,0,121,111,117,32,110,111,119,32,104,97,118,101,32,0,116,104,101,114,101,39,115,32,0,110,111,32,114,111,111,109,0,32,105,110,32,121,111,117,114,32,112,97,99,107,0,121,111,117,32,0,109,111,118,101,100,32,111,110,116,111,32,37,115], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+72150);
/* memory initializer */ allocate([37,99,41,32,37,37,115,0,101,109,112,116,121,32,104,97,110,100,101,100,0,110,111,116,104,105,110,103,32,97,112,112,114,111,112,114,105,97,116,101,0,121,111,117,32,97,114,101,32,101,109,112,116,121,32,104,97,110,100,101,100,0,121,111,117,32,100,111,110,39,116,32,104,97,118,101,32,97,110,121,116,104,105,110,103,32,97,112,112,114,111,112,114,105,97,116,101,0,121,111,117,32,102,111,117,110,100,32,0,37,100,32,103,111,108,100,32,112,105,101,99,101,115,0,121,111,117,32,97,114,101,110,39,116,32,99,97,114,114,121,105,110,103,32,97,110,121,116,104,105,110,103,0,97,41,32,37,115,0,105,116,101,109,58,32,0,119,104,105,99,104,32,105,116,101,109,32,100,111,32,121,111,117,32,119,105,115,104,32,116,111,32,105,110,118,101,110,116,111,114,121,58,32,0,37,99,41,32,37,115,0,39,37,115,39,32,110,111,116,32,105,110,32,112,97,99,107,0,121,111,117,32,114,97,110,32,111,117,116,0,119,104,105,99,104,32,111,98,106,101,99,116,32,100,111,32,121,111,117,32,119,97,110,116,32,116,111,32,0,32,119,104,97,116,0,63,32,40,42,32,102,111,114,32,108,105,115,116,41,58,32,0,39,37,115,39,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,105,116,101,109,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,119,97,114,110,105,110,103,44,32,99,111,110,110,101,99,116,105,118,105,116,121,32,112,114,111,98,108,101,109,32,111,110,32,116,104,105,115,32,108,101,118,101,108,0,0,113,117,97,102,102,0,121,117,107,33,32,87,104,121,32,119,111,117,108,100,32,121,111,117,32,119,97,110,116,32,116,111,32,100,114,105,110,107,32,116,104,97,116,63,0,116,104,97,116,39,115,32,117,110,100,114,105,110,107,97,98,108,101,0,121,111,117,32,102,101,101,108,32,109,111,109,101,110,116,97,114,105,108,121,32,115,105,99,107,0,121,111,117,32,102,101,101,108,32,118,101,114,121,32,115,105,99,107,32,110,111,119,0,121,111,117,32,98,101,103,105,110,32,116,111,32,102,101,101,108,32,98,101,116,116,101,114,0,121,111,117,32,102,101,101,108,32,115,116,114,111,110,103,101,114,44,32,110,111,119,46,32,32,87,104,97,116,32,98,117,108,103,105,110,103,32,109,117,115,99,108,101,115,33,0,110,111,114,109,97,108,0,115,116,114,97,110,103,101,0,121,111,117,32,104,97,118,101,32,97,32,37,115,32,102,101,101,108,105,110,103,32,102,111,114,32,97,32,109,111,109,101,110,116,44,32,116,104,101,110,32,105,116,32,112,97,115,115,101,115,0,89,111,117,32,115,101,110,115,101,32,116,104,101,32,112,114,101,115,101,110,99,101,32,111,102,32,109,97,103,105,99,32,111,110,32,116,104,105,115,32,108,101,118,101,108,46,45,45,77,111,114,101,45,45,0,116,104,105,115,32,112,111,116,105,111,110,32,116,97,115,116,101,115,32,108,105,107,101,32,37,115,32,106,117,105,99,101,0,121,111,117,32,115,117,100,100,101,110,108,121,32,102,101,101,108,32,109,117,99,104,32,109,111,114,101,32,115,107,105,108,108,102,117,108,0,121,111,117,32,98,101,103,105,110,32,116,111,32,102,101,101,108,32,109,117,99,104,32,98,101,116,116,101,114,0,121,111,117,32,102,101,101,108,32,121,111,117,114,115,101,108,102,32,109,111,118,105,110,103,32,109,117,99,104,32,102,97,115,116,101,114,0,104,101,121,44,32,116,104,105,115,32,116,97,115,116,101,115,32,103,114,101,97,116,46,32,32,73,116,32,109,97,107,101,32,121,111,117,32,102,101,101,108,32,119,97,114,109,32,97,108,108,32,111,118,101,114,0,119,104,97,116,32,97,32,116,114,105,112,121,32,102,101,101,108,105,110,103,33,0,119,97,105,116,44,32,119,104,97,116,39,115,32,103,111,105,110,103,32,111,110,32,104,101,114,101,46,32,72,117,104,63,32,87,104,97,116,63,32,87,104,111,63,0,79,104,44,32,119,111,119,33,32,32,69,118,101,114,121,116,104,105,110,103,32,115,101,101,109,115,32,115,111,32,99,111,115,109,105,99,33,0,111,104,44,32,98,117,109,109,101,114,33,32,32,69,118,101,114,121,116,104,105,110,103,32,105,115,32,100,97,114,107,33,32,32,72,101,108,112,33,0,97,32,99,108,111,97,107,32,111,102,32,100,97,114,107,110,101,115,115,32,102,97,108,108,115,32,97,114,111,117,110,100,32,121,111,117,0,111,104,44,32,119,111,119,33,32,32,89,111,117,39,114,101,32,102,108,111,97,116,105,110,103,32,105,110,32,116,104,101,32,97,105,114,33,0,121,111,117,32,115,116,97,114,116,32,116,111,32,102,108,111,97,116,32,105,110,32,116,104,101,32,97,105,114,0,112,117,116,32,111,110,0,105,116,32,119,111,117,108,100,32,98,101,32,100,105,102,102,105,99,117,108,116,32,116,111,32,119,114,97,112,32,116,104,97,116,32,97,114,111,117,110,100,32,97,32,102,105,110,103,101,114,0,110,111,116,32,97,32,114,105,110,103,0,121,111,117,32,97,108,114,101,97,100,121,32,104,97,118,101,32,97,32,114,105,110,103,32,111,110,32,101,97,99,104,32,104,97,110,100,0,119,101,97,114,105,110,103,32,116,119,111,0,121,111,117,32,97,114,101,32,110,111,119,32,119,101,97,114,105,110,103,32,0,37,115,32,40,37,99,41,0,110,111,32,114,105,110,103,115,0,121,111,117,32,97,114,101,110,39,116,32,119,101,97,114,105,110,103,32,97,110,121,32,114,105,110,103,115,0,110,111,116,32,119,101,97,114,105,110,103,32,115,117,99,104,32,97,32,114,105,110,103,0,119,97,115,32,119,101,97,114,105,110,103,32,37,115,40,37,99,41,0,108,101,102,116,32,111,114,32,114,105,103,104,116,32,114,105,110,103,63,32,0,108,101,102,116,32,104,97,110,100,32,111,114,32,114,105,103,104,116,32,104,97,110,100,63,32,0,76,32,111,114,32,82,0,112,108,101,97,115,101,32,116,121,112,101,32,76,32,111,114,32,82,0,0,0,0,0,0,0,0,0,0,0,32,91,37,115,93,0,91,80,114,101,115,115,32,114,101,116,117,114,110,32,116,111,32,99,111,110,116,105,110,117,101,93,0,10,0,83,99,111,114,101,115,0,82,111,103,117,101,105,115,116,115,0,84,111,112,32,37,115,32,37,115,58,10,0,32,32,32,83,99,111,114,101,32,78,97,109,101,10,0,37,50,100,32,37,53,100,32,37,115,58,32,37,115,32,111,110,32,108,101,118,101,108,32,37,100,0,32,98,121,32,37,115,0,87,97,108,108,121,32,116,104,101,32,87,111,110,100,101,114,32,66,97,100,103,101,114,0,97,37,115,32,0,75,105,108,108,101,100,32,98,121,32,0,37,115,32,119,105,116,104,32,37,100,32,103,111,108,100,0,37,100,32,65,117,0,37,52,100,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,0,32,32,64,32,32,32,64,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,64,32,32,32,64,32,32,32,32,32,32,32,32,32,32,32,64,32,32,32,32,32,32,32,32,32,32,64,64,64,32,32,64,32,32,32,32,32,64,32,32,10,0,32,32,64,32,32,32,64,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,64,64,32,64,64,32,32,32,32,32,32,32,32,32,32,32,64,32,32,32,32,32,32,32,32,32,32,32,64,32,32,32,64,32,32,32,32,32,64,32,32,10,0,32,32,64,32,32,32,64,32,32,64,64,64,32,32,64,32,32,32,64,32,32,32,64,32,64,32,64,32,32,64,64,64,32,32,32,64,64,64,64,32,32,64,64,64,32,32,32,32,32,32,64,32,32,64,64,64,32,32,32,32,64,32,32,10,0,32,32,32,64,64,64,64,32,64,32,32,32,64,32,64,32,32,32,64,32,32,32,64,32,32,32,64,32,32,32,32,32,64,32,64,32,32,32,64,32,64,32,32,32,64,32,32,32,32,32,64,32,32,32,64,32,32,32,32,32,64,32,32,10,0,32,32,32,32,32,32,64,32,64,32,32,32,64,32,64,32,32,32,64,32,32,32,64,32,32,32,64,32,32,64,64,64,64,32,64,32,32,32,64,32,64,64,64,64,64,32,32,32,32,32,64,32,32,32,64,32,32,32,32,32,64,32,32,10,0,32,32,64,32,32,32,64,32,64,32,32,32,64,32,64,32,32,64,64,32,32,32,64,32,32,32,64,32,64,32,32,32,64,32,64,32,32,32,64,32,64,32,32,32,32,32,32,32,32,32,64,32,32,32,64,32,32,64,32,32,32,32,32,10,0,32,32,32,64,64,64,32,32,32,64,64,64,32,32,32,64,64,32,64,32,32,32,64,32,32,32,64,32,32,64,64,64,64,32,32,64,64,64,64,32,32,64,64,64,32,32,32,32,32,64,64,64,32,32,32,64,64,32,32,32,64,32,32,10,0,32,32,32,32,32,67,111,110,103,114,97,116,117,108,97,116,105,111,110,115,44,32,121,111,117,32,104,97,118,101,32,109,97,100,101,32,105,116,32,116,111,32,116,104,101,32,108,105,103,104,116,32,111,102,32,100,97,121,33,32,32,32,32,10,0,10,89,111,117,32,104,97,118,101,32,106,111,105,110,101,100,32,116,104,101,32,101,108,105,116,101,32,114,97,110,107,115,32,111,102,32,116,104,111,115,101,32,119,104,111,32,104,97,118,101,32,101,115,99,97,112,101,100,32,116,104,101,10,0,68,117,110,103,101,111,110,115,32,111,102,32,68,111,111,109,32,97,108,105,118,101,46,32,32,89,111,117,32,106,111,117,114,110,101,121,32,104,111,109,101,32,97,110,100,32,115,101,108,108,32,97,108,108,32,121,111,117,114,32,108,111,111,116,32,97,116,10,0,97,32,103,114,101,97,116,32,112,114,111,102,105,116,32,97,110,100,32,97,114,101,32,97,100,109,105,116,116,101,100,32,116,111,32,116,104,101,32,70,105,103,104,116,101,114,115,39,32,71,117,105,108,100,46,10,0,32,32,32,87,111,114,116,104,32,32,73,116,101,109,10,0,37,99,41,32,37,53,100,32,32,37,115,10,0,32,32,32,37,53,100,32,32,71,111,108,100,32,80,105,101,99,101,115,32,32,32,32,32,32,32,32,32,32,0,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,104,100,115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,95,95,95,95,95,95,95,95,95,95,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,32,32,32,32,32,32,32,32,32,32,92,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,32,32,32,32,82,69,83,84,32,32,32,32,92,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,32,32,32,32,32,32,73,78,32,32,32,32,32,32,92,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,32,32,32,32,32,80,69,65,67,69,32,32,32,32,32,32,92,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,92,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,32,32,32,107,105,108,108,101,100,32,98,121,32,97,32,32,32,32,124,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,32,32,32,32,32,32,32,49,57,56,48,32,32,32,32,32,32,32,124,10,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,42,124,32,32,32,32,32,42,32,32,42,32,32,42,32,32,32,32,32,32,124,32,42,10,0,32,32,32,32,32,32,32,32,32,95,95,95,95,95,95,95,95,41,47,92,92,95,47,47,40,92,47,40,47,92,41,47,92,47,47,92,47,124,95,41,95,95,95,95,95,95,95,10,0,97,114,114,111,119,0,100,97,114,116,0,104,121,112,111,116,104,101,114,109,105,97,0,115,116,97,114,118,97,116,105,111,110,0,107,105,108,108,101,100,0,113,117,105,116,0,65,32,116,111,116,97,108,32,119,105,110,110,101,114,0,107,105,108,108,101,100,32,119,105,116,104,32,65,109,117,108,101,116,0,115,97,118,101,32,102,105,108,101,32,40,37,115,41,63,32,0,112,108,101,97,115,101,32,97,110,115,119,101,114,32,89,32,111,114,32,78,0,89,101,115,10,0,102,105,108,101,32,110,97,109,101,58,32,0,70,105,108,101,32,101,120,105,115,116,115,46,32,32,68,111,32,121,111,117,32,119,105,115,104,32,116,111,32,111,118,101,114,119,114,105,116,101,32,105,116,63,0,80,108,101,97,115,101,32,97,110,115,119,101,114,32,89,32,111,114,32,78,0,102,105,108,101,32,110,97,109,101,58,32,37,115,0,119,0,37,100,32,120,32,37,100,10,0,45,114,0,114,0,83,111,114,114,121,44,32,115,97,118,101,100,32,103,97,109,101,32,105,115,32,111,117,116,32,111,102,32,100,97,116,101,46,10,0,83,111,114,114,121,44,32,111,114,105,103,105,110,97,108,32,103,97,109,101,32,119,97,115,32,112,108,97,121,101,100,32,111,110,32,97,32,115,99,114,101,101,110,32,119,105,116,104,32,37,100,32,108,105,110,101,115,46,10,0,67,117,114,114,101,110,116,32,115,99,114,101,101,110,32,111,110,108,121,32,104,97,115,32,37,100,32,108,105,110,101,115,46,32,85,110,97,98,108,101,32,116,111,32,114,101,115,116,111,114,101,32,103,97,109,101,10,0,83,111,114,114,121,44,32,111,114,105,103,105,110,97,108,32,103,97,109,101,32,119,97,115,32,112,108,97,121,101,100,32,111,110,32,97,32,115,99,114,101,101,110,32,119,105,116,104,32,37,100,32,99,111,108,117,109,110,115,46,10,0,67,117,114,114,101,110,116,32,115,99,114,101,101,110,32,111,110,108,121,32,104,97,115,32,37,100,32,99,111,108,117,109,110,115,46,32,85,110,97,98,108,101,32,116,111,32,114,101,115,116,111,114,101,32,103,97,109,101,10,0,67,97,110,110,111,116,32,117,110,108,105,110,107,32,102,105,108,101,10,0,10,67,97,110,110,111,116,32,114,101,115,116,111,114,101,32,102,114,111,109,32,97,32,108,105,110,107,101,100,32,102,105,108,101,10,0,10,34,72,101,39,115,32,100,101,97,100,44,32,74,105,109,34,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,37,117,32,37,100,32,37,117,32,37,104,117,32,37,100,32,37,120,32,10,0,114,101,97,100,0,116,104,101,114,101,32,105,115,32,110,111,116,104,105,110,103,32,111,110,32,105,116,32,116,111,32,114,101,97,100,0,110,111,116,104,105,110,103,32,116,111,32,114,101,97,100,0,114,101,100,0,121,111,117,114,32,104,97,110,100,115,32,98,101,103,105,110,32,116,111,32,103,108,111,119,32,37,115,0,115,105,108,118,101,114,0,121,111,117,114,32,97,114,109,111,114,32,103,108,111,119,115,32,37,115,32,102,111,114,32,97,32,109,111,109,101,110,116,0,116,104,101,32,109,111,110,115,116,101,114,0,115,32,97,114,111,117,110,100,32,121,111,117,0,32,102,114,101,101,122,101,0,121,111,117,32,102,101,101,108,32,97,32,115,116,114,97,110,103,101,32,115,101,110,115,101,32,111,102,32,108,111,115,115,0,121,111,117,32,102,97,108,108,32,97,115,108,101,101,112,0,121,111,117,32,104,101,97,114,32,97,32,102,97,105,110,116,32,99,114,121,32,111,102,32,97,110,103,117,105,115,104,32,105,110,32,116,104,101,32,100,105,115,116,97,110,99,101,0,116,104,105,115,32,115,99,114,111,108,108,32,105,115,32,97,110,32,37,115,32,115,99,114,111,108,108,0,0,0,0,0,0,33,63,41,93,254,111,104,44,32,110,111,119,32,116,104,105,115,32,115,99,114,111,108,108,32,104,97,115,32,97,32,109,97,112,32,111,110,32,105,116,0,89,111,117,114,32,110,111,115,101,32,116,105,110,103,108,101,115,32,97,110,100,32,121,111,117,32,115,109,101,108,108,32,102,111,111,100,46,45,45,77,111,114,101,45,45,0,121,111,117,114,32,110,111,115,101,32,116,105,110,103,108,101,115,0,121,111,117,114,32,37,115,32,103,108,111,119,115,32,37,115,32,102,111,114,32,97,32,109,111,109,101,110,116,0,121,111,117,32,104,101,97,114,32,109,97,110,105,97,99,97,108,32,108,97,117,103,104,116,101,114,32,105,110,32,116,104,101,32,100,105,115,116,97,110,99,101,0,121,111,117,32,102,101,101,108,32,105,110,32,116,111,117,99,104,32,119,105,116,104,32,116,104,101,32,85,110,105,118,101,114,115,97,108,32,79,110,101,110,101,115,0,121,111,117,32,102,101,101,108,32,97,115,32,105,102,32,115,111,109,101,98,111,100,121,32,105,115,32,119,97,116,99,104,105,110,103,32,111,118,101,114,32,121,111,117,0,121,111,117,32,104,101,97,114,32,97,32,104,105,103,104,32,112,105,116,99,104,101,100,32,104,117,109,109,105,110,103,32,110,111,105,115,101,0,103,111,108,100,0,121,111,117,114,32,97,114,109,111,114,32,105,115,32,99,111,118,101,114,101,100,32,98,121,32,97,32,115,104,105,109,109,101,114,105,110,103,32,37,115,32,115,104,105,101,108,100,0,119,97,110,100,0,115,116,97,102,102,0,122,97,112,32,119,105,116,104,0,121,111,117,32,99,97,110,39,116,32,122,97,112,32,119,105,116,104,32,116,104,97,116,33,0,110,111,116,104,105,110,103,32,104,97,112,112,101,110,115,0,116,104,101,32,99,111,114,114,105,100,111,114,32,103,108,111,119,115,32,97,110,100,32,116,104,101,110,32,102,97,100,101,115,0,116,104,101,32,114,111,111,109,32,105,115,32,108,105,116,0,98,108,117,101,0,32,98,121,32,97,32,115,104,105,109,109,101,114,105,110,103,32,37,115,32,108,105,103,104,116,0,121,111,117,32,97,114,101,32,116,111,111,32,119,101,97,107,32,116,111,32,117,115,101,32,105,116,0,109,105,115,115,108,101,32,118,97,110,105,115,104,101,115,0,116,104,101,32,109,105,115,115,108,101,32,118,97,110,105,115,104,101,115,32,119,105,116,104,32,97,32,112,117,102,102,32,111,102,32,115,109,111,107,101,0,98,111,108,116,0,102,108,97,109,101,0,105,99,101,0,54,120,54,0,116,104,101,32,37,115,32,98,111,117,110,99,101,115,0,116,104,101,32,102,108,97,109,101,32,98,111,117,110,99,101,115,0,32,111,102,102,32,116,104,101,32,100,114,97,103,111,110,0,37,115,32,109,105,115,115,101,115,0,116,104,101,32,37,115,32,119,104,105,122,122,101,115,32,112,97,115,116,32,37,115,0,116,104,101,32,37,115,32,104,105,116,115,0,121,111,117,32,97,114,101,32,104,105,116,32,98,121,32,116,104,101,32,37,115,0,116,104,101,32,37,115,32,119,104,105,122,122,101,115,32,98,121,32,121,111,117,0,121,111,117,32,104,97,118,101,32,97,32,116,105,110,103,108,105,110,103,32,102,101,101,108,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,91,37,100,93,0,32,91,37,100,32,99,104,97,114,103,101,115,93,0,65,32,115,99,114,111,108,108,32,0,37,100,32,115,99,114,111,108,108,115,32,0,111,102,32,37,115,0,99,97,108,108,101,100,32,37,115,0,116,105,116,108,101,100,32,39,37,115,39,0,65,37,115,32,37,115,0,37,100,32,37,115,115,0,83,111,109,101,32,102,111,111,100,0,37,100,32,114,97,116,105,111,110,115,32,111,102,32,102,111,111,100,0,37,100,32,0,65,37,115,32,0,37,115,32,37,115,0,37,115,0,115,0,32,99,97,108,108,101,100,32,37,115,0,37,115,32,37,115,32,91,0,112,114,111,116,101,99,116,105,111,110,32,0,37,100,93,0,84,104,101,32,65,109,117,108,101,116,32,111,102,32,89,101,110,100,111,114,0,37,100,32,71,111,108,100,32,112,105,101,99,101,115,0,32,40,98,101,105,110,103,32,119,111,114,110,41,0,32,40,119,101,97,112,111,110,32,105,110,32,104,97,110,100,41,0,32,40,111,110,32,108,101,102,116,32,104,97,110,100,41,0,32,40,111,110,32,114,105,103,104,116,32,104,97,110,100,41,0,65,32,37,115,32,0,37,100,32,37,115,115,32,0,111,102,32,37,115,37,115,40,37,115,41,0,99,97,108,108,101,100,32,37,115,37,115,40,37,115,41,0,65,37,115,32,37,115,32,37,115,0,37,100,32,37,115,32,37,115,115,0,0,116,104,101,114,101,32,105,115,32,115,111,109,101,116,104,105,110,103,32,116,104,101,114,101,32,97,108,114,101,97,100,121,0,100,114,111,112,0,100,114,111,112,112,101,100,32,37,115,0,121,111,117,32,99,97,110,39,116,46,32,32,73,116,32,97,112,112,101,97,114,115,32,116,111,32,98,101,32,99,117,114,115,101,100,0,48,120,48,0,102,111,114,32,0,119,104,97,116,32,116,121,112,101,0,32,111,102,32,111,98,106,101,99,116,32,100,111,32,121,111,117,32,119,97,110,116,32,97,32,108,105,115,116,0,63,32,40,42,32,102,111,114,32,97,108,108,41,0,78,111,116,32,97,32,116,121,112,101,0,80,108,101,97,115,101,32,116,121,112,101,32,111,110,101,32,111,102,32,37,99,37,99,37,99,37,99,32,40,69,83,67,65,80,69,32,116,111,32,113,117,105,116,41,0,45,45,80,114,101,115,115,32,115,112,97,99,101,32,116,111,32,99,111,110,116,105,110,117,101,45,45,0,0,78,111,116,104,105,110,103,0,72,97,118,101,110,39,116,32,100,105,115,99,111,118,101,114,101,100,32,97,110,121,116,104,105,110,103,0,115,116,105,99,107,0,32,97,98,111,117,116,32,97,110,121,32,37,115,115,0,192,107,124,124,96,169,89,46,39,197,209,129,43,191,126,114,34,93,160,95,147,61,49,225,41,146,138,161,116,59,9,36,184,204,47,60,35,129,172,0,237,107,108,123,43,132,173,203,105,100,74,241,140,61,52,58,201,185,225,119,75,60,202,209,139,44,44,55,185,47,82,107,37,8,202,12,166,0,114,111,103,117,101,32,40,114,111,103,117,101,102,111,114,103,101,41,32,48,57,47,48,53,47,48,55,0,53,46,52,46,52,0,116,104,114,111,119,0,116,104,101,32,37,115,32,118,97,110,105,115,104,101,115,32,97,115,32,105,116,32,104,105,116,115,32,116,104,101,32,103,114,111,117,110,100,0,37,100,0,43,37,100,0,0,0,0,0,0,0,0,0,0,0,44,37,100,0,44,43,37,100,0,119,105,101,108,100,0,121,111,117,32,99,97,110,39,116,32,119,105,101,108,100,32,97,114,109,111,114,0,121,111,117,32,97,114,101,32,110,111,119,32,0,119,105,101,108,100,105,110,103,32,37,115,32,40,37,99,41,0,50,120,52,0,49,120,51,0,51,120,52,0,49,120,50,0,49,120,49,0,50,120,51,0,49,120,54,0,49,120,52,0,52,120,52,0,121,111,117,32,100,111,110,39,116,32,104,97,118,101,32,97,110,121,116,104,105,110,103,32,105,110,32,121,111,117,114,32,112,97,99,107,32,116,111,32,105,100,101,110,116,105,102,121,0,105,100,101,110,116,105,102,121,0,121,111,117,32,109,117,115,116,32,105,100,101,110,116,105,102,121,32,115,111,109,101,116,104,105,110,103,0,121,111,117,32,109,117,115,116,32,105,100,101,110,116,105,102,121,32,97,32,37,115,0,48,48,48,120,48,0,112,111,116,105,111,110,0,115,99,114,111,108,108,0,102,111,111,100,0,114,105,110,103,44,32,119,97,110,100,32,111,114,32,115,116,97,102,102,0,114,105,110,103,0,119,97,110,100,32,111,114,32,115,116,97,102,102,0,119,101,97,112,111,110,0,115,117,105,116,32,111,102,32,97,114,109,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,77,62,16,0,0,0,0,0,0,62,0,0,0,40,0,0,0,0,1,0,0,128,0,0,0,1,0,1,0,0,0,0,0,0,16,0,0,18,11,0,0,18,11,0,0,2,0,0,0,2,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,24,112,0,0,0,0,0,0,0,0,0,0,118,248,192,108,254,112,124,24,126,56,238,60,0,192,28,198,0,126,126,126,24,216,0,0,0,0,0,28,0,0,0,0,220,204,192,108,198,216,102,24,24,108,108,102,0,96,48,198,254,0,0,0,24,216,0,0,0,0,0,60,0,0,126,0,216,204,192,108,96,216,102,24,60,198,108,102,126,126,96,198,0,0,48,12,24,216,24,220,0,0,0,108,0,0,126,0,216,204,192,108,48,216,102,24,102,198,108,102,219,243,96,198,0,24,24,24,24,24,0,118,0,24,0,108,0,0,126,0,216,200,192,108,24,216,102,24,102,198,108,102,219,219,96,198,254,24,12,48,24,24,126,0,0,24,24,236,0,0,126,0,220,220,192,108,24,216,102,24,102,254,198,62,219,219,124,198,0,126,6,96,24,24,0,220,0,0,0,12,54,126,126,0,118,206,192,254,48,126,102,220,102,198,198,12,126,126,96,198,0,24,12,48,24,24,24,118,0,0,0,12,54,50,126,0,0,198,198,0,96,0,0,118,60,198,198,24,0,6,96,198,254,24,24,24,27,24,0,0,56,0,0,12,54,24,126,0,0,206,198,0,198,0,0,0,24,108,108,48,0,3,48,124,0,0,48,12,27,24,0,0,108,0,0,12,54,12,0,0,0,124,254,0,254,0,0,0,126,56,56,30,0,0,28,0,0,0,0,0,14,24,0,0,108,0,0,12,54,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,56,0,0,15,108,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,0,0,24,24,0,24,24,54,0,54,0,54,54,0,54,0,0,24,54,0,0,24,54,54,24,0,24,255,255,240,15,0,31,255,255,31,255,255,31,55,63,55,255,247,55,255,247,255,255,255,255,63,31,31,63,255,255,248,31,255,255,240,15,0,24,24,0,24,0,24,24,54,48,48,0,0,48,0,0,0,54,0,0,54,24,24,0,54,24,24,0,255,0,240,15,255,24,24,0,24,0,24,31,54,55,63,247,255,55,255,247,255,54,255,0,54,31,31,0,54,255,24,0,255,0,240,15,255,24,24,0,24,0,24,24,54,54,0,54,0,54,0,54,24,54,0,0,54,24,0,0,54,24,24,0,255,0,240,15,255,24,24,0,24,0,24,24,54,54,0,54,0,54,0,54,24,54,0,0,54,24,0,0,54,24,24,0,255,0,240,15,255,24,24,0,24,0,24,24,54,54,0,54,0,54,0,54,24,54,0,0,54,24,0,0,54,24,24,0,255,0,240,15,255,24,24,0,24,0,24,24,54,54,0,54,0,54,0,54,24,54,0,0,54,24,0,0,54,24,24,0,255,0,240,15,255,24,24,0,24,0,24,24,54,54,0,54,0,54,0,54,24,54,0,0,54,24,0,0,54,24,24,0,255,0,240,15,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,170,119,24,24,24,54,54,24,54,54,54,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,85,221,24,24,24,54,54,24,54,54,54,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,62,6,0,0,0,68,170,119,24,24,24,54,54,24,54,54,54,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,24,6,0,0,0,17,85,221,24,24,24,54,54,24,54,54,54,0,0,0,24,118,24,124,120,102,198,0,0,124,0,0,12,63,24,0,0,68,170,119,24,24,24,54,54,24,54,54,54,0,0,0,24,204,24,198,204,102,198,0,0,198,192,6,134,154,60,0,0,17,85,221,24,24,24,54,54,24,54,54,54,0,0,0,24,204,24,198,204,102,198,0,0,198,192,6,220,206,60,54,216,68,170,119,24,24,24,54,54,24,54,54,54,0,0,0,24,204,24,198,204,102,206,0,0,192,192,6,96,102,60,108,108,17,85,221,24,24,24,54,54,24,54,54,54,0,0,0,24,124,24,198,204,102,222,126,124,96,192,6,48,48,24,216,54,68,170,119,24,248,248,246,254,248,246,54,246,254,254,248,248,12,24,198,204,102,254,0,0,48,254,254,24,24,24,108,108,17,85,221,24,24,24,54,0,24,6,54,6,6,54,24,0,120,56,124,204,92,246,62,56,48,0,0,108,108,24,54,216,68,170,119,24,24,248,54,0,248,246,54,254,246,54,248,0,0,0,0,0,0,230,108,108,0,0,0,102,102,0,0,0,17,85,221,24,24,24,54,0,0,54,54,0,54,54,24,0,96,48,96,96,220,198,108,108,48,0,0,98,98,24,0,0,68,170,119,24,24,24,54,0,0,54,54,0,54,54,24,0,48,24,48,48,118,0,60,56,48,0,0,224,224,24,0,0,17,85,221,24,24,24,54,0,0,54,54,0,54,54,24,0,24,12,24,24,0,220,0,0,0,0,0,96,96,0,0,0,68,170,119,24,24,24,54,0,0,54,54,0,54,54,24,0,0,0,0,0,0,118,0,0,0,0,0,0,0,0,0,0,17,85,221,24,24,24,54,0,0,54,54,0,54,54,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,56,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,0,0,0,0,0,0,0,204,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,24,120,124,118,118,118,118,124,124,124,124,24,24,24,198,198,252,110,206,124,124,124,120,120,118,124,124,24,254,24,198,112,60,204,194,204,204,204,204,198,194,194,194,24,24,24,198,198,192,216,204,198,198,198,204,204,206,198,198,24,96,126,204,216,102,204,192,204,204,204,204,192,192,192,192,24,24,24,198,198,192,216,204,198,198,198,204,204,198,198,198,124,96,24,204,24,198,204,192,204,204,204,204,192,192,192,192,24,24,24,254,198,192,126,204,198,198,198,204,204,198,198,198,198,96,126,204,24,192,204,254,124,124,124,124,192,254,254,254,24,24,24,198,254,240,54,204,198,198,198,204,204,198,198,198,192,96,24,222,24,192,204,198,12,12,12,12,198,198,198,198,24,24,24,198,198,192,54,254,198,198,198,204,204,198,198,198,192,248,60,204,126,192,204,124,120,120,120,120,124,124,124,124,56,56,56,108,108,192,236,204,124,124,124,204,204,198,198,198,192,96,102,196,24,102,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,192,0,204,0,0,0,0,0,0,198,198,198,96,102,248,24,60,204,48,108,0,24,56,0,108,0,24,0,102,24,16,16,252,0,108,108,0,24,204,24,0,124,198,124,98,102,204,24,0,204,24,56,204,48,108,0,56,198,48,102,60,48,0,56,0,0,62,56,198,48,120,48,198,0,0,24,60,102,204,27,0,0,12,16,0,96,56,0,16,0,96,0,24,96,198,108,48,0,0,16,0,96,48,96,0,198,198,24,0,0,248,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,0,120,0,0,0,0,0,192,12,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0,0,140,0,0,204,0,0,0,0,0,192,12,0,0,0,0,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,204,0,0,0,0,0,192,12,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,118,248,120,124,124,48,124,204,24,12,204,24,198,204,120,248,124,192,124,48,120,16,108,198,118,254,14,24,112,0,0,0,204,204,196,204,194,48,204,204,24,12,204,24,214,204,204,204,204,192,134,48,204,108,254,108,206,192,24,24,24,0,254,0,204,204,192,204,192,48,204,204,24,12,216,24,214,204,204,204,204,192,6,48,204,198,214,56,198,96,24,24,24,0,198,0,204,204,192,204,192,48,204,204,24,12,240,24,214,204,204,204,204,192,28,48,204,198,214,56,198,48,24,24,24,0,198,0,124,204,192,204,254,48,204,204,24,12,240,24,214,204,204,204,204,204,112,48,204,198,214,56,198,24,24,24,24,0,198,0,12,204,196,204,198,120,204,236,24,12,216,24,254,204,204,204,204,236,194,48,204,198,198,108,198,12,112,24,14,0,108,0,120,248,120,124,124,48,124,216,56,12,204,24,236,184,120,248,124,184,124,252,204,198,198,198,198,254,24,24,24,0,56,0,0,192,0,12,0,50,0,192,0,0,192,24,0,0,0,0,0,0,0,48,0,0,0,0,0,0,24,24,24,0,16,12,0,192,0,12,0,54,0,192,24,12,192,24,0,0,0,0,0,0,0,48,0,0,0,0,0,0,24,24,24,0,0,24,0,192,0,12,0,28,0,192,24,12,192,56,0,0,0,0,0,0,0,48,0,0,0,0,0,0,14,24,112,220,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,198,252,60,248,252,192,62,198,24,120,194,252,198,198,124,192,124,198,124,24,124,16,108,198,24,254,60,2,60,0,0,192,198,198,102,220,192,192,102,198,24,204,198,192,198,198,198,192,222,198,134,24,198,56,238,198,24,192,48,6,12,0,0,220,198,198,194,206,192,192,198,198,24,204,204,192,198,198,198,192,214,204,6,24,198,108,254,108,24,192,48,14,12,0,0,222,198,198,192,198,192,192,198,198,24,204,216,192,198,198,198,192,198,204,6,24,198,198,214,124,24,96,48,28,12,0,0,222,254,198,192,198,192,192,222,198,24,12,240,192,198,206,198,192,198,216,12,24,198,198,214,56,24,48,48,56,12,0,0,222,198,252,192,198,248,248,192,254,24,12,240,192,214,222,198,252,198,252,56,24,198,198,214,56,60,24,48,112,12,0,0,198,198,198,192,198,192,192,192,198,24,12,216,192,254,254,198,198,198,198,96,24,198,198,198,124,102,12,48,224,12,0,0,198,108,198,194,206,192,192,192,198,24,12,204,192,254,246,198,198,198,198,192,24,198,198,198,108,102,6,48,192,12,0,0,124,56,198,102,220,192,192,98,198,24,12,198,192,238,230,198,198,198,198,194,126,198,198,198,198,102,6,48,128,12,198,0,0,16,252,60,248,252,252,60,198,24,30,194,192,198,198,124,252,124,252,124,126,198,198,198,198,102,254,60,0,60,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,108,124,134,118,0,12,48,0,0,24,0,24,128,56,24,254,124,12,124,124,48,124,120,0,48,6,0,96,24,0,24,0,108,198,198,204,0,24,24,0,0,24,0,24,192,108,24,192,134,12,134,198,48,198,140,24,24,12,0,48,24,0,0,0,254,134,96,204,0,48,12,102,24,24,0,0,96,198,24,192,6,12,6,198,48,198,6,24,24,24,0,24,0,0,24,0,108,6,48,204,0,48,12,60,24,0,0,0,48,230,24,96,6,12,6,198,48,198,6,0,0,48,126,12,24,0,24,0,108,6,24,220,0,48,12,255,126,0,254,0,24,246,24,48,6,254,6,230,24,198,6,0,0,96,0,6,24,0,24,0,108,124,12,118,0,48,12,60,24,0,0,0,12,222,24,24,60,204,252,220,12,124,126,0,0,48,0,12,24,0,60,0,254,192,198,56,0,48,12,102,24,0,0,0,6,206,24,12,6,108,192,192,6,198,198,24,24,24,126,24,12,0,60,36,108,194,194,108,96,48,12,0,0,0,0,0,2,198,120,6,6,60,192,192,6,198,198,24,24,12,0,48,198,0,60,102,108,198,0,108,48,24,24,0,0,0,0,0,0,108,56,198,134,28,192,96,6,198,198,0,0,6,0,96,198,0,24,102,0,124,0,56,48,12,48,0,0,0,0,0,0,56,24,124,124,12,254,60,254,124,124,0,0,0,0,0,124,0,0,102,0,24,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,192,0,0,0,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,126,126,16,0,60,60,0,255,0,255,120,24,224,230,24,128,2,0,102,27,198,254,126,24,24,0,0,0,0,0,0,0,129,255,56,16,24,24,0,255,60,195,204,24,240,231,24,192,6,24,102,27,12,254,24,24,60,0,0,0,0,254,16,0,129,255,124,56,24,24,24,231,102,153,204,126,112,103,219,224,14,60,0,27,56,254,60,24,126,24,48,254,40,254,56,0,153,231,254,124,231,126,60,195,66,189,204,24,48,99,60,240,30,126,102,27,108,254,126,24,24,12,96,192,108,124,56,0,189,195,254,254,231,255,60,195,66,189,204,60,48,99,231,248,62,24,102,27,198,0,24,24,24,254,254,192,254,124,124,0,129,255,254,124,231,255,24,231,102,153,120,102,48,99,60,254,254,24,102,123,198,0,24,24,24,12,96,192,108,56,124,0,129,255,254,56,60,126,0,255,60,195,50,102,48,99,219,248,62,24,102,219,108,0,24,24,24,24,48,0,40,56,254,0,165,219,108,16,60,60,0,255,0,255,26,102,63,127,24,240,30,126,102,219,56,0,126,126,24,0,0,0,0,16,254,0,129,255,0,0,24,24,0,255,0,255,14,102,51,99,24,224,14,60,102,219,96,0,60,60,24,0,0,0,0,0,0,0,126,126,0,0,0,0,0,255,0,255,30,60,63,127,0,192,6,24,102,127,198,0,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0,0,128,2,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,77,190], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+73569);
/* memory initializer */ allocate([62,0,0,0,40,0,0,0,32,0,0,0,32,0,0,0,1,0,1,0,0,0,0,0,128,0,0,0,19,11,0,0,19,11,0,0,2,0,0,0,2,0,0,0,0,0,0,0,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,206,111,156,231,181,175,107,91,189,175,235,251,189,175,152,231,189,175,123,95,181,165,107,91,205,171,156,231,255,255,255,255,255,255,255,255,255,207,3,255,255,206,3,255,255,204,115,255,255,204,243,255,255,204,243,255,255,204,115,255,255,198,51,255,255,195,19,255,255,193,131,255,255,200,195,255,255,204,99,255,255,206,51,255,255,207,51,255,255,207,51,255,255,206,51,255,255,192,115,255,255,192,243,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,32,8,0,105,110,105,116,115,99,114,40,41,58,32,85,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,83,80,10,0,105,110,105,116,115,99,114,40,41,58,32,76,73,78,69,83,61,37,100,32,67,79,76,83,61,37,100,58,32,116,111,111,32,115,109,97,108,108,46,10,0,105,110,105,116,115,99,114,40,41,58,32,85,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,99,117,114,115,99,114,46,10,0,105,110,105,116,115,99,114,40,41,58,32,85,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,112,100,99,95,108,97,115,116,115,99,114,46,10,0,105,110,105,116,115,99,114,40,41,58,32,85,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,115,116,100,115,99,114,46,10,0,112,100,99,117,114,115,101,115,124,80,68,67,117,114,115,101,115,32,102,111,114,32,37,115,0,0,70,37,100,0,0,0,0,67,111,117,108,100,32,110,111,116,32,115,116,97,114,116,32,83,68,76,58,32,37,115,10,0,80,68,67,95,70,79,78,84,0,112,100,99,102,111,110,116,46,98,109,112,0,114,98,0,67,111,117,108,100,32,110,111,116,32,108,111,97,100,32,102,111,110,116,10,0,80,68,67,95,66,65,67,75,71,82,79,85,78,68,0,112,100,99,98,97,99,107,46,98,109,112,0,80,68,67,95,73,67,79,78,0,112,100,99,105,99,111,110,46,98,109,112,0,80,68,67,95,76,73,78,69,83,0,80,68,67,95,67,79,76,83,0,67,111,117,108,100,110,39,116,32,99,114,101,97,116,101,32,97,32,115,117,114,102,97,99,101,58,32,37,115,10,0,80,68,67,117,114,115,101,115,0,83,68,76,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,105,110,102,105,110,105,116,121,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,114,119,97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+83809);
/* memory initializer */ allocate([17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+88705);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}

var EMTSTACKTOP = getMemory(1048576);
var EMT_STACK_MAX = EMTSTACKTOP + 1048576;

var eb = getMemory(429152);
assert(eb % 8 === 0);
__ATPRERUN__.push(function() {
  HEAPU8.set([140,3,154,2,0,0,0,0,2,200,0,0,219,0,0,0,2,201,0,0,95,112,137,0,2,202,0,0,255,9,47,15,1,203,0,0,143,203,152,2,136,204,0,0,0,203,204,0,143,203,153,2,136,203,0,0,1,204,0,2,3,203,203,204,137,203,0,0,130,203,0,0,136,204,0,0,49,203,203,204,88,0,0,0,135,203,0,0,1,203,0,0,1,204,3,0,138,1,203,204,120,0,0,0,148,0,0,0,176,0,0,0,59,4,0,0,119,0,22,0,1,203,24,0,143,203,18,2,1,203,107,255,143,203,48,2,1,203,4,0,143,203,152,2,119,0,15,0,1,203,53,0,143,203,18,2,1,203,206,251,143,203,48,2,1,203,4,0,143,203,152,2,119,0,8,0,1,203,53,0,143,203,18,2,1,203,206,251,143,203,48,2,1,203,4,0,143,203,152,2,119,0,1,0,141,203,152,2,32,203,203,4,121,203,41,17,25,203,0,4,1,204,4,0,1,205,0,0,134,98,0,0,24,55,6,0,203,204,205,0,25,205,0,100,1,204,4,0,1,203,0,0,134,163,0,0,24,55,6,0,205,204,203,0,48,203,98,163,92,1,0,0,25,204,0,4,25,205,98,1,1,206,4,0,134,203,0,0,116,78,6,0,204,205,206,0,42,206,98,0,1,205,1,0,1,204,0,0,134,203,0,0,24,55,6,0,206,205,204,0,143,203,158,1,141,204,158,1,1,205,255,0,19,204,204,205,0,203,204,0,143,203,255,1,119,0,8,0,134,203,0,0,220,97,4,0,0,0,0,0,143,203,248,1,141,204,248,1,0,203,204,0,143,203,255,1,141,203,255,1,134,32,0,0,100,99,6,0,203,0,0,0,32,203,32,0,121,203,211,255,141,203,255,1,0,22,203,0,119,0,1,0,1,205,43,0,1,206,3,0,138,22,205,206,200,1,0,0,180,1,0,0,204,1,0,0,0,205,22,0,143,205,19,2,1,205,1,0,143,205,120,2,119,0,51,0,119,0,1,0,25,203,0,4,1,204,4,0,1,205,0,0,134,71,0,0,24,55,6,0,203,204,205,0,25,205,0,100,1,204,4,0,1,203,0,0,134,78,0,0,24,55,6,0,205,204,203,0,48,203,71,78,96,2,0,0,25,204,0,4,25,205,71,1,1,206,4,0,134,203,0,0,116,78,6,0,204,205,206,0,42,203,71,0,1,206,1,0,1,205,0,0,134,99,0,0,24,55,6,0,203,206,205,0,1,206,255,0,19,206,99,206,0,205,206,0,143,205,19,2,1,206,1,0,32,203,22,45,38,203,203,1,41,203,203,1,4,205,206,203,143,205,120,2,119,0,13,0,134,114,0,0,220,97,4,0,0,0,0,0,0,205,114,0,143,205,19,2,1,203,1,0,32,206,22,45,38,206,206,1,41,206,206,1,4,205,203,206,143,205,120,2,119,0,1,0,141,206,19,2,0,205,206,0,143,205,23,2,1,205,0,0,143,205,75,2,141,205,23,2,39,205,205,32,0,121,205,0,2,205,0,0,90,81,1,0,141,206,75,2,3,125,205,206,42,206,125,0,1,205,1,0,1,203,0,0,134,131,0,0,24,55,6,0,206,205,203,0,41,203,131,24,42,203,203,24,52,203,121,203,4,3,0,0,141,205,23,2,0,203,205,0,143,203,21,2,141,205,75,2,0,203,205,0,143,203,74,2,119,0,64,0,141,203,75,2,35,147,203,7,121,147,38,0,25,203,0,4,1,205,4,0,1,206,0,0,134,154,0,0,24,55,6,0,203,205,206,0,25,206,0,100,1,205,4,0,1,203,0,0,134,164,0,0,24,55,6,0,206,205,203,0,48,203,154,164,140,3,0,0,25,205,0,4,25,206,154,1,1,204,4,0,134,203,0,0,116,78,6,0,205,206,204,0,42,203,154,0,1,204,1,0,1,206,0,0,134,183,0,0,24,55,6,0,203,204,206,0,1,204,255,0,19,204,183,204,0,206,204,0,143,206,24,2,119,0,10,0,134,197,0,0,220,97,4,0,0,0,0,0,0,206,197,0,143,206,24,2,119,0,4,0,141,204,23,2,0,206,204,0,143,206,24,2,141,204,75,2,25,206,204,1,143,206,4,1,141,206,4,1,35,206,206,8,121,206,8,0,141,204,24,2,0,206,204,0,143,206,23,2,141,204,4,1,0,206,204,0,143,206,75,2,119,0,177,255,141,204,24,2,0,206,204,0,143,206,21,2,141,204,4,1,0,206,204,0,143,206,74,2,119,0,1,0,141,206,74,2,1,204,3,0,1,205,6,0,138,206,204,205,40,68,0,0,40,4,0,0,40,4,0,0,40,4,0,0,40,4,0,0,52,68,0,0,1,203,3,0,141,205,74,2,16,204,203,205,143,204,18,1,33,204,2,0,141,205,18,1,19,204,204,205,121,204,9,0,141,205,74,2,32,204,205,8,143,204,33,1,141,204,33,1,120,204,248,15,1,204,23,0,143,204,152,2,119,0,245,15,141,205,74,2,32,204,205,0,143,204,116,1,141,204,116,1,121,204,111,0,141,205,21,2,0,204,205,0,143,204,27,2,1,204,0,0,143,204,77,2,141,205,27,2,39,205,205,32,0,204,205,0,143,204,124,1,2,205,0,0,149,92,1,0,141,203,77,2,3,204,205,203,143,204,130,1,141,203,130,1,42,203,203,0,1,205,1,0,1,207,0,0,134,204,0,0,24,55,6,0,203,205,207,0,143,204,138,1,141,204,124,1,141,207,138,1,41,207,207,24,42,207,207,24,52,204,204,207,8,5,0,0,141,207,27,2,0,204,207,0,143,204,29,2,141,207,77,2,0,204,207,0,143,204,78,2,119,0,82,0,141,207,77,2,35,204,207,2,143,204,151,1,141,204,151,1,121,204,48,0,25,207,0,4,1,205,4,0,1,203,0,0,134,204,0,0,24,55,6,0,207,205,203,0,143,204,159,1,25,203,0,100,1,205,4,0,1,207,0,0,134,204,0,0,24,55,6,0,203,205,207,0,143,204,165,1,141,204,159,1,141,207,165,1,48,204,204,207,184,5,0,0,25,207,0,4,141,205,159,1,25,205,205,1,1,203,4,0,134,204,0,0,116,78,6,0,207,205,203,0,141,203,159,1,42,203,203,0,1,205,1,0,1,207,0,0,134,204,0,0,24,55,6,0,203,205,207,0,143,204,183,1,141,207,183,1,1,205,255,0,19,207,207,205,0,204,207,0,143,204,28,2,119,0,12,0,134,204,0,0,220,97,4,0,0,0,0,0,143,204,194,1,141,207,194,1,0,204,207,0,143,204,28,2,119,0,4,0,141,207,27,2,0,204,207,0,143,204,28,2,141,207,77,2,25,204,207,1,143,204,200,1,141,204,200,1,35,204,204,3,121,204,8,0,141,207,28,2,0,204,207,0,143,204,27,2,141,207,200,1,0,204,207,0,143,204,77,2,119,0,159,255,141,207,28,2,0,204,207,0,143,204,29,2,141,207,200,1,0,204,207,0,143,204,78,2,119,0,7,0,141,207,21,2,0,204,207,0,143,204,29,2,141,207,74,2,0,204,207,0,143,204,78,2,141,204,78,2,1,205,0,0,1,208,4,0,138,204,205,208,244,6,0,0,108,6,0,0,108,6,0,0,64,64,0,0,25,205,0,100,1,209,4,0,1,208,0,0,134,38,0,0,24,55,6,0,205,209,208,0,1,208,0,0,52,208,38,208,192,6,0,0,25,208,0,4,1,209,4,0,1,205,0,0,134,39,0,0,24,55,6,0,208,209,205,0,25,209,0,4,26,208,39,1,1,207,4,0,134,205,0,0,116,78,6,0,209,208,207,0,134,40,0,0,4,85,6,0,1,207,22,0,1,208,4,0,134,205,0,0,116,78,6,0,40,207,208,0,1,208,0,0,134,205,0,0,36,17,6,0,0,208,0,0,59,4,0,0,119,0,162,15,141,208,29,2,32,41,208,48,121,41,76,4,25,208,0,4,1,205,4,0,1,203,0,0,134,42,0,0,24,55,6,0,208,205,203,0,25,203,0,100,1,205,4,0,1,208,0,0,134,43,0,0,24,55,6,0,203,205,208,0,48,208,42,43,120,7,0,0,25,205,0,4,25,203,42,1,1,207,4,0,134,208,0,0,116,78,6,0,205,203,207,0,42,208,42,0,1,207,1,0,1,203,0,0,134,44,0,0,24,55,6,0,208,207,203,0,1,203,255,0,19,203,44,203,0,47,203,0,119,0,5,0,134,45,0,0,220,97,4,0,0,0,0,0,0,47,45,0,39,203,47,32,0,46,203,0,32,203,46,120,120,203,28,0,25,203,0,100,1,207,4,0,1,208,0,0,134,181,0,0,24,55,6,0,203,207,208,0,1,208,0,0,45,208,181,208,200,7,0,0,1,208,48,0,143,208,30,2,119,0,29,4,25,208,0,4,1,207,4,0,1,203,0,0,134,182,0,0,24,55,6,0,208,207,203,0,25,207,0,4,26,208,182,1,1,205,4,0,134,203,0,0,116,78,6,0,207,208,205,0,1,203,48,0,143,203,30,2,119,0,14,4,25,203,0,4,1,205,4,0,1,208,0,0,134,48,0,0,24,55,6,0,203,205,208,0,25,208,0,100,1,205,4,0,1,203,0,0,134,49,0,0,24,55,6,0,208,205,203,0,48,203,48,49,136,8,0,0,25,205,0,4,25,208,48,1,1,207,4,0,134,203,0,0,116,78,6,0,205,208,207,0,42,203,48,0,1,207,1,0,1,208,0,0,134,50,0,0,24,55,6,0,203,207,208,0,1,207,255,0,19,207,50,207,0,208,207,0,143,208,20,2,1,208,0,0,143,208,52,2,119,0,8,0,134,51,0,0,220,97,4,0,0,0,0,0,0,208,51,0,143,208,20,2,1,208,0,0,143,208,52,2,141,208,20,2,1,207,46,0,1,203,3,0,138,208,207,203,28,9,0,0,192,8,0,0,52,9,0,0,1,76,0,0,1,79,0,0,1,207,0,0,143,207,212,1,1,207,0,0,143,207,213,1,141,203,20,2,0,207,203,0,143,207,25,2,141,203,52,2,0,207,203,0,143,207,56,2,1,207,0,0,143,207,64,2,1,207,0,0,143,207,71,2,59,207,1,0,144,207,117,2,1,207,0,0,143,207,123,2,59,207,0,0,144,207,132,2,119,0,49,0,141,203,52,2,0,207,203,0,143,207,53,2,1,207,74,0,143,207,152,2,119,0,43,0,119,0,1,0,25,208,0,4,1,207,4,0,1,203,0,0,134,52,0,0,24,55,6,0,208,207,203,0,25,203,0,100,1,207,4,0,1,208,0,0,134,53,0,0,24,55,6,0,203,207,208,0,48,208,52,53,188,9,0,0,25,207,0,4,25,203,52,1,1,205,4,0,134,208,0,0,116,78,6,0,207,203,205,0,42,208,52,0,1,205,1,0,1,203,0,0,134,54,0,0,24,55,6,0,208,205,203,0,1,205,255,0,19,205,54,205,0,203,205,0,143,203,20,2,1,203,1,0,143,203,52,2,119,0,187,255,134,55,0,0,220,97,4,0,0,0,0,0,0,203,55,0,143,203,20,2,1,203,1,0,143,203,52,2,119,0,179,255,141,203,152,2,32,203,203,74,121,203,131,0,25,203,0,4,1,205,4,0,1,208,0,0,134,56,0,0,24,55,6,0,203,205,208,0,25,208,0,100,1,205,4,0,1,203,0,0,134,57,0,0,24,55,6,0,208,205,203,0,48,203,56,57,100,10,0,0,25,205,0,4,25,208,56,1,1,207,4,0,134,203,0,0,116,78,6,0,205,208,207,0,42,203,56,0,1,207,1,0,1,208,0,0,134,58,0,0,24,55,6,0,203,207,208,0,1,207,255,0,19,207,58,207,0,208,207,0,143,208,22,2,119,0,6,0,134,59,0,0,220,97,4,0,0,0,0,0,0,208,59,0,143,208,22,2,141,208,22,2,32,60,208,48,121,60,70,0,1,65,0,0,1,66,0,0,25,208,0,4,1,207,4,0,1,203,0,0,134,61,0,0,24,55,6,0,208,207,203,0,25,203,0,100,1,207,4,0,1,208,0,0,134,62,0,0,24,55,6,0,203,207,208,0,48,208,61,62,4,11,0,0,25,207,0,4,25,203,61,1,1,205,4,0,134,208,0,0,116,78,6,0,207,203,205,0,42,208,61,0,1,205,1,0,1,203,0,0,134,63,0,0,24,55,6,0,208,205,203,0,1,203,255,0,19,203,63,203,0,69,203,0,119,0,5,0,134,64,0,0,220,97,4,0,0,0,0,0,0,69,64,0,1,203,255,255,1,205,255,255,134,67,0,0,84,105,6,0,65,66,203,205,128,205,0,0,0,68,205,0,32,70,69,48,121,70,4,0,0,65,67,0,0,66,68,0,119,0,211,255,1,76,0,0,1,79,0,0,0,205,67,0,143,205,212,1,0,205,68,0,143,205,213,1,0,205,69,0,143,205,25,2,1,205,1,0,143,205,56,2,1,205,1,0,143,205,64,2,1,205,0,0,143,205,71,2,59,205,1,0,144,205,117,2,1,205,0,0,143,205,123,2,59,205,0,0,144,205,132,2,119,0,23,0,1,76,0,0,1,79,0,0,1,205,0,0,143,205,212,1,1,205,0,0,143,205,213,1,141,203,22,2,0,205,203,0,143,205,25,2,141,203,53,2,0,205,203,0,143,205,56,2,1,205,1,0,143,205,64,2,1,205,0,0,143,205,71,2,59,205,1,0,144,205,117,2,1,205,0,0,143,205,123,2,59,205,0,0,144,205,132,2,141,205,25,2,26,72,205,48,141,205,25,2,39,205,205,32,0,26,205,0,35,205,72,10,121,205,4,0,1,205,86,0,143,205,152,2,119,0,82,0,141,205,25,2,32,73,205,46,26,205,26,97,35,205,205,6,20,205,73,205,120,205,23,0,141,205,212,1,0,106,205,0,0,107,79,0,141,205,213,1,0,109,205,0,0,110,76,0,141,203,25,2,0,205,203,0,143,205,26,2,141,203,56,2,0,205,203,0,143,205,57,2,141,203,64,2,0,205,203,0,143,205,65,2,141,203,123,2,0,205,203,0,143,205,124,2,142,203,132,2,58,205,203,0,144,205,133,2,119,0,23,1,121,73,51,0,141,205,64,2,32,74,205,0,121,74,27,0,0,205,79,0,143,205,214,1,0,205,76,0,143,205,215,1,0,205,79,0,143,205,216,1,0,205,76,0,143,205,217,1,141,203,56,2,0,205,203,0,143,205,59,2,1,205,1,0,143,205,67,2,141,203,71,2,0,205,203,0,143,205,73,2,142,203,117,2,58,205,203,0,144,205,119,2,141,203,123,2,0,205,203,0,143,205,126,2,142,203,132,2,58,205,203,0,144,205,136,2,119,0,24,0,141,205,212,1,0,106,205,0,0,107,79,0,141,205,213,1,0,109,205,0,0,110,76,0,1,205,46,0,143,205,26,2,141,203,56,2,0,205,203,0,143,205,57,2,141,203,64,2,0,205,203,0,143,205,65,2,141,203,123,2,0,205,203,0,143,205,124,2,142,203,132,2,58,205,203,0,144,205,133,2,119,0,228,0,1,205,86,0,143,205,152,2,141,205,152,2,32,205,205,86,121,205,130,0,1,205,0,0,143,205,152,2,1,205,57,0,141,203,25,2,15,75,205,203,121,75,4,0,26,208,26,87,0,205,208,0,119,0,2,0,0,205,72,0,0,203,205,0,143,203,37,2,34,77,76,0,35,80,79,8,32,81,76,0,19,203,81,80,20,203,77,203,121,203,17,0,141,203,123,2,41,203,203,4,0,82,203,0,141,205,71,2,0,203,205,0,143,203,72,2,142,205,117,2,58,203,205,0,144,203,118,2,141,205,37,2,3,203,205,82,143,203,125,2,142,205,132,2,58,203,205,0,144,203,134,2,119,0,62,0,34,83,76,0,35,84,79,14,32,85,76,0,19,203,85,84,20,203,83,203,121,203,21,0,142,203,117,2,61,205,0,0,0,0,128,61,65,86,203,205,142,205,132,2,141,203,37,2,76,203,203,0,65,203,86,203,63,87,205,203,141,205,71,2,0,203,205,0,143,203,72,2,58,203,86,0,144,203,118,2,141,205,123,2,0,203,205,0,143,203,125,2,58,203,87,0,144,203,134,2,119,0,36,0,141,203,71,2,33,88,203,0,141,203,37,2,32,203,203,0,20,203,88,203,121,203,14,0,141,205,71,2,0,203,205,0,143,203,72,2,142,205,117,2,58,203,205,0,144,203,118,2,141,205,123,2,0,203,205,0,143,203,125,2,142,205,132,2,58,203,205,0,144,203,134,2,119,0,17,0,142,203,117,2,61,205,0,0,0,0,0,63,65,89,203,205,142,205,132,2,63,90,205,89,1,205,1,0,143,205,72,2,142,203,117,2,58,205,203,0,144,205,118,2,141,203,123,2,0,205,203,0,143,205,125,2,58,205,90,0,144,205,134,2,1,205,1,0,1,203,0,0,134,91,0,0,84,105,6,0,79,76,205,203,128,203,0,0,0,92,203,0,141,205,212,1,0,203,205,0,143,203,214,1,141,205,213,1,0,203,205,0,143,203,215,1,0,203,91,0,143,203,216,1,0,203,92,0,143,203,217,1,1,203,1,0,143,203,59,2,141,205,64,2,0,203,205,0,143,203,67,2,141,205,72,2,0,203,205,0,143,203,73,2,142,205,118,2,58,203,205,0,144,203,119,2,141,205,125,2,0,203,205,0,143,203,126,2,142,205,134,2,58,203,205,0,144,203,136,2,25,203,0,4,1,205,4,0,1,208,0,0,134,93,0,0,24,55,6,0,203,205,208,0,25,208,0,100,1,205,4,0,1,203,0,0,134,94,0,0,24,55,6,0,208,205,203,0,48,203,93,94,88,16,0,0,25,205,0,4,25,208,93,1,1,207,4,0,134,203,0,0,116,78,6,0,205,208,207,0,42,203,93,0,1,207,1,0,1,208,0,0,134,95,0,0,24,55,6,0,203,207,208,0,141,208,217,1,0,76,208,0,141,208,216,1,0,79,208,0,141,207,214,1,0,208,207,0,143,208,212,1,141,207,215,1,0,208,207,0,143,208,213,1,1,207,255,0,19,207,95,207,0,208,207,0,143,208,25,2,141,207,59,2,0,208,207,0,143,208,56,2,141,207,67,2,0,208,207,0,143,208,64,2,141,207,73,2,0,208,207,0,143,208,71,2,142,207,119,2,58,208,207,0,144,208,117,2,141,207,126,2,0,208,207,0,143,208,123,2,142,207,136,2,58,208,207,0,144,208,132,2,119,0,231,254,134,96,0,0,220,97,4,0,0,0,0,0,141,208,217,1,0,76,208,0,141,208,216,1,0,79,208,0,141,207,214,1,0,208,207,0,143,208,212,1,141,207,215,1,0,208,207,0,143,208,213,1,0,208,96,0,143,208,25,2,141,207,59,2,0,208,207,0,143,208,56,2,141,207,67,2,0,208,207,0,143,208,64,2,141,207,73,2,0,208,207,0,143,208,71,2,142,207,119,2,58,208,207,0,144,208,117,2,141,207,126,2,0,208,207,0,143,208,123,2,142,207,136,2,58,208,207,0,144,208,132,2,119,0,197,254,141,208,57,2,32,97,208,0,121,97,59,0,25,208,0,100,1,207,4,0,1,203,0,0,134,100,0,0,24,55,6,0,208,207,203,0,1,203,0,0,52,203,100,203,64,17,0,0,25,203,0,4,1,207,4,0,1,208,0,0,134,101,0,0,24,55,6,0,203,207,208,0,25,207,0,4,26,203,101,1,1,205,4,0,134,208,0,0,116,78,6,0,207,203,205,0,32,208,2,0,121,208,6,0,1,205,0,0,134,208,0,0,36,17,6,0,0,205,0,0,119,0,25,0,1,208,0,0,52,208,100,208,188,17,0,0,25,208,0,4,1,205,4,0,1,203,0,0,134,102,0,0,24,55,6,0,208,205,203,0,25,205,0,4,26,208,102,1,1,207,4,0,134,203,0,0,116,78,6,0,205,208,207,0,141,203,65,2,32,103,203,0,120,103,7,0,25,207,0,4,26,208,102,2,1,205,4,0,134,203,0,0,116,78,6,0,207,208,205,0,141,203,120,2,76,203,203,0,58,104,203,0,59,203,0,0,65,4,104,203,119,0,234,12,141,203,65,2,32,105,203,0,125,108,105,107,106,0,0,0,125,111,105,110,109,0,0,0,34,112,110,0,35,113,107,8,32,115,110,0,19,203,115,113,20,203,112,203,121,203,30,0,0,117,107,0,0,118,110,0,141,205,124,2,0,203,205,0,143,203,128,2,141,203,128,2,41,203,203,4,0,116,203,0,1,203,1,0,1,205,0,0,134,119,0,0,84,105,6,0,117,118,203,205,128,205,0,0,0,120,205,0,34,205,120,0,32,203,120,0,35,208,119,8,19,203,203,208,20,205,205,203,121,205,6,0,0,117,119,0,0,118,120,0,0,205,116,0,143,205,128,2,119,0,236,255,0,205,116,0,143,205,127,2,119,0,4,0,141,203,124,2,0,205,203,0,143,205,127,2,141,205,26,2,39,205,205,32,0,122,205,0,32,205,122,112,121,205,50,0,134,123,0,0,100,7,3,0,0,2,0,0,128,205,0,0,0,124,205,0,32,205,123,0,2,203,0,0,0,0,0,128,13,203,124,203,19,205,205,203,121,205,36,0,32,205,2,0,121,205,7,0,1,203,0,0,134,205,0,0,36,17,6,0,0,203,0,0,59,4,0,0,119,0,166,12,25,205,0,100,1,203,4,0,1,208,0,0,134,126,0,0,24,55,6,0,205,203,208,0,1,208,0,0,45,208,126,208,20,19,0,0,1,135,0,0,1,136,0,0,119,0,45,0,25,208,0,4,1,203,4,0,1,205,0,0,134,127,0,0,24,55,6,0,208,203,205,0,25,203,0,4,26,208,127,1,1,207,4,0,134,205,0,0,116,78,6,0,203,208,207,0,1,135,0,0,1,136,0,0,119,0,30,0,0,135,123,0,0,136,124,0,119,0,27,0,25,205,0,100,1,207,4,0,1,208,0,0,134,128,0,0,24,55,6,0,205,207,208,0,1,208,0,0,45,208,128,208,140,19,0,0,1,135,0,0,1,136,0,0,119,0,15,0,25,208,0,4,1,207,4,0,1,205,0,0,134,129,0,0,24,55,6,0,208,207,205,0,25,207,0,4,26,208,129,1,1,203,4,0,134,205,0,0,116,78,6,0,207,208,203,0,1,135,0,0,1,136,0,0,1,205,2,0,135,130,1,0,108,111,205,0,128,205,0,0,0,132,205,0,1,205,224,255,1,203,255,255,134,133,0,0,84,105,6,0,130,132,205,203,128,203,0,0,0,134,203,0,134,137,0,0,84,105,6,0,133,134,135,136,128,203,0,0,0,138,203,0,141,203,127,2,32,139,203,0,121,139,7,0,141,203,120,2,76,203,203,0,58,140,203,0,59,203,0,0,65,4,140,203,119,0,84,12,1,203,0,0,141,205,48,2,4,141,203,205,1,205,0,0,15,205,205,138,32,203,138,0,16,208,141,137,19,203,203,208,20,205,205,203,121,205,20,0,134,142,0,0,4,85,6,0,1,203,34,0,1,208,4,0,134,205,0,0,116,78,6,0,142,203,208,0,141,205,120,2,76,205,205,0,58,143,205,0,62,205,0,0,255,255,255,255,255,255,239,127,65,205,143,205,62,208,0,0,255,255,255,255,255,255,239,127,65,4,205,208,119,0,55,12,141,208,48,2,26,144,208,106,34,208,144,0,41,208,208,31,42,208,208,31,15,208,138,208,34,205,144,0,41,205,205,31,42,205,205,31,13,205,138,205,16,203,137,144,19,205,205,203,20,208,208,205,121,208,20,0,134,146,0,0,4,85,6,0,1,205,34,0,1,203,4,0,134,208,0,0,116,78,6,0,146,205,203,0,141,208,120,2,76,208,208,0,58,148,208,0,62,208,0,0,0,0,0,0,0,0,16,0,65,208,148,208,62,203,0,0,0,0,0,0,0,0,16,0,65,4,208,203,119,0,22,12,1,203,255,255,141,208,127,2,15,145,203,208,121,145,60,0,0,152,137,0,0,153,138,0,141,203,127,2,0,208,203,0,143,208,130,2,142,203,133,2,58,208,203,0,144,208,140,2,142,208,140,2,61,203,0,0,0,0,0,63,74,208,208,203,12,149,208,0,141,208,130,2,41,208,208,1,0,150,208,0,142,208,140,2,59,203,255,255,63,151,208,203,142,203,140,2,126,25,149,203,151,0,0,0,142,208,140,2,63,203,208,25,144,203,141,2,1,203,255,255,1,208,255,255,134,155,0,0,84,105,6,0,152,153,203,208,128,208,0,0,0,156,208,0,1,208,255,255,38,203,149,1,20,203,203,150,47,208,208,203,244,21,0,0,0,152,155,0,0,153,156,0,38,203,149,1,20,203,203,150,40,203,203,1,0,208,203,0,143,208,130,2,142,203,141,2,58,208,203,0,144,208,140,2,119,0,217,255,0,160,155,0,0,161,156,0,38,203,149,1,20,203,203,150,40,203,203,1,0,208,203,0,143,208,129,2,142,203,141,2,58,208,203,0,144,208,139,2,119,0,9,0,0,160,137,0,0,161,138,0,141,203,127,2,0,208,203,0,143,208,129,2,142,203,133,2,58,208,203,0,144,208,139,2,141,208,48,2,34,157,208,0,1,208,32,0,1,203,0,0,141,205,48,2,41,207,157,31,42,207,207,31,134,158,0,0,240,98,6,0,208,203,205,207,128,207,0,0,0,159,207,0,134,162,0,0,84,105,6,0,160,161,158,159,128,207,0,0,0,165,207,0,141,207,18,2,16,166,162,207,34,207,165,0,32,205,165,0,19,205,205,166,20,207,207,205,121,207,11,0,34,207,162,0,121,207,5,0,1,8,0,0,1,207,127,0,143,207,152,2,119,0,9,0,0,7,162,0,1,207,125,0,143,207,152,2,119,0,5,0,141,207,18,2,0,7,207,0,1,207,125,0,143,207,152,2,141,207,152,2,32,207,207,125,121,207,14,0,34,167,7,53,121,167,5,0,0,8,7,0,1,207,127,0,143,207,152,2,119,0,8,0,141,207,120,2,76,207,207,0,58,29,207,0,0,9,7,0,58,28,29,0,59,207,0,0,144,207,16,2,141,207,152,2,32,207,207,127,121,207,17,0,1,207,84,0,4,168,207,8,59,207,1,0,134,169,0,0,252,131,5,0,207,168,0,0,141,207,120,2,76,207,207,0,58,170,207,0,134,171,0,0,212,107,6,0,169,170,0,0,0,9,8,0,58,28,170,0,58,207,171,0,144,207,16,2,34,172,9,32,142,207,139,2,59,205,0,0,70,173,207,205,141,205,129,2,38,205,205,1,0,174,205,0,32,207,174,0,19,203,173,172,19,207,207,203,38,207,207,1,141,203,129,2,3,205,207,203,143,205,131,2,32,207,174,0,19,208,173,172,19,207,207,208,121,207,4,0,59,207,0,0,58,203,207,0,119,0,3,0,142,207,139,2,58,203,207,0,58,205,203,0,144,205,142,2,141,205,131,2,77,205,205,0,65,175,28,205,142,205,16,2,63,176,205,175,142,205,142,2,65,177,28,205,63,205,177,176,142,203,16,2,64,178,205,203,59,203,0,0,70,203,178,203,120,203,8,0,134,179,0,0,4,85,6,0,1,205,34,0,1,207,4,0,134,203,0,0,116,78,6,0,179,205,207,0,134,180,0,0,248,107,6,0,178,160,0,0,58,4,180,0,119,0,84,11,141,207,29,2,0,203,207,0,143,203,30,2,141,207,48,2,141,205,18,2,3,203,207,205,143,203,122,2,141,203,30,2,0,10,203,0,1,203,0,0,143,203,54,2,1,203,46,0,1,205,3,0,138,10,203,205,156,24,0,0,112,24,0,0,180,24,0,0,0,15,10,0,1,203,0,0,143,203,219,1,1,203,0,0,143,203,220,1,141,205,54,2,0,203,205,0,143,203,58,2,1,203,0,0,143,203,66,2,119,0,47,0,141,205,54,2,0,203,205,0,143,203,55,2,1,203,138,0,143,203,152,2,119,0,41,0,119,0,1,0,25,203,0,4,1,205,4,0,1,207,0,0,134,184,0,0,24,55,6,0,203,205,207,0,25,207,0,100,1,205,4,0,1,203,0,0,134,185,0,0,24,55,6,0,207,205,203,0,48,203,184,185,56,25,0,0,25,205,0,4,25,207,184,1,1,208,4,0,134,203,0,0,116,78,6,0,205,207,208,0,42,203,184,0,1,208,1,0,1,207,0,0,134,186,0,0,24,55,6,0,203,208,207,0,1,207,255,0,19,207,186,207,0,10,207,0,1,207,1,0,143,207,54,2,119,0,201,255,134,187,0,0,220,97,4,0,0,0,0,0,0,10,187,0,1,207,1,0,143,207,54,2,119,0,194,255,141,207,152,2,1,208,138,0,45,207,207,208,28,27,0,0,25,207,0,4,1,208,4,0,1,203,0,0,134,188,0,0,24,55,6,0,207,208,203,0,25,203,0,100,1,208,4,0,1,207,0,0,134,189,0,0,24,55,6,0,203,208,207,0,48,207,188,189,220,25,0,0,25,208,0,4,25,203,188,1,1,205,4,0,134,207,0,0,116,78,6,0,208,203,205,0,42,207,188,0,1,205,1,0,1,203,0,0,134,190,0,0,24,55,6,0,207,205,203,0,1,203,255,0,19,203,190,203,0,12,203,0,119,0,5,0,134,191,0,0,220,97,4,0,0,0,0,0,0,12,191,0,32,192,12,48,121,192,65,0,1,193,0,0,1,194,0,0,1,203,255,255,1,205,255,255,134,195,0,0,84,105,6,0,193,194,203,205,128,205,0,0,0,196,205,0,25,205,0,4,1,203,4,0,1,207,0,0,134,198,0,0,24,55,6,0,205,203,207,0,25,207,0,100,1,203,4,0,1,205,0,0,134,199,0,0,24,55,6,0,207,203,205,0,48,205,198,199,152,26,0,0,25,203,0,4,25,207,198,1,1,208,4,0,134,205,0,0,116,78,6,0,203,207,208,0,42,208,198,0,1,207,1,0,1,203,0,0,134,205,0,0,24,55,6,0,208,207,203,0,143,205,0,1,141,205,0,1,1,203,255,0,19,205,205,203,0,11,205,0,119,0,7,0,134,205,0,0,220,97,4,0,0,0,0,0,143,205,1,1,141,205,1,1,0,11,205,0,32,205,11,48,143,205,2,1,141,205,2,1,121,205,4,0,0,193,195,0,0,194,196,0,119,0,205,255,0,15,11,0,0,205,195,0,143,205,219,1,0,205,196,0,143,205,220,1,1,205,1,0,143,205,58,2,1,205,1,0,143,205,66,2,119,0,11,0,0,15,12,0,1,205,0,0,143,205,219,1,1,205,0,0,143,205,220,1,141,203,55,2,0,205,203,0,143,205,58,2,1,205,1,0,143,205,66,2,141,203,153,2,1,207,0,0,1,208,4,0,134,205,0,0,116,78,6,0,203,207,208,0,26,205,15,48,143,205,3,1,32,205,15,46,143,205,5,1,141,205,5,1,141,208,3,1,35,208,208,10,20,205,205,208,121,205,149,1,0,18,15,0,1,205,0,0,143,205,7,1,1,205,0,0,143,205,8,1,141,208,5,1,0,205,208,0,143,205,221,1,141,208,3,1,0,205,208,0,143,205,222,1,141,208,219,1,0,205,208,0,143,205,223,1,141,208,220,1,0,205,208,0,143,205,224,1,141,208,58,2,0,205,208,0,143,205,61,2,141,208,66,2,0,205,208,0,143,205,69,2,1,205,0,0,143,205,82,2,1,205,0,0,143,205,90,2,1,205,0,0,143,205,103,2,141,205,221,1,121,205,58,0,141,208,69,2,32,205,208,0,143,205,36,2,141,205,36,2,121,205,28,0,141,208,7,1,0,205,208,0,143,205,225,1,141,208,8,1,0,205,208,0,143,205,226,1,141,208,7,1,0,205,208,0,143,205,227,1,141,208,8,1,0,205,208,0,143,205,228,1,141,208,61,2,0,205,208,0,143,205,63,2,1,205,1,0,143,205,70,2,141,208,82,2,0,205,208,0,143,205,87,2,141,208,90,2,0,205,208,0,143,205,95,2,141,208,103,2,0,205,208,0,143,205,108,2,119,0,196,0,141,208,223,1,0,205,208,0,143,205,229,1,141,208,224,1,0,205,208,0,143,205,230,1,141,208,7,1,0,205,208,0,143,205,231,1,141,208,8,1,0,205,208,0,143,205,232,1,141,208,61,2,0,205,208,0,143,205,62,2,141,208,82,2,0,205,208,0,143,205,83,2,141,208,90,2,0,205,208,0,143,205,91,2,141,208,103,2,0,205,208,0,143,205,104,2,119,0,34,1,141,208,90,2,34,205,208,125,143,205,6,1,141,208,7,1,141,207,8,1,1,203,1,0,1,209,0,0,134,205,0,0,84,105,6,0,208,207,203,209,143,205,9,1,128,209,0,0,0,205,209,0,143,205,10,1,33,205,18,48,143,205,11,1,141,205,6,1,120,205,77,0,141,205,11,1,120,205,29,0,141,209,223,1,0,205,209,0,143,205,225,1,141,209,224,1,0,205,209,0,143,205,226,1,141,209,9,1,0,205,209,0,143,205,227,1,141,209,10,1,0,205,209,0,143,205,228,1,141,209,61,2,0,205,209,0,143,205,63,2,141,209,69,2,0,205,209,0,143,205,70,2,141,209,82,2,0,205,209,0,143,205,87,2,141,209,90,2,0,205,209,0,143,205,95,2,141,209,103,2,0,205,209,0,143,205,108,2,119,0,123,0,141,209,153,2,1,203,240,1,3,209,209,203,1,203,4,0,1,207,0,0,134,205,0,0,24,55,6,0,209,203,207,0,143,205,17,1,141,207,153,2,1,203,240,1,3,207,207,203,141,203,17,1,39,203,203,1,1,209,4,0,134,205,0,0,116,78,6,0,207,203,209,0,141,209,223,1,0,205,209,0,143,205,225,1,141,209,224,1,0,205,209,0,143,205,226,1,141,209,9,1,0,205,209,0,143,205,227,1,141,209,10,1,0,205,209,0,143,205,228,1,141,209,61,2,0,205,209,0,143,205,63,2,141,209,69,2,0,205,209,0,143,205,70,2,141,209,82,2,0,205,209,0,143,205,87,2,141,209,90,2,0,205,209,0,143,205,95,2,141,209,103,2,0,205,209,0,143,205,108,2,119,0,77,0,141,205,11,1,141,209,9,1,141,203,103,2,125,23,205,209,203,0,0,0,141,209,82,2,32,203,209,0,143,203,12,1,141,209,153,2,141,205,90,2,41,205,205,2,3,203,209,205,143,203,13,1,141,203,12,1,121,203,5,0,141,205,222,1,0,203,205,0,143,203,121,2,119,0,15,0,141,205,13,1,1,209,4,0,1,207,0,0,134,203,0,0,24,55,6,0,205,209,207,0,143,203,14,1,26,203,18,48,143,203,15,1,141,207,15,1,141,209,14,1,27,209,209,10,3,203,207,209,143,203,121,2,141,209,13,1,141,207,121,2,1,205,4,0,134,203,0,0,116,78,6,0,209,207,205,0,141,205,82,2,25,203,205,1,143,203,16,1,141,203,16,1,32,203,203,9,38,203,203,1,141,205,90,2,3,20,203,205,141,205,16,1,32,205,205,9,1,203,0,0,141,207,16,1,125,13,205,203,207,0,0,0,141,203,223,1,0,207,203,0,143,207,225,1,141,203,224,1,0,207,203,0,143,207,226,1,141,203,9,1,0,207,203,0,143,207,227,1,141,203,10,1,0,207,203,0,143,207,228,1,1,207,1,0,143,207,63,2,141,203,69,2,0,207,203,0,143,207,70,2,0,207,13,0,143,207,87,2,0,207,20,0,143,207,95,2,0,207,23,0,143,207,108,2,25,203,0,4,1,205,4,0,1,209,0,0,134,207,0,0,24,55,6,0,203,205,209,0,143,207,19,1,25,209,0,100,1,205,4,0,1,203,0,0,134,207,0,0,24,55,6,0,209,205,203,0,143,207,20,1,141,207,19,1,141,203,20,1,48,207,207,203,248,31,0,0,25,203,0,4,141,205,19,1,25,205,205,1,1,209,4,0,134,207,0,0,116,78,6,0,203,205,209,0,141,209,19,1,42,209,209,0,1,205,1,0,1,203,0,0,134,207,0,0,24,55,6,0,209,205,203,0,143,207,21,1,141,207,21,1,1,203,255,0,19,207,207,203,0,16,207,0,119,0,7,0,134,207,0,0,220,97,4,0,0,0,0,0,143,207,22,1,141,207,22,1,0,16,207,0,26,207,16,48,143,207,23,1,32,207,16,46,143,207,24,1,141,207,24,1,141,203,23,1,35,203,203,10,20,207,207,203,121,207,36,0,0,18,16,0,141,203,227,1,0,207,203,0,143,207,7,1,141,203,228,1,0,207,203,0,143,207,8,1,141,203,24,1,0,207,203,0,143,207,221,1,141,203,23,1,0,207,203,0,143,207,222,1,141,203,225,1,0,207,203,0,143,207,223,1,141,203,226,1,0,207,203,0,143,207,224,1,141,203,63,2,0,207,203,0,143,207,61,2,141,203,70,2,0,207,203,0,143,207,69,2,141,203,87,2,0,207,203,0,143,207,82,2,141,203,95,2,0,207,203,0,143,207,90,2,141,203,108,2,0,207,203,0,143,207,103,2,119,0,196,254,0,17,16,0,141,203,225,1,0,207,203,0,143,207,26,1,141,203,227,1,0,207,203,0,143,207,27,1,141,203,226,1,0,207,203,0,143,207,29,1,141,203,228,1,0,207,203,0,143,207,30,1,141,203,63,2,0,207,203,0,143,207,60,2,141,203,70,2,0,207,203,0,143,207,68,2,141,203,87,2,0,207,203,0,143,207,81,2,141,203,95,2,0,207,203,0,143,207,89,2,141,203,108,2,0,207,203,0,143,207,102,2,1,207,161,0,143,207,152,2,119,0,53,0,141,203,231,1,0,207,203,0,143,207,233,1,141,203,232,1,0,207,203,0,143,207,234,1,141,203,229,1,0,207,203,0,143,207,235,1,141,203,230,1,0,207,203,0,143,207,236,1,141,203,62,2,33,207,203,0,143,207,237,1,141,203,83,2,0,207,203,0,143,207,86,2,141,203,91,2,0,207,203,0,143,207,94,2,141,203,104,2,0,207,203,0,143,207,107,2,1,207,169,0,143,207,152,2,119,0,26,0,0,17,15,0,141,203,219,1,0,207,203,0,143,207,26,1,1,207,0,0,143,207,27,1,141,203,220,1,0,207,203,0,143,207,29,1,1,207,0,0,143,207,30,1,141,203,58,2,0,207,203,0,143,207,60,2,141,203,66,2,0,207,203,0,143,207,68,2,1,207,0,0,143,207,81,2,1,207,0,0,143,207,89,2,1,207,0,0,143,207,102,2,1,207,161,0,143,207,152,2,141,207,152,2,1,203,161,0,45,207,207,203,248,36,0,0,141,203,68,2,32,207,203,0,143,207,25,1,141,203,25,1,141,205,27,1,141,209,26,1,125,207,203,205,209,0,0,0,143,207,28,1,141,209,25,1,141,205,30,1,141,203,29,1,125,207,209,205,203,0,0,0,143,207,31,1,141,203,60,2,33,207,203,0,143,207,32,1,39,203,17,32,0,207,203,0,143,207,34,1,141,207,34,1,32,207,207,101,141,203,32,1,19,207,207,203,120,207,60,0,1,203,255,255,15,207,203,17,143,207,44,1,141,207,44,1,121,207,28,0,141,203,27,1,0,207,203,0,143,207,233,1,141,203,30,1,0,207,203,0,143,207,234,1,141,203,28,1,0,207,203,0,143,207,235,1,141,203,31,1,0,207,203,0,143,207,236,1,141,203,32,1,0,207,203,0,143,207,237,1,141,203,81,2,0,207,203,0,143,207,86,2,141,203,89,2,0,207,203,0,143,207,94,2,141,203,102,2,0,207,203,0,143,207,107,2,1,207,169,0,143,207,152,2,119,0,126,0,141,203,27,1,0,207,203,0,143,207,238,1,141,203,30,1,0,207,203,0,143,207,239,1,141,203,32,1,0,207,203,0,143,207,240,1,141,203,28,1,0,207,203,0,143,207,241,1,141,203,31,1,0,207,203,0,143,207,242,1,141,203,81,2,0,207,203,0,143,207,85,2,141,203,89,2,0,207,203,0,143,207,93,2,141,203,102,2,0,207,203,0,143,207,106,2,1,207,171,0,143,207,152,2,119,0,99,0,134,207,0,0,100,7,3,0,0,2,0,0,143,207,35,1,128,203,0,0,0,207,203,0,143,207,36,1,141,207,35,1,32,207,207,0,141,203,36,1,2,205,0,0,0,0,0,128,13,203,203,205,19,207,207,203,121,207,44,0,32,207,2,0,121,207,7,0,1,203,0,0,134,207,0,0,36,17,6,0,0,203,0,0,59,5,0,0,119,0,76,0,25,203,0,100,1,205,4,0,1,209,0,0,134,207,0,0,24,55,6,0,203,205,209,0,143,207,37,1,141,207,37,1,1,209,0,0,45,207,207,209,12,36,0,0,1,207,0,0,143,207,40,1,1,207,0,0,143,207,41,1,119,0,26,0,25,209,0,4,1,205,4,0,1,203,0,0,134,207,0,0,24,55,6,0,209,205,203,0,143,207,39,1,25,203,0,4,141,205,39,1,26,205,205,1,1,209,4,0,134,207,0,0,116,78,6,0,203,205,209,0,1,207,0,0,143,207,40,1,1,207,0,0,143,207,41,1,119,0,7,0,141,209,35,1,0,207,209,0,143,207,40,1,141,209,36,1,0,207,209,0,143,207,41,1,141,209,40,1,141,205,41,1,141,203,28,1,141,208,31,1,134,207,0,0,84,105,6,0,209,205,203,208,143,207,42,1,128,208,0,0,0,207,208,0,143,207,43,1,141,208,42,1,0,207,208,0,143,207,50,1,141,208,27,1,0,207,208,0,143,207,52,1,141,208,43,1,0,207,208,0,143,207,53,1,141,208,30,1,0,207,208,0,143,207,56,1,141,208,81,2,0,207,208,0,143,207,84,2,141,208,89,2,0,207,208,0,143,207,92,2,141,208,102,2,0,207,208,0,143,207,105,2,1,207,173,0,143,207,152,2,141,207,152,2,1,208,169,0,45,207,207,208,72,38,0,0,25,208,0,100,1,203,4,0,1,205,0,0,134,207,0,0,24,55,6,0,208,203,205,0,143,207,45,1,141,207,45,1,1,205,0,0,45,207,207,205,160,37,0,0,141,205,233,1,0,207,205,0,143,207,238,1,141,205,234,1,0,207,205,0,143,207,239,1,141,205,237,1,0,207,205,0,143,207,240,1,141,205,235,1,0,207,205,0,143,207,241,1,141,205,236,1,0,207,205,0,143,207,242,1,141,205,86,2,0,207,205,0,143,207,85,2,141,205,94,2,0,207,205,0,143,207,93,2,141,205,107,2,0,207,205,0,143,207,106,2,1,207,171,0,143,207,152,2,119,0,43,0,25,205,0,4,1,203,4,0,1,208,0,0,134,207,0,0,24,55,6,0,205,203,208,0,143,207,46,1,25,208,0,4,141,203,46,1,26,203,203,1,1,205,4,0,134,207,0,0,116,78,6,0,208,203,205,0,141,207,237,1,121,207,25,0,141,205,235,1,0,207,205,0,143,207,50,1,141,205,233,1,0,207,205,0,143,207,52,1,141,205,236,1,0,207,205,0,143,207,53,1,141,205,234,1,0,207,205,0,143,207,56,1,141,205,86,2,0,207,205,0,143,207,84,2,141,205,94,2,0,207,205,0,143,207,92,2,141,205,107,2,0,207,205,0,143,207,105,2,1,207,173,0,143,207,152,2,119,0,3,0,1,207,172,0,143,207,152,2,141,207,152,2,1,205,171,0,45,207,207,205,200,38,0,0,141,207,240,1,121,207,25,0,141,205,241,1,0,207,205,0,143,207,50,1,141,205,238,1,0,207,205,0,143,207,52,1,141,205,242,1,0,207,205,0,143,207,53,1,141,205,239,1,0,207,205,0,143,207,56,1,141,205,85,2,0,207,205,0,143,207,84,2,141,205,93,2,0,207,205,0,143,207,92,2,141,205,106,2,0,207,205,0,143,207,105,2,1,207,173,0,143,207,152,2,119,0,3,0,1,207,172,0,143,207,152,2,141,207,152,2,1,205,172,0,45,207,207,205,20,39,0,0,134,207,0,0,4,85,6,0,143,207,47,1,141,205,47,1,1,203,22,0,1,208,4,0,134,207,0,0,116,78,6,0,205,203,208,0,1,208,0,0,134,207,0,0,36,17,6,0,0,208,0,0,59,5,0,0,119,0,74,6,141,207,152,2,1,208,173,0,45,207,207,208,56,64,0,0,141,208,153,2,1,203,4,0,1,205,0,0,134,207,0,0,24,55,6,0,208,203,205,0,143,207,48,1,141,207,48,1,32,207,207,0,121,207,9,0,141,205,120,2,76,205,205,0,58,207,205,0,144,207,49,1,142,207,49,1,59,205,0,0,65,5,207,205,119,0,52,6,141,207,50,1,141,203,52,1,13,205,207,203,143,205,51,1,141,203,53,1,141,207,56,1,13,205,203,207,143,205,55,1,141,207,56,1,34,205,207,0,143,205,57,1,141,207,52,1,35,205,207,10,143,205,58,1,141,207,56,1,32,205,207,0,143,205,59,1,141,205,57,1,141,207,59,1,141,203,58,1,19,207,207,203,20,205,205,207,141,207,51,1,141,203,55,1,19,207,207,203,19,205,205,207,121,205,24,0,1,207,30,0,141,203,18,2,16,205,207,203,143,205,60,1,141,203,48,1,141,207,18,2,24,203,203,207,0,205,203,0,143,205,61,1,141,205,60,1], eb + 0);
  HEAPU8.set([141,203,61,1,32,203,203,0,20,205,205,203,121,205,10,0,141,203,120,2,76,203,203,0,58,205,203,0,144,205,62,1,142,205,62,1,141,203,48,1,77,203,203,0,65,5,205,203,119,0,2,6,141,205,48,2,28,205,205,254,38,205,205,255,0,203,205,0,143,203,63,1,141,205,63,1,34,205,205,0,41,205,205,31,42,205,205,31,141,207,53,1,15,203,205,207,143,203,64,1,141,207,63,1,141,205,50,1,16,203,207,205,143,203,65,1,141,205,53,1,141,207,63,1,34,207,207,0,41,207,207,31,42,207,207,31,13,203,205,207,143,203,66,1,141,203,64,1,141,207,66,1,141,205,65,1,19,207,207,205,20,203,203,207,121,203,24,0,134,203,0,0,4,85,6,0,143,203,67,1,141,207,67,1,1,205,34,0,1,208,4,0,134,203,0,0,116,78,6,0,207,205,208,0,141,208,120,2,76,208,208,0,58,203,208,0,144,203,68,1,142,203,68,1,62,208,0,0,255,255,255,255,255,255,239,127,65,203,203,208,62,208,0,0,255,255,255,255,255,255,239,127,65,5,203,208,119,0,206,5,141,203,48,2,26,208,203,106,143,208,69,1,141,203,53,1,141,205,69,1,34,205,205,0,41,205,205,31,42,205,205,31,15,208,203,205,143,208,70,1,141,205,50,1,141,203,69,1,16,208,205,203,143,208,72,1,141,203,53,1,141,205,69,1,34,205,205,0,41,205,205,31,42,205,205,31,13,208,203,205,143,208,73,1,141,208,70,1,141,205,73,1,141,203,72,1,19,205,205,203,20,208,208,205,121,208,24,0,134,208,0,0,4,85,6,0,143,208,74,1,141,205,74,1,1,203,34,0,1,207,4,0,134,208,0,0,116,78,6,0,205,203,207,0,141,207,120,2,76,207,207,0,58,208,207,0,144,208,75,1,142,208,75,1,62,207,0,0,0,0,0,0,0,0,16,0,65,208,208,207,62,207,0,0,0,0,0,0,0,0,16,0,65,5,208,207,119,0,156,5,141,208,84,2,32,207,208,0,143,207,76,1,141,207,76,1,121,207,5,0,141,208,92,2,0,207,208,0,143,207,96,2,119,0,50,0,141,208,84,2,34,207,208,9,143,207,77,1,141,207,77,1,121,207,39,0,141,208,153,2,141,203,92,2,41,203,203,2,3,207,208,203,143,207,79,1,141,207,79,1,1,203,4,0,1,208,0,0,134,30,0,0,24,55,6,0,207,203,208,0,0,208,30,0,143,208,81,1,141,203,84,2,0,208,203,0,143,208,88,2,141,203,81,1,27,208,203,10,143,208,80,1,141,203,88,2,25,208,203,1,143,208,82,1,141,208,82,1,32,208,208,9,120,208,8,0,141,203,80,1,0,208,203,0,143,208,81,1,141,203,82,1,0,208,203,0,143,208,88,2,119,0,241,255,141,203,79,1,141,207,80,1,1,205,4,0,134,208,0,0,116,78,6,0,203,207,205,0,141,205,92,2,25,208,205,1,143,208,83,1,141,205,83,1,0,208,205,0,143,208,96,2,141,205,105,2,34,208,205,9,143,208,84,1,141,208,84,1,121,208,118,0,141,205,105,2,141,207,50,1,17,208,205,207,143,208,85,1,141,207,50,1,34,208,207,18,143,208,86,1,141,208,85,1,141,207,86,1,19,208,208,207,121,208,107,0,141,207,50,1,32,208,207,9,143,208,87,1,141,208,87,1,121,208,17,0,141,207,120,2,76,207,207,0,58,208,207,0,144,208,88,1,141,207,153,2,1,205,4,0,1,203,0,0,134,208,0,0,24,55,6,0,207,205,203,0,143,208,89,1,142,208,88,1,141,203,89,1,77,203,203,0,65,5,208,203,119,0,61,5,141,208,50,1,34,203,208,9,143,203,90,1,141,203,90,1,121,203,35,0,141,208,120,2,76,208,208,0,58,203,208,0,144,203,91,1,141,208,153,2,1,205,4,0,1,207,0,0,134,203,0,0,24,55,6,0,208,205,207,0,143,203,92,1,1,207,8,0,141,205,50,1,4,203,207,205,143,203,93,1,2,205,0,0,72,195,0,0,141,207,93,1,41,207,207,2,3,205,205,207,1,207,4,0,1,208,0,0,134,203,0,0,24,55,6,0,205,207,208,0,143,203,95,1,142,203,91,1,141,208,92,1,77,208,208,0,65,203,203,208,141,208,95,1,76,208,208,0,66,5,203,208,119,0,22,5,141,208,18,2,25,24,208,27,141,203,50,1,27,208,203,253,143,208,96,1,141,208,153,2,1,203,4,0,1,207,0,0,134,27,0,0,24,55,6,0,208,203,207,0,1,207,30,0,141,203,96,1,3,203,24,203,15,207,207,203,141,203,96,1,3,203,24,203,24,203,27,203,32,203,203,0,20,207,207,203,121,207,26,0,141,203,120,2,76,203,203,0,58,207,203,0,144,207,97,1,141,203,50,1,26,207,203,10,143,207,99,1,2,203,0,0,72,195,0,0,141,208,99,1,41,208,208,2,3,203,203,208,1,208,4,0,1,205,0,0,134,207,0,0,24,55,6,0,203,208,205,0,143,207,100,1,142,207,97,1,77,205,27,0,65,207,207,205,141,205,100,1,76,205,205,0,65,5,207,205,119,0,232,4,141,207,50,1,30,207,207,9,38,207,207,255,0,205,207,0,143,205,101,1,141,205,101,1,32,205,205,0,121,205,12,0,1,205,0,0,143,205,8,2,1,205,0,0,143,205,41,2,141,207,50,1,0,205,207,0,143,205,112,2,141,207,96,2,0,205,207,0,143,205,145,2,119,0,190,0,1,207,255,255,141,208,50,1,15,205,207,208,143,205,102,1,141,207,102,1,121,207,4,0,141,207,101,1,0,208,207,0,119,0,4,0,141,207,101,1,25,207,207,9,0,208,207,0,0,205,208,0,143,205,104,1,2,208,0,0,72,195,0,0,1,207,8,0,141,203,104,1,4,207,207,203,41,207,207,2,3,208,208,207,1,207,4,0,1,203,0,0,134,205,0,0,24,55,6,0,208,207,203,0,143,205,105,1,141,203,96,2,32,205,203,0,143,205,106,1,141,205,106,1,121,205,9,0,1,205,0,0,143,205,5,2,141,203,50,1,0,205,203,0,143,205,109,2,1,205,0,0,143,205,143,2,119,0,133,0,1,205,0,0,143,205,6,2,1,205,0,0,143,205,31,2,1,205,0,0,143,205,97,2,141,203,50,1,0,205,203,0,143,205,110,2,141,203,153,2,141,207,97,2,41,207,207,2,3,205,203,207,143,205,107,1,141,207,107,1,1,203,4,0,1,208,0,0,134,205,0,0,24,55,6,0,207,203,208,0,143,205,108,1,141,208,108,1,141,203,105,1,7,208,208,203,38,208,208,255,141,203,31,2,3,205,208,203,143,205,109,1,141,203,107,1,141,208,109,1,1,207,4,0,134,205,0,0,116,78,6,0,203,208,207,0,141,207,108,1,141,208,105,1,9,207,207,208,38,207,207,255,2,208,0,0,0,202,154,59,141,203,105,1,6,208,208,203,38,208,208,255,5,205,207,208,143,205,110,1,141,208,97,2,141,207,6,2,13,205,208,207,143,205,111,1,141,207,97,2,25,205,207,1,143,205,112,1,141,207,110,2,26,205,207,9,143,205,113,1,141,207,111,1,141,208,109,1,32,208,208,0,19,207,207,208,141,208,113,1,141,203,110,2,125,205,207,208,203,0,0,0,143,205,111,2,141,208,111,1,141,207,109,1,32,207,207,0,19,208,208,207,121,208,5,0,141,208,112,1,38,208,208,127,0,203,208,0,119,0,3,0,141,208,6,2,0,203,208,0,0,205,203,0,143,205,7,2,141,203,112,1,141,208,96,2,13,205,203,208,143,205,114,1,141,205,114,1,120,205,14,0,141,208,7,2,0,205,208,0,143,205,6,2,141,208,110,1,0,205,208,0,143,205,31,2,141,208,112,1,0,205,208,0,143,205,97,2,141,208,111,2,0,205,208,0,143,205,110,2,119,0,170,255,141,205,110,1,32,205,205,0,121,205,11,0,141,208,7,2,0,205,208,0,143,205,5,2,141,208,111,2,0,205,208,0,143,205,109,2,141,208,96,2,0,205,208,0,143,205,143,2,119,0,24,0,141,208,96,2,25,205,208,1,143,205,115,1,141,208,153,2,141,203,96,2,41,203,203,2,3,205,208,203,143,205,117,1,141,203,117,1,141,208,110,1,1,207,4,0,134,205,0,0,116,78,6,0,203,208,207,0,141,207,7,2,0,205,207,0,143,205,5,2,141,207,111,2,0,205,207,0,143,205,109,2,141,207,115,1,0,205,207,0,143,205,143,2,1,207,9,0,141,208,104,1,4,207,207,208,141,208,109,2,3,205,207,208,143,205,118,1,141,208,5,2,0,205,208,0,143,205,8,2,1,205,0,0,143,205,41,2,141,208,118,1,0,205,208,0,143,205,112,2,141,208,143,2,0,205,208,0,143,205,145,2,141,208,112,2,34,205,208,18,143,205,119,1,141,208,112,2,32,205,208,18,143,205,120,1,141,208,153,2,141,207,8,2,41,207,207,2,3,205,208,207,143,205,121,1,141,207,41,2,0,205,207,0,143,205,40,2,141,207,145,2,0,205,207,0,143,205,144,2,141,205,119,1,120,205,38,0,141,205,120,1,120,205,14,0,141,207,8,2,0,205,207,0,143,205,12,2,141,207,40,2,0,205,207,0,143,205,44,2,141,207,112,2,0,205,207,0,143,205,114,2,141,207,144,2,0,205,207,0,143,205,149,2,119,0,2,1,141,207,121,1,1,208,4,0,1,203,0,0,134,205,0,0,24,55,6,0,207,208,203,0,143,205,122,1,141,205,122,1,55,205,205,201,188,48,0,0,141,203,8,2,0,205,203,0,143,205,12,2,141,203,40,2,0,205,203,0,143,205,44,2,1,205,18,0,143,205,114,2,141,203,144,2,0,205,203,0,143,205,149,2,119,0,236,0,141,203,144,2,25,205,203,127,143,205,123,1,1,205,0,0,143,205,32,2,141,203,123,1,0,205,203,0,143,205,99,2,141,203,144,2,0,205,203,0,143,205,146,2,141,203,99,2,38,203,203,127,0,205,203,0,143,205,98,2,141,203,153,2,141,208,98,2,41,208,208,2,3,203,203,208,1,208,4,0,1,207,0,0,134,205,0,0,24,55,6,0,203,208,207,0,143,205,125,1,141,207,125,1,1,208,0,0,1,203,29,0,135,205,1,0,207,208,203,0,143,205,126,1,128,203,0,0,0,205,203,0,143,205,127,1,141,203,126,1,141,208,127,1,141,207,32,2,1,209,0,0,134,205,0,0,84,105,6,0,203,208,207,209,143,205,128,1,128,209,0,0,0,205,209,0,143,205,129,1,1,205,0,0,141,209,129,1,16,205,205,209,141,209,129,1,32,209,209,0,2,207,0,0,0,202,154,59,141,208,128,1,16,207,207,208,19,209,209,207,20,205,205,209,121,205,31,0,141,209,128,1,141,207,129,1,2,208,0,0,0,202,154,59,1,203,0,0,134,205,0,0,156,104,6,0,209,207,208,203,143,205,131,1,128,203,0,0,0,205,203,0,143,205,132,1,141,203,128,1,141,208,129,1,2,207,0,0,0,202,154,59,1,209,0,0,134,205,0,0,12,78,6,0,203,208,207,209,143,205,133,1,128,209,0,0,0,205,209,0,143,205,134,1,141,205,133,1,0,31,205,0,141,209,131,1,0,205,209,0,143,205,33,2,119,0,5,0,141,205,128,1,0,31,205,0,1,205,0,0,143,205,33,2,141,209,153,2,141,207,98,2,41,207,207,2,3,209,209,207,1,207,4,0,134,205,0,0,116,78,6,0,209,31,207,0,141,207,146,2,25,205,207,127,143,205,135,1,141,207,98,2,141,209,8,2,13,205,207,209,143,205,136,1,32,205,31,0,143,205,137,1,141,209,137,1,141,207,98,2,141,208,146,2,125,205,209,207,208,0,0,0,143,205,100,2,141,208,98,2,141,207,135,1,38,207,207,127,14,208,208,207,141,207,136,1,20,208,208,207,141,207,146,2,141,209,100,2,125,205,208,207,209,0,0,0,143,205,147,2,141,205,136,1,121,205,5,0,141,209,33,2,0,205,209,0,143,205,34,2,119,0,11,0,141,209,33,2,0,205,209,0,143,205,32,2,141,209,98,2,26,205,209,1,143,205,99,2,141,209,147,2,0,205,209,0,143,205,146,2,119,0,127,255,141,209,40,2,26,205,209,29,143,205,139,1,141,205,34,2,32,205,205,0,121,205,8,0,141,209,139,1,0,205,209,0,143,205,40,2,141,209,147,2,0,205,209,0,143,205,144,2,119,0,64,255,141,209,112,2,25,205,209,9,143,205,140,1,141,209,8,2,25,205,209,127,143,205,141,1,141,205,141,1,38,205,205,127,141,209,147,2,45,205,205,209,252,51,0,0,141,209,153,2,141,207,147,2,25,207,207,127,38,207,207,127,41,207,207,2,3,209,209,207,1,207,4,0,1,208,0,0,134,205,0,0,24,55,6,0,209,207,208,0,143,205,142,1,141,208,153,2,141,207,147,2,25,207,207,126,38,207,207,127,41,207,207,2,3,208,208,207,1,207,4,0,1,209,0,0,134,205,0,0,24,55,6,0,208,207,209,0,143,205,143,1,141,209,153,2,141,207,147,2,25,207,207,126,38,207,207,127,41,207,207,2,3,209,209,207,141,207,143,1,141,208,142,1,20,207,207,208,1,208,4,0,134,205,0,0,116,78,6,0,209,207,208,0,141,208,147,2,25,208,208,127,38,208,208,127,0,205,208,0,143,205,148,2,119,0,4,0,141,208,147,2,0,205,208,0,143,205,148,2,141,208,153,2,141,207,141,1,38,207,207,127,41,207,207,2,3,208,208,207,141,207,34,2,1,209,4,0,134,205,0,0,116,78,6,0,208,207,209,0,141,209,141,1,38,209,209,127,0,205,209,0,143,205,8,2,141,209,139,1,0,205,209,0,143,205,41,2,141,209,140,1,0,205,209,0,143,205,112,2,141,209,148,2,0,205,209,0,143,205,145,2,119,0,222,254,141,209,149,2,25,205,209,1,143,205,163,1,141,209,149,2,25,205,209,127,143,205,164,1,141,209,12,2,0,205,209,0,143,205,13,2,141,209,44,2,0,205,209,0,143,205,45,2,141,209,114,2,0,205,209,0,143,205,113,2,141,209,113,2,32,205,209,18,143,205,166,1,1,209,27,0,141,207,113,2,15,205,209,207,143,205,167,1,141,205,167,1,1,207,9,0,1,209,1,0,125,14,205,207,209,0,0,0,141,207,13,2,0,209,207,0,143,209,9,2,141,207,45,2,0,209,207,0,143,209,42,2,141,207,9,2,38,207,207,127,0,209,207,0,143,209,144,1,141,207,144,1,141,205,149,2,13,209,207,205,143,209,145,1,141,209,145,1,121,209,4,0,1,209,219,0,143,209,152,2,119,0,69,0,141,205,153,2,141,207,144,1,41,207,207,2,3,205,205,207,1,207,4,0,1,208,0,0,134,209,0,0,24,55,6,0,205,207,208,0,143,209,146,1,141,209,146,1,48,209,209,201,96,53,0,0,1,209,219,0,143,209,152,2,119,0,53,0,141,209,146,1,55,209,201,209,48,54,0,0,141,208,9,2,25,209,208,1,143,209,147,1,141,208,147,1,38,208,208,127,141,207,149,2,13,209,208,207,143,209,148,1,141,209,148,1,121,209,4,0,1,209,219,0,143,209,152,2,119,0,37,0,141,207,153,2,141,208,147,1,38,208,208,127,41,208,208,2,3,207,207,208,1,208,4,0,1,205,0,0,134,209,0,0,24,55,6,0,207,208,205,0,143,209,211,1,141,209,211,1,48,209,209,202,228,53,0,0,1,209,219,0,143,209,152,2,119,0,20,0,141,209,211,1,16,209,202,209,141,205,166,1,40,205,205,1,20,209,209,205,120,209,14,0,141,205,144,1,0,209,205,0,143,209,170,1,141,205,9,2,0,209,205,0,143,209,11,2,141,205,42,2,0,209,205,0,143,209,43,2,141,205,149,2,0,209,205,0,143,209,151,2,119,0,204,0,141,209,152,2,45,209,209,200,88,54,0,0,1,209,0,0,143,209,152,2,141,209,166,1,121,209,4,0,1,209,220,0,143,209,152,2,119,0,194,0,141,205,42,2,3,209,205,14,143,209,149,1,141,205,9,2,141,208,149,2,13,209,205,208,143,209,150,1,141,209,150,1,121,209,8,0,141,208,149,2,0,209,208,0,143,209,9,2,141,208,149,1,0,209,208,0,143,209,42,2,119,0,150,255,141,208,9,2,0,209,208,0,143,209,10,2,119,0,1,0,141,208,10,2,0,209,208,0,143,209,14,2,1,209,0,0,143,209,35,2,141,208,10,2,0,209,208,0,143,209,101,2,141,208,113,2,0,209,208,0,143,209,115,2,141,208,153,2,141,205,101,2,41,205,205,2,3,209,208,205,143,209,152,1,141,205,152,1,1,208,4,0,1,207,0,0,134,209,0,0,24,55,6,0,205,208,207,0,143,209,153,1,141,207,153,1,24,207,207,14,141,208,35,2,3,209,207,208,143,209,154,1,141,208,152,1,141,207,154,1,1,205,4,0,134,209,0,0,116,78,6,0,208,207,205,0,141,205,153,1,1,207,1,0,22,207,207,14,26,207,207,1,19,205,205,207,2,207,0,0,0,202,154,59,24,207,207,14,5,209,205,207,143,209,155,1,141,207,101,2,141,205,14,2,13,209,207,205,143,209,156,1,141,205,101,2,25,209,205,1,143,209,157,1,141,205,115,2,26,209,205,9,143,209,160,1,141,205,156,1,141,207,154,1,32,207,207,0,19,205,205,207,141,207,160,1,141,208,115,2,125,209,205,207,208,0,0,0,143,209,116,2,141,207,156,1,141,205,154,1,32,205,205,0,19,207,207,205,121,207,5,0,141,207,157,1,38,207,207,127,0,208,207,0,119,0,3,0,141,207,14,2,0,208,207,0,0,209,208,0,143,209,15,2,141,208,157,1,38,208,208,127,141,207,149,2,13,209,208,207,143,209,161,1,141,209,161,1,120,209,15,0,141,207,15,2,0,209,207,0,143,209,14,2,141,207,155,1,0,209,207,0,143,209,35,2,141,207,157,1,38,207,207,127,0,209,207,0,143,209,101,2,141,207,116,2,0,209,207,0,143,209,115,2,119,0,171,255,141,209,155,1,32,209,209,0,121,209,11,0,141,207,15,2,0,209,207,0,143,209,13,2,141,207,149,1,0,209,207,0,143,209,45,2,141,207,116,2,0,209,207,0,143,209,113,2,119,0,18,255,141,209,163,1,38,209,209,127,141,207,15,2,52,209,209,207,120,56,0,0,119,0,33,0,141,207,153,2,141,208,164,1,38,208,208,127,41,208,208,2,3,207,207,208,1,208,4,0,1,205,0,0,134,209,0,0,24,55,6,0,207,208,205,0,143,209,168,1,141,205,153,2,141,208,164,1,38,208,208,127,41,208,208,2,3,205,205,208,141,208,168,1,39,208,208,1,1,207,4,0,134,209,0,0,116,78,6,0,205,208,207,0,141,207,15,2,0,209,207,0,143,209,13,2,141,207,149,1,0,209,207,0,143,209,45,2,141,207,116,2,0,209,207,0,143,209,113,2,119,0,236,254,141,207,153,2,141,208,149,2,41,208,208,2,3,209,207,208,143,209,162,1,141,208,162,1,141,207,155,1,1,205,4,0,134,209,0,0,116,78,6,0,208,207,205,0,141,205,15,2,0,209,205,0,143,209,12,2,141,205,149,1,0,209,205,0,143,209,44,2,141,205,116,2,0,209,205,0,143,209,114,2,141,205,163,1,38,205,205,127,0,209,205,0,143,209,149,2,119,0,196,254,141,209,152,2,1,205,220,0,45,209,209,205,8,58,0,0,141,209,145,1,121,209,26,0,141,205,153,2,141,207,163,1,38,207,207,127,26,207,207,1,41,207,207,2,3,205,205,207,1,207,0,0,1,208,4,0,134,209,0,0,116,78,6,0,205,207,208,0,141,208,149,2,0,209,208,0,143,209,170,1,141,208,9,2,0,209,208,0,143,209,11,2,141,208,42,2,0,209,208,0,143,209,43,2,141,208,163,1,38,208,208,127,0,209,208,0,143,209,151,2,119,0,13,0,141,208,144,1,0,209,208,0,143,209,170,1,141,208,9,2,0,209,208,0,143,209,11,2,141,208,42,2,0,209,208,0,143,209,43,2,141,208,149,2,0,209,208,0,143,209,151,2,141,208,153,2,141,207,170,1,41,207,207,2,3,209,208,207,143,209,169,1,141,207,169,1,1,208,4,0,1,205,0,0,134,209,0,0,24,55,6,0,207,208,205,0,143,209,171,1,141,205,11,2,25,209,205,1,143,209,172,1,141,205,172,1,38,205,205,127,141,208,151,2,13,209,205,208,143,209,173,1,141,209,173,1,121,209,20,0,141,208,11,2,25,209,208,2,143,209,208,1,141,208,153,2,141,205,208,1,38,205,205,127,26,205,205,1,41,205,205,2,3,208,208,205,1,205,0,0,1,207,4,0,134,209,0,0,116,78,6,0,208,205,207,0,141,207,208,1,38,207,207,127,0,209,207,0,143,209,150,2,119,0,4,0,141,207,151,2,0,209,207,0,143,209,150,2,141,207,153,2,141,205,172,1,38,205,205,127,41,205,205,2,3,207,207,205,1,205,4,0,1,208,0,0,134,209,0,0,24,55,6,0,207,205,208,0,143,209,209,1,141,208,120,2,76,208,208,0,58,209,208,0,144,209,185,1,142,208,185,1,141,205,171,1,77,205,205,0,60,207,0,0,0,202,154,59,65,205,205,207,141,207,209,1,77,207,207,0,63,205,205,207,65,209,208,205,144,209,175,1,141,205,43,2,25,209,205,53,143,209,197,1,141,205,197,1,141,208,48,2,4,209,205,208,143,209,199,1,141,208,199,1,141,205,18,2,15,209,208,205,143,209,201,1,141,209,199,1,34,209,209,0,1,205,0,0,141,208,199,1,125,3,209,205,208,0,0,0,141,208,201,1,141,205,18,2,125,6,208,3,205,0,0,0,34,205,6,53,121,205,40,0,59,208,1,0,1,209,105,0,4,209,209,6,134,205,0,0,252,131,5,0,208,209,0,0,144,205,174,1,142,209,174,1,142,208,175,1,134,205,0,0,212,107,6,0,209,208,0,0,144,205,176,1,59,208,1,0,1,209,53,0,4,209,209,6,134,205,0,0,252,131,5,0,208,209,0,0,144,205,177,1,142,209,175,1,142,208,177,1,134,205,0,0,112,108,6,0,209,208,0,0,144,205,178,1,142,208,176,1,58,205,208,0,144,205,17,2,142,208,178,1,58,205,208,0,144,205,49,2,142,208,176,1,142,209,175,1,142,207,178,1,64,209,209,207,63,205,208,209,144,205,135,2,119,0,8,0,59,205,0,0,144,205,17,2,59,205,0,0,144,205,49,2,142,209,175,1,58,205,209,0,144,205,135,2,141,209,11,2,25,205,209,2,143,205,179,1,141,209,179,1,38,209,209,127,141,208,150,2,13,205,209,208,143,205,180,1,141,205,180,1,121,205,5,0,142,208,49,2,58,205,208,0,144,205,51,2,119,0,123,0,141,208,153,2,141,209,179,1,38,209,209,127,41,209,209,2,3,208,208,209,1,209,4,0,1,207,0,0,134,205,0,0,24,55,6,0,208,209,207,0,143,205,181,1,141,205,181,1,2,207,0,0,0,101,205,29,48,205,205,207,28,61,0,0,141,205,181,1,32,205,205,0,121,205,15,0,141,207,11,2,25,205,207,3,143,205,182,1,141,207,182,1,38,207,207,127,141,209,150,2,13,205,207,209,143,205,184,1,141,205,184,1,121,205,5,0,142,209,49,2,58,205,209,0,144,205,50,2,119,0,60,0,142,209,185,1,61,207,0,0,0,0,128,62,65,209,209,207,142,207,49,2,63,205,209,207,144,205,186,1,142,207,186,1,58,205,207,0,144,205,50,2,119,0,49,0,2,205,0,0,0,101,205,29,141,207,181,1,48,205,205,207,92,61,0,0,142,207,185,1,61,209,0,0,0,0,64,63,65,207,207,209,142,209,49,2,63,205,207,209,144,205,187,1,142,209,187,1,58,205,209,0,144,205,50,2,119,0,33,0,141,209,11,2,25,205,209,3,143,205,188,1,141,209,188,1,38,209,209,127,141,207,150,2,13,205,209,207,143,205,189,1,141,205,189,1,121,205,12,0,142,207,185,1,61,209,0,0,0,0,0,63,65,207,207,209,142,209,49,2,63,205,207,209,144,205,190,1,142,209,190,1,58,205,209,0,144,205,50,2,119,0,12,0,142,209,185,1,61,207,0,0,0,0,64,63,65,209,209,207,142,207,49,2,63,205,209,207,144,205,191,1,142,207,191,1,58,205,207,0,144,205,50,2,119,0,1,0,1,205,1,0,1,207,53,0,4,207,207,6,54,205,205,207,0,62,0,0,142,207,50,2,58,205,207,0,144,205,51,2,119,0,22,0,142,207,50,2,59,209,1,0,134,205,0,0,112,108,6,0,207,209,0,0,144,205,192,1,142,205,192,1,59,209,0,0,70,205,205,209,121,205,5,0,142,209,50,2,58,205,209,0,144,205,51,2,119,0,8,0,142,209,50,2,59,207,1,0,63,205,209,207,144,205,193,1,142,207,193,1,58,205,207,0,144,205,51,2,142,207,135,2,142,209,51,2,63,205,207,209,144,205,195,1,142,209,195,1,142,207,17,2,64,205,209,207,144,205,196,1,1,205,254,255,141,207,122,2,4,205,205,207,141,207,197,1,2,209,0,0,255,255,255,127,19,207,207,209,47,205,205,207,0,64,0,0,142,207,196,1,135,205,2,0,207,0,0,0,144,205,198,1,142,205,198,1,61,207,0,0,0,0,0,90,74,205,205,207,120,205,12,0,141,207,201,1,38,207,207,1,0,205,207,0,143,205,39,2,141,207,43,2,0,205,207,0,143,205,46,2,142,207,196,1,58,205,207,0,144,205,137,2,119,0,28,0,141,209,201,1,141,208,199,1,13,208,6,208,19,209,209,208,121,209,4,0,1,209,0,0,0,207,209,0,119,0,4,0,141,209,201,1,38,209,209,1,0,207,209,0,0,205,207,0,143,205,38,2,141,207,43,2,25,205,207,1,143,205,202,1,141,207,38,2,0,205,207,0,143,205,39,2,141,207,202,1,0,205,207,0,143,205,46,2,142,207,196,1,61,209,0,0,0,0,0,63,65,205,207,209,144,205,137,2,141,209,46,2,25,205,209,50,143,205,203,1,1,205,0,0,141,209,122,2,4,205,205,209,141,209,203,1,54,205,205,209,192,63,0,0,141,209,39,2,33,205,209,0,143,205,204,1,142,209,51,2,59,207,0,0,70,205,209,207,143,205,205,1,141,205,205,1,141,207,204,1,19,205,205,207,120,205,8,0,141,207,46,2,0,205,207,0,143,205,47,2,142,207,137,2,58,205,207,0,144,205,138,2,119,0,23,0,134,205,0,0,4,85,6,0,143,205,206,1,141,207,206,1,1,209,34,0,1,208,4,0,134,205,0,0,116,78,6,0,207,209,208,0,141,208,46,2,0,205,208,0,143,205,47,2,142,208,137,2,58,205,208,0,144,205,138,2,119,0,7,0,141,208,43,2,0,205,208,0,143,205,47,2,142,208,196,1,58,205,208,0,144,205,138,2,142,208,138,2,141,209,47,2,134,205,0,0,248,107,6,0,208,209,0,0,144,205,207,1,142,205,207,1,58,5,205,0,58,4,5,0,119,0,79,1,25,205,0,4,1,203,4,0,1,208,0,0,134,207,0,0,24,55,6,0,205,203,208,0,143,207,210,1,25,208,0,100,1,203,4,0,1,205,0,0,134,207,0,0,24,55,6,0,208,203,205,0,143,207,218,1,141,207,210,1,141,205,218,1,48,207,207,205,220,64,0,0,25,205,0,4,141,203,210,1,25,203,203,1,1,208,4,0,134,207,0,0,116,78,6,0,205,203,208,0,141,208,210,1,42,208,208,0,1,203,1,0,1,205,0,0,134,207,0,0,24,55,6,0,208,203,205,0,143,207,243,1,141,205,243,1,1,203,255,0,19,205,205,203,0,207,205,0,143,207,245,1,119,0,8,0,134,207,0,0,220,97,4,0,0,0,0,0,143,207,244,1,141,205,244,1,0,207,205,0,143,207,245,1,141,205,245,1,32,207,205,40,143,207,246,1,141,207,246,1,121,207,4,0,1,207,1,0,143,207,79,2,119,0,36,0,25,205,0,100,1,203,4,0,1,208,0,0,134,207,0,0,24,55,6,0,205,203,208,0,143,207,247,1,141,207,247,1,1,208,0,0,45,207,207,208,88,65,0,0,62,207,0,0,0,0,0,0,0,0,248,127,58,4,207,0,119,0,9,1,25,208,0,4,1,203,4,0,1,205,0,0,134,207,0,0,24,55,6,0,208,203,205,0,143,207,249,1,25,205,0,4,141,203,249,1,26,203,203,1,1,208,4,0,134,207,0,0,116,78,6,0,205,203,208,0,62,207,0,0,0,0,0,0,0,0,248,127,58,4,207,0,119,0,246,0,25,208,0,4,1,203,4,0,1,205,0,0,134,207,0,0,24,55,6,0,208,203,205,0,143,207,250,1,25,205,0,100,1,203,4,0,1,208,0,0,134,207,0,0,24,55,6,0,205,203,208,0,143,207,251,1,141,207,250,1,141,208,251,1,48,207,207,208,64,66,0,0,25,208,0,4,141,203,250,1,25,203,203,1,1,205,4,0,134,207,0,0,116,78,6,0,208,203,205,0,141,205,250,1,42,205,205,0,1,203,1,0,1,208,0,0,134,207,0,0,24,55,6,0,205,203,208,0,143,207,252,1,141,208,252,1,1,203,255,0,19,208,208,203,0,207,208,0,143,207,0,2,119,0,8,0,134,207,0,0,220,97,4,0,0,0,0,0,143,207,253,1,141,208,253,1,0,207,208,0,143,207,0,2,141,208,0,2,26,207,208,48,143,207,254,1,141,208,0,2,26,207,208,65,143,207,1,2,141,207,254,1,35,207,207,10,141,208,1,2,35,208,208,26,20,207,207,208,120,207,18,0,141,208,0,2,26,207,208,97,143,207,2,2,141,208,0,2,32,207,208,95,143,207,3,2,141,207,3,2,141,208,2,2,35,208,208,26,20,207,207,208,120,207,7,0,141,207,0,2,0,21,207,0,141,208,79,2,0,207,208,0,143,207,80,2,119,0,6,0,141,207,79,2,25,37,207,1,0,207,37,0,143,207,79,2,119,0,177,255,32,207,21,41,121,207,6,0,62,207,0,0,0,0,0,0,0,0,248,127,58,4,207,0,119,0,159,0,25,208,0,100,1,203,4,0,1,205,0,0,134,207,0,0,24,55,6,0,208,203,205,0,143,207,4,2,141,207,4,2,1,205,0,0,52,207,207,205,92,67,0,0,25,207,0,4,1,205,4,0,1,203,0,0,134,33,0,0,24,55,6,0,207,205,203,0,25,205,0,4,26,207,33,1,1,208,4,0,134,203,0,0,116,78,6,0,205,207,208,0,33,203,2,0,120,203,14,0,134,34,0,0,4,85,6,0,1,208,22,0,1,207,4,0,134,203,0,0,116,78,6,0,34,208,207,0,1,207,0,0,134,203,0,0,36,17,6,0,0,207,0,0,59,4,0,0,119,0,121,0,141,203,80,2,32,203,203,0,121,203,6,0,62,203,0,0,0,0,0,0,0,0,248,127,58,4,203,0,119,0,113,0,141,203,80,2,0,19,203,0,26,35,19,1,141,203,4,2,1,207,0,0,52,203,203,207,4,68,0,0,25,203,0,4,1,207,4,0,1,208,0,0,134,36,0,0,24,55,6,0,203,207,208,0,25,207,0,4,26,203,36,1,1,205,4,0,134,208,0,0,116,78,6,0,207,203,205,0,32,208,35,0,121,208,6,0,62,208,0,0,0,0,0,0,0,0,248,127,58,4,208,0,119,0,87,0,0,19,35,0,119,0,231,255,1,204,23,0,143,204,152,2,119,0,2,0,119,0,1,0,141,206,152,2,32,206,206,23,121,206,67,0,25,204,0,100,1,205,4,0,1,208,0,0,134,206,0,0,24,55,6,0,204,205,208,0,143,206,38,1,141,206,38,1,1,208,0,0,52,206,206,208,168,68,0,0,25,208,0,4,1,205,4,0,1,204,0,0,134,206,0,0,24,55,6,0,208,205,204,0,143,206,54,1,25,204,0,4,141,205,54,1,26,205,205,1,1,208,4,0,134,206,0,0,116,78,6,0,204,205,208,0,1,208,3,0,141,205,74,2,16,206,208,205,143,206,71,1,33,206,2,0,141,205,71,1,19,206,206,205,121,206,34,0,141,205,74,2,0,206,205,0,143,206,76,2,141,206,38,1,1,205,0,0,52,206,206,205,28,69,0,0,25,205,0,4,1,208,4,0,1,204,0,0,134,206,0,0,24,55,6,0,205,208,204,0,143,206,78,1,25,204,0,4,141,208,78,1,26,208,208,1,1,205,4,0,134,206,0,0,116,78,6,0,204,208,205,0,141,205,76,2,26,206,205,1,143,206,94,1,1,206,3,0,141,205,94,1,48,206,206,205,72,69,0,0,141,205,94,1,0,206,205,0,143,206,76,2,119,0,228,255,119,0,1,0,141,205,120,2,76,205,205,0,58,206,205,0,144,206,98,1,142,205,98,1,61,208,0,0,0,0,128,127,65,206,205,208,144,206,103,1,142,206,103,1,58,4,206,0,141,206,153,2,137,206,0,0,139,4,0,0,140,5,134,2,0,0,0,0,2,200,0,0,76,2,0,0,2,201,0,0,0,202,154,59,2,202,0,0,157,92,1,0,1,203,0,0,143,203,132,2,136,204,0,0,0,203,204,0,143,203,133,2,136,203,0,0,1,204,112,2,3,203,203,204,137,203,0,0,130,203,0,0,136,204,0,0,49,203,203,204,220,69,0,0,135,203,0,0,141,203,133,2,1,204,24,2,3,203,203,204,25,52,203,40,141,204,133,2,1,205,64,2,3,204,204,205,25,203,204,12,143,203,222,1,141,203,133,2,3,203,203,200,25,68,203,9,1,203,0,0,143,203,254,1,0,203,1,0,143,203,30,2,1,203,0,0,143,203,56,2,1,203,0,0,143,203,60,2,1,203,255,255,141,204,254,1,15,84,203,204,121,84,24,0,2,204,0,0,255,255,255,127,141,203,254,1,4,87,204,203,141,203,56,2,15,91,87,203,121,91,11,0,134,97,0,0,4,85,6,0,1,204,75,0,1,205,4,0,134,203,0,0,116,78,6,0,97,204,205,0,1,203,255,255,143,203,255,1,119,0,10,0,141,203,56,2,141,205,254,1,3,105,203,205,0,205,105,0,143,205,255,1,119,0,4,0,141,203,254,1,0,205,203,0,143,205,255,1,141,205,30,2,42,205,205,0,1,203,1,0,1,204,0,0,134,109,0,0,24,55,6,0,205,203,204,0,41,204,109,24,42,204,204,24,32,204,204,0,121,204,10,0,141,203,255,1,0,204,203,0,143,204,0,2,141,203,60,2,0,204,203,0,143,204,61,2,1,204,245,0,143,204,132,2,119,0,232,18,0,119,109,0,141,203,30,2,0,204,203,0,143,204,29,2,41,204,119,24,42,204,204,24,1,203,0,0,1,205,38,0,138,204,203,205,180,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,176,71,0,0,208,71,0,0,119,0,17,0,141,205,29,2,0,203,205,0,143,203,27,2,141,205,29,2,0,203,205,0,143,203,117,2,119,0,22,0,141,205,29,2,0,203,205,0,143,203,28,2,141,205,29,2,0,203,205,0,143,203,118,2,1,203,9,0,143,203,132,2,119,0,13,0,141,204,29,2,25,123,204,1,42,204,123,0,1,203,1,0,1,205,0,0,134,45,0,0,24,55,6,0,204,203,205,0,0,119,45,0,0,205,123,0,143,205,29,2,119,0,185,255,141,205,132,2,32,205,205,9,121,205,48,0,1,205,0,0,143,205,132,2,141,205,28,2,25,127,205,1,42,205,127,0,1,203,1,0,1,204,0,0,134,134,0,0,24,55,6,0,205,203,204,0,41,204,134,24,42,204,204,24,32,204,204,37,120,204,8,0,141,203,28,2,0,204,203,0,143,204,27,2,141,203,118,2,0,204,203,0,143,204,117,2,119,0,27,0,141,204,118,2,25,141,204,1,141,204,28,2,25,146,204,2,42,204,146,0,1,203,1,0,1,205,0,0,134,150,0,0,24,55,6,0,204,203,205,0,41,205,150,24,42,205,205,24,32,205,205,37,121,205,8,0,0,205,146,0,143,205,28,2,0,205,141,0,143,205,118,2,1,205,9,0,143,205,132,2,119,0,215,255,0,205,146,0,143,205,27,2,0,205,141,0,143,205,117,2,119,0,1,0,141,205,117,2,0,162,205,0,141,205,30,2,0,167,205,0,1,205,0,0,46,205,0,205,60,73,0,0,1,205,4,0,1,203,0,0,134,183,0,0,24,55,6,0,0,205,203,0,38,203,183,32,32,203,203,0,121,203,6,0,141,205,30,2,4,204,162,167,134,203,0,0,192,117,4,0,205,204,0,0,141,203,117,2,141,204,30,2,13,197,203,204,120,197,16,0,141,203,60,2,0,204,203,0,143,204,62,2,141,203,255,1,0,204,203,0,143,204,254,1,141,203,27,2,0,204,203,0,143,204,30,2,4,204,162,167,143,204,56,2,141,203,62,2,0,204,203,0,143,204,60,2,119,0,42,255,141,203,27,2,25,204,203,1,143,204,3,1,141,203,3,1,42,203,203,0,1,205,1,0,1,206,0,0,134,204,0,0,24,55,6,0,203,205,206,0,143,204,7,1,141,204,7,1,41,204,204,24,42,204,204,24,26,204,204,48,35,204,204,10,121,204,62,0,141,206,27,2,25,204,206,2,143,204,16,1,141,206,16,1,42,206,206,0,1,205,1,0,1,203,0,0,134,204,0,0,24,55,6,0,206,205,203,0,143,204,20,1,141,203,27,2,25,204,203,3,143,204,27,1,141,204,20,1,41,204,204,24,42,204,204,24,32,204,204,36,141,203,27,1,141,205,3,1,125,30,204,203,205,0,0,0,141,205,20,1,41,205,205,24,42,205,205,24,32,205,205,36,1,203,1,0,141,204,60,2,125,36,205,203,204,0,0,0,141,205,20,1,41,205,205,24,42,205,205,24,32,205,205,36,121,205,7,0,141,205,7,1,41,205,205,24,42,205,205,24,26,205,205,48,0,203,205,0,119,0,3,0,1,205,255,255,0,203,205,0,0,204,203,0,143,204,49,2,42,204,30,0,1,203,1,0,1,205,0,0,134,49,0,0,24,55,6,0,204,203,205,0,0,205,49,0,143,205,34,1,141,203,49,2,0,205,203,0,143,205,251,1,0,205,36,0,143,205,63,2,0,205,30,0,143,205,103,2,119,0,12,0,141,203,7,1,0,205,203,0,143,205,34,1,1,205,255,255,143,205,251,1,141,203,60,2,0,205,203,0,143,205,63,2,141,203,3,1,0,205,203,0,143,205,103,2,141,203,34,1,41,203,203,24,42,203,203,24,0,205,203,0,143,205,31,1,141,205,31,1,38,205,205,224,32,205,205,32,121,205,88,0,141,203,31,1,0,205,203,0,143,205,63,1,141,203,34,1,0,205,203,0,143,205,89,1,1,205,0,0,143,205,20,2,141,203,103,2,0,205,203,0,143,205,105,2,141,203,63,1,26,205,203,32,143,205,54,1,1,205,1,0,141,203,54,1,22,205,205,203,2,203,0,0,137,40,1,0,19,205,205,203,32,205,205,0,121,205,11,0,141,203,89,1,0,205,203,0,143,205,133,1,141,203,20,2,0,205,203,0,143,205,21,2,141,203,105,2,0,205,203,0,143,205,106,2,119,0,64,0,141,203,89,1,41,203,203,24,42,203,203,24,0,205,203,0,143,205,83,1,1,203,1,0,141,204,83,1,26,204,204,32,22,203,203,204,141,204,20,2,20,203,203,204,0,205,203,0,143,205,100,1,141,203,105,2,25,205,203,1,143,205,106,1,141,203,106,1,42,203,203,0,1,204,1,0,1,206,0,0,134,205,0,0,24,55,6,0,203,204,206,0,143,205,114,1,141,205,114,1,41,205,205,24,42,205,205,24,38,205,205,224,32,205,205,32,121,205,16,0,141,206,114,1,41,206,206,24,42,206,206,24,0,205,206,0,143,205,63,1,141,206,114,1,0,205,206,0,143,205,89,1,141,206,100,1,0,205,206,0,143,205,20,2,141,206,106,1,0,205,206,0,143,205,105,2,119,0,191,255,141,206,114,1,0,205,206,0,143,205,133,1,141,206,100,1,0,205,206,0,143,205,21,2,141,206,106,1,0,205,206,0,143,205,106,2,119,0,9,0,141,206,34,1,0,205,206,0,143,205,133,1,1,205,0,0,143,205,21,2,141,206,103,2,0,205,206,0,143,205,106,2,141,206,133,1,41,206,206,24,42,206,206,24,32,205,206,42,143,205,140,1,141,205,140,1,121,205,197,0,141,206,106,2,25,205,206,1,143,205,147,1,141,206,147,1,42,206,206,0,1,204,1,0,1,203,0,0,134,205,0,0,24,55,6,0,206,204,203,0,143,205,150,1,141,205,150,1,41,205,205,24,42,205,205,24,26,205,205,48,35,205,205,10,121,205,73,0,141,203,106,2,25,205,203,2,143,205,163,1,141,203,163,1,42,203,203,0,1,204,1,0,1,206,0,0,134,205,0,0,24,55,6,0,203,204,206,0,143,205,168,1,141,205,168,1,41,205,205,24,42,205,205,24,32,205,205,36,121,205,54,0,141,206,150,1,41,206,206,24,42,206,206,24,26,206,206,48,41,206,206,2,3,206,4,206,1,204,10,0,1,203,4,0,134,205,0,0,116,78,6,0,206,204,203,0,141,203,147,1,42,203,203,0,1,204,1,0,1,206,0,0,134,205,0,0,24,55,6,0,203,204,206,0,143,205,190,1,141,206,190,1,41,206,206,24,42,206,206,24,26,206,206,48,41,206,206,3,3,205,3,206,143,205,213,1,141,206,213,1,1,204,4,0,1,203,0,0,134,205,0,0,24,55,6,0,206,204,203,0,143,205,223,1,141,203,213,1,25,203,203,4,1,204,4,0,1,206,0,0,134,205,0,0,24,55,6,0,203,204,206,0,143,205,224,1,141,206,106,2,25,205,206,3,143,205,225,1,1,205,1,0,143,205,64,2,141,206,225,1,0,205,206,0,143,205,104,2,141,206,223,1,0,205,206,0,143,205,110,2,119,0,6,0,1,205,24,0,143,205,132,2,119,0,3,0,1,205,24,0,143,205,132,2,141,205,132,2,32,205,205,24,121,205,63,0,1,205,0,0,143,205,132,2,141,206,63,2,32,205,206,0,143,205,226,1,141,205,226,1,120,205,3,0,1,7,255,255,119,0,20,17,1,205,0,0,53,205,0,205,124,78,0,0,141,206,21,2,0,205,206,0,143,205,22,2,141,206,147,1,0,205,206,0,143,205,31,2,1,205,0,0,143,205,65,2,1,205,0,0,143,205,111,2,119,0,156,0,1,206,4,0,1,204,0,0,134,205,0,0,24,55,6,0,2,206,204,0,143,205,249,1,141,204,249,1,1,206,0,0,25,206,206,4,26,206,206,1,3,204,204,206,1,206,0,0,25,206,206,4,26,206,206,1,40,206,206,255,19,204,204,206,0,205,204,0,143,205,227,1,141,204,227,1,1,206,4,0,1,203,0,0,134,205,0,0,24,55,6,0,204,206,203,0,143,205,228,1,141,203,227,1,25,203,203,4,1,206,4,0,134,205,0,0,116,78,6,0,2,203,206,0,1,205,0,0,143,205,64,2,141,206,147,1,0,205,206,0,143,205,104,2,141,206,228,1,0,205,206,0,143,205,110,2,141,206,110,2,34,205,206,0,143,205,229,1,141,205,229,1,121,205,23,0,141,206,21,2,1,203,0,32,20,206,206,203,0,205,206,0,143,205,230,1,1,206,0,0,141,203,110,2,4,205,206,203,143,205,231,1,141,203,230,1,0,205,203,0,143,205,22,2,141,203,104,2,0,205,203,0,143,205,31,2,141,203,64,2,0,205,203,0,143,205,65,2,141,203,231,1,0,205,203,0,143,205,111,2,119,0,90,0,141,203,21,2,0,205,203,0,143,205,22,2,141,203,104,2,0,205,203,0,143,205,31,2,141,203,64,2,0,205,203,0,143,205,65,2,141,203,110,2,0,205,203,0,143,205,111,2,119,0,77,0,141,203,133,1,41,203,203,24,42,203,203,24,0,205,203,0,143,205,232,1,141,205,232,1,26,205,205,48,35,205,205,10,121,205,57,0,141,205,106,2,0,53,205,0,1,205,0,0,143,205,39,2,141,203,232,1,26,205,203,48,143,205,50,2,141,203,39,2,27,205,203,10], eb + 10240);
  HEAPU8.set([143,205,233,1,141,203,233,1,141,206,50,2,3,205,203,206,143,205,234,1,25,205,53,1,143,205,235,1,141,205,235,1,42,205,205,0,1,206,1,0,1,203,0,0,134,54,0,0,24,55,6,0,205,206,203,0,41,203,54,24,42,203,203,24,26,203,203,48,35,203,203,10,121,203,11,0,141,203,235,1,0,53,203,0,141,206,234,1,0,203,206,0,143,203,39,2,41,206,54,24,42,206,206,24,26,203,206,48,143,203,50,2,119,0,226,255,141,203,234,1,34,203,203,0,121,203,3,0,1,7,255,255,119,0,131,16,141,206,21,2,0,203,206,0,143,203,22,2,141,206,235,1,0,203,206,0,143,203,31,2,141,206,63,2,0,203,206,0,143,203,65,2,141,206,234,1,0,203,206,0,143,203,111,2,119,0,12,0,141,206,21,2,0,203,206,0,143,203,22,2,141,206,106,2,0,203,206,0,143,203,31,2,141,206,63,2,0,203,206,0,143,203,65,2,1,203,0,0,143,203,111,2,141,203,31,2,42,203,203,0,1,206,1,0,1,205,0,0,134,55,0,0,24,55,6,0,203,206,205,0,41,205,55,24,42,205,205,24,32,205,205,46,121,205,169,0,141,205,31,2,25,56,205,1,42,205,56,0,1,206,1,0,1,203,0,0,134,57,0,0,24,55,6,0,205,206,203,0,41,203,57,24,42,203,203,24,32,203,203,42,120,203,48,0,41,203,57,24,42,203,203,24,26,203,203,48,35,203,203,10,121,203,9,0,0,74,56,0,1,203,0,0,143,203,40,2,41,206,57,24,42,206,206,24,26,203,206,48,143,203,51,2,119,0,6,0,0,203,56,0,143,203,34,2,1,203,0,0,143,203,67,2,119,0,144,0,141,203,40,2,27,71,203,10,141,203,51,2,3,72,71,203,25,73,74,1,42,203,73,0,1,206,1,0,1,205,0,0,134,75,0,0,24,55,6,0,203,206,205,0,41,205,75,24,42,205,205,24,26,205,205,48,35,205,205,10,121,205,9,0,0,74,73,0,0,205,72,0,143,205,40,2,41,206,75,24,42,206,206,24,26,205,206,48,143,205,51,2,119,0,233,255,0,205,73,0,143,205,34,2,0,205,72,0,143,205,67,2,119,0,115,0,141,205,31,2,25,58,205,2,42,205,58,0,1,206,1,0,1,203,0,0,134,59,0,0,24,55,6,0,205,206,203,0,41,203,59,24,42,203,203,24,26,203,203,48,35,203,203,10,121,203,52,0,141,203,31,2,25,60,203,3,42,203,60,0,1,206,1,0,1,205,0,0,134,61,0,0,24,55,6,0,203,206,205,0,41,205,61,24,42,205,205,24,32,205,205,36,121,205,40,0,41,206,59,24,42,206,206,24,26,206,206,48,41,206,206,2,3,206,4,206,1,203,10,0,1,204,4,0,134,205,0,0,116,78,6,0,206,203,204,0,42,205,58,0,1,204,1,0,1,203,0,0,134,62,0,0,24,55,6,0,205,204,203,0,41,203,62,24,42,203,203,24,26,203,203,48,41,203,203,3,3,63,3,203,1,203,4,0,1,204,0,0,134,64,0,0,24,55,6,0,63,203,204,0,25,204,63,4,1,203,4,0,1,205,0,0,134,65,0,0,24,55,6,0,204,203,205,0,141,205,31,2,25,66,205,4,0,205,66,0,143,205,34,2,0,205,64,0,143,205,67,2,119,0,51,0,141,205,65,2,32,67,205,0,120,67,3,0,1,7,255,255,119,0,224,15,1,205,0,0,46,205,0,205,160,83,0,0,1,203,4,0,1,204,0,0,134,205,0,0,24,55,6,0,2,203,204,0,143,205,250,1,141,205,250,1,1,204,0,0,25,204,204,4,26,204,204,1,3,205,205,204,1,204,0,0,25,204,204,4,26,204,204,1,40,204,204,255,19,205,205,204,0,69,205,0,1,205,4,0,1,204,0,0,134,70,0,0,24,55,6,0,69,205,204,0,25,205,69,4,1,203,4,0,134,204,0,0,116,78,6,0,2,205,203,0,0,204,58,0,143,204,34,2,0,204,70,0,143,204,67,2,119,0,11,0,0,204,58,0,143,204,34,2,1,204,0,0,143,204,67,2,119,0,6,0,141,203,31,2,0,204,203,0,143,204,34,2,1,204,255,255,143,204,67,2,141,203,34,2,0,204,203,0,143,204,32,2,1,204,0,0,143,204,101,2,141,204,32,2,42,204,204,0,1,203,1,0,1,205,0,0,134,76,0,0,24,55,6,0,204,203,205,0,1,205,57,0,41,203,76,24,42,203,203,24,26,203,203,65,48,205,205,203,24,84,0,0,1,7,255,255,119,0,159,15,141,205,32,2,25,77,205,1,2,205,0,0,137,90,1,0,141,203,101,2,27,203,203,58,3,205,205,203,41,203,76,24,42,203,203,24,26,203,203,65,3,78,205,203,42,203,78,0,1,205,1,0,1,204,0,0,134,79,0,0,24,55,6,0,203,205,204,0,1,204,255,0,19,204,79,204,26,204,204,1,35,204,204,8,121,204,8,0,0,204,77,0,143,204,32,2,1,205,255,0,19,205,79,205,0,204,205,0,143,204,101,2,119,0,213,255,141,205,32,2,0,204,205,0,143,204,33,2,141,205,101,2,0,204,205,0,143,204,102,2,119,0,1,0,41,204,79,24,42,204,204,24,32,204,204,0,121,204,3,0,1,7,255,255,119,0,117,15,1,204,255,255,141,205,251,1,15,80,204,205,41,205,79,24,42,205,205,24,32,205,205,19,121,205,7,0,121,80,3,0,1,7,255,255,119,0,107,15,1,205,52,0,143,205,132,2,119,0,50,0,121,80,38,0,141,205,251,1,41,205,205,2,3,81,4,205,1,204,255,0,19,204,79,204,1,203,4,0,134,205,0,0,116,78,6,0,81,204,203,0,141,205,251,1,41,205,205,3,3,82,3,205,1,205,4,0,1,203,0,0,134,83,0,0,24,55,6,0,82,205,203,0,25,203,82,4,1,205,4,0,1,204,0,0,134,85,0,0,24,55,6,0,203,205,204,0,141,205,133,2,1,203,4,0,134,204,0,0,116,78,6,0,205,83,203,0,141,203,133,2,25,203,203,4,1,205,4,0,134,204,0,0,116,78,6,0,203,85,205,0,1,204,52,0,143,204,132,2,119,0,12,0,1,204,0,0,53,204,0,204,160,85,0,0,1,7,0,0,119,0,61,15,141,205,133,2,1,203,255,0,19,203,79,203,134,204,0,0,148,32,2,0,205,203,2,0,141,204,132,2,32,204,204,52,121,204,17,0,1,204,0,0,143,204,132,2,1,204,0,0,53,204,0,204,4,86,0,0,141,203,255,1,0,204,203,0,143,204,254,1,0,204,77,0,143,204,30,2,4,204,162,167,143,204,56,2,141,203,65,2,0,204,203,0,143,204,60,2,119,0,11,252,141,204,33,2,42,204,204,0,1,203,1,0,1,205,0,0,134,86,0,0,24,55,6,0,204,203,205,0,141,204,102,2,33,204,204,0,41,206,86,24,42,206,206,24,38,206,206,15,32,206,206,3,19,204,204,206,121,204,6,0,41,204,86,24,42,204,204,24,38,204,204,223,0,203,204,0,119,0,4,0,41,204,86,24,42,204,204,24,0,203,204,0,0,205,203,0,143,205,107,2,141,205,22,2,1,203,0,32,19,205,205,203,0,88,205,0,141,205,22,2,2,203,0,0,255,255,254,255,19,205,205,203,0,89,205,0,32,203,88,0,141,204,22,2,125,205,203,204,89,0,0,0,143,205,23,2,141,205,107,2,1,207,65,0,1,208,56,0,138,205,207,208,212,87,0,0,144,87,0,0,216,87,0,0,144,87,0,0,116,88,0,0,120,88,0,0,124,88,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,128,88,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,216,88,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,144,87,0,0,220,88,0,0,144,87,0,0,224,88,0,0,132,89,0,0,188,90,0,0,252,130,0,0,0,131,0,0,144,87,0,0,4,131,0,0,144,87,0,0,144,87,0,0,144,87,0,0,8,131,0,0,68,131,0,0,112,134,0,0,240,135,0,0,144,87,0,0,144,87,0,0,56,136,0,0,144,87,0,0,124,136,0,0,144,87,0,0,144,87,0,0,216,136,0,0,141,208,30,2,0,207,208,0,143,207,240,1,141,208,23,2,0,207,208,0,143,207,26,2,141,208,67,2,0,207,208,0,143,207,73,2,1,207,0,0,143,207,78,2,2,207,0,0,105,92,1,0,143,207,83,2,0,207,52,0,143,207,122,2,119,0,78,12,119,0,186,0,141,206,133,2,1,204,4,0,1,207,0,0,134,166,0,0,24,55,6,0,206,204,207,0,141,207,133,2,25,207,207,4,1,204,4,0,1,206,0,0,134,168,0,0,24,55,6,0,207,204,206,0,141,204,133,2,25,204,204,8,1,207,4,0,134,206,0,0,116,78,6,0,204,166,207,0,141,207,133,2,25,207,207,8,25,207,207,4,1,204,0,0,1,203,4,0,134,206,0,0,116,78,6,0,207,204,203,0,141,203,133,2,141,204,133,2,25,204,204,8,1,207,4,0,134,206,0,0,116,78,6,0,203,204,207,0,1,206,255,255,143,206,72,2,1,206,86,0,143,206,132,2,119,0,38,12,119,0,146,0,119,0,145,0,119,0,144,0,141,206,67,2,32,169,206,0,121,169,14,0,1,207,32,0,141,204,111,2,1,203,0,0,141,208,23,2,134,206,0,0,104,67,5,0,0,207,204,203,208,0,0,0,1,206,0,0,143,206,36,2,1,206,98,0,143,206,132,2,119,0,19,12,141,208,67,2,0,206,208,0,143,206,72,2,1,206,86,0,143,206,132,2,119,0,13,12,119,0,0,12,119,0,120,0,141,206,133,2,1,203,4,0,1,204,0,0,134,155,0,0,24,55,6,0,206,203,204,0,141,204,133,2,25,204,204,4,1,203,4,0,1,206,0,0,134,156,0,0,24,55,6,0,204,203,206,0,141,203,133,2,1,204,24,2,3,203,203,204,25,203,203,39,42,203,203,0,1,204,255,0,19,204,155,204,1,207,1,0,134,206,0,0,116,78,6,0,203,204,207,0,141,207,133,2,1,204,24,2,3,207,207,204,25,206,207,39,143,206,240,1,0,206,89,0,143,206,26,2,1,206,1,0,143,206,73,2,1,206,0,0,143,206,78,2,2,206,0,0,105,92,1,0,143,206,83,2,0,206,52,0,143,206,122,2,119,0,226,11,141,203,133,2,1,204,4,0,1,206,0,0,134,137,0,0,24,55,6,0,203,204,206,0,141,206,133,2,25,206,206,4,1,204,4,0,1,203,0,0,134,138,0,0,24,55,6,0,206,204,203,0,34,203,138,0,121,203,29,0,1,203,0,0,1,204,0,0,134,139,0,0,240,98,6,0,203,204,137,138,128,204,0,0,0,140,204,0,141,203,133,2,1,206,4,0,134,204,0,0,116,78,6,0,203,139,206,0,141,206,133,2,25,206,206,4,1,203,4,0,134,204,0,0,116,78,6,0,206,140,203,0,0,142,139,0,0,143,140,0,1,204,1,0,143,204,74,2,2,204,0,0,105,92,1,0,143,204,79,2,1,204,76,0,143,204,132,2,119,0,183,11,141,204,23,2,1,203,0,8,19,204,204,203,32,204,204,0,121,204,21,0,141,204,23,2,38,204,204,1,32,204,204,0,2,203,0,0,105,92,1,0,2,206,0,0,107,92,1,0,125,5,204,203,206,0,0,0,0,142,137,0,0,143,138,0,141,203,23,2,38,203,203,1,0,206,203,0,143,206,74,2,0,206,5,0,143,206,79,2,1,206,76,0,143,206,132,2,119,0,158,11,0,142,137,0,0,143,138,0,1,206,1,0,143,206,74,2,2,206,0,0,106,92,1,0,143,206,79,2,1,206,76,0,143,206,132,2,119,0,148,11,141,206,133,2,1,208,8,0,134,190,0,0,208,90,6,0,206,208,0,0,141,206,133,2,25,206,206,16,1,203,0,0,1,204,4,0,134,208,0,0,116,78,6,0,206,203,204,0,127,204,0,0,1,203,8,0,134,208,0,0,56,86,6,0,204,190,203,0,127,208,0,0,1,203,4,0,1,204,0,0,134,191,0,0,24,55,6,0,208,203,204,0,127,204,0,0,25,204,204,4,1,203,4,0,1,208,0,0,134,192,0,0,24,55,6,0,204,203,208,0,34,208,192,0,121,208,8,0,68,13,190,0,1,208,1,0,143,208,75,2,2,208,0,0,122,92,1,0,143,208,81,2,119,0,29,0,141,208,23,2,1,203,0,8,19,208,208,203,32,208,208,0,121,208,18,0,141,208,23,2,38,208,208,1,32,208,208,0,2,203,0,0,123,92,1,0,2,204,0,0,128,92,1,0,125,6,208,203,204,0,0,0,58,13,190,0,141,203,23,2,38,203,203,1,0,204,203,0,143,204,75,2,0,204,6,0,143,204,81,2,119,0,7,0,58,13,190,0,1,204,1,0,143,204,75,2,2,204,0,0,125,92,1,0,143,204,81,2,127,203,0,0,1,208,8,0,134,204,0,0,56,86,6,0,203,13,208,0,127,204,0,0,1,208,4,0,1,203,0,0,134,193,0,0,24,55,6,0,204,208,203,0,127,203,0,0,25,203,203,4,1,208,4,0,1,204,0,0,134,194,0,0,24,55,6,0,203,208,204,0,2,204,0,0,0,0,240,127,19,204,194,204,2,208,0,0,0,0,240,127,16,204,204,208,2,208,0,0,0,0,240,127,19,208,194,208,2,203,0,0,0,0,240,127,13,208,208,203,1,203,0,0,34,203,203,0,19,208,208,203,20,204,204,208,121,204,57,9,141,208,133,2,25,208,208,16,134,204,0,0,28,108,6,0,13,208,0,0,144,204,5,1,142,204,5,1,59,208,2,0,65,204,204,208,59,208,0,0,70,204,204,208,121,204,17,0,141,208,133,2,25,208,208,16,1,203,4,0,1,206,0,0,134,204,0,0,24,55,6,0,208,203,206,0,143,204,6,1,141,206,133,2,25,206,206,16,141,203,6,1,26,203,203,1,1,208,4,0,134,204,0,0,116,78,6,0,206,203,208,0,141,204,107,2,39,204,204,32,32,204,204,97,121,204,174,1,141,208,81,2,25,204,208,9,143,204,8,1,141,208,107,2,38,208,208,32,32,208,208,0,141,203,81,2,141,206,8,1,125,204,208,203,206,0,0,0,143,204,80,2,141,206,75,2,39,206,206,2,0,204,206,0,143,204,9,1,1,206,11,0,141,203,67,2,16,204,206,203,143,204,10,1,1,203,12,0,141,206,67,2,4,204,203,206,143,204,11,1,141,204,10,1,141,206,11,1,32,206,206,0,20,204,204,206,121,204,5,0,142,204,5,1,59,206,2,0,65,14,204,206,119,0,54,0,141,204,11,1,0,206,204,0,143,206,85,2,59,206,8,0,144,206,86,2,141,204,85,2,26,206,204,1,143,206,12,1,142,204,86,2,59,203,16,0,65,206,204,203,144,206,13,1,141,206,12,1,32,206,206,0,120,206,8,0,141,203,12,1,0,206,203,0,143,206,85,2,142,203,13,1,58,206,203,0,144,206,86,2,119,0,240,255,141,203,80,2,42,203,203,0,1,204,1,0,1,208,0,0,134,206,0,0,24,55,6,0,203,204,208,0,143,206,14,1,141,206,14,1,41,206,206,24,42,206,206,24,32,206,206,45,121,206,11,0,142,206,13,1,142,208,5,1,59,204,2,0,65,208,208,204,68,208,208,0,142,204,13,1,64,208,208,204,63,206,206,208,68,14,206,0,119,0,9,0,142,206,5,1,59,208,2,0,65,206,206,208,142,208,13,1,63,206,206,208,142,208,13,1,64,14,206,208,119,0,1,0,141,206,133,2,25,206,206,16,1,204,4,0,1,203,0,0,134,208,0,0,24,55,6,0,206,204,203,0,143,208,15,1,141,204,15,1,34,204,204,0,121,204,6,0,1,204,0,0,141,206,15,1,4,204,204,206,0,203,204,0,119,0,3,0,141,204,15,1,0,203,204,0,0,208,203,0,143,208,17,1,141,203,17,1,141,204,17,1,34,204,204,0,41,204,204,31,42,204,204,31,141,206,133,2,1,207,64,2,3,206,206,207,25,206,206,12,134,208,0,0,100,33,5,0,203,204,206,0,143,208,18,1,141,208,18,1,141,206,133,2,1,204,64,2,3,206,206,204,25,206,206,12,45,208,208,206,8,95,0,0,141,206,133,2,1,204,64,2,3,206,206,204,25,206,206,11,42,206,206,0,1,204,48,0,1,203,1,0,134,208,0,0,116,78,6,0,206,204,203,0,141,203,133,2,1,204,64,2,3,203,203,204,25,208,203,11,143,208,16,2,119,0,4,0,141,203,18,1,0,208,203,0,143,208,16,2,141,203,16,2,26,208,203,1,143,208,19,1,141,203,19,1,42,203,203,0,141,204,15,1,42,204,204,31,38,204,204,2,25,204,204,43,1,206,255,0,19,204,204,206,1,206,1,0,134,208,0,0,116,78,6,0,203,204,206,0,141,206,16,2,26,208,206,2,143,208,21,1,141,206,21,1,42,206,206,0,141,204,107,2,25,204,204,15,1,203,255,0,19,204,204,203,1,203,1,0,134,208,0,0,116,78,6,0,206,204,203,0,141,203,67,2,34,208,203,1,143,208,66,2,58,16,14,0,141,203,133,2,3,208,203,200,143,208,88,2,75,208,16,0,143,208,22,1,2,203,0,0,89,92,1,0,141,204,22,1,3,203,203,204,42,203,203,0,1,204,1,0,1,206,0,0,134,208,0,0,24,55,6,0,203,204,206,0,143,208,23,1,141,206,88,2,25,208,206,1,143,208,24,1,141,206,88,2,42,206,206,0,141,204,23,1,1,203,255,0,19,204,204,203,141,203,107,2,38,203,203,32,20,204,204,203,1,203,255,0,19,204,204,203,1,203,1,0,134,208,0,0,116,78,6,0,206,204,203,0,141,203,22,1,76,203,203,0,64,208,16,203,144,208,25,1,141,208,24,1,141,203,133,2,3,203,203,200,4,208,208,203,32,208,208,1,121,208,31,0,141,208,23,2,38,208,208,8,32,208,208,0,141,203,66,2,142,204,25,1,59,206,16,0,65,204,204,206,59,206,0,0,69,204,204,206,19,203,203,204,19,208,208,203,121,208,5,0,141,203,24,1,0,208,203,0,143,208,89,2,119,0,18,0,141,203,88,2,25,208,203,2,143,208,26,1,141,203,24,1,42,203,203,0,1,204,46,0,1,206,1,0,134,208,0,0,116,78,6,0,203,204,206,0,141,206,26,1,0,208,206,0,143,208,89,2,119,0,4,0,141,206,24,1,0,208,206,0,143,208,89,2,142,208,25,1,59,206,16,0,65,208,208,206,59,206,0,0,70,208,208,206,121,208,8,0,142,208,25,1,59,206,16,0,65,16,208,206,141,208,89,2,0,206,208,0,143,206,88,2,119,0,171,255,141,208,89,2,0,206,208,0,143,206,90,2,119,0,1,0,141,208,67,2,33,206,208,0,143,206,28,1,1,208,254,255,141,204,133,2,3,204,204,200,4,208,208,204,141,204,90,2,3,208,208,204,141,204,67,2,15,206,208,204,143,206,29,1,141,204,222,1,25,204,204,2,141,208,67,2,3,206,204,208,143,206,30,1,141,204,28,1,141,203,29,1,19,204,204,203,121,204,6,0,141,204,30,1,141,203,21,1,4,204,204,203,0,208,204,0,119,0,10,0,141,204,222,1,141,203,133,2,3,203,203,200,4,204,204,203,141,203,21,1,4,204,204,203,141,203,90,2,3,204,204,203,0,208,204,0,0,206,208,0,143,206,57,2,1,208,32,0,141,204,111,2,141,203,57,2,141,207,9,1,3,203,203,207,141,207,23,2,134,206,0,0,104,67,5,0,0,208,204,203,207,0,0,0,1,207,4,0,1,203,0,0,134,206,0,0,24,55,6,0,0,207,203,0,143,206,32,1,141,206,32,1,38,206,206,32,32,206,206,0,121,206,6,0,141,203,80,2,141,207,9,1,134,206,0,0,192,117,4,0,203,207,0,0,1,207,48,0,141,203,111,2,141,204,57,2,141,208,9,1,3,204,204,208,141,208,23,2,2,209,0,0,0,0,1,0,21,208,208,209,134,206,0,0,104,67,5,0,0,207,203,204,208,0,0,0,1,208,4,0,1,204,0,0,134,206,0,0,24,55,6,0,0,208,204,0,143,206,33,1,141,206,33,1,38,206,206,32,32,206,206,0,121,206,10,0,141,204,133,2,3,204,204,200,141,208,90,2,141,203,133,2,3,203,203,200,4,208,208,203,134,206,0,0,192,117,4,0,204,208,0,0,1,208,48,0,141,204,57,2,141,203,90,2,141,207,133,2,3,207,207,200,4,203,203,207,141,207,222,1,141,209,21,1,4,207,207,209,3,203,203,207,4,204,204,203,1,203,0,0,1,207,0,0,134,206,0,0,104,67,5,0,0,208,204,203,207,0,0,0,1,207,4,0,1,203,0,0,134,206,0,0,24,55,6,0,0,207,203,0,143,206,35,1,141,206,35,1,38,206,206,32,32,206,206,0,121,206,8,0,141,203,21,1,141,207,222,1,141,204,21,1,4,207,207,204,134,206,0,0,192,117,4,0,203,207,0,0,1,207,32,0,141,203,111,2,141,204,57,2,141,208,9,1,3,204,204,208,141,208,23,2,1,209,0,32,21,208,208,209,134,206,0,0,104,67,5,0,0,207,203,204,208,0,0,0,141,208,57,2,141,204,9,1,3,208,208,204,141,204,111,2,15,206,208,204,143,206,36,1,141,208,36,1,121,208,4,0,141,208,111,2,0,204,208,0,119,0,5,0,141,208,57,2,141,203,9,1,3,208,208,203,0,204,208,0,0,206,204,0,143,206,109,2,141,206,109,2,0,8,206,0,119,0,211,7,141,204,67,2,34,206,204,0,143,206,37,1,141,206,37,1,1,204,6,0,141,208,67,2,125,41,206,204,208,0,0,0,142,208,5,1,59,204,2,0,65,208,208,204,59,204,0,0,70,208,208,204,121,208,27,0,141,204,133,2,25,204,204,16,1,206,4,0,1,203,0,0,134,208,0,0,24,55,6,0,204,206,203,0,143,208,38,1,141,203,133,2,25,203,203,16,141,206,38,1,26,206,206,28,1,204,4,0,134,208,0,0,116,78,6,0,203,206,204,0,142,208,5,1,59,204,2,0,65,208,208,204,60,204,0,0,0,0,0,16,65,23,208,204,141,208,38,1,26,204,208,28,143,204,39,1,119,0,13,0,141,204,133,2,25,204,204,16,1,208,4,0,1,206,0,0,134,48,0,0,24,55,6,0,204,208,206,0,142,206,5,1,59,208,2,0,65,23,206,208,0,208,48,0,143,208,39,1,141,206,39,1,34,208,206,0,143,208,40,1,141,206,40,1,121,206,5,0,141,206,133,2,25,206,206,24,0,208,206,0,119,0,6,0,141,206,133,2,25,206,206,24,1,204,32,1,3,206,206,204,0,208,206,0,0,24,208,0,58,26,23,0,0,208,24,0,143,208,116,2,75,208,26,0,143,208,41,1,141,206,116,2,141,204,41,1,1,203,4,0,134,208,0,0,116,78,6,0,206,204,203,0,141,203,116,2,25,208,203,4,143,208,42,1,141,203,41,1,77,203,203,0,64,208,26,203,144,208,43,1,142,208,43,1,60,203,0,0,0,202,154,59,65,208,208,203,59,203,0,0,70,208,208,203,121,208,9,0,142,208,43,1,60,203,0,0,0,202,154,59,65,26,208,203,141,208,42,1,0,203,208,0,143,203,116,2,119,0,227,255,141,203,133,2,25,203,203,16,1,208,4,0,1,204,0,0,134,43,0,0,24,55,6,0,203,208,204,0,1,204,0,0,47,204,204,43,100,104,0,0,0,204,43,0,143,204,44,1,0,204,24,0,143,204,239,1,141,208,42,1,0,204,208,0,143,204,121,2,1,208,29,0,141,203,44,1,15,204,208,203,143,204,45,1,141,203,45,1,1,208,29,0,141,206,44,1,125,204,203,208,206,0,0,0,143,204,46,1,141,206,121,2,26,204,206,4,143,204,2,2,141,206,2,2,141,208,239,1,16,204,206,208,143,204,47,1,141,204,47,1,121,204,5,0,141,208,239,1,0,204,208,0,143,204,241,1,119,0,94,0,1,204,0,0,143,204,252,1,141,208,2,2,0,204,208,0,143,204,3,2,141,208,3,2,1,206,4,0,1,203,0,0,134,204,0,0,24,55,6,0,208,206,203,0,143,204,48,1,141,203,48,1,1,206,0,0,141,208,46,1,135,204,1,0,203,206,208,0,143,204,49,1,128,208,0,0,0,204,208,0,143,204,50,1,141,208,49,1,141,206,50,1,141,203,252,1,1,207,0,0,134,204,0,0,84,105,6,0,208,206,203,207,143,204,51,1,128,207,0,0,0,204,207,0,143,204,52,1,141,207,51,1,141,203,52,1,1,206,0,0,134,204,0,0,12,78,6,0,207,203,201,206,143,204,53,1,128,206,0,0,0,204,206,0,143,204,55,1,141,206,3,2,141,203,53,1,1,207,4,0,134,204,0,0,116,78,6,0,206,203,207,0,141,207,51,1,141,203,52,1,1,206,0,0,134,204,0,0,156,104,6,0,207,203,201,206,143,204,56,1,128,206,0,0,0,204,206,0,143,204,57,1,141,206,3,2,26,204,206,4,143,204,1,2,141,206,1,2,141,203,239,1,16,204,206,203,143,204,58,1,141,204,58,1,120,204,8,0,141,203,56,1,0,204,203,0,143,204,252,1,141,203,1,2,0,204,203,0,143,204,3,2,119,0,188,255,141,204,56,1,32,204,204,0,121,204,5,0,141,203,239,1,0,204,203,0,143,204,241,1,119,0,13,0,141,203,239,1,26,204,203,4,143,204,59,1,141,203,59,1,141,206,56,1,1,207,4,0,134,204,0,0,116,78,6,0,203,206,207,0,141,207,59,1,0,204,207,0,143,204,241,1,141,207,121,2,0,204,207,0,143,204,123,2,141,207,241,1,141,206,123,2,16,204,207,206,143,204,60,1,141,204,60,1,120,204,5,0,141,206,123,2,0,204,206,0,143,204,124,2,119,0,22,0,141,206,123,2,26,204,206,4,143,204,61,1,141,206,61,1,1,207,4,0,1,203,0,0,134,204,0,0,24,55,6,0,206,207,203,0,143,204,62,1,141,204,62,1,32,204,204,0,121,204,5,0,141,203,61,1,0,204,203,0,143,204,123,2,119,0,230,255,141,203,123,2,0,204,203,0,143,204,124,2,119,0,1,0,141,203,133,2,25,203,203,16,1,207,4,0,1,206,0,0,134,204,0,0,24,55,6,0,203,207,206,0,143,204,64,1,141,206,133,2,25,206,206,16,141,207,64,1,141,203,46,1,4,207,207,203,1,203,4,0,134,204,0,0,116,78,6,0,206,207,203,0,1,204,0,0,141,203,64,1,141,207,46,1,4,203,203,207,47,204,204,203,60,104,0,0,141,203,64,1,141,207,46,1,4,204,203,207,143,204,44,1,141,207,241,1,0,204,207,0,143,204,239,1,141,207,124,2,0,204,207,0,143,204,121,2,119,0,73,255,141,204,64,1,141,207,46,1,4,44,204,207,141,204,241,1,0,207,204,0,143,207,238,1,141,204,124,2,0,207,204,0,143,207,120,2,119,0,7,0,0,44,43,0,0,207,24,0,143,207,238,1,141,204,42,1,0,207,204,0,143,207,120,2,34,207,44,0,143,207,65,1,141,207,65,1,121,207,202,0,0,207,44,0,143,207,67,1,141,204,238,1,0,207,204,0,143,207,243,1,141,204,120,2,0,207,204,0,143,207,126,2,1,204,0,0,141,203,67,1,4,207,204,203,143,207,66,1,1,203,9,0,141,204,66,1,15,203,203,204,1,204,9,0,141,206,66,1,125,207,203,204,206,0,0,0,143,207,68,1,141,206,243,1,141,204,126,2,16,207,206,204,143,207,69,1,141,207,69,1,121,207,89,0,1,207,0,0,143,207,253,1,141,204,243,1,0,207,204,0,143,207,4,2,141,204,4,2,1,206,4,0,1,203,0,0,134,207,0,0,24,55,6,0,204,206,203,0,143,207,72,1,141,203,72,1,141,206,68,1,24,203,203,206,141,206,253,1,3,207,203,206,143,207,73,1,141,206,4,2,141,203,73,1,1,204,4,0,134,207,0,0,116,78,6,0,206,203,204,0,141,204,72,1,1,203,1,0,141,206,68,1,22,203,203,206,26,203,203,1,19,204,204,203,141,203,68,1,24,203,201,203,5,207,204,203,143,207,74,1,141,203,4,2,25,207,203,4,143,207,75,1,141,203,75,1,141,204,126,2,16,207,203,204,143,207,76,1,141,207,76,1,121,207,8,0,141,204,74,1,0,207,204,0,143,207,253,1,141,204,75,1,0,207,204,0,143,207,4,2,119,0,212,255,141,204,243,1,1,203,4,0,1,206,0,0,134,207,0,0,24,55,6,0,204,203,206,0,143,207,77,1,141,206,243,1,25,207,206,4,143,207,78,1,141,207,77,1,32,207,207,0,141,206,78,1,141,203,243,1,125,32,207,206,203,0,0,0,141,203,74,1,32,203,203,0,121,203,6,0,0,34,32,0,141,206,126,2,0,203,206,0,143,203,127,2,119,0,35,0,141,206,126,2,25,203,206,4,143,203,79,1,141,206,126,2,141,207,74,1,1,204,4,0,134,203,0,0,116,78,6,0,206,207,204,0,0,34,32,0,141,204,79,1,0,203,204,0,143,203,127,2,119,0,21,0,141,204,243,1,1,207,4,0,1,206,0,0,134,203,0,0,24,55,6,0,204,207,206,0,143,203,70,1,141,206,243,1,25,203,206,4,143,203,71,1,141,203,70,1,32,203,203,0,141,206,71,1,141,207,243,1,125,33,203,206,207,0,0,0,0,34,33,0,141,206,126,2,0,207,206,0,143,207,127,2,141,206,107,2,39,206,206,32,32,206,206,102,125,207,206,24,34,0,0,0,143,207,80,1,141,206,127,2,0,207,206,0,143,207,81,1,25,206,41,25,28,206,206,9,38,206,206,255,25,206,206,1,141,203,81,1,141,204,80,1,4,203,203,204,42,203,203,2,47,206,206,203,20,107,0,0,141,206,80,1,25,203,41,25,28,203,203,9,38,203,203,255,25,203,203,1,41,203,203,2,3,206,206,203,0,207,206,0,119,0,3,0,141,206,127,2,0,207,206,0,0,51,207,0,141,206,133,2,25,206,206,16,1,203,4,0,1,204,0,0,134,207,0,0,24,55,6,0,206,203,204,0,143,207,82,1,141,204,133,2,25,204,204,16,141,203,82,1,141,206,68,1,3,203,203,206,1,206,4,0,134,207,0,0,116,78,6,0,204,203,206,0,141,207,82,1,141,206,68,1,3,207,207,206,34,207,207,0,121,207,10,0,141,206,82,1,141,203,68,1,3,207,206,203,143,207,67,1,0,207,34,0,143,207,243,1,0,207,51,0,143,207,126,2,119,0,69,255,0,207,34,0,143,207,242,1,0,207,51,0,143,207,125,2,119,0,7,0,141,203,238,1,0,207,203,0,143,207,242,1,141,203,120,2,0,207,203,0,143,207,125,2,141,203,242,1,141,206,125,2,16,207,203,206,143,207,84,1,141,207,84,1,121,207,48,0,141,206,242,1,0,207,206,0,143,207,85,1,141,206,242,1,1,203,4,0,1,204,0,0,134,207,0,0,24,55,6,0,206,203,204,0,143,207,86,1,141,207,86,1,35,207,207,10,121,207,7,0,141,204,85,1,4,204,24,204,42,204,204,2,27,207,204,9,143,207,12,2,119,0,31,0,141,204,85,1,4,204,24,204,42,204,204,2,27,207,204,9,143,207,11,2,1,207,10,0,143,207,38,2,141,204,38,2,27,207,204,10,143,207,87,1,141,204,11,2,25,207,204,1,143,207,88,1,141,207,86,1,141,204,87,1,48,207,207,204,128,108,0,0,141,204,88,1,0,207,204,0,143,207,12,2,119,0,10,0,141,204,88,1,0,207,204,0,143,207,11,2,141,204,87,1,0,207,204,0,143,207,38,2,119,0,236,255,1,207,0,0,143,207,12,2,141,204,107,2,39,204,204,32,33,204,204,102,141,203,12,2,1,206,0,0,125,207,204,203,206,0,0,0,143,207,90,1,141,206,90,1,4,206,41,206,33,203,41,0,141,204,107,2,39,204,204,32,32,204,204,103,19,203,203,204,41,203,203,31,42,203,203,31,3,207,206,203,143,207,91,1,141,203,125,2,0,207,203,0,143,207,92,1,141,207,91,1,141,203,92,1,4,203,203,24,42,203,203,2,27,203,203,9,26,203,203,9,47,207,207,203,76,115,0,0,141,203,91,1,1,206,0,36,3,203,203,206,28,203,203,9,38,203,203,255,1,206,255,3,4,203,203,206,41,203,203,2,3,207,24,203,143,207,93,1,141,207,91,1,1,203,0,36,3,207,207,203,30,207,207,9,38,207,207,255,25,207,207,1,34,207,207,9,121,207,30,0,1,207,10,0,143,207,42,2,141,203,91,1,1,206,0,36,3,203,203,206,30,203,203,9,38,203,203,255,25,207,203,1,143,207,53,2,141,203,42,2,27,207,203,10,143,207,94,1,141,203,53,2,25,207,203,1,143,207,52,2,141,207,52,2,32,207,207,9,121,207,5,0,141,203,94,1,0,207,203,0,143,207,41,2,119,0,10,0,141,203,94,1,0,207,203,0,143,207,42,2,141,203,52,2,0,207,203,0,143,207,53,2,119,0,237,255,1,207,10,0,143,207,41,2,141,203,93,1,1,206,4,0,1,204,0,0,134,207,0,0,24,55,6,0,203,206,204,0,143,207,95,1,141,204,95,1,141,206,41,2,9,204,204,206,38,204,204,255,0,207,204,0,143,207,96,1,141,207,96,1,32,207,207,0,121,207,28,0,141,204,91,1,1,206,0,36,3,204,204,206,28,204,204,9,38,204,204,255,1,206,254,3,4,204,204,206,41,204,204,2,3,204,24,204,141,206,125,2,13,207,204,206,143,207,97,1,141,207,97,1,121,207,11,0,141,206,242,1,0,207,206,0,143,207,247,1,141,206,93,1,0,207,206,0,143,207,7,2,141,206,12,2,0,207,206,0,143,207,14,2,119,0,6,0,1,207,163,0,143,207,132,2,119,0,3,0,1,207,163,0,143,207,132,2,141,207,132,2,1,206,163,0,45,207,207,206,248,114,0,0,1,207,0,0,143,207,132,2,141,206,95,1,141,204,41,2,7,206,206,204,38,206,206,255,0,207,206,0,143,207,98,1,141,206,98,1,38,206,206,1,32,206,206,0,121,206,5,0,61,206,0,0,0,0,0,90,58,207,206,0,119,0,5,0,62,206,0,0,1,0,0,0,0,0,64,67,58,207,206,0,58,17,207,0,141,206,41,2,28,206,206,2,38,206,206,255,0,207,206,0,143,207,99,1,141,207,96,1,141,206,99,1,48,207,207,206,44,111,0,0,61,207,0,0,0,0,0,63,144,207,99,2,119,0,25,0,141,207,96,1,141,206,99,1,45,207,207,206,128,111,0,0,141,206,91,1,1,204,0,36,3,206,206,204,28,206,206,9,38,206,206,255,1,204,254,3,4,206,206,204,41,206,206,2,3,206,24,206,141,204,125,2,13,207,206,204,143,207,101,1,141,207,101,1,121,207,4,0,59,207,1,0,144,207,99,2,119,0,4,0,61,207,0,0,0,0,192,63,144,207,99,2,141,204,75,2,32,207,204,0,143,207,102,1,141,207,102,1,121,207,7,0,58,207,17,0,144,207,87,2,142,204,99,2,58,207,204,0,144,207,100,2,119,0,28,0,141,204,81,2,42,204,204,0,1,206,1,0,1,203,0,0,134,207,0,0,24,55,6,0,204,206,203,0,143,207,103,1,141,207,103,1,41,207,207,24,42,207,207,24,32,207,207,45,120,207,7,0,58,207,17,0,144,207,87,2,142,203,99,2,58,207,203,0,144,207,100,2,119,0,9,0,142,203,99,2,68,207,203,0,144,207,104,1,68,207,17,0,144,207,87,2,142,203,104,1,58,207,203,0,144,207,100,2,141,203,93,1,141,206,95,1,141,204,96,1,4,206,206,204,1,204,4,0,134,207,0,0,116,78,6,0,203,206,204,0,142,204,87,2,142,206,100,2,63,207,204,206,144,207,105,1,142,206,105,1,142,204,87,2,70,207,206,204,143,207,107,1,141,207,107,1,120,207,11,0,141,204,242,1,0,207,204,0,143,207,247,1,141,204,93,1,0,207,204,0,143,207,7,2,141,204,12,2,0,207,204,0,143,207,14,2,119,0,154,0,141,204,95,1,141,206,96,1,4,204,204,206,141,206,41,2,3,207,204,206,143,207,108,1,141,206,93,1,141,204,108,1,1,203,4,0,134,207,0,0,116,78,6,0,206,204,203,0,2,207,0,0,255,201,154,59,141,203,108,1,48,207,207,203,244,113,0,0,141,203,242,1,0,207,203,0,143,207,245,1,141,203,93,1,0,207,203,0,143,207,6,2,141,203,6,2,26,207,203,4,143,207,109,1,141,203,6,2,1,204,0,0,1,206,4,0,134,207,0,0,116,78,6,0,203,204,206,0,141,206,109,1,141,204,245,1,16,207,206,204,143,207,110,1,141,207,110,1,121,207,14,0,141,204,245,1,26,207,204,4,143,207,111,1,141,204,111,1,1,206,0,0,1,203,4,0,134,207,0,0,116,78,6,0,204,206,203,0,141,203,111,1,0,207,203,0,143,207,246,1,119,0,4,0,141,203,245,1,0,207,203,0,143,207,246,1,141,203,109,1,1,206,4,0,1,204,0,0,134,207,0,0,24,55,6,0,203,206,204,0,143,207,112,1,141,204,109,1,141,206,112,1,25,206,206,1,1,203,4,0,134,207,0,0,116,78,6,0,204,206,203,0,2,207,0,0,255,201,154,59,141,203,112,1,25,203,203,1,48,207,207,203,216,113,0,0,141,203,246,1,0,207,203,0,143,207,245,1,141,203,109,1,0,207,203,0,143,207,6,2,119,0,199,255,141,203,246,1,0,207,203,0,143,207,244,1,141,203,109,1,0,207,203,0,143,207,5,2,119,0,7,0,141,203,242,1,0,207,203,0,143,207,244,1,141,203,93,1,0,207,203,0,143,207,5,2,141,203,244,1,0,207,203,0,143,207,113,1,141,203,244,1,1,206,4,0,1,204,0,0,134,207,0,0,24,55,6,0,203,206,204,0,143,207,115,1,141,207,115,1,35,207,207,10,121,207,13,0,141,204,244,1,0,207,204,0,143,207,247,1,141,204,5,2,0,207,204,0,143,207,7,2,141,204,113,1,4,204,24,204,42,204,204,2,27,207,204,9,143,207,14,2,119,0,35,0,141,204,113,1,4,204,24,204,42,204,204,2,27,207,204,9,143,207,13,2,1,207,10,0,143,207,46,2,141,204,46,2,27,207,204,10,143,207,116,1,141,204,13,2,25,207,204,1,143,207,117,1,141,207,115,1,141,204,116,1,48,207,207,204,220,114,0,0,141,204,244,1,0,207,204,0,143,207,247,1,141,204,5,2,0,207,204,0,143,207,7,2,141,204,117,1,0,207,204,0,143,207,14,2,119,0,8,0,141,204,117,1,0,207,204,0,143,207,13,2,141,204,116,1,0,207,204,0,143,207,46,2,119,0,230,255,141,204,7,2,25,207,204,4,143,207,118,1,141,204,118,1,141,206,125,2,16,207,204,206,143,207,119,1,141,207,119,1,141,206,118,1,141,204,125,2,125,50,207,206,204,0,0,0,141,206,247,1,0,204,206,0,143,204,248,1,141,206,14,2,0,204,206,0,143,204,15,2,0,204,50,0,143,204,131,2,119,0,10,0,141,206,242,1,0,204,206,0,143,204,248,1,141,206,12,2,0,204,206,0,143,204,15,2,141,206,125,2,0,204,206,0,143,204,131,2,1,206,0,0,141,207,15,2,4,204,206,207,143,204,120,1,141,207,131,2,0,204,207,0,143,204,129,2,141,207,248,1,141,206,129,2,16,204,207,206,143,204,121,1,141,204,121,1,120,204,6,0,1,37,0,0,141,206,129,2,0,204,206,0,143,204,130,2,119,0,23,0,141,206,129,2,26,204,206,4,143,204,122,1,141,206,122,1,1,207,4,0,1,203,0,0,134,204,0,0,24,55,6,0,206,207,203,0,143,204,123,1,141,204,123,1,32,204,204,0,121,204,5,0,141,203,122,1,0,204,203,0,143,204,129,2,119,0,229,255,1,37,1,0,141,203,129,2,0,204,203,0,143,204,130,2,119,0,1,0,141,204,107,2,39,204,204,32,32,204,204,103,121,204,152,0,33,204,41,0,38,204,204,1,40,204,204,1,3,38,204,41,141,203,15,2,15,204,203,38,143,204,124,1,1,203,251,255,141,207,15,2,15,204,203,207,143,204,125,1,141,204,124,1,141,207,125,1,19,204,204,207,121,204,10,0,26,207,38,1,141,203,15,2,4,204,207,203,143,204,126,1,141,204,107,2,26,11,204,1,141,204,126,1,0,21,204,0,119,0,4,0,141,204,107,2,26,11,204,2,26,21,38,1,141,204,23,2,38,204,204,8,32,204,204,0,120,204,7,0,0,15,11,0,0,25,21,0,141,204,23,2,38,204,204,8,0,47,204,0,119,0,121,0,121,37,53,0,141,203,130,2,26,204,203,4,143,204,127,1,141,203,127,1,1,207,4,0,1,206,0,0,134,204,0,0,24,55,6,0,203,207,206,0,143,204,128,1,141,204,128,1,32,204,204,0,121,204,4,0,1,204,9,0,143,204,55,2,119,0,39,0,141,204,128,1,31,204,204,10,38,204,204,255,32,204,204,0,121,204,6,0,1,204,10,0,143,204,48,2,1,204,0,0,143,204,54,2,119,0,4,0,1,204,0,0,143,204,55,2,119,0,26,0,141,206,48,2,27,204,206,10,143,204,129,1,141,206,54,2,25,204,206,1,143,204,130,1,141,204,128,1,141,206,129,1,9,204,204,206,38,204,204,255,32,204,204,0,121,204,8,0,141,206,129,1,0,204,206,0,143,204,48,2,141,206,130,1,0,204,206,0,143,204,54,2,119,0,238,255,141,206,130,1,0,204,206,0,143,204,55,2,119,0,3,0,1,204,9,0,143,204,55,2,39,206,11,32,0,204,206,0,143,204,131,1,141,206,130,2,0,204,206,0,143,204,132,1,141,204,131,1,32,204,204,102,121,204,24,0,141,206,132,1,4,206,206,24,42,206,206,2,27,206,206,9,26,206,206,9,141,207,55,2,4,204,206,207,143,204,134,1,141,204,134,1,34,204,204,0,1,207,0,0,141,206,134,1,125,18,204,207,206,0,0,0,15,206,21,18,143,206,135,1,141,206,135,1,125,19,206,21,18,0,0,0,0,15,11,0,0,25,19,0,1,47,0,0,119,0,34,0,141,207,132,1,4,207,207,24,42,207,207,2,27,207,207,9,26,207,207,9,141,204,15,2,3,206,207,204,143,206,136,1,141,204,136,1,141,207,55,2,4,206,204,207,143,206,137,1,141,206,137,1,34,206,206,0,1,207,0,0,141,204,137,1,125,22,206,207,204,0,0,0,15,204,21,22,143,204,138,1,141,204,138,1,125,20,204,21,22,0,0,0,0,15,11,0,0,25,20,0,1,47,0,0,119,0,7,0,141,204,107,2,0,15,204,0,0,25,41,0,141,204,23,2,38,204,204,8,0,47,204,0,20,207,25,47,0,204,207,0,143,204,139,1,39,207,15,32,0,204,207,0,143,204,141,1,141,204,141,1,32,204,204,102,121,204,16,0,1,207,0,0,141,206,15,2,15,204,207,206,143,204,142,1,141,206,142,1,141,207,15,2,1,203,0,0,125,204,206,207,203,0,0,0,143,204,143,1,141,204,143,1,0,42,204,0,1,204,0,0,143,204,19,2,119,0,95,0,141,203,15,2,34,204,203,0,143,204,144,1,141,203,144,1,141,207,120,1,141,206,15,2,125,204,203,207,206,0,0,0,143,204,145,1,141,206,145,1,141,207,145,1,34,207,207,0,41,207,207,31,42,207,207,31,141,203,133,2,1,208,64,2,3,203,203,208,25,203,203,12,134,204,0,0,100,33,5,0,206,207,203,0,143,204,146,1,141,204,222,1,141,203,146,1,4,204,204,203,34,204,204,2,121,204,27,0,141,203,146,1,0,204,203,0,143,204,18,2,141,203,18,2,26,204,203,1,143,204,148,1,141,203,148,1,42,203,203,0,1,207,48,0,1,206,1,0,134,204,0,0,116,78,6,0,203,207,206,0,141,204,222,1,141,206,148,1,4,204,204,206,34,204,204,2,121,204,5,0,141,206,148,1,0,204,206,0,143,204,18,2,119,0,238,255,141,206,148,1,0,204,206,0,143,204,17,2,119,0,4,0,141,206,146,1,0,204,206,0,143,204,17,2,141,206,15,2,42,206,206,31,0,204,206,0,143,204,149,1,141,206,17,2,26,204,206,1,143,204,151,1,141,206,151,1,42,206,206,0,141,207,149,1,38,207,207,2], eb + 20480);
  HEAPU8.set([25,207,207,43,1,203,255,0,19,207,207,203,1,203,1,0,134,204,0,0,116,78,6,0,206,207,203,0,1,203,255,0,19,203,15,203,0,204,203,0,143,204,152,1,141,203,17,2,26,204,203,2,143,204,153,1,141,203,153,1,42,203,203,0,141,207,152,1,1,206,1,0,134,204,0,0,116,78,6,0,203,207,206,0,141,204,222,1,141,206,153,1,4,42,204,206,141,204,153,1,0,206,204,0,143,206,19,2,141,204,75,2,25,206,204,1,143,206,154,1,141,204,154,1,3,206,204,25,143,206,155,1,141,204,155,1,141,207,139,1,33,207,207,0,38,207,207,1,3,204,204,207,3,206,204,42,143,206,156,1,1,204,32,0,141,207,111,2,141,203,156,1,141,208,23,2,134,206,0,0,104,67,5,0,0,204,207,203,208,0,0,0,1,208,4,0,1,203,0,0,134,206,0,0,24,55,6,0,0,208,203,0,143,206,157,1,141,206,157,1,38,206,206,32,32,206,206,0,121,206,6,0,141,203,81,2,141,208,75,2,134,206,0,0,192,117,4,0,203,208,0,0,1,208,48,0,141,203,111,2,141,207,156,1,141,204,23,2,2,209,0,0,0,0,1,0,21,204,204,209,134,206,0,0,104,67,5,0,0,208,203,207,204,0,0,0,141,206,141,1,32,206,206,102,121,206,1,1,141,204,248,1,16,206,24,204,143,206,158,1,141,204,158,1,141,207,248,1,125,206,204,24,207,0,0,0,143,206,84,2,141,207,84,2,0,206,207,0,143,206,8,2,141,207,8,2,1,204,4,0,1,203,0,0,134,206,0,0,24,55,6,0,207,204,203,0,143,206,159,1,141,203,159,1,1,204,0,0,134,206,0,0,100,33,5,0,203,204,68,0,143,206,160,1,141,204,8,2,141,203,84,2,13,206,204,203,143,206,161,1,141,206,161,1,121,206,22,0,141,206,160,1,52,206,206,68,200,121,0,0,141,203,160,1,0,206,203,0,143,206,93,2,119,0,51,0,141,203,133,2,3,203,203,200,25,203,203,8,42,203,203,0,1,204,48,0,1,207,1,0,134,206,0,0,116,78,6,0,203,204,207,0,141,207,133,2,3,207,207,200,25,206,207,8,143,206,93,2,119,0,37,0,141,206,133,2,3,206,206,200,141,207,160,1,48,206,206,207,36,122,0,0,141,207,160,1,0,206,207,0,143,206,92,2,119,0,5,0,141,207,160,1,0,206,207,0,143,206,93,2,119,0,24,0,141,207,92,2,26,206,207,1,143,206,162,1,141,207,162,1,42,207,207,0,1,204,48,0,1,203,1,0,134,206,0,0,116,78,6,0,207,204,203,0,141,206,133,2,3,206,206,200,141,203,162,1,48,206,206,203,128,122,0,0,141,203,162,1,0,206,203,0,143,206,92,2,119,0,238,255,141,203,162,1,0,206,203,0,143,206,93,2,119,0,1,0,1,203,4,0,1,204,0,0,134,206,0,0,24,55,6,0,0,203,204,0,143,206,164,1,141,206,164,1,38,206,206,32,32,206,206,0,121,206,10,0,141,204,93,2,0,206,204,0,143,206,165,1,141,204,93,2,141,203,165,1,4,203,68,203,134,206,0,0,192,117,4,0,204,203,0,0,141,203,8,2,25,206,203,4,143,206,166,1,141,206,166,1,55,206,24,206,4,123,0,0,141,203,166,1,0,206,203,0,143,206,8,2,119,0,152,255,141,206,139,1,32,206,206,0,120,206,16,0,1,203,4,0,1,204,0,0,134,206,0,0,24,55,6,0,0,203,204,0,143,206,167,1,141,206,167,1,38,206,206,32,32,206,206,0,120,206,2,0,119,0,5,0,1,204,1,0,134,206,0,0,192,117,4,0,202,204,0,0,141,204,166,1,141,203,130,2,16,206,204,203,143,206,169,1,1,203,0,0,15,206,203,25,143,206,170,1,141,206,170,1,141,203,169,1,19,206,206,203,121,206,100,0,0,28,25,0,141,203,166,1,0,206,203,0,143,206,9,2,141,203,9,2,1,204,4,0,1,207,0,0,134,206,0,0,24,55,6,0,203,204,207,0,143,206,171,1,141,207,171,1,1,204,0,0,134,206,0,0,100,33,5,0,207,204,68,0,143,206,172,1,141,206,133,2,3,206,206,200,141,204,172,1,48,206,206,204,56,124,0,0,141,204,172,1,0,206,204,0,143,206,95,2,141,204,95,2,26,206,204,1,143,206,173,1,141,204,173,1,42,204,204,0,1,207,48,0,1,203,1,0,134,206,0,0,116,78,6,0,204,207,203,0,141,206,133,2,3,206,206,200,141,203,173,1,48,206,206,203,40,124,0,0,141,203,173,1,0,206,203,0,143,206,95,2,119,0,238,255,141,203,173,1,0,206,203,0,143,206,94,2,119,0,4,0,141,203,172,1,0,206,203,0,143,206,94,2,1,203,4,0,1,207,0,0,134,206,0,0,24,55,6,0,0,203,207,0,143,206,174,1,141,206,174,1,38,206,206,32,32,206,206,0,121,206,14,0,1,207,9,0,15,206,207,28,143,206,175,1,141,207,175,1,1,203,9,0,125,206,207,203,28,0,0,0,143,206,176,1,141,203,94,2,141,207,176,1,134,206,0,0,192,117,4,0,203,207,0,0,141,207,9,2,25,206,207,4,143,206,177,1,26,206,28,9,143,206,178,1,141,207,177,1,141,203,130,2,16,206,207,203,143,206,179,1,1,203,9,0,15,206,203,28,143,206,180,1,141,206,180,1,141,203,179,1,19,206,206,203,121,206,7,0,141,206,178,1,0,28,206,0,141,203,177,1,0,206,203,0,143,206,9,2,119,0,165,255,141,206,178,1,0,27,206,0,119,0,2,0,0,27,25,0,25,206,27,9,143,206,181,1,1,203,48,0,141,207,181,1,1,204,9,0,1,208,0,0,134,206,0,0,104,67,5,0,0,203,207,204,208,0,0,0,119,0,234,0,141,208,248,1,25,206,208,4,143,206,182,1,141,208,130,2,141,204,182,1,125,206,37,208,204,0,0,0,143,206,128,2,1,204,255,255,15,206,204,25,143,206,183,1,141,206,183,1,121,206,189,0,32,206,47,0,143,206,184,1,0,31,25,0,141,204,248,1,0,206,204,0,143,206,10,2,141,204,10,2,1,208,4,0,1,207,0,0,134,206,0,0,24,55,6,0,204,208,207,0,143,206,185,1,141,207,185,1,1,208,0,0,134,206,0,0,100,33,5,0,207,208,68,0,143,206,186,1,141,206,186,1,45,206,206,68,248,125,0,0,141,208,133,2,3,208,208,200,25,208,208,8,42,208,208,0,1,207,48,0,1,204,1,0,134,206,0,0,116,78,6,0,208,207,204,0,141,204,133,2,3,204,204,200,25,206,204,8,143,206,96,2,119,0,4,0,141,204,186,1,0,206,204,0,143,206,96,2,141,204,10,2,141,207,248,1,13,206,204,207,143,206,187,1,141,206,187,1,121,206,51,0,141,207,96,2,25,206,207,1,143,206,191,1,1,207,4,0,1,204,0,0,134,206,0,0,24,55,6,0,0,207,204,0,143,206,192,1,141,206,192,1,38,206,206,32,32,206,206,0,121,206,6,0,141,204,96,2,1,207,1,0,134,206,0,0,192,117,4,0,204,207,0,0,34,206,31,1,143,206,193,1,141,206,184,1,141,207,193,1,19,206,206,207,121,206,5,0,141,207,191,1,0,206,207,0,143,206,98,2,119,0,61,0,1,207,4,0,1,204,0,0,134,206,0,0,24,55,6,0,0,207,204,0,143,206,194,1,141,206,194,1,38,206,206,32,32,206,206,0,120,206,5,0,141,204,191,1,0,206,204,0,143,206,98,2,119,0,47,0,1,204,1,0,134,206,0,0,192,117,4,0,202,204,0,0,141,204,191,1,0,206,204,0,143,206,98,2,119,0,39,0,141,204,133,2,3,204,204,200,141,207,96,2,16,206,204,207,143,206,188,1,141,206,188,1,121,206,5,0,141,207,96,2,0,206,207,0,143,206,97,2,119,0,5,0,141,207,96,2,0,206,207,0,143,206,98,2,119,0,24,0,141,207,97,2,26,206,207,1,143,206,189,1,141,207,189,1,42,207,207,0,1,204,48,0,1,208,1,0,134,206,0,0,116,78,6,0,207,204,208,0,141,206,133,2,3,206,206,200,141,208,189,1,48,206,206,208,108,127,0,0,141,208,189,1,0,206,208,0,143,206,97,2,119,0,238,255,141,208,189,1,0,206,208,0,143,206,98,2,119,0,1,0,141,208,98,2,0,206,208,0,143,206,195,1,1,208,4,0,1,204,0,0,134,206,0,0,24,55,6,0,0,208,204,0,143,206,196,1,141,206,196,1,38,206,206,32,32,206,206,0,121,206,19,0,141,204,195,1,4,204,68,204,15,206,204,31,143,206,197,1,141,208,197,1,121,208,5,0,141,208,195,1,4,208,68,208,0,204,208,0,119,0,2,0,0,204,31,0,0,206,204,0,143,206,198,1,141,204,98,2,141,208,198,1,134,206,0,0,192,117,4,0,204,208,0,0,141,208,195,1,4,208,68,208,4,206,31,208,143,206,199,1,141,208,10,2,25,206,208,4,143,206,200,1,141,206,200,1,141,208,128,2,16,206,206,208,1,208,255,255,141,204,199,1,15,208,208,204,19,206,206,208,121,206,7,0,141,206,199,1,0,31,206,0,141,208,200,1,0,206,208,0,143,206,10,2,119,0,78,255,141,206,199,1,0,29,206,0,119,0,2,0,0,29,25,0,25,206,29,18,143,206,201,1,1,208,48,0,141,204,201,1,1,207,18,0,1,203,0,0,134,206,0,0,104,67,5,0,0,208,204,207,203,0,0,0,1,203,4,0,1,207,0,0,134,206,0,0,24,55,6,0,0,203,207,0,143,206,202,1,141,206,202,1,38,206,206,32,32,206,206,0,120,206,2,0,119,0,11,0,141,207,19,2,0,206,207,0,143,206,203,1,141,207,19,2,141,203,222,1,141,204,203,1,4,203,203,204,134,206,0,0,192,117,4,0,207,203,0,0,1,203,32,0,141,207,111,2,141,204,156,1,141,208,23,2,1,209,0,32,21,208,208,209,134,206,0,0,104,67,5,0,0,203,207,204,208,0,0,0,141,208,156,1,141,204,111,2,15,206,208,204,143,206,204,1,141,204,204,1,141,208,111,2,141,207,156,1,125,206,204,208,207,0,0,0,143,206,113,2,141,206,113,2,0,8,206,0,119,0,104,0,141,206,107,2,38,206,206,32,33,206,206,0,2,207,0,0,141,92,1,0,2,208,0,0,145,92,1,0,125,195,206,207,208,0,0,0,70,208,13,13,59,207,0,0,59,206,0,0,70,207,207,206,20,208,208,207,0,196,208,0,141,208,107,2,38,208,208,32,33,208,208,0,2,207,0,0,149,92,1,0,2,206,0,0,153,92,1,0,125,198,208,207,206,0,0,0,1,207,0,0,141,208,75,2,125,206,196,207,208,0,0,0,143,206,77,2,125,206,196,198,195,0,0,0,143,206,91,2,1,208,32,0,141,207,111,2,141,204,77,2,25,204,204,3,134,206,0,0,104,67,5,0,0,208,207,204,89,0,0,0,1,206,4,0,1,204,0,0,134,199,0,0,24,55,6,0,0,206,204,0,38,204,199,32,32,204,204,0,121,204,14,0,141,206,81,2,141,207,77,2,134,204,0,0,192,117,4,0,206,207,0,0,1,204,4,0,1,207,0,0,134,46,0,0,24,55,6,0,0,204,207,0,0,207,46,0,143,207,1,1,119,0,3,0,0,207,199,0,143,207,1,1,141,204,1,1,38,204,204,32,0,207,204,0,143,207,0,1,141,207,0,1,32,207,207,0,121,207,6,0,141,204,91,2,1,206,3,0,134,207,0,0,192,117,4,0,204,206,0,0,1,206,32,0,141,204,111,2,141,208,77,2,25,208,208,3,141,203,23,2,1,209,0,32,21,203,203,209,134,207,0,0,104,67,5,0,0,206,204,208,203,0,0,0,141,203,77,2,25,203,203,3,141,208,111,2,15,207,203,208,143,207,2,1,141,203,2,1,121,203,4,0,141,203,111,2,0,208,203,0,119,0,4,0,141,203,77,2,25,203,203,3,0,208,203,0,0,207,208,0,143,207,4,1,141,207,4,1,0,8,207,0,141,208,255,1,0,207,208,0,143,207,254,1,0,207,77,0,143,207,30,2,0,207,8,0,143,207,56,2,141,208,65,2,0,207,208,0,143,207,60,2,119,0,205,240,119,0,240,245,119,0,239,245,119,0,160,245,134,157,0,0,4,85,6,0,1,206,4,0,1,207,0,0,134,158,0,0,24,55,6,0,157,206,207,0,134,159,0,0,104,133,5,0,158,0,0,0,0,207,159,0,143,207,237,1,1,207,82,0,143,207,132,2,119,0,114,1,141,204,102,2,1,207,0,0,1,206,8,0,138,204,207,206,160,131,0,0,248,131,0,0,80,132,0,0,204,132,0,0,52,133,0,0,116,131,0,0,156,133,0,0,244,133,0,0,141,206,255,1,0,207,206,0,143,207,254,1,0,207,77,0,143,207,30,2,4,207,162,167,143,207,56,2,141,206,65,2,0,207,206,0,143,207,60,2,119,0,164,240,141,203,133,2,1,206,4,0,1,207,0,0,134,93,0,0,24,55,6,0,203,206,207,0,141,206,255,1,1,203,4,0,134,207,0,0,116,78,6,0,93,206,203,0,141,203,255,1,0,207,203,0,143,207,254,1,0,207,77,0,143,207,30,2,4,207,162,167,143,207,56,2,141,203,65,2,0,207,203,0,143,207,60,2,119,0,142,240,141,207,133,2,1,203,4,0,1,206,0,0,134,94,0,0,24,55,6,0,207,203,206,0,141,203,255,1,1,207,4,0,134,206,0,0,116,78,6,0,94,203,207,0,141,207,255,1,0,206,207,0,143,206,254,1,0,206,77,0,143,206,30,2,4,206,162,167,143,206,56,2,141,207,65,2,0,206,207,0,143,206,60,2,119,0,120,240,141,206,255,1,34,95,206,0,141,206,133,2,1,207,4,0,1,203,0,0,134,96,0,0,24,55,6,0,206,207,203,0,141,207,255,1,1,206,4,0,134,203,0,0,116,78,6,0,96,207,206,0,25,206,96,4,41,207,95,31,42,207,207,31,1,208,4,0,134,203,0,0,116,78,6,0,206,207,208,0,141,208,255,1,0,203,208,0,143,203,254,1,0,203,77,0,143,203,30,2,4,203,162,167,143,203,56,2,141,208,65,2,0,203,208,0,143,203,60,2,119,0,89,240,141,203,255,1,2,208,0,0,255,255,0,0,19,203,203,208,0,98,203,0,141,203,133,2,1,208,4,0,1,207,0,0,134,99,0,0,24,55,6,0,203,208,207,0,1,208,2,0,134,207,0,0,116,78,6,0,99,98,208,0,141,208,255,1,0,207,208,0,143,207,254,1,0,207,77,0,143,207,30,2,4,207,162,167,143,207,56,2,141,208,65,2,0,207,208,0,143,207,60,2,119,0,63,240,141,207,255,1,1,208,255,0,19,207,207,208,0,100,207,0,141,207,133,2,1,208,4,0,1,203,0,0,134,101,0,0,24,55,6,0,207,208,203,0,42,208,101,0,1,207,1,0,134,203,0,0,116,78,6,0,208,100,207,0,141,207,255,1,0,203,207,0,143,203,254,1,0,203,77,0,143,203,30,2,4,203,162,167,143,203,56,2,141,207,65,2,0,203,207,0,143,203,60,2,119,0,37,240,141,203,133,2,1,207,4,0,1,208,0,0,134,102,0,0,24,55,6,0,203,207,208,0,141,207,255,1,1,203,4,0,134,208,0,0,116,78,6,0,102,207,203,0,141,203,255,1,0,208,203,0,143,208,254,1,0,208,77,0,143,208,30,2,4,208,162,167,143,208,56,2,141,203,65,2,0,208,203,0,143,208,60,2,119,0,15,240,141,208,255,1,34,103,208,0,141,208,133,2,1,203,4,0,1,207,0,0,134,104,0,0,24,55,6,0,208,203,207,0,141,203,255,1,1,208,4,0,134,207,0,0,116,78,6,0,104,203,208,0,25,208,104,4,41,203,103,31,42,203,203,31,1,206,4,0,134,207,0,0,116,78,6,0,208,203,206,0,141,206,255,1,0,207,206,0,143,207,254,1,0,207,77,0,143,207,30,2,4,207,162,167,143,207,56,2,141,206,65,2,0,207,206,0,143,207,60,2,119,0,240,239,141,204,133,2,1,207,4,0,1,206,0,0,134,125,0,0,24,55,6,0,204,207,206,0,141,206,133,2,25,206,206,4,1,207,4,0,1,204,0,0,134,126,0,0,24,55,6,0,206,207,204,0,32,204,125,0,32,207,126,0,19,204,204,207,121,204,3,0,0,9,52,0,119,0,30,0,0,12,52,0,0,129,125,0,0,131,126,0,38,204,129,7,0,128,204,0,26,130,12,1,42,207,130,0,39,206,128,48,1,203,255,0,19,206,206,203,1,203,1,0,134,204,0,0,116,78,6,0,207,206,203,0,1,204,3,0,135,132,3,0,129,131,204,0,128,204,0,0,0,133,204,0,32,204,132,0,32,203,133,0,19,204,204,203,121,204,3,0,0,9,130,0,119,0,5,0,0,12,130,0,0,129,132,0,0,131,133,0,119,0,231,255,141,204,23,2,38,204,204,8,32,204,204,0,121,204,17,0,0,204,9,0,143,204,236,1,141,203,23,2,0,204,203,0,143,204,25,2,141,203,67,2,0,204,203,0,143,204,69,2,1,204,0,0,143,204,76,2,2,204,0,0,105,92,1,0,143,204,82,2,1,204,77,0,143,204,132,2,119,0,99,0,0,135,9,0,141,204,67,2,4,203,52,135,25,203,203,1,15,136,204,203,121,136,5,0,4,204,52,135,25,204,204,1,0,203,204,0,119,0,3,0,141,204,67,2,0,203,204,0,0,39,203,0,0,203,9,0,143,203,236,1,141,204,23,2,0,203,204,0,143,203,25,2,0,203,39,0,143,203,69,2,1,203,0,0,143,203,76,2,2,203,0,0,105,92,1,0,143,203,82,2,1,203,77,0,143,203,132,2,119,0,71,0,1,204,8,0,141,207,67,2,16,106,204,207,141,207,67,2,1,204,8,0,125,107,106,207,204,0,0,0,141,207,23,2,39,207,207,8,0,204,207,0,143,204,24,2,0,204,107,0,143,204,68,2,1,204,120,0,143,204,108,2,1,204,64,0,143,204,132,2,119,0,53,0,141,207,133,2,1,206,4,0,1,204,0,0,134,160,0,0,24,55,6,0,207,206,204,0,1,204,0,0,14,204,160,204,2,206,0,0,115,92,1,0,125,161,204,160,206,0,0,0,0,206,161,0,143,206,237,1,1,206,82,0,143,206,132,2,119,0,36,0,141,206,133,2,1,203,4,0,1,204,0,0,134,90,0,0,24,55,6,0,206,203,204,0,141,204,133,2,25,204,204,4,1,203,4,0,1,206,0,0,134,92,0,0,24,55,6,0,204,203,206,0,0,142,90,0,0,143,92,0,1,206,0,0,143,206,74,2,2,206,0,0,105,92,1,0,143,206,79,2,1,206,76,0,143,206,132,2,119,0,13,0,141,207,23,2,0,204,207,0,143,204,24,2,141,207,67,2,0,204,207,0,143,204,68,2,141,207,107,2,0,204,207,0,143,204,108,2,1,204,64,0,143,204,132,2,119,0,1,0,141,205,132,2,32,205,205,64,121,205,135,0,1,205,0,0,143,205,132,2,141,205,133,2,1,207,4,0,1,208,0,0,134,108,0,0,24,55,6,0,205,207,208,0,141,208,133,2,25,208,208,4,1,207,4,0,1,205,0,0,134,110,0,0,24,55,6,0,208,207,205,0,141,205,108,2,38,205,205,32,0,111,205,0,32,205,108,0,32,207,110,0,19,205,205,207,121,205,17,0,0,205,52,0,143,205,236,1,141,207,24,2,0,205,207,0,143,205,25,2,141,207,68,2,0,205,207,0,143,205,69,2,1,205,0,0,143,205,76,2,2,205,0,0,105,92,1,0,143,205,82,2,1,205,77,0,143,205,132,2,119,0,76,1,0,10,52,0,0,113,108,0,0,116,110,0,38,205,113,15,0,112,205,0,2,205,0,0,89,92,1,0,3,205,205,112,42,205,205,0,1,207,1,0,1,208,0,0,134,114,0,0,24,55,6,0,205,207,208,0,26,115,10,1,42,207,115,0,1,205,255,0,19,205,114,205,20,205,205,111,1,203,255,0,19,205,205,203,1,203,1,0,134,208,0,0,116,78,6,0,207,205,203,0,1,208,4,0,135,117,3,0,113,116,208,0,128,208,0,0,0,118,208,0,32,208,117,0,32,203,118,0,19,208,208,203,120,208,5,0,0,10,115,0,0,113,117,0,0,116,118,0,119,0,222,255,141,208,133,2,1,203,4,0,1,205,0,0,134,120,0,0,24,55,6,0,208,203,205,0,141,205,133,2,25,205,205,4,1,203,4,0,1,208,0,0,134,121,0,0,24,55,6,0,205,203,208,0,141,208,24,2,38,208,208,8,0,122,208,0,32,208,122,0,32,203,120,0,32,205,121,0,19,203,203,205,20,208,208,203,121,208,17,0,0,208,115,0,143,208,236,1,141,203,24,2,0,208,203,0,143,208,25,2,141,203,68,2,0,208,203,0,143,208,69,2,1,208,0,0,143,208,76,2,2,208,0,0,105,92,1,0,143,208,82,2,1,208,77,0,143,208,132,2,119,0,0,1,141,208,108,2,42,208,208,4,0,124,208,0,0,208,115,0,143,208,236,1,141,203,24,2,0,208,203,0,143,208,25,2,141,203,68,2,0,208,203,0,143,208,69,2,1,208,2,0,143,208,76,2,2,203,0,0,105,92,1,0,3,208,203,124,143,208,82,2,1,208,77,0,143,208,132,2,119,0,236,0,141,208,132,2,32,208,208,76,121,208,23,0,1,208,0,0,143,208,132,2,134,144,0,0,100,33,5,0,142,143,52,0,0,208,144,0,143,208,236,1,141,203,23,2,0,208,203,0,143,208,25,2,141,203,67,2,0,208,203,0,143,208,69,2,141,203,74,2,0,208,203,0,143,208,76,2,141,203,79,2,0,208,203,0,143,208,82,2,1,208,77,0,143,208,132,2,119,0,211,0,141,208,132,2,32,208,208,82,121,208,46,0,1,208,0,0,143,208,132,2,141,208,237,1,1,203,0,0,141,205,67,2,134,163,0,0,232,220,3,0,208,203,205,0,141,205,237,1,0,164,205,0,141,205,237,1,141,203,67,2,3,165,205,203,1,205,0,0,13,205,163,205,125,203,205,165,163,0,0,0,143,203,119,2,1,208,0,0,45,208,163,208,252,139,0,0,141,208,67,2,0,205,208,0,119,0,3,0,4,208,163,164,0,205,208,0,0,203,205,0,143,203,71,2,141,205,237,1,0,203,205,0,143,203,240,1,0,203,89,0,143,203,26,2,141,205,71,2,0,203,205,0,143,203,73,2,1,203,0,0,143,203,78,2,2,203,0,0,105,92,1,0,143,203,83,2,141,205,119,2,0,203,205,0,143,203,122,2,119,0,163,0,141,203,132,2,32,203,203,86,121,203,160,0,1,203,0,0,143,203,132,2,141,203,133,2,1,205,4,0,1,208,0,0,134,170,0,0,24,55,6,0,203,205,208,0,1,208,0,0,143,208,37,2,1,208,0,0,143,208,58,2,0,208,170,0,143,208,114,2,141,208,114,2,1,205,4,0,1,203,0,0,134,171,0,0,24,55,6,0,208,205,203,0,32,203,171,0,121,203,8,0,141,205,37,2,0,203,205,0,143,203,35,2,141,205,58,2,0,203,205,0,143,203,59,2,119,0,39,0,141,203,133,2,1,205,16,2,3,203,203,205,134,172,0,0,36,97,6,0,203,171,0,0,141,203,72,2,141,205,37,2,4,173,203,205,34,205,172,0,16,203,173,172,20,205,205,203,121,205,7,0,141,203,37,2,0,205,203,0,143,205,35,2,0,205,172,0,143,205,59,2,119,0,20,0,141,205,114,2,25,174,205,4,141,205,37,2,3,175,172,205,141,205,72,2,16,176,175,205,121,176,8,0,0,205,175,0,143,205,37,2,0,205,172,0,143,205,58,2,0,205,174,0,143,205,114,2,119,0,209,255,0,205,175,0,143,205,35,2,0,205,172,0,143,205,59,2,119,0,1,0,141,205,59,2,34,177,205,0,121,177,3,0,1,7,255,255,119,0,70,1,1,203,32,0,141,208,111,2,141,207,35,2,141,204,23,2,134,205,0,0,104,67,5,0,0,203,208,207,204,0,0,0,141,205,35,2,32,178,205,0,121,178,6,0,1,205,0,0,143,205,36,2,1,205,98,0,143,205,132,2,119,0,72,0,141,205,133,2,1,204,4,0,1,207,0,0,134,179,0,0,24,55,6,0,205,204,207,0,1,207,0,0,143,207,43,2,0,207,179,0,143,207,115,2,141,207,115,2,1,204,4,0,1,205,0,0,134,180,0,0,24,55,6,0,207,204,205,0,32,205,180,0,121,205,7,0,141,204,35,2,0,205,204,0,143,205,36,2,1,205,98,0,143,205,132,2,119,0,48,0,141,205,115,2,25,181,205,4,141,205,133,2,1,204,16,2,3,205,205,204,134,182,0,0,36,97,6,0,205,180,0,0,141,205,43,2,3,184,182,205,141,205,35,2,15,185,205,184,121,185,7,0,141,204,35,2,0,205,204,0,143,205,36,2,1,205,98,0,143,205,132,2,119,0,29,0,1,205,4,0,1,204,0,0,134,186,0,0,24,55,6,0,0,205,204,0,38,204,186,32,32,204,204,0,121,204,7,0,141,205,133,2,1,207,16,2,3,205,205,207,134,204,0,0,192,117,4,0,205,182,0,0,141,204,35,2,16,187,184,204,121,187,6,0,0,204,184,0,143,204,43,2,0,204,181,0,143,204,115,2,119,0,202,255,141,205,35,2,0,204,205,0,143,204,36,2,1,204,98,0,143,204,132,2,119,0,1,0,141,204,132,2,32,204,204,98,121,204,31,0,1,204,0,0,143,204,132,2,1,205,32,0,141,207,111,2,141,208,36,2,141,203,23,2,1,206,0,32,21,203,203,206,134,204,0,0,104,67,5,0,0,205,207,208,203,0,0,0,141,204,36,2,141,203,111,2,15,188,204,203,141,203,111,2,141,204,36,2,125,189,188,203,204,0,0,0,141,203,255,1,0,204,203,0,143,204,254,1,0,204,77,0,143,204,30,2,0,204,189,0,143,204,56,2,141,203,65,2,0,204,203,0,143,204,60,2,119,0,181,237,141,204,132,2,32,204,204,77,121,204,80,0,1,204,0,0,143,204,132,2,1,204,255,255,141,203,69,2,15,145,204,203,141,203,25,2,2,204,0,0,255,255,254,255,19,203,203,204,0,147,203,0,141,203,25,2,125,35,145,147,203,0,0,0,141,203,133,2,1,204,4,0,1,208,0,0,134,148,0,0,24,55,6,0,203,204,208,0,141,208,133,2,25,208,208,4,1,204,4,0,1,203,0,0,134,149,0,0,24,55,6,0,208,204,203,0,141,203,69,2,33,151,203,0,33,203,148,0,33,204,149,0,20,203,203,204,20,203,151,203,121,203,33,0,141,203,236,1,0,152,203,0,33,203,148,0,33,204,149,0,20,203,203,204,38,203,203,1,40,203,203,1,4,204,52,152,3,153,203,204,141,204,69,2,15,154,153,204,141,203,69,2,125,204,154,203,153,0,0,0,143,204,70,2,141,203,236,1,0,204,203,0,143,204,240,1,0,204,35,0,143,204,26,2,141,203,70,2,0,204,203,0,143,204,73,2,141,203,76,2,0,204,203,0,143,204,78,2,141,203,82,2,0,204,203,0,143,204,83,2,0,204,52,0,143,204,122,2,119,0,15,0,0,204,52,0,143,204,240,1,0,204,35,0,143,204,26,2,1,204,0,0,143,204,73,2,141,203,76,2,0,204,203,0,143,204,78,2,141,203,82,2,0,204,203,0,143,204,83,2,0,204,52,0,143,204,122,2,141,203,122,2,0,204,203,0,143,204,205,1,141,203,240,1,0,204,203,0,143,204,206,1,141,203,73,2,141,208,205,1,141,207,206,1,4,208,208,207,15,204,203,208,143,204,207,1,141,208,207,1,121,208,6,0,141,208,205,1,141,203,206,1,4,208,208,203,0,204,208,0,119,0,3,0,141,208,73,2,0,204,208,0,0,40,204,0,141,208,78,2,3,204,208,40,143,204,208,1,141,208,111,2,141,203,208,1,15,204,208,203,143,204,209,1,141,203,209,1,141,208,208,1,141,207,111,2,125,204,203,208,207,0,0,0,143,204,112,2,1,207,32,0,141,208,112,2,141,203,208,1,141,205,26,2,134,204,0,0,104,67,5,0,0,207,208,203,205,0,0,0,1,205,4,0,1,203,0,0,134,204,0,0,24,55,6,0,0,205,203,0,143,204,210,1,141,204,210,1,38,204,204,32,32,204,204,0,121,204,6,0,141,203,83,2,141,205,78,2,134,204,0,0,192,117,4,0,203,205,0,0,141,205,26,2,2,203,0,0,0,0,1,0,21,205,205,203,0,204,205,0,143,204,211,1,1,205,48,0,141,203,112,2,141,208,208,1,141,207,211,1,134,204,0,0,104,67,5,0,0,205,203,208,207,0,0,0,1,207,48,0,141,208,205,1,141,203,206,1,4,208,208,203,1,203,0,0,134,204,0,0,104,67,5,0,0,207,40,208,203,0,0,0,1,203,4,0,1,208,0,0,134,204,0,0,24,55,6,0,0,203,208,0,143,204,212,1,141,204,212,1,38,204,204,32,32,204,204,0,121,204,8,0,141,208,240,1,141,203,205,1,141,207,206,1,4,203,203,207,134,204,0,0,192,117,4,0,208,203,0,0,141,203,26,2,1,208,0,32,21,203,203,208,0,204,203,0,143,204,214,1,1,203,32,0,141,208,112,2,141,207,208,1,141,205,214,1,134,204,0,0,104,67,5,0,0,203,208,207,205,0,0,0,141,205,255,1,0,204,205,0,143,204,254,1,0,204,77,0,143,204,30,2,141,205,112,2,0,204,205,0,143,204,56,2,141,205,65,2,0,204,205,0,143,204,60,2,119,0,232,236,141,204,132,2,1,205,245,0,45,204,204,205,252,147,0,0,1,204,0,0,45,204,0,204,244,147,0,0,141,204,61,2,32,204,204,0,121,204,3,0,1,7,0,0,119,0,80,0,1,204,1,0,143,204,44,2,141,205,44,2,41,205,205,2,3,204,4,205,143,204,215,1,141,205,215,1,1,207,4,0,1,208,0,0,134,204,0,0,24,55,6,0,205,207,208,0,143,204,216,1,141,204,216,1,32,204,204,0,121,204,5,0,141,208,44,2,0,204,208,0,143,204,45,2,119,0,22,0,141,208,44,2,41,208,208,3,3,204,3,208,143,204,217,1,141,208,217,1,141,207,216,1,134,204,0,0,148,32,2,0,208,207,2,0,141,207,44,2,25,204,207,1,143,204,218,1,141,204,218,1,34,204,204,10,121,204,5,0,141,207,218,1,0,204,207,0,143,204,44,2,119,0,220,255,1,7,1,0,119,0,39,0,141,204,45,2,34,204,204,10,121,204,32,0,141,207,45,2,0,204,207,0,143,204,47,2,141,207,47,2,41,207,207,2,3,204,4,207,143,204,220,1,141,207,220,1,1,208,4,0,1,205,0,0,134,204,0,0,24,55,6,0,207,208,205,0,143,204,221,1,141,205,47,2,25,204,205,1,143,204,219,1,141,204,221,1,32,204,204,0,120,204,3,0,1,7,255,255,119,0,14,0,141,204,219,1,34,204,204,10,121,204,5,0,141,205,219,1,0,204,205,0,143,204,47,2,119,0,231,255,1,7,1,0,119,0,5,0,1,7,1,0,119,0,3,0,141,204,0,2,0,7,204,0,141,204,133,2,137,204,0,0,139,7,0,0,140,3,87,1,0,0,0,0,2,200,0,0,255,0,0,0,2,201,0,0,152,0,0,0,2,202,0,0,1,1,0,0,1,203,0,0,143,203,85,1,136,204,0,0,0,203,204,0,143,203,86,1,136,203,0,0,1,204,48,1,3,203,203,204,137,203,0,0,130,203,0,0,136,204,0,0,49,203,203,204,96,148,0,0,135,203,0,0,25,203,0,76,1,204,4,0,1,205,0,0,134,79,0,0,24,55,6,0,203,204,205,0,1,205,255,255,47,205,205,79,152,148,0,0,134,173,0,0,152,111,6,0,0,0,0,0,0,168,173,0,119,0,2,0,1,168,0,0,42,205,1,0,1,204,1,0,1,203,0,0,134,180,0,0,24,55,6,0,205,204,203,0,41,203,180,24,42,203,203,24,32,203,203,0,121,203,4,0,1,203,0,0,143,203,38,1,119,0,51,11,141,203,86,1,25,203,203,33,25,28,203,10,0,62,180,0,1,203,0,0,143,203,33,1,0,203,1,0,143,203,40,1,1,203,0,0,143,203,55,1,1,203,0,0,143,203,58,1,1,203,0,0,143,203,70,1,19,203,62,200,0,57,203,0,134,67,0,0,100,99,6,0,57,0,0,0,32,203,67,0,121,203,27,10,141,203,40,1,42,203,203,0,1,204,1,0,1,205,0,0,134,177,0,0,24,55,6,0,203,204,205,0,41,205,177,24,42,205,205,24,32,205,205,37,121,205,191,9,141,205,40,1,25,178,205,1,42,205,178,0,1,204,1,0,1,203,0,0,134,179,0,0,24,55,6,0,205,204,203,0,41,203,179,24,42,203,203,24,1,204,37,0,1,206,6,0,138,203,204,206,108,151,0,0,156,149,0,0,156,149,0,0,156,149,0,0,156,149,0,0,112,151,0,0,19,204,179,200,26,204,204,48,35,204,204,10,121,204,76,0,141,204,40,1,25,193,204,2,42,204,193,0,1,205,1,0,1,206,0,0,134,194,0,0,24,55,6,0,204,205,206,0,41,206,194,24,42,206,206,24,32,206,206,36,121,206,64,0,1,205,4,0,1,204,0,0,134,206,0,0,24,55,6,0,2,205,204,0,143,206,69,1,141,204,86,1,25,204,204,16,141,205,69,1,1,207,4,0,134,206,0,0,116,78,6,0,204,205,207,0,19,207,179,200,26,206,207,48,143,206,19,1,1,206,1,0,141,207,19,1,16,195,206,207,141,206,86,1,25,206,206,16,1,205,4,0,1,204,0,0,134,207,0,0,24,55,6,0,206,205,204,0,143,207,12,1,141,207,12,1,1,204,0,0,25,204,204,4,26,204,204,1,3,207,207,204,1,204,0,0,25,204,204,4,26,204,204,1,40,204,204,255,19,207,207,204,0,196,207,0,1,207,4,0,1,204,0,0,134,197,0,0,24,55,6,0,196,207,204,0,141,207,86,1,25,207,207,16,25,205,196,4,1,206,4,0,134,204,0,0,116,78,6,0,207,205,206,0,141,204,19,1,26,198,204,1,121,195,4,0,0,204,198,0,143,204,19,1,119,0,217,255,141,204,40,1,25,199,204,3,0,204,197,0,143,204,16,1,0,204,199,0,143,204,45,1,119,0,46,0,1,206,4,0,1,205,0,0,134,204,0,0,24,55,6,0,2,206,205,0,143,204,13,1,141,205,13,1,1,206,0,0,25,206,206,4,26,206,206,1,3,205,205,206,1,206,0,0,25,206,206,4,26,206,206,1,40,206,206,255,19,205,205,206,0,204,205,0,143,204,0,1,141,205,0,1,1,206,4,0,1,207,0,0,134,204,0,0,24,55,6,0,205,206,207,0,143,204,1,1,141,207,0,1,25,207,207,4,1,206,4,0,134,204,0,0,116,78,6,0,2,207,206,0,141,206,1,1,0,204,206,0,143,204,16,1,0,204,178,0,143,204,45,1,119,0,9,0,119,0,55,9,141,204,40,1,25,192,204,2,1,204,0,0,143,204,16,1,0,204,192,0,143,204,45,1,119,0,1,0,141,204,45,1,42,204,204,0,1,206,1,0,1,207,0,0,134,203,0,0,24,55,6,0,204,206,207,0,143,203,2,1,141,203,2,1,19,203,203,200,26,203,203,48,35,203,203,10,121,203,54,0,141,207,2,1,19,207,207,200,0,203,207,0,143,203,5,1,141,207,45,1,0,203,207,0,143,203,47,1,1,203,0,0,143,203,83,1,141,207,83,1,27,203,207,10,143,203,3,1,141,207,3,1,26,207,207,48,141,206,5,1,3,203,207,206,143,203,4,1,141,206,47,1,25,203,206,1,143,203,6,1,141,206,6,1,42,206,206,0,1,207,1,0,1,204,0,0,134,203,0,0,24,55,6,0,206,207,204,0,143,203,7,1,141,203,7,1,19,203,203,200,26,203,203,48,35,203,203,10,121,203,12,0,141,204,7,1,19,204,204,200,0,203,204,0,143,203,5,1,141,204,6,1,0,203,204,0,143,203,47,1,141,204,4,1,0,203,204,0,143,203,83,1,119,0,222,255,141,203,7,1,0,8,203,0,141,204,6,1,0,203,204,0,143,203,46,1,141,204,4,1,0,203,204,0,143,203,82,1,119,0,8,0,141,203,2,1,0,8,203,0,141,204,45,1,0,203,204,0,143,203,46,1,1,203,0,0,143,203,82,1,41,203,8,24,42,203,203,24,32,21,203,109,121,21,23,0,141,203,16,1,1,204,0,0,14,22,203,204,141,204,46,1,25,23,204,1,42,204,23,0,1,203,1,0,1,207,0,0,134,13,0,0,24,55,6,0,204,203,207,0,0,26,13,0,38,203,22,1,0,207,203,0,143,207,8,1,0,207,23,0,143,207,48,1,1,207,0,0,143,207,60,1,1,207,0,0,143,207,72,1,119,0,13,0,0,26,8,0,1,207,0,0,143,207,8,1,141,203,46,1,0,207,203,0,143,207,48,1,141,203,58,1,0,207,203,0,143,207,60,1,141,203,70,1,0,207,203,0,143,207,72,1,141,207,48,1,25,24,207,1,19,207,26,200,0,25,207,0,1,207,65,0,1,203,58,0,138,25,207,203,136,154,0,0,76,154,0,0,140,154,0,0,76,154,0,0,144,154,0,0,148,154,0,0,152,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,156,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,176,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,180,154,0,0,76,154,0,0,76,154,0,0,184,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,76,154,0,0,188,154,0,0,76,154,0,0,192,154,0,0,196,154,0,0,220,154,0,0,224,154,0,0,228,154,0,0,232,154,0,0,76,155,0,0,80,155,0,0,76,154,0,0,100,155,0,0,76,154,0,0,200,155,0,0,204,155,0,0,208,155,0,0,76,154,0,0,76,154,0,0,212,155,0,0,216,155,0,0,220,155,0,0,76,154,0,0,76,154,0,0,224,155,0,0,76,154,0,0,228,155,0,0,141,203,8,1,0,207,203,0,143,207,9,1,141,203,33,1,0,207,203,0,143,207,35,1,141,203,60,1,0,207,203,0,143,207,65,1,141,203,72,1,0,207,203,0,143,207,79,1,1,207,152,0,143,207,85,1,119,0,91,9,119,0,15,0,119,0,14,0,119,0,13,0,119,0,12,0,119,0,11,0,0,207,24,0,143,207,49,1,1,207,2,0,143,207,68,1,119,0,83,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,141,203,48,1,0,207,203,0,143,207,49,1,1,207,0,0,143,207,68,1,119,0,72,0,119,0,250,255,119,0,249,255,119,0,248,255,42,207,24,0,1,203,1,0,1,204,0,0,134,27,0,0,24,55,6,0,207,203,204,0,141,204,48,1,25,29,204,2,41,204,27,24,42,204,204,24,32,204,204,104,125,7,204,29,24,0,0,0,41,204,27,24,42,204,204,24,32,204,204,104,1,203,254,255,1,207,255,255,125,4,204,203,207,0,0,0,0,207,7,0,143,207,49,1,0,207,4,0,143,207,68,1,119,0,44,0,119,0,222,255,0,207,24,0,143,207,49,1,1,207,3,0,143,207,68,1,119,0,38,0,42,207,24,0,1,203,1,0,1,204,0,0,134,30,0,0,24,55,6,0,207,203,204,0,141,204,48,1,25,31,204,2,41,204,30,24,42,204,204,24,32,204,204,108,125,5,204,31,24,0,0,0,41,204,30,24,42,204,204,24,32,204,204,108,1,203,3,0,1,207,1,0,125,6,204,203,207,0,0,0,0,207,5,0,143,207,49,1,0,207,6,0,143,207,68,1,119,0,13,0,119,0,191,255,119,0,190,255,119,0,189,255,119,0,188,255,119,0,3,0,119,0,186,255,119,0,185,255,0,207,24,0,143,207,49,1,1,207,1,0,143,207,68,1,119,0,1,0,141,207,49,1,42,207,207,0,1,203,1,0,1,204,0,0,134,32,0,0,24,55,6,0,207,203,204,0,19,203,32,200,38,203,203,47,32,203,203,3,121,203,5,0,19,203,32,200,39,203,203,32,0,204,203,0,119,0,3,0,19,203,32,200,0,204,203,0,0,3,204,0,19,204,32,200,38,204,204,47,32,204,204,3,1,203,1,0,141,207,68,1,125,19,204,203,207,0,0,0,1,203,91,0,1,206,20,0,138,3,203,206,28,158,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,56,158,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,184,156,0,0,104,158,0,0,1,206,0,0,134,207,0,0,36,17,6,0,0,206,0,0,25,207,0,4,1,206,4,0,1,203,0,0,134,39,0,0,24,55,6,0,207,206,203,0,25,203,0,100,1,206,4,0,1,207,0,0,134,40,0,0,24,55,6,0,203,206,207,0,48,207,39,40,60,157,0,0,25,206,0,4,25,203,39,1,1,204,4,0,134,207,0,0,116,78,6,0,206,203,204,0,42,207,39,0,1,204,1,0,1,203,0,0,134,41,0,0,24,55,6,0,207,204,203,0,19,203,41,200,0,43,203,0,119,0,5,0,134,42,0,0,220,97,4,0,0,0,0,0,0,43,42,0,134,44,0,0,100,99,6,0,43,0,0,0,32,203,44,0,121,203,219,255,119,0,1,0,25,203,0,100,1,204,4,0,1,207,0,0,134,45,0,0,24,55,6,0,203,204,207,0,25,207,0,4,1,204,4,0,1,203,0,0,134,14,0,0,24,55,6,0,207,204,203,0,1,203,0,0,45,203,45,203,168,157,0,0,0,48,14,0,119,0,8,0,25,204,0,4,26,207,14,1,1,206,4,0,134,203,0,0,116,78,6,0,204,207,206,0,26,48,14,1,25,203,0,108,1,206,4,0,1,207,0,0,134,46,0,0,24,55,6,0,203,206,207,0,25,207,0,8,1,206,4,0,1,203,0,0,134,47,0,0,24,55,6,0,207,206,203,0,0,49,48,0,141,203,55,1,3,50,46,203,3,206,50,49,4,203,206,47,143,203,56,1,141,206,82,1,0,203,206,0,143,203,84,1,119,0,192,0,141,207,55,1,0,203,207,0,143,203,56,1,141,207,82,1,0,203,207,0,143,203,84,1,119,0,185,0,141,207,82,1,34,33,207,1,1,207,1,0,141,203,82,1,125,20,33,207,203,0,0,0,141,207,55,1,0,203,207,0,143,203,56,1,0,203,20,0,143,203,84,1,119,0,173,0,141,203,55,1,34,34,203,0,141,203,16,1,1,207,0,0,13,35,203,207,121,35,17,0,141,203,33,1,0,207,203,0,143,207,36,1,141,203,49,1,0,207,203,0,143,207,44,1,141,203,55,1,0,207,203,0,143,207,57,1,141,203,60,1,0,207,203,0,143,207,64,1,141,203,72,1,0,207,203,0,143,207,78,1,119,0,45,8,1,207,254,255,1,206,6,0,138,19,207,206,36,159,0,0,136,159,0,0,240,159,0,0,72,160,0,0,228,158,0,0,160,160,0,0,141,206,33,1,0,207,206,0,143,207,36,1,141,206,49,1,0,207,206,0,143,207,44,1,141,206,55,1,0,207,206,0,143,207,57,1,141,206,60,1,0,207,206,0,143,207,64,1,141,206,72,1,0,207,206,0,143,207,78,1,119,0,20,8,141,207,55,1,19,207,207,200,0,36,207,0,141,203,16,1,42,203,203,0,1,204,1,0,134,207,0,0,116,78,6,0,203,36,204,0,141,204,33,1,0,207,204,0,143,207,36,1,141,204,49,1,0,207,204,0,143,207,44,1,141,204,55,1,0,207,204,0,143,207,57,1,141,204,60,1,0,207,204,0,143,207,64,1,141,204,72,1,0,207,204,0,143,207,78,1,119,0,251,7,141,207,55,1,2,204,0,0,255,255,0,0,19,207,207,204,0,37,207,0,141,204,16,1,1,203,2,0,134,207,0,0,116,78,6,0,204,37,203,0,141,203,33,1,0,207,203,0,143,207,36,1,141,203,49,1,0,207,203,0,143,207,44,1,141,203,55,1,0,207,203,0,143,207,57,1,141,203,60,1,0,207,203,0,143,207,64,1,141,203,72,1,0,207,203,0,143,207,78,1,119,0,225,7,141,203,16,1,141,204,55,1,1,206,4,0,134,207,0,0], eb + 30720);
  HEAPU8.set([116,78,6,0,203,204,206,0,141,206,33,1,0,207,206,0,143,207,36,1,141,206,49,1,0,207,206,0,143,207,44,1,141,206,55,1,0,207,206,0,143,207,57,1,141,206,60,1,0,207,206,0,143,207,64,1,141,206,72,1,0,207,206,0,143,207,78,1,119,0,203,7,141,206,16,1,141,204,55,1,1,203,4,0,134,207,0,0,116,78,6,0,206,204,203,0,141,203,33,1,0,207,203,0,143,207,36,1,141,203,49,1,0,207,203,0,143,207,44,1,141,203,55,1,0,207,203,0,143,207,57,1,141,203,60,1,0,207,203,0,143,207,64,1,141,203,72,1,0,207,203,0,143,207,78,1,119,0,181,7,141,207,16,1,0,38,207,0,141,203,55,1,1,204,4,0,134,207,0,0,116,78,6,0,38,203,204,0,25,204,38,4,41,203,34,31,42,203,203,31,1,206,4,0,134,207,0,0,116,78,6,0,204,203,206,0,141,206,33,1,0,207,206,0,143,207,36,1,141,206,49,1,0,207,206,0,143,207,44,1,141,206,55,1,0,207,206,0,143,207,57,1,141,206,60,1,0,207,206,0,143,207,64,1,141,206,72,1,0,207,206,0,143,207,78,1,119,0,151,7,141,206,84,1,134,203,0,0,36,17,6,0,0,206,0,0,25,203,0,4,1,206,4,0,1,207,0,0,134,51,0,0,24,55,6,0,203,206,207,0,25,207,0,100,1,206,4,0,1,203,0,0,134,52,0,0,24,55,6,0,207,206,203,0,48,203,51,52,128,161,0,0,25,206,0,4,25,207,51,1,1,204,4,0,134,203,0,0,116,78,6,0,206,207,204,0,0,54,52,0,119,0,28,0,134,53,0,0,220,97,4,0,0,0,0,0,34,203,53,0,121,203,16,0,141,204,8,1,0,203,204,0,143,203,9,1,141,204,33,1,0,203,204,0,143,203,35,1,141,204,60,1,0,203,204,0,143,203,65,1,141,204,72,1,0,203,204,0,143,203,79,1,1,203,152,0,143,203,85,1,119,0,137,7,25,203,0,100,1,204,4,0,1,207,0,0,134,15,0,0,24,55,6,0,203,204,207,0,0,54,15,0,1,207,0,0,13,55,54,207,120,55,13,0,25,207,0,4,1,204,4,0,1,203,0,0,134,56,0,0,24,55,6,0,207,204,203,0,25,204,0,4,26,207,56,1,1,206,4,0,134,203,0,0,116,78,6,0,204,207,206,0,1,204,65,0,1,206,56,0,138,3,204,206,60,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,64,163,0,0,68,163,0,0,72,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,76,163,0,0,20,163,0,0,20,163,0,0,80,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,84,163,0,0,20,163,0,0,24,165,0,0,28,165,0,0,48,165,0,0,52,165,0,0,56,165,0,0,20,163,0,0,60,165,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,20,163,0,0,80,165,0,0,100,165,0,0,20,163,0,0,20,163,0,0,120,165,0,0,20,163,0,0,148,184,0,0,20,163,0,0,20,163,0,0,152,184,0,0,141,206,49,1,0,204,206,0,143,204,43,1,141,206,60,1,0,204,206,0,143,204,63,1,141,206,72,1,0,204,206,0,143,204,77,1,119,0,89,5,119,0,6,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,134,0,119,0,138,0,1,206,0,0,134,154,0,0,0,0,0,0,0,19,206,0,25,206,0,108,1,204,4,0,1,207,0,0,134,155,0,0,24,55,6,0,206,204,207,0,25,207,0,4,1,204,4,0,1,206,0,0,134,156,0,0,24,55,6,0,207,204,206,0,25,206,0,8,1,204,4,0,1,207,0,0,134,157,0,0,24,55,6,0,206,204,207,0,4,207,157,156,45,207,155,207,236,163,0,0,141,204,8,1,0,207,204,0,143,207,11,1,141,204,33,1,0,207,204,0,143,207,37,1,141,204,60,1,0,207,204,0,143,207,67,1,141,204,72,1,0,207,204,0,143,207,81,1,119,0,2,7,141,207,16,1,1,204,0,0,13,158,207,204,121,158,11,0,141,207,49,1,0,204,207,0,143,204,43,1,141,207,60,1,0,204,207,0,143,204,63,1,141,207,72,1,0,204,207,0,143,204,77,1,119,0,31,5,1,204,0,0,1,206,3,0,138,19,204,206,100,164,0,0,160,164,0,0,220,164,0,0,141,206,49,1,0,204,206,0,143,204,43,1,141,206,60,1,0,204,206,0,143,204,63,1,141,206,72,1,0,204,206,0,143,204,77,1,119,0,15,5,141,207,16,1,1,206,4,0,134,204,0,0,56,86,6,0,207,154,206,0,141,206,49,1,0,204,206,0,143,204,43,1,141,206,60,1,0,204,206,0,143,204,63,1,141,206,72,1,0,204,206,0,143,204,77,1,119,0,0,5,141,206,16,1,1,207,8,0,134,204,0,0,56,86,6,0,206,154,207,0,141,207,49,1,0,204,207,0,143,204,43,1,141,207,60,1,0,204,207,0,143,204,63,1,141,207,72,1,0,204,207,0,143,204,77,1,119,0,241,4,141,207,16,1,1,206,8,0,134,204,0,0,56,86,6,0,207,154,206,0,141,206,49,1,0,204,206,0,143,204,43,1,141,206,60,1,0,204,206,0,143,204,63,1,141,206,72,1,0,204,206,0,143,204,77,1,119,0,226,4,119,0,24,0,1,206,10,0,143,206,14,1,1,206,134,0,143,206,85,1,119,0,220,4,119,0,137,255,119,0,136,255,119,0,135,255,1,206,0,0,143,206,14,1,1,206,134,0,143,206,85,1,119,0,212,4,1,206,8,0,143,206,14,1,1,206,134,0,143,206,85,1,119,0,207,4,1,206,16,0,143,206,14,1,1,206,134,0,143,206,85,1,119,0,202,4,1,203,239,0,19,203,3,203,32,203,203,99,121,203,67,0,141,206,86,1,25,206,206,33,1,207,255,255,135,203,4,0,206,207,202,0,141,207,86,1,25,207,207,33,42,207,207,0,1,206,0,0,1,204,1,0,134,203,0,0,116,78,6,0,207,206,204,0,32,203,3,115,121,203,48,0,141,204,86,1,25,204,204,33,25,204,204,33,42,204,204,0,1,206,0,0,1,207,1,0,134,203,0,0,116,78,6,0,204,206,207,0,42,207,28,0,1,206,0,0,1,204,1,0,134,203,0,0,116,78,6,0,207,206,204,0,25,204,28,1,42,204,204,0,1,206,0,0,1,207,1,0,134,203,0,0,116,78,6,0,204,206,207,0,25,207,28,2,42,207,207,0,1,206,0,0,1,204,1,0,134,203,0,0,116,78,6,0,207,206,204,0,25,204,28,3,42,204,204,0,1,206,0,0,1,207,1,0,134,203,0,0,116,78,6,0,204,206,207,0,25,207,28,4,42,207,207,0,1,206,0,0,1,204,1,0,134,203,0,0,116,78,6,0,207,206,204,0,141,204,49,1,0,203,204,0,143,203,54,1,119,0,215,1,141,204,49,1,0,203,204,0,143,203,54,1,119,0,211,1,141,203,49,1,25,58,203,1,42,203,58,0,1,204,1,0,1,206,0,0,134,59,0,0,24,55,6,0,203,204,206,0,141,206,49,1,25,60,206,2,41,206,59,24,42,206,206,24,32,206,206,94,141,204,49,1,125,61,206,58,204,0,0,0,41,206,59,24,42,206,206,24,32,206,206,94,125,204,206,60,58,0,0,0,143,204,50,1,141,206,86,1,25,206,206,33,41,203,59,24,42,203,203,24,32,203,203,94,38,203,203,1,135,204,4,0,206,203,202,0,141,203,86,1,25,203,203,33,42,203,203,0,1,206,0,0,1,207,1,0,134,204,0,0,116,78,6,0,203,206,207,0,141,204,50,1,42,204,204,0,1,207,1,0,1,206,0,0,134,63,0,0,24,55,6,0,204,207,206,0,41,206,63,24,42,206,206,24,1,207,45,0,1,204,49,0,138,206,207,204,72,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,28,168,0,0,168,168,0,0,41,207,59,24,42,207,207,24,32,207,207,94,38,207,207,1,40,207,207,1,19,207,207,200,0,12,207,0,141,204,50,1,0,207,204,0,143,207,52,1,119,0,49,0,141,204,86,1,25,204,204,33,25,204,204,46,42,204,204,0,41,203,59,24,42,203,203,24,32,203,203,94,38,203,203,1,40,203,203,1,19,203,203,200,1,205,1,0,134,207,0,0,116,78,6,0,204,203,205,0,41,207,59,24,42,207,207,24,32,207,207,94,38,207,207,1,40,207,207,1,19,207,207,200,0,12,207,0,25,207,61,2,143,207,52,1,119,0,25,0,141,205,86,1,25,205,205,33,25,205,205,94,42,205,205,0,41,203,59,24,42,203,203,24,32,203,203,94,38,203,203,1,40,203,203,1,19,203,203,200,1,204,1,0,134,207,0,0,116,78,6,0,205,203,204,0,41,207,59,24,42,207,207,24,32,207,207,94,38,207,207,1,40,207,207,1,19,207,207,200,0,12,207,0,25,207,61,2,143,207,52,1,119,0,1,0,141,207,52,1,0,206,207,0,143,206,51,1,141,206,51,1,42,206,206,0,1,207,1,0,1,204,0,0,134,64,0,0,24,55,6,0,206,207,204,0,41,204,64,24,42,204,204,24,1,206,0,0,1,203,94,0,138,204,206,203,208,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,12,171,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,188,170,0,0,136,173,0,0,0,73,64,0,141,203,51,1,0,206,203,0,143,206,53,1,119,0,179,0,141,206,8,1,0,207,206,0,143,207,9,1,141,206,33,1,0,207,206,0,143,207,35,1,141,206,60,1,0,207,206,0,143,207,65,1,141,206,72,1,0,207,206,0,143,207,79,1,1,207,152,0,143,207,85,1,119,0,58,5,141,207,51,1,25,65,207,1,42,207,65,0,1,206,1,0,1,203,0,0,134,66,0,0,24,55,6,0,207,206,203,0,41,203,66,24,42,203,203,24,1,206,0,0,1,207,94,0,138,203,206,207,188,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,184,172,0,0,208,172,0,0,119,0,7,0,1,73,45,0,141,207,51,1,0,206,207,0,143,206,53,1,119,0,51,0,119,0,251,255,141,203,51,1,26,68,203,1,42,203,68,0,1,206,1,0,1,207,0,0,134,69,0,0,24,55,6,0,203,206,207,0,19,207,69,200,19,206,66,200,47,207,207,206,120,173,0,0,19,206,69,200,0,207,206,0,143,207,15,1,141,207,15,1,25,70,207,1,141,206,86,1,25,206,206,33,3,206,206,70,42,206,206,0,1,203,1,0,134,207,0,0,116,78,6,0,206,12,203,0,42,207,65,0,1,203,1,0,1,206,0,0,134,71,0,0,24,55,6,0,207,203,206,0,19,206,71,200,47,206,70,206,104,173,0,0,0,206,70,0,143,206,15,1,119,0,235,255,0,73,71,0,0,206,65,0,143,206,53,1,119,0,9,0,0,73,66,0,0,206,65,0,143,206,53,1,119,0,5,0,141,206,51,1,0,207,206,0,143,207,54,1,119,0,17,0,19,204,73,200,0,72,204,0,141,206,86,1,25,206,206,33,25,203,72,1,3,206,206,203,42,206,206,0,1,203,1,0,134,204,0,0,116,78,6,0,206,12,203,0,141,204,53,1,25,74,204,1,0,204,74,0,143,204,51,1,119,0,208,254,141,204,84,1,25,75,204,1,32,204,3,99,1,203,31,0,125,76,204,75,203,0,0,0,141,203,8,1,33,77,203,0,32,203,19,1,121,203,251,0,121,77,23,0,41,203,76,2,135,78,5,0,203,0,0,0,1,203,0,0,45,203,78,203,80,174,0,0,141,204,8,1,0,203,204,0,143,203,9,1,141,204,33,1,0,203,204,0,143,203,35,1,1,203,0,0,143,203,65,1,0,203,78,0,143,203,79,1,1,203,152,0,143,203,85,1,119,0,105,4,0,203,78,0,143,203,73,1,119,0,4,0,141,204,16,1,0,203,204,0,143,203,73,1,141,204,86,1,25,204,204,8,1,206,0,0,1,207,4,0,134,203,0,0,116,78,6,0,204,206,207,0,141,207,86,1,25,207,207,8,25,207,207,4,1,206,0,0,1,204,4,0,134,203,0,0,116,78,6,0,207,206,204,0,1,203,0,0,143,203,20,1,0,203,76,0,143,203,30,1,141,204,73,1,0,203,204,0,143,203,74,1,141,203,74,1,1,204,0,0,13,81,203,204,141,203,20,1,0,204,203,0,143,204,22,1,25,204,0,4,1,203,4,0,1,206,0,0,134,82,0,0,24,55,6,0,204,203,206,0,25,206,0,100,1,203,4,0,1,204,0,0,134,83,0,0,24,55,6,0,206,203,204,0,48,204,82,83,76,175,0,0,25,203,0,4,25,206,82,1,1,207,4,0,134,204,0,0,116,78,6,0,203,206,207,0,42,204,82,0,1,207,1,0,1,206,0,0,134,84,0,0,24,55,6,0,204,207,206,0,19,206,84,200,0,88,206,0,119,0,5,0,134,85,0,0,220,97,4,0,0,0,0,0,0,88,85,0,25,86,88,1,141,206,86,1,25,206,206,33,3,206,206,86,42,206,206,0,1,207,1,0,1,204,0,0,134,89,0,0,24,55,6,0,206,207,204,0,41,204,89,24,42,204,204,24,32,204,204,0,121,204,8,0,141,207,22,1,0,204,207,0,143,204,23,1,141,207,74,1,0,204,207,0,143,204,75,1,119,0,113,0,19,204,88,200,0,90,204,0,141,207,86,1,25,207,207,32,42,207,207,0,1,206,1,0,134,204,0,0,116,78,6,0,207,90,206,0,141,204,86,1,141,206,86,1,25,206,206,32,1,207,1,0,141,203,86,1,25,203,203,8,134,91,0,0,212,241,3,0,204,206,207,203,1,203,254,255,1,207,2,0,138,91,203,207,16,176,0,0,20,176,0,0,119,0,16,0,119,0,178,255,141,207,8,1,0,203,207,0,143,203,9,1,141,207,33,1,0,203,207,0,143,203,35,1,1,203,0,0,143,203,65,1,141,207,74,1,0,203,207,0,143,203,79,1,1,203,152,0,143,203,85,1,119,0,234,3,121,81,5,0,141,207,22,1,0,203,207,0,143,203,24,1,119,0,19,0,141,203,86,1,1,207,4,0,1,206,0,0,134,92,0,0,24,55,6,0,203,207,206,0,141,206,22,1,25,93,206,1,141,206,74,1,141,207,22,1,41,207,207,2,3,94,206,207,1,206,4,0,134,207,0,0,116,78,6,0,94,92,206,0,0,207,93,0,143,207,24,1,141,207,24,1,141,206,30,1,13,95,207,206,19,206,77,95,120,206,5,0,141,207,24,1,0,206,207,0,143,206,22,1,119,0,132,255,141,207,30,1,41,207,207,1,0,206,207,0,143,206,17,1,141,206,74,1,141,207,17,1,39,207,207,1,41,207,207,2,134,96,0,0,112,129,5,0,206,207,0,0,1,207,0,0,45,207,96,207,60,177,0,0,141,206,8,1,0,207,206,0,143,207,9,1,141,206,33,1,0,207,206,0,143,207,35,1,1,207,0,0,143,207,65,1,141,206,74,1,0,207,206,0,143,207,79,1,1,207,152,0,143,207,85,1,119,0,174,3,141,206,30,1,0,207,206,0,143,207,21,1,141,206,17,1,39,206,206,1,0,207,206,0,143,207,30,1,0,207,96,0,143,207,74,1,141,206,21,1,0,207,206,0,143,207,20,1,119,0,85,255,141,207,86,1,25,207,207,8,134,97,0,0,52,92,6,0,207,0,0,0,32,207,97,0,121,207,15,0,141,206,8,1,0,207,206,0,143,207,9,1,141,206,33,1,0,207,206,0,143,207,35,1,1,207,0,0,143,207,65,1,141,206,75,1,0,207,206,0,143,207,79,1,1,207,152,0,143,207,85,1,119,0,140,3,141,206,23,1,0,207,206,0,143,207,29,1,1,207,0,0,143,207,62,1,141,206,75,1,0,207,206,0,143,207,76,1,119,0,23,1,121,77,142,0,135,98,5,0,76,0,0,0,1,207,0,0,45,207,98,207,52,178,0,0,141,206,8,1,0,207,206,0,143,207,9,1,141,206,33,1,0,207,206,0,143,207,35,1,1,207,0,0,143,207,65,1,1,207,0,0,143,207,79,1,1,207,152,0,143,207,85,1,119,0,112,3,1,207,0,0,143,207,26,1,0,207,76,0,143,207,31,1,0,207,98,0,143,207,61,1,141,206,26,1,0,207,206,0,143,207,25,1,25,207,0,4,1,206,4,0,1,203,0,0,134,99,0,0,24,55,6,0,207,206,203,0,25,203,0,100,1,206,4,0,1,207,0,0,134,100,0,0,24,55,6,0,203,206,207,0,48,207,99,100,204,178,0,0,25,206,0,4,25,203,99,1,1,204,4,0,134,207,0,0,116,78,6,0,206,203,204,0,42,207,99,0,1,204,1,0,1,203,0,0,134,102,0,0,24,55,6,0,207,204,203,0,19,203,102,200,0,105,203,0,119,0,5,0,134,103,0,0,220,97,4,0,0,0,0,0,0,105,103,0,25,104,105,1,141,203,86,1,25,203,203,33,3,203,203,104,42,203,203,0,1,204,1,0,1,207,0,0,134,106,0,0,24,55,6,0,203,204,207,0,41,207,106,24,42,207,207,24,32,207,207,0,121,207,10,0,141,204,25,1,0,207,204,0,143,207,29,1,141,204,61,1,0,207,204,0,143,207,62,1,1,207,0,0,143,207,76,1,119,0,195,0,19,207,105,200,0,107,207,0,141,207,25,1,25,108,207,1,141,207,61,1,141,204,25,1,3,109,207,204,42,207,109,0,1,203,1,0,134,204,0,0,116,78,6,0,207,107,203,0,141,204,31,1,13,110,108,204,120,110,4,0,0,204,108,0,143,204,25,1,119,0,183,255,141,203,31,1,41,203,203,1,0,204,203,0,143,204,18,1,141,204,61,1,141,203,18,1,39,203,203,1,134,111,0,0,112,129,5,0,204,203,0,0,1,203,0,0,45,203,111,203,236,179,0,0,141,204,8,1,0,203,204,0,143,203,9,1,141,204,33,1,0,203,204,0,143,203,35,1,141,204,61,1,0,203,204,0,143,203,65,1,1,203,0,0,143,203,79,1,1,203,152,0,143,203,85,1,119,0,2,3,141,204,31,1,0,203,204,0,143,203,27,1,141,204,18,1,39,204,204,1,0,203,204,0,143,203,31,1,0,203,111,0,143,203,61,1,141,204,27,1,0,203,204,0,143,203,26,1,119,0,140,255,141,203,16,1,1,204,0,0,13,112,203,204,121,112,58,0,0,128,54,0,25,204,0,4,1,203,4,0,1,207,0,0,134,126,0,0,24,55,6,0,204,203,207,0,16,127,126,128,121,127,16,0,25,203,0,4,25,204,126,1,1,206,4,0,134,207,0,0,116,78,6,0,203,204,206,0,42,207,126,0,1,206,1,0,1,204,0,0,134,129,0,0,24,55,6,0,207,206,204,0,19,204,129,200,0,132,204,0,119,0,5,0,134,130,0,0,220,97,4,0,0,0,0,0,0,132,130,0,25,131,132,1,141,204,86,1,25,204,204,33,3,204,204,131,42,204,204,0,1,206,1,0,1,207,0,0,134,133,0,0,24,55,6,0,204,206,207,0,41,207,133,24,42,207,207,24,32,207,207,0,121,207,8,0,1,207,0,0,143,207,29,1,1,207,0,0,143,207,62,1,1,207,0,0,143,207,76,1,119,0,84,0,25,207,0,100,1,206,4,0,1,204,0,0,134,17,0,0,24,55,6,0,207,206,204,0,0,128,17,0,119,0,201,255,0,116,54,0,1,204,0,0,143,204,28,1,25,204,0,4,1,206,4,0,1,207,0,0,134,113,0,0,24,55,6,0,204,206,207,0,16,114,113,116,121,114,16,0,25,206,0,4,25,204,113,1,1,203,4,0,134,207,0,0,116,78,6,0,206,204,203,0,42,207,113,0,1,203,1,0,1,204,0,0,134,117,0,0,24,55,6,0,207,203,204,0,19,204,117,200,0,120,204,0,119,0,5,0,134,118,0,0,220,97,4,0,0,0,0,0,0,120,118,0,25,119,120,1,141,204,86,1,25,204,204,33,3,204,204,119,42,204,204,0,1,203,1,0,1,207,0,0,134,121,0,0,24,55,6,0,204,203,207,0,41,207,121,24,42,207,207,24,32,207,207,0,121,207,10,0,141,203,28,1,0,207,203,0,143,207,29,1,141,203,16,1,0,207,203,0,143,207,62,1,1,207,0,0,143,207,76,1,119,0,23,0,19,207,120,200,0,123,207,0,141,207,28,1,25,124,207,1,141,207,16,1,141,203,28,1,3,125,207,203,42,207,125,0,1,204,1,0,134,203,0,0,116,78,6,0,207,123,204,0,25,203,0,100,1,204,4,0,1,207,0,0,134,16,0,0,24,55,6,0,203,204,207,0,0,116,16,0,0,207,124,0,143,207,28,1,119,0,185,255,25,207,0,100,1,204,4,0,1,203,0,0,134,134,0,0,24,55,6,0,207,204,203,0,25,203,0,4,1,204,4,0,1,207,0,0,134,18,0,0,24,55,6,0,203,204,207,0,1,207,0,0,45,207,134,207,132,182,0,0,0,137,18,0,119,0,8,0,25,204,0,4,26,203,18,1,1,206,4,0,134,207,0,0,116,78,6,0,204,203,206,0,26,137,18,1,25,207,0,108,1,206,4,0,1,203,0,0,134,135,0,0,24,55,6,0,207,206,203,0,25,203,0,8,1,206,4,0,1,207,0,0,134,136,0,0,24,55,6,0,203,206,207,0,0,138,137,0,4,207,138,136,3,207,207,135,32,207,207,0,121,207,14,0,141,206,8,1,0,207,206,0,143,207,11,1,141,206,33,1,0,207,206,0,143,207,37,1,141,206,62,1,0,207,206,0,143,207,67,1,141,206,76,1,0,207,206,0,143,207,81,1,119,0,55,2,4,207,138,136,3,207,207,135,141,206,84,1,13,139,207,206,32,206,3,99,40,206,206,1,20,206,139,206,120,206,14,0,141,207,8,1,0,206,207,0,143,206,11,1,141,207,33,1,0,206,207,0,143,206,37,1,141,207,62,1,0,206,207,0,143,206,67,1,141,207,76,1,0,206,207,0,143,206,81,1,119,0,34,2,121,77,17,0,32,206,19,1,121,206,8,0,141,207,16,1,141,203,76,1,1,204,4,0,134,206,0,0,116,78,6,0,207,203,204,0,119,0,8,0,141,204,16,1,141,203,62,1,1,207,4,0,134,206,0,0,116,78,6,0,204,203,207,0,119,0,1,0,32,206,3,99,121,206,11,0,141,207,54,1,0,206,207,0,143,206,43,1,141,207,62,1,0,206,207,0,143,206,63,1,141,207,76,1,0,206,207,0,143,206,77,1,119,0,48,0,141,206,76,1,1,207,0,0,13,140,206,207,120,140,10,0,141,207,76,1,141,206,29,1,41,206,206,2,3,141,207,206,1,207,0,0,1,203,4,0,134,206,0,0,116,78,6,0,141,207,203,0,141,206,62,1,1,203,0,0,13,142,206,203,121,142,10,0,141,206,54,1,0,203,206,0,143,203,43,1,1,203,0,0,143,203,63,1,141,206,76,1,0,203,206,0,143,203,77,1,119,0,22,0,141,203,62,1,141,206,29,1,3,144,203,206,42,203,144,0,1,207,0,0,1,204,1,0,134,206,0,0,116,78,6,0,203,207,204,0,141,204,54,1,0,206,204,0,143,206,43,1,141,204,62,1,0,206,204,0,143,206,63,1,141,204,76,1,0,206,204,0,143,206,77,1,119,0,3,0,119,0,34,251,119,0,51,251,141,204,85,1,1,206,134,0,45,204,204,206,148,187,0,0,1,204,0,0,143,204,85,1,141,204,14,1,1,206,0,0,1,207,255,255,1,203,255,255,134,145,0,0,12,22,1,0,0,204,206,207,203,0,0,0,128,203,0,0,0,146,203,0,25,203,0,108,1,207,4,0,1,206,0,0,134,147,0,0,24,55,6,0,203,207,206,0,25,206,0,4,1,207,4,0,1,203,0,0,134,148,0,0,24,55,6,0,206,207,203,0,25,203,0,8,1,207,4,0,1,206,0,0,134,149,0,0,24,55,6,0,203,207,206,0,4,206,149,148,45,206,147,206,100,185,0,0,141,207,8,1,0,206,207,0,143,206,11,1,141,207,33,1,0,206,207,0,143,206,37,1,141,207,60,1,0,206,207,0,143,206,67,1,141,207,72,1,0,206,207,0,143,206,81,1,119,0,164,1,141,206,16,1,1,207,0,0,14,150,206,207,32,207,3,112,19,207,150,207,121,207,16,0,141,206,16,1,1,203,4,0,134,207,0,0,116,78,6,0,206,145,203,0,141,203,49,1,0,207,203,0,143,207,43,1,141,203,60,1,0,207,203,0,143,207,63,1,141,203,72,1,0,207,203,0,143,207,77,1,119,0,120,0,141,207,16,1,1,203,0,0,13,151,207,203,121,151,11,0,141,207,49,1,0,203,207,0,143,203,43,1,141,207,60,1,0,203,207,0,143,203,63,1,141,207,72,1,0,203,207,0,143,203,77,1,119,0,106,0,1,203,254,255,1,206,6,0,138,19,203,206,60,186,0,0,128,186,0,0,200,186,0,0,4,187,0,0,20,186,0,0,64,187,0,0,141,206,49,1,0,203,206,0,143,203,43,1,141,206,60,1,0,203,206,0,143,203,63,1,141,206,72,1,0,203,206,0,143,203,77,1,119,0,87,0,141,207,16,1,42,207,207,0,19,206,145,200,1,204,1,0,134,203,0,0,116,78,6,0,207,206,204,0,141,204,49,1,0,203,204,0,143,203,43,1,141,204,60,1,0,203,204,0,143,203,63,1,141,204,72,1,0,203,204,0,143,203,77,1,119,0,70,0,141,204,16,1,2,206,0,0,255,255,0,0,19,206,145,206,1,207,2,0,134,203,0,0,116,78,6,0,204,206,207,0,141,207,49,1,0,203,207,0,143,203,43,1,141,207,60,1,0,203,207,0,143,203,63,1,141,207,72,1,0,203,207,0,143,203,77,1,119,0,52,0,141,207,16,1,1,206,4,0,134,203,0,0,116,78,6,0,207,145,206,0,141,206,49,1,0,203,206,0,143,203,43,1,141,206,60,1,0,203,206,0,143,203,63,1,141,206,72,1,0,203,206,0,143,203,77,1,119,0,37,0,141,206,16,1,1,207,4,0,134,203,0,0,116,78,6,0,206,145,207,0,141,207,49,1,0,203,207,0,143,203,43,1,141,207,60,1,0,203,207,0,143,203,63,1,141,207,72,1,0,203,207,0,143,203,77,1,119,0,22,0,141,203,16,1,0,152,203,0,1,207,4,0,134,203,0,0,116,78,6,0,152,145,207,0,25,207,152,4,1,206,4,0,134,203,0,0,116,78,6,0,207,146,206,0,141,206,49,1,0,203,206,0,143,203,43,1,141,206,60,1,0,203,206,0,143,203,63,1,141,206,72,1,0,203,206,0,143,203,77,1,119,0,1,0,25,203,0,108,1,206,4,0,1,207,0,0,134,160,0,0,24,55,6,0,203,206,207,0,25,207,0,4,1,206,4,0,1,203,0,0,134,161,0,0,24,55,6,0,207,206,203,0,25,203,0,8,1,206,4,0,1,207,0,0,134,162,0,0,24,55,6,0,203,206,207,0,141,207,56,1,3,163,160,207,141,206,16,1,1,203,0,0,14,207,206,203,143,207,39,1,141,203,39,1,38,203,203,1,141,206,33,1,3,207,203,206,143,207,32,1,141,206,32,1,0,207,206,0,143,207,36,1,141,206,43,1,0,207,206,0,143,207,44,1,3,206,163,161,4,207,206,162,143,207,57,1,141,206,63,1,0,207,206,0,143,207,64,1,141,206,77,1,0,207,206,0,143,207,78,1,119,0,203,0,141,207,40,1,41,206,177,24,42,206,206,24,32,206,206,37,38,206,206,1,3,181,207,206,1,207,0,0,134,206,0,0,36,17,6,0,0,207,0,0,25,206,0,4,1,207,4,0,1,203,0,0,134,182,0,0,24,55,6,0,206,207,203,0,25,203,0,100,1,207,4,0,1,206,0,0,134,183,0,0,24,55,6,0,203,207,206,0,48,206,182,183,228,188,0,0,25,207,0,4,25,203,182,1,1,204,4,0,134,206,0,0,116,78,6,0,207,203,204,0,42,206,182,0,1,204,1,0,1,203,0,0,134,184,0,0,24,55,6,0,206,204,203,0,19,203,184,200,0,187,203,0,119,0,5,0,134,185,0,0,220,97,4,0,0,0,0,0,0,187,185,0,42,203,181,0,1,204,1,0,1,206,0,0,134,186,0,0,24,55,6,0,203,204,206,0,19,206,186,200,13,188,187,206,120,188,14,0,0,9,187,0,141,204,33,1,0,206,204,0,143,206,34,1,141,204,58,1,0,206,204,0,143,206,59,1,141,204,70,1,0,206,204,0,143,206,71,1,1,206,21,0,143,206,85,1,119,0,170,0,141,206,55,1,25,191,206,1,141,204,33,1,0,206,204,0,143,206,36,1,0,206,181,0,143,206,44,1,0,206,191,0,143,206,57,1,141,204,58,1,0,206,204,0,143,206,64,1,141,204,70,1,0,206,204,0,143,206,78,1,119,0,122,0,141,204,40,1,0,206,204,0,143,206,41,1,141,206,41,1,25,80,206,1,42,206,80,0,1,204,1,0,1,203,0,0,134,87,0,0,24,55,6,0,206,204,203,0,19,203,87,200,134,101,0,0,100,99,6,0,203,0,0,0,32,203,101,0,121,203,5,0,141,204,41,1,0,203,204,0,143,203,42,1,119,0,4,0,0,203,80,0,143,203,41,1,119,0,236,255,1,204,0,0,134,203,0,0,36,17,6,0,0,204,0,0,25,203,0,4,1,204,4,0,1,206,0,0,134,115,0,0,24,55,6,0,203,204,206,0,25,206,0,100,1,204,4,0,1,203,0,0,134,122,0,0,24,55,6,0,206,204,203,0,48,203,115,122,112,190,0,0,25,204,0,4,25,206,115,1,1,207,4,0,134,203,0,0,116,78,6,0,204,206,207,0,42,203,115,0,1,207,1,0,1,206,0,0,134,143,0,0,24,55,6,0,203,207,206,0,19,206,143,200,0,159,206,0,119,0,5,0,134,153,0,0,220,97,4,0,0,0,0,0,0,159,153,0,134,165,0,0,100,99,6,0,159,0,0,0,32,206,165,0,121,206,219,255,119,0,1,0,25,206,0,100,1,207,4,0,1,203,0,0,134,170,0,0,24,55,6,0,206,207,203,0,25,203,0,4,1,207,4,0,1,206,0,0,134,11,0,0,24,55,6,0,203,207,206,0,1,206,0,0,45,206,170,206,220,190,0,0,0,174,11,0,119,0,8,0,25,207,0,4,26,203,11,1,1,204,4,0,134,206,0,0,116,78,6,0,207,203,204,0,26,174,11,1,25,206,0,108,1,204,4,0,1,203,0,0,134,171,0,0,24,55,6,0,206,204,203,0,25,203,0,8,1,204,4,0,1,206,0,0,134,172,0,0,24,55,6,0,203,204,206,0,0,175,174,0,141,206,55,1,3,176,171,206,141,204,33,1,0,206,204,0,143,206,36,1,141,204,42,1,0,206,204,0,143,206,44,1,3,204,176,175,4,206,204,172,143,206,57,1,141,204,58,1,0,206,204,0,143,206,64,1,141,204,70,1,0,206,204,0,143,206,78,1,141,206,44,1,25,164,206,1,42,206,164,0,1,204,1,0,1,203,0,0,134,166,0,0,24,55,6,0,206,204,203,0,41,203,166,24,42,203,203,24,32,203,203,0,121,203,5,0,141,204,36,1,0,203,204,0,143,203,38,1,119,0,123,0,0,62,166,0,141,204,36,1,0,203,204,0,143,203,33,1,0,203,164,0,143,203,40,1,141,204,57,1,0,203,204,0,143,203,55,1,141,204,64,1,0,203,204,0,143,203,58,1,141,204,78,1,0,203,204,0,143,203,70,1,119,0,71,245,141,203,85,1,32,203,203,21,121,203,43,0,25,203,0,100,1,204,4,0,1,206,0,0,134,189,0,0,24,55,6,0,203,204,206,0,1,206,0,0,52,206,189,206,80,192,0,0,25,206,0,4,1,204,4,0,1,203,0,0,134,190,0,0,24,55,6,0,206,204,203,0,25,204,0,4,26,206,190,1,1,207,4,0,134,203,0,0,116,78,6,0,204,206,207,0,141,203,34,1,33,203,203,0,1,207,255,255,15,207,207,9,20,203,203,207,121,203,5,0,141,207,34,1,0,203,207,0,143,203,38,1,119,0,73,0,1,203,0,0,143,203,10,1,141,207,59,1,0,203,207,0,143,203,66,1,141,207,71,1,0,203,207,0,143,203,80,1,1,203,153,0,143,203,85,1,119,0,31,0,141,203,85,1,45,203,203,201,28,193,0,0,141,203,35,1,32,10,203,0,121,10,13,0,141,207,9,1,0,203,207,0,143,203,10,1,141,207,65,1,0,203,207,0,143,203,66,1,141,207,79,1,0,203,207,0,143,203,80,1,1,203,153,0,143,203,85,1,119,0,13,0,141,207,9,1,0,203,207,0,143,203,11,1,141,207,35,1,0,203,207,0,143,203,37,1,141,207,65,1,0,203,207,0,143,203,67,1,141,207,79,1,0,203,207,0,143,203,81,1,141,203,85,1,1,207,153,0,45,203,203,207,88,193,0,0,141,207,10,1,0,203,207,0,143,203,11,1,1,203,255,255,143,203,37,1,141,207,66,1,0,203,207,0,143,203,67,1,141,207,80,1,0,203,207,0,143,203,81,1,141,203,11,1,32,167,203,0,121,167,5,0,141,207,37,1,0,203,207,0,143,203,38,1,119,0,10,0,141,207,67,1,135,203,6,0,207,0,0,0,141,207,81,1,135,203,6,0,207,0,0,0,141,207,37,1,0,203,207,0,143,203,38,1,32,169,168,0,120,169,4,0,134,203,0,0,128,111,6,0,0,0,0,0,141,203,86,1,137,203,0,0,141,203,38,1,139,203,0,0,140,0,161,0,0,0,0,0,2,153,0,0,244,2,0,0,2,154,0,0,255,0,0,0,2,155,0,0,38,217,0,0,1,151,0,0,136,156,0,0,0,152,156,0,136,156,0,0,1,157,144,0,3,156,156,157,137,156,0,0,130,156,0,0,136,157,0,0,49,156,156,157,12,194,0,0,135,156,0,0,1,149,1,0,1,156,232,106,1,157,2,0,1,158,0,0,134,1,0,0,24,55,6,0,156,157,158,0,41,158,1,16,42,158,158,16,38,158,158,64,33,158,158,0,38,158,158,1,19,158,158,154,41,158,158,24,42,158,158,24,33,158,158,0,121,158,3,0,0,131,149,0,25,149,131,1,1,158,1,0,134,142,0,0,148,77,6,0,158,0,0,0,134,158,0,0,152,234,5,0,142,0,0,0,1,158,1,0,134,2,0,0,148,77,6,0,158,0,0,0,134,158,0,0,24,122,5,0,2,0,0,0,0,11,149,0,26,149,11,1,33,158,11,0,120,158,2,0,119,0,37,9,2,157,0,0,39,217,0,0,42,157,157,0,1,156,0,0,1,159,1,0,134,158,0,0,116,78,6,0,157,156,159,0,2,158,0,0,246,208,0,0,42,158,158,0,1,159,1,0,1,156,0,0,134,26,0,0,24,55,6,0,158,159,156,0,41,156,26,24,42,156,156,24,33,156,156,0,121,156,11,0,134,156,0,0,120,187,4,0,2,159,0,0,246,208,0,0,42,159,159,0,1,158,0,0,1,157,1,0,134,156,0,0,116,78,6,0,159,158,157,0,1,156,232,106,1,157,2,0,1,158,0,0,134,38,0,0,24,55,6,0,156,157,158,0,41,158,38,16,42,158,158,16,2,157,0,0,160,148,0,0,19,158,158,157,33,158,158,0,38,158,158,1,19,158,158,154,41,158,158,24,42,158,158,24,33,158,158,0,121,158,3,0,1,151,8,0,119,0,243,8,1,157,1,0,134,158,0,0,204,39,1,0,157,0,0,0,2,158,0,0,1,209,0,0,42,158,158,0,1,157,1,0,1,156,0,0,134,69,0,0,24,55,6,0,158,157,156,0,41,156,69,24,42,156,156,24,33,156,156,0,120,156,9,0,2,157,0,0,242,208,0,0,42,157,157,0,1,158,0,0,1,159,1,0,134,156,0,0,116,78,6,0,157,158,159,0,134,156,0,0,196,168,2,0,1,156,8,3,1,159,4,0,1,158,0,0,134,77,0,0,24,55,6,0,156,159,158,0,1,159,252,2,1,156,4,0,134,158,0,0,116,78,6,0,159,77,156,0,1,158,220,106,1,156,4,0,1,159,0,0,134,86,0,0,24,55,6,0,158,156,159,0,1,159,216,106,1,156,4,0,1,158,0,0,134,91,0,0,24,55,6,0,159,156,158,0,134,158,0,0,124,108,5,0,86,91,0,0,2,158,0,0,1,209,0,0,42,158,158,0,1,156,1,0,1,159,0,0,134,99,0,0,24,55,6,0,158,156,159,0,1,159,4,0,1,156,0,0,134,113,0,0,24,55,6,0,153,159,156,0,19,156,99,154,33,156,156,0,33,159,113,0,20,156,156,159,121,156,14,0,2,156,0,0,249,208,0,0,42,156,156,0,1,159,1,0,1,158,0,0,134,114,0,0,24,55,6,0,156,159,158,0,19,158,114,154,33,158,158,0,120,158,4,0,1,151,13,0,119,0,2,0,1,151,13,0,32,158,151,13,121,158,4,0,1,151,0,0,134,158,0,0,224,106,6,0,2,159,0,0,43,233,0,0,42,159,159,0,1,156,0,0,1,157,1,0,134,158,0,0,116,78,6,0,159,156,157,0,42,157,155,0,1,156,1,0,1,159,1,0,134,158,0,0,116,78,6,0,157,156,159,0,1,158,0,3,1,159,4,0,1,156,0,0,134,115,0,0,24,55,6,0,158,159,156,0,33,156,115,0,121,156,3,0,1,146,46,0,119,0,75,0,2,156,0,0,1,209,0,0,42,156,156,0,1,159,1,0,1,158,0,0,134,116,0,0,24,55,6,0,156,159,158,0,19,158,116,154,33,158,158,0,120,158,55,0,2,158,0,0,6,209,0,0,42,158,158,0,1,159,1,0,1,156,0,0,134,117,0,0,24,55,6,0,158,159,156,0,19,156,117,154,33,156,156,0,120,156,44,0,1,156,4,0,1,159,0,0,134,119,0,0,24,55,6,0,153,156,159,0,33,159,119,0,121,159,11,0,2,159,0,0,246,203,0,0,42,159,159,0,1,156,1,0,1,158,0,0,134,120,0,0,24,55,6,0,159,156,158,0,0,146,120,0,119,0,36,0,134,121,0,0,24,71,6,0,0,146,121,0,2,156,0,0,252,208,0,0,42,156,156,0,1,159,0,0,1,157,1,0,134,158,0,0,116,78,6,0,156,159,157,0,1,158,204,2,1,157,4,0,1,159,0,0,134,122,0,0,24,55,6,0,158,157,159,0,33,159,122,0,120,159,2,0,119,0,16,0,2,157,0,0,166,51,1,0,134,159,0,0,144,18,6,0,157,152,0,0,119,0,10,0,2,159,0,0,42,233,0,0,42,159,159,0,1,157,1,0,1,158,0,0,134,118,0,0,24,55,6,0,159,157,158,0,0,146,118,0,1,158,0,3,1,157,4,0,1,159,0,0,134,123,0,0,24,55,6,0,158,157,159,0,33,159,123,0,121,159,41,0,1,159,0,3,1,157,4,0,1,158,0,0,134,124,0,0,24,55,6,0,159,157,158,0,1,157,0,3,26,159,124,1,1,156,4,0,134,158,0,0,116,78,6,0,157,159,156,0,26,158,124,1,32,158,158,0,121,158,233,7,1,158,232,106,1,156,2,0,1,159,0,0,134,125,0,0,24,55,6,0,158,156,159,0,1,156,232,106,41,158,125,16,42,158,158,16,1,157,0,32,20,158,158,157,2,157,0,0,255,255,0,0,19,158,158,157,1,157,2,0,134,159,0,0,116,78,6,0,156,158,157,0,2,157,0,0,247,203,0,0,25,158,152,8,134,159,0,0,144,18,6,0,157,158,0,0,119,0,208,7,2,158,0,0,10,204,0,0,42,158,158,0,1,157,0,0,1,156,1,0,134,159,0,0,116,78,6,0,158,157,156,0,0,126,146,0,41,159,126,24,42,159,159,24,134,127,0,0,52,106,6,0,159,0,0,0,33,159,127,0,121,159,237,0,1,156,0,0,1,157,4,0,134,159,0,0,116,78,6,0,153,156,157,0,2,157,0,0,10,204,0,0,42,157,157,0,1,156,1,0,1,158,1,0,134,159,0,0,116,78,6,0,157,156,158,0,0,128,146,0,41,159,128,24,42,159,159,24,134,129,0,0,52,106,6,0,159,0,0,0,33,159,129,0,120,159,2,0,119,0,40,0,1,159,4,0,1,158,0,0,134,130,0,0,24,55,6,0,153,159,158,0,0,132,146,0,27,159,130,10,41,156,132,24,42,156,156,24,26,156,156,48,3,159,159,156,1,156,4,0,134,158,0,0,116,78,6,0,153,159,156,0,1,158,4,0,1,156,0,0,134,133,0,0,24,55,6,0,153,158,156,0], eb + 40960);
  HEAPU8.set([47,158,154,133,16,200,0,0,0,156,154,0,119,0,7,0,27,158,130,10,41,159,132,24,42,159,159,24,26,159,159,48,3,158,158,159,0,156,158,0,0,0,156,0,1,158,4,0,134,156,0,0,116,78,6,0,153,0,158,0,134,134,0,0,24,71,6,0,0,146,134,0,119,0,209,255,0,135,146,0,2,158,0,0,246,203,0,0,42,158,158,0,1,159,1,0,134,156,0,0,116,78,6,0,158,135,159,0,0,136,146,0,41,156,136,24,42,156,156,24,1,159,2,0,1,158,121,0,138,156,159,158,108,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,112,202,0,0,104,202,0,0,116,202,0,0,120,202,0,0,124,202,0,0,104,202,0,0,128,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,132,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,136,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,140,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,144,202,0,0,148,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,152,202,0,0,156,202,0,0,160,202,0,0,164,202,0,0,168,202,0,0,104,202,0,0,172,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,176,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,180,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,184,202,0,0,188,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,192,202,0,0,104,202,0,0,196,202,0,0,200,202,0,0,204,202,0,0,208,202,0,0,212,202,0,0,104,202,0,0,104,202,0,0,216,202,0,0,220,202,0,0,224,202,0,0,228,202,0,0,232,202,0,0,104,202,0,0,104,202,0,0,104,202,0,0,236,202,0,0,240,202,0,0,119,0,35,0,119,0,39,0,119,0,38,0,119,0,37,0,119,0,36,0,119,0,35,0,119,0,34,0,119,0,33,0,119,0,32,0,119,0,31,0,119,0,30,0,119,0,29,0,119,0,28,0,119,0,27,0,119,0,26,0,119,0,25,0,119,0,24,0,119,0,23,0,119,0,22,0,119,0,21,0,119,0,20,0,119,0,19,0,119,0,18,0,119,0,17,0,119,0,16,0,119,0,15,0,119,0,14,0,119,0,13,0,119,0,12,0,119,0,11,0,119,0,10,0,119,0,9,0,119,0,8,0,119,0,7,0,119,0,6,0,1,159,0,0,1,158,4,0,134,156,0,0,116,78,6,0,153,159,158,0,1,156,4,0,1,158,0,0,134,137,0,0,24,55,6,0,153,156,158,0,2,158,0,0,1,209,0,0,42,158,158,0,1,156,1,0,1,159,0,0,134,138,0,0,24,55,6,0,158,156,159,0,32,159,137,0,41,156,138,24,42,156,156,24,33,156,156,0,20,159,159,156,120,159,11,0,1,159,4,0,1,156,0,0,134,139,0,0,24,55,6,0,153,159,156,0,26,159,139,1,1,158,4,0,134,156,0,0,116,78,6,0,153,159,158,0,0,140,146,0,41,156,140,24,42,156,156,24,33,156,156,97,121,156,98,0,0,141,146,0,41,156,141,24,42,156,156,24,33,156,156,27,121,156,93,0,2,156,0,0,1,209,0,0,42,156,156,0,1,158,1,0,1,159,0,0,134,143,0,0,24,55,6,0,156,158,159,0,1,159,4,0,1,158,0,0,134,144,0,0,24,55,6,0,153,159,158,0,19,158,143,154,33,158,158,0,33,159,144,0,20,158,158,159,120,158,75,0,2,158,0,0,6,209,0,0,42,158,158,0,1,159,1,0,1,156,0,0,134,145,0,0,24,55,6,0,158,159,156,0,19,156,145,154,33,156,156,0,120,156,64,0,2,156,0,0,36,217,0,0,42,156,156,0,1,159,1,0,1,158,0,0,134,3,0,0,24,55,6,0,156,159,158,0,2,159,0,0,34,217,0,0,42,159,159,0,1,156,1,0,134,158,0,0,116,78,6,0,159,3,156,0,2,158,0,0,37,217,0,0,42,158,158,0,1,156,1,0,1,159,0,0,134,4,0,0,24,55,6,0,158,156,159,0,2,156,0,0,35,217,0,0,42,156,156,0,1,158,1,0,134,159,0,0,116,78,6,0,156,4,158,0,1,159,108,3,1,158,4,0,1,156,0,0,134,5,0,0,24,55,6,0,159,158,156,0,1,158,104,3,1,159,4,0,134,156,0,0,116,78,6,0,158,5,159,0,0,6,146,0,2,159,0,0,36,217,0,0,42,159,159,0,1,158,1,0,134,156,0,0,116,78,6,0,159,6,158,0,2,158,0,0,37,217,0,0,42,158,158,0,1,159,0,0,1,157,1,0,134,156,0,0,116,78,6,0,158,159,157,0,1,157,108,3,1,159,0,0,1,158,4,0,134,156,0,0,116,78,6,0,157,159,158,0,0,7,146,0,41,156,7,24,42,156,156,24,1,157,2,0,1,158,121,0,138,156,157,158,24,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,28,207,0,0,16,207,0,0,76,208,0,0,80,208,0,0,84,208,0,0,16,207,0,0,88,208,0,0,16,207,0,0,92,208,0,0,16,207,0,0,100,208,0,0,16,207,0,0,16,207,0,0,108,208,0,0,16,207,0,0,16,207,0,0,16,207,0,0,112,208,0,0,16,207,0,0,116,208,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,124,208,0,0,132,208,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,140,208,0,0,16,207,0,0,16,207,0,0,148,208,0,0,16,207,0,0,156,208,0,0,160,208,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,16,207,0,0,168,208,0,0,176,208,0,0,184,208,0,0,192,208,0,0,200,208,0,0,16,207,0,0,208,208,0,0,16,207,0,0,216,208,0,0,16,207,0,0,224,208,0,0,16,207,0,0,4,209,0,0,12,209,0,0,20,209,0,0,28,209,0,0,36,209,0,0,16,207,0,0,44,209,0,0,16,207,0,0,52,209,0,0,60,209,0,0,68,209,0,0,76,209,0,0,84,209,0,0,92,209,0,0,16,207,0,0,100,209,0,0,16,207,0,0,108,209,0,0,16,207,0,0,16,207,0,0,16,207,0,0,116,209,0,0,124,209,0,0,16,207,0,0,16,207,0,0,132,209,0,0,4,210,0,0,12,210,0,0,20,210,0,0,28,210,0,0,36,210,0,0,16,207,0,0,40,210,0,0,48,210,0,0,56,210,0,0,64,210,0,0,72,210,0,0,80,210,0,0,244,210,0,0,252,210,0,0,16,207,0,0,4,211,0,0,12,211,0,0,20,211,0,0,28,211,0,0,36,211,0,0,44,211,0,0,52,211,0,0,16,207,0,0,60,211,0,0,68,211,0,0,1,151,137,0,119,0,171,1,119,0,1,0,1,158,232,106,1,159,2,0,1,157,0,0,134,25,0,0,24,55,6,0,158,159,157,0,41,157,25,16,42,157,157,16,38,157,157,4,33,157,157,0,38,157,157,1,19,157,157,154,41,157,157,24,42,157,157,24,33,157,157,0,120,157,17,0,2,159,0,0,242,208,0,0,42,159,159,0,1,158,1,0,1,160,1,0,134,157,0,0,116,78,6,0,159,158,160,0,2,160,0,0,244,208,0,0,42,160,160,0,1,158,1,0,1,159,1,0,134,157,0,0,116,78,6,0,160,158,159,0,1,157,4,0,1,159,0,0,134,27,0,0,24,55,6,0,153,157,159,0,2,159,0,0,10,204,0,0,42,159,159,0,1,157,1,0,1,158,0,0,134,28,0,0,24,55,6,0,159,157,158,0,32,158,27,0,41,157,28,24,42,157,157,24,33,157,157,0,20,158,158,157,121,158,16,0,0,30,146,0,41,158,30,24,42,158,158,24,25,158,158,64,19,158,158,154,0,146,158,0,0,31,146,0,2,157,0,0,46,204,0,0,42,157,157,0,1,159,1,0,134,158,0,0,116,78,6,0,157,31,159,0,119,0,61,255,2,158,0,0,46,204,0,0,42,158,158,0,1,159,1,0,1,157,0,0,134,29,0,0,24,55,6,0,158,159,157,0,0,146,29,0,119,0,51,255,119,0,180,255,119,0,179,255,119,0,178,255,119,0,177,255,1,151,116,0,119,0,88,1,1,151,117,0,119,0,86,1,119,0,172,255,119,0,171,255,1,151,129,0,119,0,82,1,1,151,120,0,119,0,80,1,1,151,54,0,119,0,78,1,1,151,133,0,119,0,76,1,1,151,40,0,119,0,74,1,119,0,73,1,1,151,110,0,119,0,71,1,1,151,108,0,119,0,69,1,1,151,135,0,119,0,67,1,1,151,107,0,119,0,65,1,1,151,109,0,119,0,63,1,1,151,136,0,119,0,61,1,1,151,69,0,119,0,59,1,1,151,115,0,119,0,57,1,2,159,0,0,250,208,0,0,42,159,159,0,1,158,1,0,1,160,1,0,134,157,0,0,116,78,6,0,159,158,160,0,119,0,147,0,1,151,63,0,119,0,46,1,1,151,96,0,119,0,44,1,1,151,64,0,119,0,42,1,1,151,65,0,119,0,40,1,1,151,66,0,119,0,38,1,1,151,70,0,119,0,36,1,1,151,103,0,119,0,34,1,1,151,94,0,119,0,32,1,1,151,104,0,119,0,30,1,1,151,119,0,119,0,28,1,1,151,102,0,119,0,26,1,1,151,68,0,119,0,24,1,1,151,101,0,119,0,22,1,1,151,67,0,119,0,20,1,1,151,134,0,119,0,18,1,1,151,121,0,119,0,16,1,2,157,0,0,36,217,0,0,42,157,157,0,1,160,1,0,1,158,0,0,134,50,0,0,24,55,6,0,157,160,158,0,41,158,50,24,42,158,158,24,32,158,158,0,121,158,3,0,1,151,91,0,119,0,2,1,2,158,0,0,36,217,0,0,42,158,158,0,1,160,1,0,1,157,0,0,134,51,0,0,24,55,6,0,158,160,157,0,0,146,51,0,2,160,0,0,39,217,0,0,42,160,160,0,1,158,1,0,1,159,1,0,134,157,0,0,116,78,6,0,160,158,159,0,119,0,197,254,1,151,61,0,119,0,238,0,1,151,106,0,119,0,236,0,1,151,97,0,119,0,234,0,1,151,99,0,119,0,232,0,119,0,74,0,1,151,55,0,119,0,229,0,1,151,95,0,119,0,227,0,1,151,56,0,119,0,225,0,1,151,57,0,119,0,223,0,1,151,58,0,119,0,221,0,2,159,0,0,252,208,0,0,42,159,159,0,1,158,1,0,1,160,1,0,134,157,0,0,116,78,6,0,159,158,160,0,134,75,0,0,224,114,3,0,41,157,75,24,42,157,157,24,33,157,157,0,120,157,3,0,1,151,131,0,119,0,205,0,2,157,0,0,41,217,0,0,42,157,157,0,1,160,1,0,1,158,0,0,134,76,0,0,24,55,6,0,157,160,158,0,0,146,76,0,2,158,0,0,41,217,0,0,42,158,158,0,1,160,1,0,1,157,0,0,134,78,0,0,24,55,6,0,158,160,157,0,2,160,0,0,246,203,0,0,42,160,160,0,1,158,1,0,134,157,0,0,116,78,6,0,160,78,158,0,119,0,137,254,1,151,62,0,119,0,178,0,1,151,105,0,119,0,176,0,1,151,93,0,119,0,174,0,1,151,98,0,119,0,172,0,1,151,111,0,119,0,170,0,1,151,87,0,119,0,168,0,1,151,60,0,119,0,166,0,1,151,118,0,119,0,164,0,1,151,100,0,119,0,162,0,1,151,59,0,119,0,160,0,1,151,112,0,119,0,158,0,134,32,0,0,224,114,3,0,41,156,32,24,42,156,156,24,33,156,156,0,120,156,3,0,1,151,78,0,119,0,150,0,1,156,220,106,1,157,4,0,1,158,0,0,134,33,0,0,24,55,6,0,156,157,158,0,1,158,172,26,1,157,4,0,1,156,0,0,134,34,0,0,24,55,6,0,158,157,156,0,1,157,172,26,3,158,34,33,1,160,4,0,134,156,0,0,116,78,6,0,157,158,160,0,1,156,216,106,1,160,4,0,1,158,0,0,134,35,0,0,24,55,6,0,156,160,158,0,1,158,168,26,1,160,4,0,1,156,0,0,134,36,0,0,24,55,6,0,158,160,156,0,1,160,168,26,3,158,36,35,1,157,4,0,134,156,0,0,116,78,6,0,160,158,157,0,1,156,168,26,1,157,4,0,1,158,0,0,134,37,0,0,24,55,6,0,156,157,158,0,1,158,172,26,1,157,4,0,1,156,0,0,134,39,0,0,24,55,6,0,158,157,156,0,1,156,192,26,41,157,37,5,3,157,157,39,41,157,157,3,3,156,156,157,25,156,156,4,1,157,4,0,1,158,0,0,134,40,0,0,24,55,6,0,156,157,158,0,1,158,0,0,45,158,40,158,108,212,0,0,1,151,82,0,119,0,86,0,134,41,0,0,24,227,3,0,40,0,0,0,41,158,41,24,42,158,158,24,33,158,158,0,120,158,20,0,1,158,232,106,1,157,2,0,1,156,0,0,134,42,0,0,24,55,6,0,158,157,156,0,41,156,42,16,42,156,156,16,1,157,0,64,19,156,156,157,33,156,156,0,38,156,156,1,19,156,156,154,41,156,156,24,42,156,156,24,33,156,156,0,120,156,3,0,1,151,82,0,119,0,60,0,1,156,216,106,1,157,168,26,134,44,0,0,88,84,4,0,156,157,0,0,41,157,44,24,42,157,157,24,33,157,157,0,120,157,2,0,119,0,50,0,2,156,0,0,6,209,0,0,42,156,156,0,1,158,1,0,1,160,1,0,134,157,0,0,116,78,6,0,156,158,160,0,1,160,148,26,1,158,0,0,1,156,4,0,134,157,0,0,116,78,6,0,160,158,156,0,25,157,40,24,1,156,2,0,1,158,0,0,134,45,0,0,24,55,6,0,157,156,158,0,25,156,40,24,41,157,45,16,42,157,157,16,1,160,128,0,20,157,157,160,2,160,0,0,255,255,0,0,19,157,157,160,1,160,2,0,134,158,0,0,116,78,6,0,156,157,160,0,2,158,0,0,41,217,0,0,42,158,158,0,1,160,1,0,1,157,0,0,134,46,0,0,24,55,6,0,158,160,157,0,0,146,46,0,2,160,0,0,42,233,0,0,42,160,160,0,1,158,1,0,134,157,0,0,116,78,6,0,160,46,158,0,119,0,214,253,1,160,40,0,1,156,98,0,138,151,160,156,88,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,80,217,0,0,96,217,0,0,124,217,0,0,152,217,0,0,180,217,0,0,208,217,0,0,236,217,0,0,8,218,0,0,36,218,0,0,64,218,0,0,88,218,0,0,112,218,0,0,136,218,0,0,160,218,0,0,184,218,0,0,208,218,0,0,232,218,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,0,219,0,0,84,215,0,0,84,215,0,0,84,215,0,0,32,219,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,160,219,0,0,84,215,0,0,84,215,0,0,84,215,0,0,24,220,0,0,84,215,0,0,80,220,0,0,96,220,0,0,208,220,0,0,24,221,0,0,64,221,0,0,80,221,0,0,96,221,0,0,112,221,0,0,128,221,0,0,144,221,0,0,160,221,0,0,176,221,0,0,192,221,0,0,232,221,0,0,16,222,0,0,56,222,0,0,96,222,0,0,136,222,0,0,176,222,0,0,192,222,0,0,84,215,0,0,84,215,0,0,4,223,0,0,44,223,0,0,100,223,0,0,216,223,0,0,64,224,0,0,104,224,0,0,136,224,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,84,215,0,0,128,227,0,0,84,215,0,0,244,227,0,0,84,215,0,0,20,228,0,0,76,228,0,0,132,228,0,0,100,229,0,0,204,229,0,0,119,0,172,3,1,151,0,0,1,150,0,0,1,147,0,0,1,157,112,3,1,158,4,0,1,160,0,0,134,8,0,0,24,55,6,0,157,158,160,0,0,150,8,0,0,9,150,0,1,160,0,0,53,160,9,160,148,215,0,0,119,0,42,0,0,10,150,0,25,160,10,12,25,160,160,4,1,158,4,0,1,157,0,0,134,12,0,0,24,55,6,0,160,158,157,0,1,157,220,106,1,158,4,0,1,160,0,0,134,13,0,0,24,55,6,0,157,158,160,0,45,160,12,13,24,216,0,0,0,14,150,0,25,160,14,12,1,158,4,0,1,157,0,0,134,15,0,0,24,55,6,0,160,158,157,0,1,157,216,106,1,158,4,0,1,160,0,0,134,16,0,0,24,55,6,0,157,158,160,0,45,160,15,16,24,216,0,0,1,151,44,0,119,0,9,0,0,17,150,0,1,160,4,0,1,158,0,0,134,18,0,0,24,55,6,0,17,160,158,0,0,150,18,0,119,0,211,255,32,158,151,44,121,158,3,0,1,151,0,0,1,147,1,0,0,19,147,0,33,158,19,0,121,158,19,0,134,20,0,0,8,44,6,0,41,158,20,24,42,158,158,24,33,158,158,0,120,158,103,3,0,21,150,0,25,158,21,8,1,160,4,0,1,157,0,0,134,22,0,0,24,55,6,0,158,160,157,0,19,160,22,154,134,157,0,0,184,96,5,0,160,0,0,0,119,0,91,3,2,157,0,0,5,209,0,0,42,157,157,0,1,160,1,0,1,158,0,0,134,23,0,0,24,55,6,0,157,160,158,0,41,158,23,24,42,158,158,24,33,158,158,0,120,158,7,0,2,160,0,0,11,204,0,0,25,157,152,16,134,158,0,0,112,85,6,0,160,157,0,0,2,157,0,0,21,204,0,0,25,160,152,24,134,158,0,0,112,85,6,0,157,160,0,0,2,158,0,0,5,209,0,0,42,158,158,0,1,160,1,0,1,157,0,0,134,24,0,0,24,55,6,0,158,160,157,0,41,157,24,24,42,157,157,24,33,157,157,0,120,157,7,0,2,160,0,0,34,204,0,0,25,158,152,32,134,157,0,0,112,85,6,0,160,158,0,0,134,157,0,0,120,187,4,0,119,0,46,3,1,151,0,0,134,157,0,0,104,203,5,0,119,0,42,3,1,151,0,0,1,158,0,0,1,160,255,255,134,157,0,0,28,93,1,0,158,160,0,0,119,0,35,3,1,151,0,0,1,160,1,0,1,158,0,0,134,157,0,0,28,93,1,0,160,158,0,0,119,0,28,3,1,151,0,0,1,158,255,255,1,160,0,0,134,157,0,0,28,93,1,0,158,160,0,0,119,0,21,3,1,151,0,0,1,160,0,0,1,158,1,0,134,157,0,0,28,93,1,0,160,158,0,0,119,0,14,3,1,151,0,0,1,158,255,255,1,160,255,255,134,157,0,0,28,93,1,0,158,160,0,0,119,0,7,3,1,151,0,0,1,160,255,255,1,158,1,0,134,157,0,0,28,93,1,0,160,158,0,0,119,0,0,3,1,151,0,0,1,158,1,0,1,160,255,255,134,157,0,0,28,93,1,0,158,160,0,0,119,0,249,2,1,151,0,0,1,160,1,0,1,158,1,0,134,157,0,0,28,93,1,0,160,158,0,0,119,0,242,2,1,151,0,0,1,158,104,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,236,2,1,151,0,0,1,158,106,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,230,2,1,151,0,0,1,158,107,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,224,2,1,151,0,0,1,158,108,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,218,2,1,151,0,0,1,158,121,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,212,2,1,151,0,0,1,158,117,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,206,2,1,151,0,0,1,158,98,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,200,2,1,151,0,0,1,158,110,0,134,157,0,0,100,84,6,0,158,0,0,0,119,0,194,2,1,151,0,0,42,158,155,0,1,160,0,0,1,156,1,0,134,157,0,0,116,78,6,0,158,160,156,0,119,0,186,2,1,151,0,0,2,157,0,0,5,209,0,0,42,157,157,0,1,156,1,0,1,160,0,0,134,43,0,0,24,55,6,0,157,156,160,0,41,160,43,24,42,160,160,24,33,160,160,0,120,160,7,0,2,156,0,0,47,204,0,0,25,157,152,40,134,160,0,0,112,85,6,0,156,157,0,0,2,157,0,0,54,204,0,0,25,156,152,48,134,160,0,0,144,18,6,0,157,156,0,0,42,156,155,0,1,157,0,0,1,158,1,0,134,160,0,0,116,78,6,0,156,157,158,0,119,0,154,2,1,151,0,0,134,47,0,0,224,114,3,0,41,160,47,24,42,160,160,24,33,160,160,0,121,160,17,0,1,160,172,26,1,158,4,0,1,157,0,0,134,48,0,0,24,55,6,0,160,158,157,0,1,157,168,26,1,158,4,0,1,160,0,0,134,49,0,0,24,55,6,0,157,158,160,0,134,160,0,0,224,10,5,0,48,49,0,0,119,0,131,2,42,158,155,0,1,157,0,0,1,156,1,0,134,160,0,0,116,78,6,0,158,157,156,0,119,0,124,2,1,151,0,0,2,156,0,0,71,204,0,0,25,157,152,56,134,160,0,0,144,18,6,0,156,157,0,0,42,157,155,0,1,156,0,0,1,158,1,0,134,160,0,0,116,78,6,0,157,156,158,0,119,0,110,2,1,151,0,0,134,160,0,0,24,124,1,0,119,0,106,2,1,151,0,0,42,158,155,0,1,156,0,0,1,157,1,0,134,160,0,0,116,78,6,0,158,156,157,0,2,157,0,0,0,209,0,0,42,157,157,0,1,156,1,0,1,158,1,0,134,160,0,0,116,78,6,0,157,156,158,0,1,158,0,0,134,160,0,0,212,36,5,0,158,0,0,0,2,158,0,0,0,209,0,0,42,158,158,0,1,156,0,0,1,157,1,0,134,160,0,0,116,78,6,0,158,156,157,0,119,0,78,2,1,151,0,0,42,157,155,0,1,156,0,0,1,158,1,0,134,160,0,0,116,78,6,0,157,156,158,0,1,160,24,107,1,158,4,0,1,156,0,0,134,52,0,0,24,55,6,0,160,158,156,0,1,158,0,0,134,156,0,0,252,244,3,0,52,158,0,0,119,0,60,2,1,151,0,0,42,158,155,0,1,160,0,0,1,157,1,0,134,156,0,0,116,78,6,0,158,160,157,0,134,156,0,0,52,107,4,0,119,0,50,2,1,151,0,0,134,156,0,0,100,5,4,0,119,0,46,2,1,151,0,0,134,156,0,0,132,233,0,0,119,0,42,2,1,151,0,0,134,156,0,0,208,122,4,0,119,0,38,2,1,151,0,0,134,156,0,0,52,232,4,0,119,0,34,2,1,151,0,0,134,156,0,0,76,27,5,0,119,0,30,2,1,151,0,0,134,156,0,0,120,43,5,0,119,0,26,2,1,151,0,0,134,156,0,0,140,9,4,0,119,0,22,2,1,151,0,0,134,156,0,0,132,202,4,0,119,0,18,2,1,151,0,0,134,156,0,0,240,68,4,0,42,157,155,0,1,160,0,0,1,158,1,0,134,156,0,0,116,78,6,0,157,160,158,0,119,0,8,2,1,151,0,0,134,156,0,0,68,40,3,0,42,158,155,0,1,160,0,0,1,157,1,0,134,156,0,0,116,78,6,0,158,160,157,0,119,0,254,1,1,151,0,0,42,157,155,0,1,160,0,0,1,158,1,0,134,156,0,0,116,78,6,0,157,160,158,0,134,156,0,0,244,247,5,0,119,0,244,1,1,151,0,0,42,158,155,0,1,160,0,0,1,157,1,0,134,156,0,0,116,78,6,0,158,160,157,0,134,156,0,0,184,127,5,0,119,0,234,1,1,151,0,0,42,157,155,0,1,160,0,0,1,158,1,0,134,156,0,0,116,78,6,0,157,160,158,0,134,156,0,0,56,19,3,0,119,0,224,1,1,151,0,0,42,158,155,0,1,160,0,0,1,157,1,0,134,156,0,0,116,78,6,0,158,160,157,0,134,156,0,0,36,252,4,0,119,0,214,1,1,151,0,0,134,156,0,0,152,241,2,0,119,0,210,1,1,151,0,0,134,53,0,0,224,114,3,0,41,156,53,24,42,156,156,24,33,156,156,0,121,156,4,0,134,156,0,0,64,55,1,0,119,0,200,1,42,157,155,0,1,160,0,0,1,158,1,0,134,156,0,0,116,78,6,0,157,160,158,0,119,0,193,1,1,151,0,0,42,158,155,0,1,160,0,0,1,157,1,0,134,156,0,0,116,78,6,0,158,160,157,0,134,156,0,0,140,103,4,0,119,0,183,1,1,151,0,0,42,157,155,0,1,160,0,0,1,158,1,0,134,156,0,0,116,78,6,0,157,160,158,0,2,158,0,0,42,221,0,0,25,160,152,64,134,156,0,0,144,18,6,0,158,160,0,0,119,0,169,1,1,151,0,0,42,160,155,0,1,158,0,0,1,157,1,0,134,156,0,0,116,78,6,0,160,158,157,0,2,156,0,0,64,162,0,0,1,157,4,0,1,158,0,0,134,54,0,0,24,55,6,0,156,157,158,0,1,157,1,0,134,158,0,0,0,62,6,0,54,157,0,0,2,158,0,0,64,162,0,0,1,157,4,0,1,156,0,0,134,55,0,0,24,55,6,0,158,157,156,0,134,156,0,0,124,212,4,0,55,0,0,0,119,0,140,1,1,151,0,0,42,157,155,0,1,158,0,0,1,160,1,0,134,156,0,0,116,78,6,0,157,158,160,0,2,156,0,0,44,161,0,0,1,160,4,0,1,158,0,0,134,56,0,0,24,55,6,0,156,160,158,0,25,160,152,72,1,156,4,0,134,158,0,0,116,78,6,0,160,56,156,0,2,156,0,0,103,204,0,0,25,160,152,72,134,158,0,0,144,18,6,0,156,160,0,0,119,0,114,1,1,151,0,0,42,160,155,0,1,156,0,0,1,157,1,0,134,158,0,0,116,78,6,0,160,156,157,0,134,158,0,0,72,174,3,0,119,0,104,1,1,151,0,0,42,157,155,0,1,156,0,0,1,160,1,0,134,158,0,0,116,78,6,0,157,156,160,0,119,0,96,1,1,151,0,0,42,160,155,0,1,156,0,0,1,157,1,0,134,158,0,0,116,78,6,0,160,156,157,0,134,57,0,0,224,114,3,0,41,158,57,24,42,158,158,24,33,158,158,0,121,158,83,1,1,158,220,106,1,157,4,0,1,156,0,0,134,58,0,0,24,55,6,0,158,157,156,0,1,156,172,26,1,157,4,0,1,158,0,0,134,59,0,0,24,55,6,0,156,157,158,0,1,157,172,26,3,156,59,58,1,160,4,0,134,158,0,0,116,78,6,0,157,156,160,0,1,158,216,106,1,160,4,0,1,156,0,0,134,60,0,0,24,55,6,0,158,160,156,0,1,156,168,26,1,160,4,0,1,158,0,0,134,61,0,0,24,55,6,0,156,160,158,0,1,160,168,26,3,156,61,60,1,157,4,0,134,158,0,0,116,78,6,0,160,156,157,0,1,158,168,26,1,157,4,0,1,156,0,0,134,62,0,0,24,55,6,0,158,157,156,0,1,156,172,26,1,157,4,0,1,158,0,0,134,63,0,0,24,55,6,0,156,157,158,0,1,158,192,26,41,157,62,5,3,157,157,63,41,157,157,3,3,158,158,157,25,148,158,1,2,158,0,0,5,209,0,0,42,158,158,0,1,157,1,0,1,156,0,0,134,64,0,0,24,55,6,0,158,157,156,0,41,156,64,24,42,156,156,24,33,156,156,0,120,156,7,0,2,157,0,0,133,204,0,0,25,158,152,80,134,156,0,0,112,85,6,0,157,158,0,0,1,156,168,26,1,158,4,0,1,157,0,0,134,65,0,0,24,55,6,0,156,158,157,0,1,157,172,26,1,158,4,0,1,156,0,0,134,66,0,0,24,55,6,0,157,158,156,0,1,156,192,26,41,158,65,5,3,158,158,66,41,158,158,3,3,156,156,158,42,156,156,0,1,158,1,0,1,157,0,0,134,67,0,0,24,55,6,0,156,158,157,0,41,157,67,24,42,157,157,24,33,157,157,94,121,157,8,0,2,158,0,0,149,204,0,0,25,156,152,88,134,157,0,0,144,18,6,0,158,156,0,0,119,0,233,0,1,157,232,106,1,156,2,0,1,158,0,0,134,68,0,0,24,55,6,0,157,156,158,0,41,158,68,16,42,158,158,16,1,156,0,8,19,158,158,156,33,158,158,0,38,158,158,1,19,158,158,154,41,158,158,24,42,158,158,24,33,158,158,0,121,158,18,0,1,158,8,0,134,70,0,0,20,36,6,0,158,0,0,0,1,158,156,2,41,156,70,2,3,158,158,156,1,156,4,0,1,157,0,0,134,71,0,0,24,55,6,0,158,156,157,0,25,156,152,96,134,157,0,0,144,18,6,0,71,156,0,0,119,0,199,0,42,157,148,0,1,156,1,0,1,158,0,0,134,72,0,0,24,55,6,0,157,156,158,0,1,158,156,2,41,156,72,24,42,156,156,24,38,156,156,7,41,156,156,2,3,158,158,156,1,156,4,0,1,157,0,0,134,73,0,0,24,55,6,0,158,156,157,0,25,156,152,104,134,157,0,0,144,18,6,0,73,156,0,0,42,157,148,0,1,156,1,0,1,158,0,0,134,74,0,0,24,55,6,0,157,156,158,0,42,156,148,0,41,157,74,24,42,157,157,24,39,157,157,64,19,157,157,154,1,160,1,0,134,158,0,0,116,78,6,0,156,157,160,0,119,0,162,0,1,151,0,0,2,160,0,0,242,208,0,0,42,160,160,0,1,157,0,0,1,156,1,0,134,158,0,0,116,78,6,0,160,157,156,0,1,156,0,0,1,157,4,0,134,158,0,0,116,78,6,0,153,156,157,0,42,157,155,0,1,156,0,0,1,160,1,0,134,158,0,0,116,78,6,0,157,156,160,0,2,160,0,0,39,217,0,0,42,160,160,0,1,156,0,0,1,157,1,0,134,158,0,0,116,78,6,0,160,156,157,0,119,0,133,0,1,151,0,0,42,157,155,0,1,156,0,0,1,160,1,0,134,158,0,0,116,78,6,0,157,156,160,0,119,0,125,0,1,151,0,0,1,158,204,106,1,160,4,0,1,156,0,0,134,79,0,0,24,55,6,0,158,160,156,0,2,160,0,0,163,204,0,0,1,158,0,0,134,156,0,0,12,210,4,0,79,160,158,0,119,0,111,0,1,151,0,0,1,156,192,106,1,158,4,0,1,160,0,0,134,80,0,0,24,55,6,0,156,158,160,0,2,158,0,0,172,204,0,0,1,156,0,0,134,160,0,0,12,210,4,0,80,158,156,0,119,0,97,0,1,151,0,0,1,160,196,106,1,156,4,0,1,158,0,0,134,81,0,0,24,55,6,0,160,156,158,0,2,158,0,0,5,209,0,0,42,158,158,0,1,156,1,0,1,160,0,0,134,82,0,0,24,55,6,0,158,156,160,0,19,160,82,154,33,160,160,0,2,156,0,0,180,204,0,0,2,158,0,0,184,204,0,0,125,83,160,156,158,0,0,0,2,156,0,0,172,204,0,0,134,158,0,0,12,210,4,0,81,156,83,0,1,158,200,106,1,156,4,0,1,160,0,0,134,84,0,0,24,55,6,0,158,156,160,0,2,160,0,0,5,209,0,0,42,160,160,0,1,156,1,0,1,158,0,0,134,85,0,0,24,55,6,0,160,156,158,0,19,158,85,154,33,158,158,0,2,156,0,0,197,204,0,0,2,160,0,0,201,204,0,0,125,87,158,156,160,0,0,0,2,156,0,0,172,204,0,0,134,160,0,0,12,210,4,0,84,156,87,0,119,0,41,0,1,151,0,0,2,156,0,0,4,209,0,0,42,156,156,0,1,158,1,0,1,157,1,0,134,160,0,0,116,78,6,0,156,158,157,0,134,160,0,0,196,168,2,0,2,157,0,0,4,209,0,0,42,157,157,0,1,158,0,0,1,156,1,0,134,160,0,0,116,78,6,0,157,158,156,0,42,156,155,0,1,158,0,0,1,157,1,0,134,160,0,0,116,78,6,0,156,158,157,0,119,0,15,0,1,151,0,0,42,157,155,0,1,158,0,0,1,156,1,0,134,160,0,0,116,78,6,0,157,158,156,0,0,88,146,0,41,156,88,24,42,156,156,24,134,160,0,0,24,58,6,0,156,0,0,0,119,0,1,0,2,160,0,0,1,209,0,0,42,160,160,0,1,156,1,0,1,158,0,0,134,89,0,0,24,55,6,0,160,156,158,0,41,158,89,24,42,158,158,24,33,158,158,0,120,158,9,0,2,156,0,0,242,208,0,0,42,156,156,0,1,160,0,0,1,157,1,0,134,158,0,0,116,78,6,0,156,160,157,0,2,158,0,0,43,233,0,0,42,158,158,0,1,157,1,0,1,160,0,0,134,90,0,0,24,55,6,0,158,157,160,0,41,160,90,24,42,160,160,24,33,160,160,0,121,160,12,0,2,160,0,0,43,233,0,0,42,160,160,0,1,157,1,0,1,158,0,0,134,92,0,0,24,55,6,0,160,157,158,0,134,158,0,0,184,96,5,0,92,0,0,0,2,158,0,0,1,209,0,0,42,158,158,0,1,157,1,0,1,160,0,0,134,93,0,0,24,55,6,0,158,157,160,0,41,160,93,24,42,160,160,24,33,160,160,0,120,160,9,0,2,157,0,0,242,208,0,0,42,157,157,0,1,158,0,0,1,156,1,0,134,160,0,0,116,78,6,0,157,158,156,0,42,160,155,0,1,156,1,0,1,158,0,0,134,94,0,0,24,55,6,0,160,156,158,0,41,158,94,24,42,158,158,24,33,158,158,0,120,158,219,246,0,95,149,0,25,149,95,1,119,0,216,246,32,158,151,8,121,158,4,0,1,156,1,0,135,158,7,0,156,0,0,0,1,158,2,0,134,96,0,0,148,77,6,0,158,0,0,0,134,158,0,0,152,234,5,0,96,0,0,0,1,158,2,0,134,97,0,0,148,77,6,0,158,0,0,0,134,158,0,0,24,122,5,0,97,0,0,0,1,158,196,106,1,156,4,0,1,160,0,0,134,98,0,0,24,55,6,0,158,156,160,0,1,160,0,0,46,160,98,160,240,231,0,0,1,160,196,106,1,156,4,0,1,158,0,0,134,100,0,0,24,55,6,0,160,156,158,0,25,158,100,52,1,156,4,0,1,160,0,0,134,101,0,0,24,55,6,0,158,156,160,0,32,160,101,3,121,160,4,0,134,160,0,0,152,241,2,0,119,0,4,0,1,151,149,0,119,0,2,0,1,151,149,0,1,160,149,0,45,160,151,160,124,232,0,0,1,160,196,106,1,156,4,0,1,158,0,0,134,102,0,0,24,55,6,0,160,156,158,0,1,158,0,0,46,158,102,158,124,232,0,0,1,158,196,106,1,156,4,0,1,160,0,0,134,103,0,0,24,55,6,0,158,156,160,0,25,160,103,52,1,156,4,0,1,158,0,0,134,104,0,0,24,55,6,0,160,156,158,0,32,158,104,11,121,158,9,0,1,158,50,0,134,105,0,0,20,36,6,0,158,0,0,0,32,158,105,0,121,158,3,0,134,158,0,0,92,19,5,0,1,158,200,106,1,156,4,0,1,160,0,0,134,106,0,0,24,55,6,0,158,156,160,0,1,160,0,0,46,160,106,160,232,232,0,0,1,160,200,106,1,156,4,0,1,158,0,0,134,107,0,0,24,55,6,0,160,156,158,0,25,158,107,52,1,156,4,0,1,160,0,0,134,108,0,0,24,55,6,0,158,156,160,0,32,160,108,3,121,160,5,0,134,160,0,0,152,241,2,0,137,152,0,0,139,0,0,0,1,160,200,106,1,156,4,0,1,158,0,0,134,109,0,0,24,55,6,0,160,156,158,0,1,158,0,0,53,158,109,158,20,233,0,0,137,152,0,0,139,0,0,0,1,158,200,106,1,156,4,0,1,160,0,0,134,110,0,0,24,55,6,0,158,156,160,0,25,160,110,52,1,156,4,0,1,158,0,0,134,111,0,0,24,55,6,0,160,156,158,0,32,158,111,11,120,158,3,0,137,152,0,0,139,0,0,0,1,158,50,0,134,112,0,0,20,36,6,0,158,0,0,0,32,158,112,0,120,158,3,0,137,152,0,0,139,0,0,0,134,158,0,0,92,19,5,0,137,152,0,0,139,0,0,0,140,0,177,0,0,0,0,0,2,169,0,0,255,0,0,0,2,170,0,0,192,26,0,0,2,171,0,0,255,255,0,0,1,167,0,0,136,172,0,0,0,168,172,0,136,172,0,0,1,173,208,0,3,172,172,173,137,172,0,0,130,172,0,0,136,173,0,0,49,172,172,173,212,233,0,0,135,172,0,0,1,161,0,0,2,172,0,0,39,46,1,0,1,173,63,0,134,1,0,0,52,196,3,0,172,173,0,0,0,163,1,0,0,2,163,0,1,173,0,0,45,173,2,173,12,234,0,0,137,168,0,0,139,0,0,0,0,92,163,0,25,173,92,8,1,172,4,0,1,174,0,0,134,139,0,0,24,55,6,0,173,172,174,0,33,174,139,63,121,174,29,0,2,174,0,0,5,209,0,0,42,174,174,0,1,172,1,0,1,173,0,0,134,149,0,0,24,55,6,0,174,172,173,0,41,173,149,24,42,173,173,24,33,173,173,0,121,173,10,0,2,172,0,0,75,46,1,0,25,174,168,8,134,173,0,0,144,18,6,0,172,174,0,0,137,168,0,0,139,0,0,0,119,0,8,0,2,174,0,0,44,46,1,0,134,173,0,0,144,18,6,0,174,168,0,0,137,168,0,0,139,0,0,0,0,155,163,0,1,173,204,106,1,174,4,0,1,172,0,0,134,3,0,0,24,55,6,0,173,174,172,0,45,172,155,3,220,234,0,0,1,174,204,106,1,173,0,0,1,175,4,0,134,172,0,0,116,78,6,0,174,173,175,0,0,13,163,0,25,172,13,48,1,175,4,0,1,173,0,0,134,24,0,0,24,55,6,0,172,175,173,0,32,173,24,1,38,173,173,1,19,173,173,169,0,161,173,0,0,47,163,0,1,175,0,0,1,172,0,0,134,173,0,0,176,164,4,0,47,175,172,0,0,53,163,0,0,59,163,0,25,173,59,52,1,172,4,0,1,175,0,0,134,64,0,0,24,55,6,0,173,172,175,0,1,173,0,0,1,174,18,0,138,64,173,174,152,235,0,0,24,236,0,0,236,241,0,0,212,244,0,0,156,245,0,0,148,246,0,0,156,247,0,0,160,247,0,0,164,247,0,0,168,247,0,0,172,247,0,0,204,247,0,0,88,249,0,0,184,249,0,0,184,251,0,0,176,254,0,0,116,255,0,0,156,255,0,0,119,0,56,5,1,175,232,106,1,172,2,0,1,173,0,0,134,66,0,0,24,55,6,0,175,172,173,0,1,172,232,106,41,175,66,16,42,175,175,16,39,175,175,1,19,175,175,171,1,174,2,0,134,173,0,0,116,78,6,0,172,175,174,0,2,173,0,0,91,46,1,0,134,75,0,0,24,24,6,0,173,0,0,0,25,174,168,16,1,175,4,0,134,173,0,0,116,78,6,0,174,75,175,0,2,175,0,0,95,46,1,0,25,174,168,16,134,173,0,0,144,18,6,0,175,174,0,0,119,0,24,5,1,173,32,19,42,173,173,0,1,172,1,0,1,175,1,0,134,174,0,0,116,78,6,0,173,172,175,0,2,175,0,0,75,47,1,0,25,172,168,96,134,174,0,0,144,18,6,0,175,172,0,0,1,166,1,0,0,55,166,0,34,174,55,23,120,174,2,0,119,0,6,5,1,165,0,0,0,56,165,0,34,174,56,80,120,174,2,0,119,0,92,1,0,57,165,0,0,58,166,0,41,174,57,5,3,174,174,58,41,174,174,3,3,164,170,174,42,174,164,0,1,172,1,0,1,175,0,0,134,60,0,0,24,55,6,0,174,172,175,0,0,160,60,0,41,175,60,24,42,175,175,24,1,172,32,0,1,174,93,0,138,175,172,174,56,238,0,0,48,238,0,0,48,238,0,0,216,238,0,0,48,238,0,0,224,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,228,238,0,0,48,238,0,0,232,238,0,0,124,239,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,48,238,0,0,24,240,0,0,1,167,66,0,119,0,122,0,25,172,164,1,42,172,172,0,1,174,1,0,1,173,0,0,134,63,0,0,24,55,6,0,172,174,173,0,41,173,63,24,42,173,173,24,38,173,173,16,33,173,173,0,121,173,3,0,1,167,66,0,119,0,108,0,25,173,164,1,42,173,173,0,1,174,1,0,1,172,0,0,134,65,0,0,24,55,6,0,173,174,172,0,25,174,164,1,42,174,174,0,41,173,65,24,42,173,173,24,39,173,173,16,19,173,173,169,1,176,1,0,134,172,0,0,116,78,6,0,174,173,176,0,42,176,164,0,1,173,35,0,1,174,1,0,134,172,0,0,116,78,6,0,176,173,174,0,1,160,35,0,1,167,60,0,119,0,82,0,1,167,60,0,119,0,80,0,119,0,79,0,119,0,78,0,25,172,164,1,42,172,172,0,1,174,1,0,1,173,0,0,134,61,0,0,24,55,6,0,172,174,173,0,41,173,61,24,42,173,173,24,38,173,173,16,33,173,173,0,120,173,66,0,42,174,164,0,1,172,43,0,1,176,1,0,134,173,0,0,116,78,6,0,174,172,176,0,1,160,43,0,25,173,164,1,42,173,173,0,1,176,1,0,1,172,0,0,134,62,0,0,24,55,6,0,173,176,172,0,25,176,164,1,42,176,176,0,41,173,62,24,42,173,173,24,39,173,173,16,19,173,173,169,1,174,1,0,134,172,0,0,116,78,6,0,176,173,174,0,119,0,41,0,25,172,164,1,42,172,172,0,1,174,1,0,1,173,0,0,134,69,0,0,24,55,6,0,172,174,173,0,41,173,69,24,42,173,173,24,38,173,173,16,33,173,173,0,121,173,3,0,1,160,32,0,119,0,27,0,1,160,94,0,42,174,164,0,1,172,94,0,1,176,1,0,134,173,0,0,116,78,6,0,174,172,176,0,25,173,164,1,42,173,173,0,1,176,1,0,1,172,0,0,134,70,0,0,24,55,6,0,173,176,172,0,25,176,164,1,42,176,176,0,41,173,70,24,42,173,173,24,39,173,173,80], eb + 51200);
  HEAPU8.set([19,173,173,169,1,174,1,0,134,172,0,0,116,78,6,0,176,173,174,0,119,0,2,0,119,0,180,255,32,175,167,66,121,175,18,0,1,167,0,0,25,175,164,1,42,175,175,0,1,172,1,0,1,174,0,0,134,71,0,0,24,55,6,0,175,172,174,0,41,174,71,24,42,174,174,24,1,172,128,0,19,174,174,172,33,174,174,0,121,174,3,0,1,167,60,0,119,0,2,0,1,160,32,0,32,174,167,60,121,174,38,0,1,167,0,0,25,174,164,1,42,174,174,0,1,172,1,0,1,175,0,0,134,67,0,0,24,55,6,0,174,172,175,0,41,175,67,24,42,175,175,24,38,175,175,16,33,175,175,0,120,175,7,0,42,172,164,0,1,174,35,0,1,173,1,0,134,175,0,0,116,78,6,0,172,174,173,0,25,175,164,1,42,175,175,0,1,173,1,0,1,174,0,0,134,68,0,0,24,55,6,0,175,173,174,0,25,173,164,1,42,173,173,0,41,175,68,24,42,175,175,24,39,175,175,80,19,175,175,169,1,172,1,0,134,174,0,0,116,78,6,0,173,175,172,0,1,160,35,0,0,72,160,0,41,174,72,24,42,174,174,24,33,174,174,32,121,174,48,0,25,174,164,4,1,172,4,0,1,175,0,0,134,73,0,0,24,55,6,0,174,172,175,0,0,163,73,0,1,175,0,0,46,175,73,175,96,241,0,0,0,74,160,0,0,76,163,0,25,172,76,19,42,172,172,0,1,174,1,0,134,175,0,0,116,78,6,0,172,74,174,0,0,77,163,0,1,175,0,0,52,175,77,175,180,241,0,0,1,175,232,106,1,174,2,0,1,172,0,0,134,78,0,0,24,55,6,0,175,174,172,0,41,172,78,16,42,172,172,16,1,174,0,64,19,172,172,174,33,172,172,0,38,172,172,1,19,172,172,169,41,172,172,24,42,172,172,24,33,172,172,0,120,172,9,0,0,80,166,0,0,81,165,0,0,82,160,0,41,174,82,24,42,174,174,24,134,172,0,0,208,39,6,0,80,81,174,0,0,83,165,0,25,165,83,1,119,0,162,254,0,84,166,0,25,166,84,1,119,0,154,254,1,160,0,0,1,175,216,106,1,174,4,0,1,173,0,0,134,133,0,0,24,55,6,0,175,174,173,0,26,165,133,2,0,134,165,0,1,173,216,106,1,174,4,0,1,175,0,0,134,135,0,0,24,55,6,0,173,174,175,0,25,175,135,2,56,175,134,175,56,242,0,0,119,0,111,0,0,136,165,0,0,137,165,0,1,175,0,0,17,175,175,136,34,174,137,80,19,175,175,174,121,175,101,0,1,175,220,106,1,174,4,0,1,173,0,0,134,138,0,0,24,55,6,0,175,174,173,0,26,166,138,2,0,140,166,0,1,173,220,106,1,174,4,0,1,175,0,0,134,141,0,0,24,55,6,0,173,174,175,0,25,175,141,2,56,175,140,175,156,242,0,0,119,0,83,0,0,142,166,0,0,143,166,0,1,175,0,0,17,175,175,142,36,174,143,23,19,175,175,174,121,175,73,0,0,144,165,0,0,145,166,0,41,175,144,5,3,175,175,145,41,175,175,3,3,175,170,175,25,175,175,4,1,174,4,0,1,173,0,0,134,146,0,0,24,55,6,0,175,174,173,0,0,163,146,0,1,173,0,0,46,173,146,173,216,243,0,0,0,147,163,0,25,173,147,24,1,174,2,0,1,175,0,0,134,148,0,0,24,55,6,0,173,174,175,0,41,175,148,16,42,175,175,16,1,174,0,32,19,175,175,174,33,175,175,0,38,175,175,1,19,175,175,169,19,175,175,169,33,175,175,0,121,175,40,0,0,150,163,0,25,175,150,24,1,174,2,0,1,173,0,0,134,151,0,0,24,55,6,0,175,174,173,0,25,174,150,24,41,175,151,16,42,175,175,16,1,172,255,223,19,175,175,172,19,175,175,171,1,172,2,0,134,173,0,0,116,78,6,0,174,175,172,0,0,152,163,0,25,173,152,24,1,172,2,0,1,175,0,0,134,153,0,0,24,55,6,0,173,172,175,0,25,172,152,24,41,173,153,16,42,173,173,16,1,174,0,1,20,173,173,174,19,173,173,171,1,174,2,0,134,175,0,0,116,78,6,0,172,173,174,0,0,154,160,0,25,175,154,1,41,175,175,24,42,175,175,24,0,160,175,0,0,156,166,0,25,166,156,1,119,0,164,255,0,157,165,0,25,165,157,1,119,0,136,255,0,158,160,0,41,175,158,24,42,175,175,24,33,175,175,0,120,175,8,0,2,174,0,0,196,46,1,0,25,173,168,64,134,175,0,0,144,18,6,0,174,173,0,0,119,0,22,3,2,173,0,0,163,46,1,0,25,174,168,32,134,175,0,0,112,85,6,0,173,174,0,0,0,159,160,0,1,175,1,0,41,174,159,24,42,174,174,24,47,175,175,174,104,244,0,0,2,174,0,0,175,46,1,0,25,173,168,40,134,175,0,0,112,85,6,0,174,173,0,0,2,173,0,0,188,46,1,0,25,174,168,48,134,175,0,0,112,85,6,0,173,174,0,0,0,4,160,0,41,175,4,24,42,175,175,24,32,175,175,1,121,175,7,0,2,174,0,0,222,50,1,0,25,173,168,56,134,175,0,0,112,85,6,0,174,173,0,0,134,175,0,0,120,187,4,0,1,173,52,19,42,173,173,0,1,174,1,0,1,172,1,0,134,175,0,0,116,78,6,0,173,174,172,0,119,0,233,2,1,172,72,19,42,172,172,0,1,174,1,0,1,173,1,0,134,175,0,0,116,78,6,0,172,174,173,0,1,175,5,0,134,5,0,0,148,77,6,0,175,0,0,0,134,6,0,0,20,36,6,0,5,0,0,0,1,175,0,3,1,173,4,0,1,174,0,0,134,7,0,0,24,55,6,0,175,173,174,0,1,173,0,3,25,175,6,4,3,175,7,175,1,172,4,0,134,174,0,0,116,78,6,0,173,175,172,0,1,174,232,106,1,172,2,0,1,175,0,0,134,8,0,0,24,55,6,0,174,172,175,0,1,172,232,106,41,174,8,16,42,174,174,16,1,173,255,223,19,174,174,173,19,174,174,171,1,173,2,0,134,175,0,0,116,78,6,0,172,174,173,0,2,173,0,0,229,46,1,0,25,174,168,72,134,175,0,0,144,18,6,0,173,174,0,0,119,0,183,2,1,173,192,106,1,174,4,0,1,175,0,0,134,79,0,0,24,55,6,0,173,174,175,0,1,175,0,0,46,175,79,175,144,246,0,0,1,175,192,106,1,174,4,0,1,173,0,0,134,93,0,0,24,55,6,0,175,174,173,0,25,173,93,64,1,174,4,0,1,175,0,0,134,106,0,0,24,55,6,0,173,174,175,0,25,174,93,64,26,173,106,1,1,172,4,0,134,175,0,0,116,78,6,0,174,173,172,0,1,175,192,106,1,172,4,0,1,173,0,0,134,118,0,0,24,55,6,0,175,172,173,0,25,173,118,68,1,172,4,0,1,175,0,0,134,131,0,0,24,55,6,0,173,172,175,0,25,172,118,68,38,173,131,254,1,174,4,0,134,175,0,0,116,78,6,0,172,173,174,0,2,175,0,0,123,46,1,0,134,132,0,0,24,24,6,0,175,0,0,0,25,174,168,24,1,173,4,0,134,175,0,0,116,78,6,0,174,132,173,0,2,173,0,0,130,46,1,0,25,174,168,24,134,175,0,0,144,18,6,0,173,174,0,0,119,0,121,2,0,45,163,0,25,173,45,52,1,175,4,0,1,174,0,0,134,46,0,0,24,55,6,0,173,175,174,0,1,175,252,18,27,173,46,20,3,175,175,173,25,175,175,16,42,175,175,0,1,173,1,0,1,172,1,0,134,174,0,0,116,78,6,0,175,173,172,0,0,48,163,0,25,174,48,52,1,172,4,0,1,173,0,0,134,49,0,0,24,55,6,0,174,172,173,0,1,173,252,18,27,172,49,20,3,173,173,172,1,172,4,0,1,174,0,0,134,50,0,0,24,55,6,0,173,172,174,0,25,172,168,88,1,173,4,0,134,174,0,0,116,78,6,0,172,50,173,0,2,173,0,0,37,47,1,0,25,172,168,88,134,174,0,0,144,18,6,0,173,172,0,0,0,51,163,0,25,174,51,52,1,172,4,0,1,173,0,0,134,52,0,0,24,55,6,0,174,172,173,0,2,173,0,0,65,47,1,0,3,173,173,52,42,173,173,0,1,172,1,0,1,174,0,0,134,54,0,0,24,55,6,0,173,172,174,0,1,172,1,0,41,173,54,24,42,173,173,24,134,174,0,0,12,65,4,0,172,173,0,0,119,0,55,2,119,0,190,255,119,0,189,255,119,0,188,255,119,0,187,255,2,172,0,0,205,47,1,0,1,174,128,0,3,174,168,174,134,173,0,0,144,18,6,0,172,174,0,0,119,0,43,2,1,160,0,0,1,172,120,3,1,174,4,0,1,175,0,0,134,85,0,0,24,55,6,0,172,174,175,0,134,175,0,0,164,64,6,0,85,0,0,0,1,175,112,3,1,174,4,0,1,172,0,0,134,86,0,0,24,55,6,0,175,174,172,0,0,163,86,0,0,87,163,0,1,172,0,0,53,172,87,172,36,248,0,0,119,0,53,0,0,88,163,0,25,172,88,8,1,174,4,0,1,175,0,0,134,89,0,0,24,55,6,0,172,174,175,0,32,175,89,58,121,175,36,0,1,160,1,0,1,175,120,3,1,174,4,0,1,172,0,0,134,90,0,0,24,55,6,0,175,174,172,0,0,91,163,0,25,172,91,12,25,172,172,4,1,174,4,0,1,175,0,0,134,94,0,0,24,55,6,0,172,174,175,0,0,95,163,0,25,175,95,12,1,174,4,0,1,172,0,0,134,96,0,0,24,55,6,0,175,174,172,0,134,172,0,0,164,140,5,0,90,94,96,0,1,172,120,3,1,174,4,0,1,175,0,0,134,97,0,0,24,55,6,0,172,174,175,0,1,174,58,0,134,175,0,0,64,245,1,0,97,174,0,0,0,98,163,0,1,175,4,0,1,174,0,0,134,99,0,0,24,55,6,0,98,175,174,0,0,163,99,0,119,0,200,255,0,100,160,0,41,174,100,24,42,174,174,24,33,174,174,0,121,174,14,0,1,175,232,19,42,175,175,0,1,172,1,0,1,173,1,0,134,174,0,0,116,78,6,0,175,172,173,0,2,173,0,0,111,47,1,0,134,174,0,0,44,11,6,0,173,0,0,0,119,0,207,1,2,173,0,0,157,47,1,0,25,172,168,104,134,174,0,0,144,18,6,0,173,172,0,0,119,0,200,1,1,174,20,107,1,172,4,0,1,173,0,0,134,101,0,0,24,55,6,0,174,172,173,0,134,173,0,0,92,19,5,0,1,173,20,107,1,172,4,0,1,174,0,0,134,102,0,0,24,55,6,0,173,172,174,0,46,174,101,102,180,249,0,0,1,172,252,19,42,172,172,0,1,173,1,0,1,175,1,0,134,174,0,0,116,78,6,0,172,173,175,0,119,0,176,1,1,174,204,106,1,175,4,0,1,173,0,0,134,103,0,0,24,55,6,0,174,175,173,0,1,173,0,0,52,173,103,173,156,251,0,0,1,173,204,106,1,175,4,0,1,174,0,0,134,104,0,0,24,55,6,0,173,175,174,0,25,174,104,8,1,175,4,0,1,173,0,0,134,105,0,0,24,55,6,0,174,175,173,0,33,173,105,41,120,173,99,0,1,173,204,106,1,175,4,0,1,174,0,0,134,107,0,0,24,55,6,0,173,175,174,0,25,174,107,68,1,175,4,0,1,173,0,0,134,108,0,0,24,55,6,0,174,175,173,0,25,175,107,68,38,174,108,254,1,172,4,0,134,173,0,0,116,78,6,0,175,174,172,0,1,173,2,0,134,109,0,0,20,36,6,0,173,0,0,0,1,173,204,106,1,172,4,0,1,174,0,0,134,110,0,0,24,55,6,0,173,172,174,0,32,174,109,0,121,174,14,0,25,174,110,56,1,172,4,0,1,173,0,0,134,111,0,0,24,55,6,0,174,172,173,0,25,172,110,56,25,174,111,1,1,175,4,0,134,173,0,0,116,78,6,0,172,174,175,0,119,0,13,0,25,173,110,60,1,175,4,0,1,174,0,0,134,112,0,0,24,55,6,0,173,175,174,0,25,175,110,60,25,173,112,1,1,172,4,0,134,174,0,0,116,78,6,0,175,173,172,0,1,174,204,106,1,172,4,0,1,173,0,0,134,113,0,0,24,55,6,0,174,172,173,0,25,173,113,52,1,172,4,0,1,174,0,0,134,114,0,0,24,55,6,0,173,172,174,0,1,174,100,20,27,172,114,20,3,174,174,172,1,172,4,0,1,173,0,0,134,115,0,0,24,55,6,0,174,172,173,0,2,173,0,0,27,49,1,0,134,116,0,0,24,24,6,0,173,0,0,0,25,172,168,120,1,174,4,0,134,173,0,0,116,78,6,0,172,115,174,0,25,174,168,120,25,174,174,4,1,172,4,0,134,173,0,0,116,78,6,0,174,116,172,0,2,172,0,0,175,47,1,0,25,174,168,120,134,173,0,0,144,18,6,0,172,174,0,0,119,0,55,1,2,174,0,0,196,46,1,0,25,172,168,112,134,173,0,0,144,18,6,0,174,172,0,0,119,0,48,1,1,162,0,0,1,175,220,106,1,174,4,0,1,173,0,0,134,9,0,0,24,55,6,0,175,174,173,0,26,166,9,1,0,10,166,0,1,173,220,106,1,174,4,0,1,175,0,0,134,11,0,0,24,55,6,0,173,174,175,0,25,175,11,1,56,175,10,175,4,252,0,0,119,0,148,0,1,175,216,106,1,174,4,0,1,173,0,0,134,12,0,0,24,55,6,0,175,174,173,0,26,165,12,1,0,14,165,0,1,173,216,106,1,174,4,0,1,175,0,0,134,15,0,0,24,55,6,0,173,174,175,0,0,16,166,0,25,175,15,1,56,175,14,175,80,252,0,0,119,0,127,0,1,175,220,106,1,174,4,0,1,173,0,0,134,17,0,0,24,55,6,0,175,174,173,0,45,173,16,17,156,252,0,0,0,18,165,0,1,173,216,106,1,174,4,0,1,175,0,0,134,19,0,0,24,55,6,0,173,174,175,0,52,175,18,19,152,252,0,0,1,167,37,0,119,0,2,0,1,167,37,0,32,175,167,37,121,175,102,0,1,167,0,0,0,20,165,0,0,21,166,0,41,175,20,5,3,175,175,21,41,175,175,3,3,175,170,175,25,175,175,4,1,174,4,0,1,173,0,0,134,22,0,0,24,55,6,0,175,174,173,0,0,23,165,0,0,25,166,0,1,173,0,0,46,173,22,173,60,253,0,0,41,173,23,5,3,173,173,25,41,173,173,3,3,173,170,173,25,173,173,4,1,174,4,0,1,175,0,0,134,26,0,0,24,55,6,0,173,174,175,0,25,175,26,18,42,175,175,0,1,174,1,0,1,173,0,0,134,27,0,0,24,55,6,0,175,174,173,0,0,0,27,0,119,0,12,0,41,173,23,5,3,173,173,25,41,173,173,3,3,173,170,173,42,173,173,0,1,174,1,0,1,175,0,0,134,28,0,0,24,55,6,0,173,174,175,0,0,0,28,0,41,175,0,24,42,175,175,24,0,29,175,0,19,175,29,169,0,160,175,0,19,175,29,169,41,175,175,24,42,175,175,24,134,30,0,0,232,58,6,0,175,0,0,0,33,175,30,0,121,175,41,0,0,31,160,0,41,175,31,24,42,175,175,24,32,175,175,63,121,175,14,0,0,32,166,0,0,33,165,0,134,34,0,0,212,193,5,0,32,33,0,0,25,175,34,52,1,174,4,0,1,173,0,0,134,35,0,0,24,55,6,0,175,174,173,0,32,173,35,10,120,173,23,0,0,36,162,0,25,162,36,1,25,173,36,1,134,37,0,0,20,36,6,0,173,0,0,0,32,173,37,0,121,173,15,0,0,38,166,0,2,174,0,0,72,159,0,0,1,175,4,0,134,173,0,0,116,78,6,0,174,38,175,0,0,39,165,0,2,175,0,0,68,159,0,0,1,174,4,0,134,173,0,0,116,78,6,0,175,39,174,0,0,40,165,0,25,165,40,1,119,0,119,255,25,166,16,1,119,0,99,255,0,41,162,0,32,173,41,0,121,173,8,0,2,174,0,0,245,46,1,0,25,175,168,80,134,173,0,0,144,18,6,0,174,175,0,0,119,0,128,0,134,42,0,0,56,80,6,0,0,163,42,0,0,43,163,0,1,173,0,0,134,44,0,0,24,191,5,0,173,0,0,0,2,175,0,0,68,159,0,0,134,173,0,0,8,13,3,0,43,44,175,0,119,0,114,0,1,173,192,106,1,174,4,0,1,172,0,0,134,117,0,0,24,55,6,0,173,174,172,0,134,172,0,0,92,67,6,0,117,0,0,0,1,172,204,106,1,174,4,0,1,173,0,0,134,119,0,0,24,55,6,0,172,174,173,0,134,173,0,0,92,67,6,0,119,0,0,0,1,173,196,106,1,174,4,0,1,172,0,0,134,120,0,0,24,55,6,0,173,174,172,0,134,172,0,0,92,67,6,0,120,0,0,0,1,172,200,106,1,174,4,0,1,173,0,0,134,121,0,0,24,55,6,0,172,174,173,0,134,173,0,0,92,67,6,0,121,0,0,0,2,173,0,0,248,47,1,0,2,174,0,0,36,48,1,0,134,122,0,0,224,49,6,0,173,174,0,0,1,173,136,0,3,173,168,173,134,174,0,0,144,18,6,0,122,173,0,0,119,0,65,0,134,174,0,0,8,63,6,0,2,173,0,0,81,48,1,0,1,172,144,0,3,172,168,172,134,174,0,0,144,18,6,0,173,172,0,0,119,0,55,0,1,174,192,106,1,172,4,0,1,173,0,0,134,123,0,0,24,55,6,0,174,172,173,0,1,173,0,0,46,173,123,173,84,0,1,0,1,173,192,106,1,172,4,0,1,174,0,0,134,124,0,0,24,55,6,0,173,172,174,0,25,174,124,68,1,172,4,0,1,173,0,0,134,125,0,0,24,55,6,0,174,172,173,0,25,172,124,68,39,174,125,32,1,175,4,0,134,173,0,0,116,78,6,0,172,174,175,0,2,173,0,0,119,48,1,0,134,126,0,0,24,24,6,0,173,0,0,0,1,175,152,0,3,175,168,175,1,174,4,0,134,173,0,0,116,78,6,0,175,126,174,0,2,174,0,0,124,48,1,0,1,175,152,0,3,175,168,175,134,173,0,0,144,18,6,0,174,175,0,0,119,0,9,0,2,175,0,0,196,46,1,0,1,174,160,0,3,174,168,174,134,173,0,0,144,18,6,0,175,174,0,0,119,0,1,0,0,163,53,0,1,174,1,0,134,173,0,0,204,39,1,0,174,0,0,0,134,173,0,0,196,168,2,0,0,127,163,0,25,173,127,52,1,174,4,0,1,175,0,0,134,128,0,0,24,55,6,0,173,174,175,0,1,174,252,18,27,173,128,20,3,174,174,173,134,175,0,0,236,249,4,0,174,0,0,0,0,129,161,0,41,175,129,24,42,175,175,24,33,175,175,0,120,175,3,0,137,168,0,0,139,0,0,0,0,130,163,0,134,175,0,0,100,97,6,0,130,0,0,0,137,168,0,0,139,0,0,0,140,2,169,0,0,0,0,0,2,162,0,0,60,197,0,0,2,163,0,0,84,197,0,0,2,164,0,0,44,197,0,0,1,160,0,0,136,165,0,0,0,161,165,0,25,165,0,4,1,166,4,0,1,167,0,0,134,51,0,0,24,55,6,0,165,166,167,0,38,167,51,1,32,167,167,0,121,167,204,1,1,167,4,0,1,166,0,0,134,118,0,0,24,55,6,0,0,167,166,0,38,166,51,3,32,166,166,0,121,166,2,0,139,0,0,0,1,166,0,0,4,166,166,118,3,136,0,166,1,166,4,0,1,167,0,0,134,11,0,0,24,55,6,0,162,166,167,0,48,167,136,11,152,1,1,0,135,167,8,0,2,167,0,0,64,197,0,0,1,166,4,0,1,165,0,0,134,24,0,0,24,55,6,0,167,166,165,0,45,165,136,24,104,2,1,0,25,165,1,4,3,165,0,165,1,166,4,0,1,167,0,0,134,8,0,0,24,55,6,0,165,166,167,0,38,167,8,3,32,167,167,3,120,167,4,0,0,2,136,0,3,3,118,1,119,0,164,1,2,166,0,0,52,197,0,0,3,165,118,1,1,168,4,0,134,167,0,0,116,78,6,0,166,165,168,0,25,168,1,4,3,168,0,168,38,165,8,254,1,166,4,0,134,167,0,0,116,78,6,0,168,165,166,0,1,166,4,0,4,166,166,118,3,166,0,166,3,165,118,1,39,165,165,1,1,168,4,0,134,167,0,0,116,78,6,0,166,165,168,0,3,168,0,1,3,165,118,1,1,166,4,0,134,167,0,0,116,78,6,0,168,165,166,0,139,0,0,0,1,167,0,1,48,167,118,167,208,3,1,0,1,167,8,0,4,167,167,118,3,167,0,167,1,166,4,0,1,165,0,0,134,41,0,0,24,55,6,0,167,166,165,0,1,165,12,0,4,165,165,118,3,165,0,165,1,166,4,0,1,167,0,0,134,52,0,0,24,55,6,0,165,166,167,0,43,167,118,3,41,167,167,1,41,167,167,2,3,167,163,167,52,167,41,167,252,2,1,0,48,167,41,11,216,2,1,0,135,167,8,0,25,167,41,12,1,166,4,0,1,165,0,0,134,78,0,0,24,55,6,0,167,166,165,0,52,165,78,136,252,2,1,0,135,165,8,0,45,165,52,41,72,3,1,0,1,165,4,0,1,166,0,0,134,112,0,0,24,55,6,0,164,165,166,0,1,165,1,0,43,167,118,3,22,165,165,167,40,165,165,255,19,165,112,165,1,167,4,0,134,166,0,0,116,78,6,0,164,165,167,0,0,2,136,0,3,3,118,1,119,0,78,1,43,166,118,3,41,166,166,1,41,166,166,2,3,166,163,166,45,166,52,166,104,3,1,0,25,6,52,8,119,0,15,0,48,166,52,11,116,3,1,0,135,166,8,0,25,166,52,8,1,167,4,0,1,165,0,0,134,113,0,0,24,55,6,0,166,167,165,0,45,165,113,136,156,3,1,0,25,6,52,8,119,0,2,0,135,165,8,0,25,167,41,12,1,166,4,0,134,165,0,0,116,78,6,0,167,52,166,0,1,166,4,0,134,165,0,0,116,78,6,0,6,41,166,0,0,2,136,0,3,3,118,1,119,0,44,1,1,165,24,0,4,165,165,118,3,165,0,165,1,166,4,0,1,167,0,0,134,114,0,0,24,55,6,0,165,166,167,0,1,167,12,0,4,167,167,118,3,167,0,167,1,166,4,0,1,165,0,0,134,115,0,0,24,55,6,0,167,166,165,0,45,165,115,136,60,5,1,0,1,165,16,0,4,165,165,118,25,165,165,4,3,165,0,165,1,166,4,0,1,167,0,0,134,120,0,0,24,55,6,0,165,166,167,0,1,167,0,0,45,167,120,167,144,4,1,0,1,167,16,0,4,167,167,118,3,167,0,167,1,166,4,0,1,165,0,0,134,121,0,0,24,55,6,0,167,166,165,0,1,165,0,0,45,165,121,165,124,4,1,0,1,146,0,0,119,0,90,0,0,144,121,0,1,165,16,0,4,165,165,118,3,150,0,165,119,0,6,0,0,144,120,0,1,165,16,0,4,165,165,118,25,165,165,4,3,150,0,165,25,122,144,20,1,165,4,0,1,166,0,0,134,123,0,0,24,55,6,0,122,165,166,0,1,166,0,0,52,166,123,166,212,4,1,0,0,144,123,0,0,150,122,0,119,0,245,255,25,124,144,16,1,166,4,0,1,165,0,0,134,125,0,0,24,55,6,0,124,166,165,0,1,165,0,0,45,165,125,165,4,5,1,0,0,145,144,0,0,151,150,0,119,0,4,0,0,144,125,0,0,150,124,0,119,0,230,255,48,165,151,11,32,5,1,0,135,165,8,0,119,0,49,0,1,166,0,0,1,167,4,0,134,165,0,0,116,78,6,0,151,166,167,0,0,146,145,0,119,0,42,0,1,165,8,0,4,165,165,118,3,165,0,165,1,167,4,0,1,166,0,0,134,116,0,0,24,55,6,0,165,167,166,0,48,166,116,11,104,5,1,0,135,166,8,0,25,166,116,12,1,167,4,0,1,165,0,0,134,117,0,0,24,55,6,0,166,167,165,0,52,165,117,136,140,5,1,0,135,165,8,0,25,165,115,8,1,167,4,0,1,166,0,0,134,119,0,0,24,55,6,0,165,167,166,0,45,166,119,136,220,5,1,0,25,167,116,12,1,165,4,0,134,166,0,0,116,78,6,0,167,115,165,0,25,165,115,8,1,167,4,0,134,166,0,0,116,78,6,0,165,116,167,0,0,146,115,0,119,0,2,0,135,166,8,0,1,166,0,0,45,166,114,166,248,5,1,0,0,2,136,0,3,3,118,1,119,0,162,0,1,166,28,0,4,166,166,118,3,166,0,166,1,167,4,0,1,165,0,0,134,126,0,0,24,55,6,0,166,167,165,0,2,165,0,0,92,198,0,0,41,167,126,2,3,165,165,167,1,167,4,0,1,166,0,0,134,127,0,0,24,55,6,0,165,167,166,0,45,166,136,127,192,6,1,0,2,167,0,0,92,198,0,0,41,165,126,2,3,167,167,165,1,165,4,0,134,166,0,0,116,78,6,0,167,146,165,0,1,166,0,0,13,157,146,166,121,157,54,0,2,166,0,0,48,197,0,0,1,165,4,0,1,167,0,0,134,128,0,0,24,55,6,0,166,165,167,0,2,165,0,0,48,197,0,0,1,166,1,0,22,166,166,126,40,166,166,255,19,166,128,166,1,168,4,0,134,167,0,0,116,78,6,0,165,166,168,0,0,2,136,0,3,3,118,1,119,0,112,0,1,167,4,0,1,168,0,0,134,129,0,0,24,55,6,0,162,167,168,0,48,168,114,129,224,6,1,0,135,168,8,0,25,168,114,16,1,167,4,0,1,166,0,0,134,130,0,0,24,55,6,0,168,167,166,0,45,166,130,136,24,7,1,0,25,167,114,16,1,168,4,0,134,166,0,0,116,78,6,0,167,146,168,0,119,0,6,0,25,168,114,20,1,167,4,0,134,166,0,0,116,78,6,0,168,146,167,0,1,166,0,0,13,131,146,166,121,131,4,0,0,2,136,0,3,3,118,1,119,0,79,0,1,166,4,0,1,167,0,0,134,132,0,0,24,55,6,0,162,166,167,0,16,133,146,132,121,133,2,0,135,167,8,0,25,134,146,24,1,166,4,0,134,167,0,0,116,78,6,0,134,114,166,0,1,167,16,0,4,167,167,118,3,167,0,167,1,166,4,0,1,168,0,0,134,135,0,0,24,55,6,0,167,166,168,0,1,168,0,0,52,168,135,168,224,7,1,0,48,168,135,132,180,7,1,0,135,168,8,0,119,0,12,0,25,137,146,16,1,166,4,0,134,168,0,0,116,78,6,0,137,135,166,0,25,166,135,24,1,167,4,0,134,168,0,0,116,78,6,0,166,146,167,0,119,0,1,0,1,168,16,0,4,168,168,118,25,168,168,4,3,168,0,168,1,167,4,0,1,166,0,0,134,138,0,0,24,55,6,0,168,167,166,0,1,166,0,0,45,166,138,166,28,8,1,0,0,2,136,0,3,3,118,1,119,0,25,0,1,166,4,0,1,167,0,0,134,139,0,0,24,55,6,0,162,166,167,0,48,167,138,139,64,8,1,0,135,167,8,0,119,0,16,0,25,140,146,20,1,166,4,0,134,167,0,0,116,78,6,0,140,138,166,0,25,166,138,24,1,168,4,0,134,167,0,0,116,78,6,0,166,146,168,0,0,2,136,0,3,3,118,1,119,0,3,0,0,2,0,0,0,3,1,0,1,167,4,0,1,168,0,0,134,9,0,0,24,55,6,0,162,167,168,0,3,168,0,1,48,168,168,9,160,8,1,0,135,168,8,0,25,168,1,4,3,168,0,168,1,167,4,0,1,166,0,0,134,10,0,0,24,55,6,0,168,167,166,0,38,166,10,2,32,166,166,0,121,166,242,1,2,166,0,0,68,197,0,0,1,167,4,0,1,168,0,0,134,12,0,0,24,55,6,0,166,167,168,0,3,168,0,1,45,168,168,12,188,9,1,0,2,168,0,0,56,197,0,0,1,167,4,0,1,166,0,0,134,13,0,0,24,55,6,0,168,167,166,0,3,14,13,3,2,167,0,0,56,197,0,0,1,168,4,0,134,166,0,0,116,78,6,0,167,14,168,0,2,168,0,0,68,197,0,0,1,167,4,0,134,166,0,0,116,78,6,0,168,2,167,0,25,15,2,4,39,167,14,1,1,168,4,0,134,166,0,0,116,78,6,0,15,167,168,0,2,166,0,0,64,197,0,0,1,168,4,0,1,167,0,0,134,16,0,0,24,55,6,0,166,168,167,0,13,17,2,16,120,17,2,0,139,0,0,0,2,168,0,0,64,197,0,0,1,166,0,0,1,165,4,0,134,167,0,0,116,78,6,0,168,166,165,0,2,165,0,0,52,197,0,0,1,166,0,0,1,168,4,0,134,167,0,0,116,78,6,0,165,166,168,0,139,0,0,0,2,167,0,0,64,197,0,0,1,168,4,0,1,166,0,0,134,18,0,0,24,55,6,0,167,168,166,0,3,166,0,1,45,166,166,18,100,10,1,0,2,166,0,0,52,197,0,0,1,168,4,0,1,167,0,0,134,19,0,0,24,55,6,0,166,168,167,0,3,20,19,3,2,168,0,0,52,197,0,0,1,166,4,0,134,167,0,0,116,78,6,0,168,20,166,0,2,166,0,0,64,197,0,0,1,168,4,0,134,167,0,0,116,78,6,0,166,2,168,0,25,21,2,4,39,168,20,1,1,166,4,0,134,167,0,0,116,78,6,0,21,168,166,0,3,22,2,20,1,166,4,0,134,167,0,0,116,78,6,0,22,20,166,0,139,0,0,0,38,167,10,248,3,23,167,3,1,167,0,1,48,167,10,167,196,11,1,0,25,167,1,8,3,167,0,167,1,166,4,0,1,168,0,0,134,25,0,0,24,55,6,0,167,166,168,0,25,168,1,12,3,168,0,168,1,166,4,0,1,167,0,0,134,26,0,0,24,55,6,0,168,166,167,0,43,167,10,3,41,167,167,1,41,167,167,2,3,167,163,167,52,167,25,167,252,10,1,0,48,167,25,9,212,10,1,0,135,167,8,0,25,167,25,12,1,166,4,0,1,168,0,0,134,27,0,0,24,55,6,0,167,166,168,0,3,168,0,1,52,168,27,168,252,10,1,0,135,168,8,0,45,168,26,25,64,11,1,0,1,168,4,0,1,166,0,0,134,28,0,0,24,55,6,0,164,168,166,0,1,168,1,0,43,167,10,3,22,168,168,167,40,168,168,255,19,168,28,168,1,167,4,0,134,166,0,0,116,78,6,0,164,168,167,0,119,0,54,1,43,166,10,3,41,166,166,1,41,166,166,2,3,166,163,166,45,166,26,166,96,11,1,0,25,5,26,8,119,0,16,0,48,166,26,9,108,11,1,0,135,166,8,0,25,166,26,8,1,167,4,0,1,168,0,0,134,29,0,0,24,55,6,0,166,167,168,0,3,168,0,1,45,168,29,168,152,11,1,0,25,5,26,8,119,0,2,0,135,168,8,0,25,167,25,12,1,166,4,0,134,168,0,0,116,78,6,0,167,26,166,0,1,166,4,0,134,168,0,0,116,78,6,0,5,25,166,0,119,0,21,1,25,168,1,24,3,168,0,168,1,166,4,0,1,167,0,0,134,30,0,0,24,55,6,0,168,166,167,0,25,167,1,12,3,167,0,167,1,166,4,0,1,168,0,0,134,31,0,0,24,55,6,0,167,166,168,0,3,168,0,1,45,168,31,168,20,13,1,0,25,168,1,20,3,168,0,168,1,166,4,0,1,167,0,0,134,35,0,0,24,55,6,0,168,166,167,0,1,167,0,0,45,167,35,167,112,12,1,0,25,167,1,16,3,167,0,167,1,166,4,0,1,168,0,0,134,36,0,0,24,55,6,0,167,166,168,0,1,168,0,0,45,168,36,168,96,12,1,0,1,149,0,0,119,0,88,0,0,147,36,0,25,168,1,16,3,152,0,168,119,0,4,0,0,147,35,0,25,168,1,20,3,152,0,168,25,37,147,20,1,168,4,0,1,166,0,0,134,38,0,0,24,55,6,0,37,168,166,0,1,166,0,0,52,166,38,166,172,12,1,0,0,147,38,0,0,152,37,0,119,0,245,255,25,39,147,16,1,166,4,0,1,168,0,0,134,40,0,0,24,55,6,0,39,166,168,0,1,168,0,0,45,168,40,168,220,12,1,0,0,148,147,0,0,153,152,0,119,0,4,0,0,147,40,0,0,152,39,0,119,0,230,255,48,168,153,9,248,12,1,0,135,168,8,0,119,0,50,0,1,166,0,0,1,167,4,0,134,168,0,0,116,78,6,0,153,166,167,0,0,149,148,0,119,0,43,0,25,168,1,8,3,168,0,168,1,167,4,0,1,166,0,0,134,32,0,0,24,55,6,0,168,167,166,0,48,166,32,9,60,13,1,0,135,166,8,0,25,166,32,12,1,167,4,0,1,168,0,0,134,33,0,0,24,55,6,0,166,167,168,0,3,168,0,1,52,168,33,168,100,13,1,0,135,168,8,0,25,168,31,8,1,167,4,0,1,166,0,0,134,34,0,0,24,55,6,0,168,167,166,0,3,166,0,1,45,166,34,166,184,13,1,0,25,167,32,12,1,168,4,0,134,166,0,0,116,78,6,0,167,31,168,0,25,168,31,8,1,167,4,0,134,166,0,0,116,78,6,0,168,32,167,0,0,149,31,0,119,0,2,0,135,166,8,0,1,166,0,0,52,166,30,166,20,16,1,0,25,166,1,28,3,166,0,166,1,167,4,0,1,168,0,0,134,42,0,0,24,55,6,0,166,167,168,0,2,168,0,0,92,198,0,0,41,167,42,2,3,168,168,167,1,167,4,0,1,166,0,0,134,43,0,0,24,55,6,0,168,167,166,0,3,166,0,1,45,166,166,43,136,14,1,0,2,167,0,0,92,198,0,0,41,168,42,2,3,167,167,168,1,168,4,0,134,166,0,0,116,78,6,0,167,149,168,0,1,166,0,0,13,158,149,166,121,158,50,0,2,166,0,0,48,197,0,0,1,168,4,0,1,167,0,0,134,44,0,0,24,55,6,0,166,168,167,0,2,168,0,0,48,197,0,0,1,166,1,0,22,166,166,42,40,166,166,255,19,166,44,166,1,165,4,0,134,167,0,0,116,78,6,0,168,166,165,0,119,0,100,0,1,167,4,0,1,165,0,0,134,45,0,0,24,55,6,0,162,167,165,0,48,165,30,45,168,14,1,0,135,165,8,0,25,165,30,16,1,167,4,0,1,166,0,0,134,46,0,0,24,55,6,0,165,167,166,0,3,166,0,1,45,166,46,166,228,14,1,0,25,167,30,16,1,165,4,0,134,166,0,0,116,78,6,0,167,149,165,0,119,0,6,0,25,165,30,20,1,167,4,0,134,166,0,0,116,78,6,0,165,149,167,0,1,166,0,0,13,47,149,166,120,47,69,0,1,166,4,0,1,167,0,0,134,48,0,0,24,55,6,0,162,166,167,0,16,49,149,48,121,49,2,0,135,167,8,0,25,50,149,24,1,166,4,0,134,167,0,0,116,78,6,0,50,30,166,0,25,167,1,16,3,167,0,167,1,166,4,0,1,165,0,0,134,53,0,0,24,55,6,0,167,166,165,0,1,165,0,0,52,165,53,165,156,15,1,0,48,165,53,48,112,15,1,0,135,165,8,0,119,0,12,0,25,54,149,16,1,166,4,0,134,165,0,0,116,78,6,0,54,53,166,0,25,166,53,24,1,167,4,0,134,165,0,0,116,78,6,0,166,149,167,0,119,0,1,0,25,165,1,20,3,165,0,165,1,167,4,0,1,166,0,0,134,55,0,0,24,55,6,0,165,167,166,0,1,166,0,0,52,166,55,166,20,16,1,0,1,166,4,0,1,167,0,0,134,56,0,0,24,55,6,0,162,166,167,0,48,167,55,56,232,15,1,0,135,167,8,0,119,0,12,0,25,57,149,20,1,166,4,0,134,167,0,0,116,78,6,0,57,55,166,0,25,166,55,24,1,165,4,0,134,167,0,0,116,78,6,0,166,149,165,0,119,0,1,0,25,58,2,4,39,165,23,1,1,166,4,0,134,167,0,0,116,78,6,0,58,165,166,0,3,59,2,23,1,166,4,0,134,167,0,0,116,78,6,0,59,23,166,0,2,167,0,0,64,197,0,0,1,166,4,0,1,165,0,0,134,60,0,0,24,55,6,0,167,166,165,0,13,61,2,60,121,61,9,0,2,166,0,0,52,197,0,0,1,167,4,0,134,165,0,0,116,78,6,0,166,23,167,0,139,0,0,0,119,0,23,0,0,4,23,0,119,0,21,0,25,167,1,4,3,167,0,167,38,166,10,254,1,168,4,0,134,165,0,0,116,78,6,0,167,166,168,0,39,165,3,1,0,62,165,0,25,63,2,4,1,168,4,0,134,165,0,0,116,78,6,0,63,62,168,0,3,64,2,3,1,168,4,0,134,165,0,0,116,78,6,0,64,3,168,0,0,4,3,0,43,165,4,3,0,65,165,0,1,165,0,1,16,66,4,165,121,66,72,0,1,165,4,0,1,168,0,0,134,67,0,0,24,55,6,0,164,165,168,0,1,168,1,0,22,168,168,65,19,168,67,168,32,168,168,0,121,168,16,0,1,165,1,0,22,165,165,65,20,165,67,165,1,166,4,0,134,168,0,0,116,78,6,0,164,165,166,0,41,168,65,1,25,168,168,2,41,168,168,2,3,7,163,168,41,168,65,1,41,168,168,2,3,141,163,168,119,0,24,0,41,168,65,1,25,168,168,2,41,168,168,2,3,168,163,168,1,166,4,0,1,165,0,0,134,68,0,0,24,55,6,0,168,166,165,0,1,165,4,0,1,166,0,0,134,69,0,0,24,55,6,0,162,165,166,0,48,166,68,69,156,17,1,0,135,166,8,0,119,0,6,0,41,166,65,1,25,166,166,2,41,166,166,2,3,7,163,166,0,141,68,0,1,165,4,0,134,166,0,0,116,78,6,0,7,2,165,0,25,70,141,12,1,165,4,0,134,166,0,0,116,78,6,0,70,2,165,0,25,71,2,8,1,165,4,0,134,166,0,0,116,78,6,0,71,141,165,0,25,72,2,12,41,165,65,1,41,165,165,2,3,165,163,165,1,168,4,0,134,166,0,0,116,78,6,0,72,165,168,0,139,0,0,0,43,166,4,8,0,73,166,0,32,166,73,0,121,166,3,0,1,142,0,0,119,0,58,0,2,166,0,0,255,255,255,0,16,74,166,4,121,74,3,0,1,142,31,0,119,0,52,0,2,166,0,0,0,255,15,0,3,166,73,166,43,166,166,16,38,166,166,8,22,166,73,166,2,168,0,0,0,240,7,0,3,166,166,168,43,166,166,16,38,166,166,4,0,75,166,0,2,166,0,0,0,255,15,0,3,166,73,166,43,166,166,16,38,166,166,8,22,166,73,166,22,166,166,75,2,168,0,0,0,192,3,0,3,166,166,168,43,166,166,16,38,166,166,2,0,76,166,0,1,166,14,0,2,168,0,0,0,255,15,0,3,168,73,168,43,168,168,16,38,168,168,8,20,168,75,168,20,168,168,76,4,166,166,168,2,168,0,0,0,255,15,0,3,168,73,168,43,168,168,16,38,168,168,8,22,168,73,168,22,168,168,75,22,168,168,76,43,168,168,15,3,77,166,168,25,168,77,7,24,168,4,168,0,79,168,0,38,168,79,1,41,166,77,1,20,168,168,166,0,142,168,0,2,168,0,0,92,198,0,0,41,166,142,2,3,80,168,166,25,81,2,28,1,168,4,0,134,166,0,0,116,78,6,0,81,142,168,0,25,82,2,16,25,83,2,20,1,168,0,0,1,165,4,0,134,166,0,0,116,78,6,0,83,168,165,0,1,165,0,0,1,168,4,0,134,166,0,0,116,78,6,0,82,165,168,0,2,166,0,0,48,197,0,0,1,168,4,0,1,165,0,0,134,84,0,0,24,55,6,0,166,168,165,0,1,165,1,0,22,165,165,142,0,85,165,0,19,165,84,85,32,165,165,0,121,165,28,0,2,168,0,0,48,197,0,0,20,166,84,85,1,167,4,0,134,165,0,0,116,78,6,0,168,166,167,0,1,167,4,0,134,165,0,0,116,78,6,0,80,2,167,0,25,86,2,24,1,167,4,0,134,165,0,0,116,78,6,0,86,80,167,0,25,87,2,12,1,167,4,0,134,165,0,0,116,78,6,0,87,2,167,0,25,88,2,8,1,167,4,0,134,165,0,0,116,78,6,0,88,2,167,0,139,0,0,0,1,165,4,0,1,167,0,0,134,89,0,0,24,55,6,0,80,165,167,0,25,167,89,4,1,165,4,0,1,166,0,0,134,90,0,0,24,55,6,0,167,165,166,0,38,166,90,248,13,91,166,4,121,91,3,0,0,154,89,0,119,0,75,0,32,92,142,31,43,166,142,1,0,93,166,0,121,92,4,0,1,165,0,0,0,166,165,0,119,0,4,0,1,165,25,0,4,165,165,93,0,166,165,0,0,94,166,0,22,166,4,94,0,95,166,0,0,143,95,0,0,155,89,0,43,166,143,31,0,100,166,0,25,166,155,16,41,165,100,2,3,101,166,165,1,165,4,0,1,166,0,0,134,97,0,0,24,55,6,0,101,165,166,0,1,166,0,0,45,166,97,166,180,20,1,0,0,156,155,0,119,0,17,0,41,166,143,1,0,96,166,0,25,166,97,4,1,165,4,0,1,167,0,0,134,98,0,0,24,55,6,0,166,165,167,0,38,167,98,248,13,99,167,4,121,99,3,0,0,154,97,0,119,0,32,0,0,143,96,0,0,155,97,0,119,0,226,255,1,167,4,0,1,165,0,0,134,102,0,0,24,55,6,0,162,167,165,0,48,165,101,102,20,21,1,0,135,165,8,0,1,167,4,0,134,165,0,0,116,78,6,0,101,2,167,0,25,103,2,24,1,167,4,0,134,165,0,0,116,78,6,0,103,156,167,0,25,104,2,12,1,167,4,0,134,165,0,0,116,78,6,0,104,2,167,0,25,105,2,8,1,167,4,0,134,165,0,0,116,78,6,0,105,2,167,0,139,0,0,0,25,106,154,8,1,165,4,0,1,167,0,0,134,107,0,0,24,55,6,0,106,165,167,0,1,167,4,0,1,165,0,0,134,108,0,0,24,55,6,0,162,167,165,0,18,159,108,154,18,165,108,107,19,165,165,159,120,165,2,0,135,165,8,0,25,167,107,12,1,166,4,0,134,165,0,0,116,78,6,0,167,2,166,0,1,166,4,0,134,165,0,0,116,78,6,0,106,2,166,0,25,109,2,8,1,166,4,0,134,165,0,0,116,78,6,0,109,107,166,0,25,110,2,12,1,166,4,0,134,165,0,0,116,78,6,0,110,154,166,0,25,111,2,24,1,166,0,0,1,167,4,0,134,165,0,0,116,78,6,0,111,166,167,0,139,0,0,0,140,5,15,1,0,0,0,0,2,200,0,0,255,0,0,0,2,201,0,0,99,81,1,0,2,202,0,0,199,113,28,7,1,203,0,0,143,203,13,1,136,204,0,0,0,203,204,0,143,203,14,1,1,203,36,0,48,203,203,1,116,22,1,0,134,158,0,0,4,85,6,0,1,204,22,0,1,205,4,0,134,203,0,0,116,78,6,0,158,204,205,0,1,136,0,0,1,137,0,0,119,0,85,4,25,203,0,4,1,205,4,0,1,204,0,0,134,163,0,0,24,55,6,0,203,205,204,0,25,204,0,100,1,205,4,0,1,203,0,0,134,170,0,0,24,55,6,0,204,205,203,0,48,203,163,170,232,22,1,0,25,205,0,4,25,204,163,1,1,206,4,0,134,203,0,0,116,78,6,0,205,204,206,0,42,203,163,0,1,206,1,0,1,204,0,0,134,21,0,0,24,55,6,0,203,206,204,0,19,204,21,200,0,36,204,0,119,0,5,0,134,31,0,0,220,97,4,0,0,0,0,0,0,36,31,0,134,44,0,0,100,99,6,0,36,0,0,0,32,204,44,0,121,204,219,255,0,10,36,0,119,0,1,0,1,203,43,0,1,205,3,0,138,10,203,205,60,23,1,0,44,23,1,0,64,23,1,0,0,187,10,0,1,203,0,0,143,203,7,1,119,0,46,0,119,0,1,0,25,204,0,4,1,206,4,0,1,203,0,0,134,71,0,0,24,55,6,0,204,206,203,0,25,203,0,100,1,206,4,0,1,204,0,0,134,77,0,0,24,55,6,0,203,206,204,0,48,204,71,77,200,23,1,0,25,206,0,4,25,203,71,1,1,205,4,0,134,204,0,0,116,78,6,0,206,203,205,0,42,204,71,0,1,205,1,0,1,203,0,0,134,96,0,0,24,55,6,0,204,205,203,0,19,203,96,200,0,187,203,0,32,205,10,45,41,205,205,31,42,205,205,31,0,203,205,0,143,203,7,1,119,0,11,0,134,108,0,0,220,97,4,0,0,0,0,0,0,187,108,0,32,205,10,45,41,205,205,31,42,205,205,31,0,203,205,0,143,203,7,1,119,0,1,0,32,130,187,48,38,203,1,239,32,203,203,0,19,203,203,130], eb + 61440);
  HEAPU8.set([121,203,151,0,25,203,0,4,1,205,4,0,1,204,0,0,134,140,0,0,24,55,6,0,203,205,204,0,25,204,0,100,1,205,4,0,1,203,0,0,134,147,0,0,24,55,6,0,204,205,203,0,48,203,140,147,120,24,1,0,25,205,0,4,25,204,140,1,1,206,4,0,134,203,0,0,116,78,6,0,205,204,206,0,42,203,140,0,1,206,1,0,1,204,0,0,134,148,0,0,24,55,6,0,203,206,204,0,19,204,148,200,0,151,204,0,119,0,5,0,134,149,0,0,220,97,4,0,0,0,0,0,0,151,149,0,39,204,151,32,0,150,204,0,32,204,150,120,120,204,13,0,32,204,1,0,121,204,6,0,1,7,8,0,0,189,151,0,1,204,46,0,143,204,13,1,119,0,162,0,0,5,1,0,0,188,151,0,1,204,32,0,143,204,13,1,119,0,157,0,25,204,0,4,1,206,4,0,1,203,0,0,134,152,0,0,24,55,6,0,204,206,203,0,25,203,0,100,1,206,4,0,1,204,0,0,134,153,0,0,24,55,6,0,203,206,204,0,48,204,152,153,60,25,1,0,25,206,0,4,25,203,152,1,1,205,4,0,134,204,0,0,116,78,6,0,206,203,205,0,42,204,152,0,1,205,1,0,1,203,0,0,134,154,0,0,24,55,6,0,204,205,203,0,19,203,154,200,0,156,203,0,119,0,5,0,134,155,0,0,220,97,4,0,0,0,0,0,0,156,155,0,25,20,156,1,3,203,201,20,42,203,203,0,1,205,1,0,1,204,0,0,134,157,0,0,24,55,6,0,203,205,204,0,1,204,15,0,19,205,157,200,47,204,204,205,72,26,1,0,25,204,0,100,1,205,4,0,1,203,0,0,134,159,0,0,24,55,6,0,204,205,203,0,1,203,0,0,52,203,159,203,208,25,1,0,25,203,0,4,1,205,4,0,1,204,0,0,134,160,0,0,24,55,6,0,203,205,204,0,25,205,0,4,26,203,160,1,1,206,4,0,134,204,0,0,116,78,6,0,205,203,206,0,32,204,2,0,121,204,8,0,1,206,0,0,134,204,0,0,36,17,6,0,0,206,0,0,1,136,0,0,1,137,0,0,119,0,117,3,1,204,0,0,45,204,159,204,12,26,1,0,1,136,0,0,1,137,0,0,119,0,111,3,25,204,0,4,1,206,4,0,1,203,0,0,134,161,0,0,24,55,6,0,204,206,203,0,25,206,0,4,26,204,161,1,1,205,4,0,134,203,0,0,116,78,6,0,206,204,205,0,1,136,0,0,1,137,0,0,119,0,96,3,1,7,16,0,0,189,156,0,1,203,46,0,143,203,13,1,119,0,56,0,32,203,1,0,1,205,10,0,125,8,203,205,1,0,0,0,25,11,187,1,3,205,201,11,42,205,205,0,1,203,1,0,1,204,0,0,134,162,0,0,24,55,6,0,205,203,204,0,19,204,162,200,48,204,204,8,172,26,1,0,0,5,8,0,0,188,187,0,1,204,32,0,143,204,13,1,119,0,36,0,25,204,0,100,1,203,4,0,1,205,0,0,134,164,0,0,24,55,6,0,204,203,205,0,1,205,0,0,52,205,164,205,0,27,1,0,25,205,0,4,1,203,4,0,1,204,0,0,134,165,0,0,24,55,6,0,205,203,204,0,25,203,0,4,26,205,165,1,1,206,4,0,134,204,0,0,116,78,6,0,203,205,206,0,1,206,0,0,134,204,0,0,36,17,6,0,0,206,0,0,134,166,0,0,4,85,6,0,1,206,22,0,1,205,4,0,134,204,0,0,116,78,6,0,166,206,205,0,1,136,0,0,1,137,0,0,119,0,36,3,141,204,13,1,32,204,204,32,121,204,191,0,32,167,5,10,121,167,185,0,26,168,188,48,35,204,168,10,121,204,57,0,0,172,168,0,1,204,0,0,143,204,10,1,141,204,10,1,27,169,204,10,3,171,169,172,25,204,0,4,1,205,4,0,1,206,0,0,134,173,0,0,24,55,6,0,204,205,206,0,25,206,0,100,1,205,4,0,1,204,0,0,134,174,0,0,24,55,6,0,206,205,204,0,48,204,173,174,228,27,1,0,25,205,0,4,25,206,173,1,1,203,4,0,134,204,0,0,116,78,6,0,205,206,203,0,42,204,173,0,1,203,1,0,1,206,0,0,134,175,0,0,24,55,6,0,204,203,206,0,19,206,175,200,0,190,206,0,119,0,5,0,134,176,0,0,220,97,4,0,0,0,0,0,0,190,176,0,26,177,190,48,35,206,177,10,2,203,0,0,153,153,153,25,16,203,171,203,19,206,206,203,121,206,5,0,0,172,177,0,0,206,171,0,143,206,10,1,119,0,210,255,0,191,190,0,119,0,1,0,0,138,171,0,1,139,0,0,0,192,191,0,119,0,4,0,1,138,0,0,1,139,0,0,0,192,188,0,26,178,192,48,35,206,178,10,121,206,114,0,0,179,138,0,0,180,139,0,0,183,178,0,0,195,192,0,1,206,10,0,1,203,0,0,134,181,0,0,200,52,6,0,179,180,206,203,128,203,0,0,0,182,203,0,34,184,183,0,40,203,183,255,0,185,203,0,41,203,184,31,42,203,203,31,40,203,203,255,16,203,203,182,41,206,184,31,42,206,206,31,40,206,206,255,13,206,182,206,16,204,185,181,19,206,206,204,20,203,203,206,121,203,6,0,0,9,183,0,0,141,179,0,0,142,180,0,0,194,195,0,119,0,66,0,41,203,184,31,42,203,203,31,134,186,0,0,84,105,6,0,181,182,183,203,128,203,0,0,0,22,203,0,25,203,0,4,1,206,4,0,1,204,0,0,134,23,0,0,24,55,6,0,203,206,204,0,25,204,0,100,1,206,4,0,1,203,0,0,134,24,0,0,24,55,6,0,204,206,203,0,48,203,23,24,92,29,1,0,25,206,0,4,25,204,23,1,1,205,4,0,134,203,0,0,116,78,6,0,206,204,205,0,42,203,23,0,1,205,1,0,1,204,0,0,134,25,0,0,24,55,6,0,203,205,204,0,19,204,25,200,0,193,204,0,119,0,5,0,134,26,0,0,220,97,4,0,0,0,0,0,0,193,26,0,26,27,193,48,35,204,27,10,2,205,0,0,153,153,153,25,16,205,22,205,2,203,0,0,153,153,153,25,13,203,22,203,2,206,0,0,154,153,153,153,16,206,186,206,19,203,203,206,20,205,205,203,19,204,204,205,121,204,6,0,0,179,186,0,0,180,22,0,0,183,27,0,0,195,193,0,119,0,170,255,0,9,27,0,0,141,186,0,0,142,22,0,0,194,193,0,119,0,1,0,1,204,9,0,16,28,204,9,121,28,7,0,0,117,142,0,0,119,141,0,141,205,7,1,0,204,205,0,143,204,9,1,119,0,19,0,1,6,10,0,0,143,141,0,0,144,142,0,0,204,194,0,143,204,5,1,1,204,72,0,143,204,13,1,119,0,11,0,0,117,139,0,0,119,138,0,141,205,7,1,0,204,205,0,143,204,9,1,119,0,5,0,0,7,5,0,0,189,188,0,1,204,46,0,143,204,13,1,141,204,13,1,32,204,204,46,121,204,173,1,26,29,7,1,19,204,29,7,0,30,204,0,32,204,30,0,121,204,201,0,27,34,7,23,2,204,0,0,100,82,1,0,43,205,34,5,38,205,205,7,3,204,204,205,42,204,204,0,1,205,1,0,1,203,0,0,134,35,0,0,24,55,6,0,204,205,203,0,25,13,189,1,3,203,201,13,42,203,203,0,1,205,1,0,1,204,0,0,134,37,0,0,24,55,6,0,203,205,204,0,19,204,37,200,16,38,204,7,121,38,72,0,19,204,37,200,0,41,204,0,1,204,0,0,143,204,11,1,141,204,11,1,41,205,35,24,42,205,205,24,22,204,204,205,0,39,204,0,20,204,41,39,0,40,204,0,25,204,0,4,1,205,4,0,1,203,0,0,134,42,0,0,24,55,6,0,204,205,203,0,25,203,0,100,1,205,4,0,1,204,0,0,134,43,0,0,24,55,6,0,203,205,204,0,48,204,42,43,88,31,1,0,25,205,0,4,25,203,42,1,1,206,4,0,134,204,0,0,116,78,6,0,205,203,206,0,42,204,42,0,1,206,1,0,1,203,0,0,134,45,0,0,24,55,6,0,204,206,203,0,19,203,45,200,0,196,203,0,119,0,5,0,134,46,0,0,220,97,4,0,0,0,0,0,0,196,46,0,25,12,196,1,3,203,201,12,42,203,203,0,1,206,1,0,1,204,0,0,134,47,0,0,24,55,6,0,203,206,204,0,19,204,47,200,16,48,204,7,2,204,0,0,0,0,0,8,16,204,40,204,19,204,204,48,121,204,6,0,19,204,47,200,0,41,204,0,0,204,40,0,143,204,11,1,119,0,197,255,0,197,196,0,119,0,1,0,0,52,47,0,1,54,0,0,0,56,40,0,0,198,197,0,119,0,5,0,0,52,37,0,1,54,0,0,1,56,0,0,0,198,189,0,1,204,255,255,1,206,255,255,41,203,35,24,42,203,203,24,135,49,3,0,204,206,203,0,128,203,0,0,0,50,203,0,19,203,52,200,0,51,203,0,18,53,7,51,16,55,50,54,16,57,49,56,13,58,54,50,19,203,58,57,20,203,55,203,20,203,53,203,121,203,9,0,0,6,7,0,0,143,56,0,0,144,54,0,0,203,198,0,143,203,5,1,1,203,72,0,143,203,13,1,119,0,44,1,0,59,56,0,0,60,54,0,0,64,52,0,41,203,35,24,42,203,203,24,135,61,1,0,59,60,203,0,128,203,0,0,0,62,203,0,19,203,64,200,0,63,203,0,25,203,0,4,1,206,4,0,1,204,0,0,134,65,0,0,24,55,6,0,203,206,204,0,25,204,0,100,1,206,4,0,1,203,0,0,134,66,0,0,24,55,6,0,204,206,203,0,48,203,65,66,236,32,1,0,25,206,0,4,25,204,65,1,1,205,4,0,134,203,0,0,116,78,6,0,206,204,205,0,42,203,65,0,1,205,1,0,1,204,0,0,134,67,0,0,24,55,6,0,203,205,204,0,19,204,67,200,0,199,204,0,119,0,5,0,134,68,0,0,220,97,4,0,0,0,0,0,0,199,68,0,25,14,199,1,3,204,201,14,42,204,204,0,1,205,1,0,1,203,0,0,134,69,0,0,24,55,6,0,204,205,203,0,19,203,69,200,18,70,7,203,16,203,50,62,13,205,62,50,20,204,63,61,16,204,49,204,19,205,205,204,20,203,203,205,20,203,70,203,121,203,10,0,0,6,7,0,20,203,63,61,0,143,203,0,0,144,62,0,0,203,199,0,143,203,5,1,1,203,72,0,143,203,13,1,119,0,229,0,20,203,63,61,0,59,203,0,0,60,62,0,0,64,69,0,119,0,184,255,25,18,189,1,3,203,201,18,42,203,203,0,1,205,1,0,1,204,0,0,134,32,0,0,24,55,6,0,203,205,204,0,19,204,32,200,16,33,204,7,121,33,73,0,19,204,32,200,0,74,204,0,1,204,0,0,143,204,12,1,141,204,12,1,5,72,204,7,3,73,74,72,25,204,0,4,1,205,4,0,1,203,0,0,134,75,0,0,24,55,6,0,204,205,203,0,25,203,0,100,1,205,4,0,1,204,0,0,134,76,0,0,24,55,6,0,203,205,204,0,48,204,75,76,60,34,1,0,25,205,0,4,25,203,75,1,1,206,4,0,134,204,0,0,116,78,6,0,205,203,206,0,42,204,75,0,1,206,1,0,1,203,0,0,134,78,0,0,24,55,6,0,204,206,203,0,19,206,78,200,0,203,206,0,143,203,0,1,119,0,6,0,134,79,0,0,220,97,4,0,0,0,0,0,0,203,79,0,143,203,0,1,141,203,0,1,25,17,203,1,3,203,201,17,42,203,203,0,1,206,1,0,1,204,0,0,134,80,0,0,24,55,6,0,203,206,204,0,19,204,80,200,16,81,204,7,16,204,73,202,19,204,204,81,121,204,6,0,19,204,80,200,0,74,204,0,0,204,73,0,143,204,12,1,119,0,200,255,141,206,0,1,0,204,206,0,143,204,1,1,119,0,1,0,0,83,80,0,0,145,73,0,1,146,0,0,141,206,1,1,0,204,206,0,143,204,2,1,119,0,6,0,0,83,32,0,1,145,0,0,1,146,0,0,0,204,189,0,143,204,2,1,19,204,83,200,0,82,204,0,16,84,82,7,121,84,124,0,1,204,255,255,1,206,255,255,1,203,0,0,134,85,0,0,156,104,6,0,204,206,7,203,128,203,0,0,0,86,203,0,0,87,146,0,0,89,145,0,0,95,83,0,141,206,2,1,0,203,206,0,143,203,4,1,16,88,86,87,16,90,85,89,13,91,87,86,19,203,91,90,20,203,88,203,121,203,10,0,0,6,7,0,0,143,89,0,0,144,87,0,141,206,4,1,0,203,206,0,143,203,5,1,1,203,72,0,143,203,13,1,119,0,103,0,1,203,0,0,134,92,0,0,200,52,6,0,89,87,7,203,128,203,0,0,0,93,203,0,19,203,95,200,0,94,203,0,1,203,255,255,16,203,203,93,32,206,93,255,40,204,94,255,16,204,204,92,19,206,206,204,20,203,203,206,121,203,10,0,0,6,7,0,0,143,89,0,0,144,87,0,141,206,4,1,0,203,206,0,143,203,5,1,1,203,72,0,143,203,13,1,119,0,78,0,1,203,0,0,134,97,0,0,84,105,6,0,94,203,92,93,128,203,0,0,0,98,203,0,25,203,0,4,1,206,4,0,1,204,0,0,134,99,0,0,24,55,6,0,203,206,204,0,25,204,0,100,1,206,4,0,1,203,0,0,134,100,0,0,24,55,6,0,204,206,203,0,48,203,99,100,84,36,1,0,25,206,0,4,25,204,99,1,1,205,4,0,134,203,0,0,116,78,6,0,206,204,205,0,42,203,99,0,1,205,1,0,1,204,0,0,134,101,0,0,24,55,6,0,203,205,204,0,19,205,101,200,0,204,205,0,143,204,3,1,119,0,6,0,134,102,0,0,220,97,4,0,0,0,0,0,0,204,102,0,143,204,3,1,141,204,3,1,25,19,204,1,3,204,201,19,42,204,204,0,1,205,1,0,1,203,0,0,134,103,0,0,24,55,6,0,204,205,203,0,19,203,103,200,16,104,203,7,121,104,8,0,0,87,98,0,0,89,97,0,0,95,103,0,141,205,3,1,0,203,205,0,143,203,4,1,119,0,157,255,0,6,7,0,0,143,97,0,0,144,98,0,141,205,3,1,0,203,205,0,143,203,5,1,1,203,72,0,143,203,13,1,119,0,9,0,0,6,7,0,0,143,145,0,0,144,146,0,141,205,2,1,0,203,205,0,143,203,5,1,1,203,72,0,143,203,13,1,141,203,13,1,32,203,203,72,121,203,89,0,141,203,5,1,25,15,203,1,3,203,201,15,42,203,203,0,1,205,1,0,1,204,0,0,134,105,0,0,24,55,6,0,203,205,204,0,19,204,105,200,16,106,204,6,121,106,72,0,25,204,0,4,1,205,4,0,1,203,0,0,134,107,0,0,24,55,6,0,204,205,203,0,25,203,0,100,1,205,4,0,1,204,0,0,134,109,0,0,24,55,6,0,203,205,204,0,48,204,107,109,172,37,1,0,25,205,0,4,25,203,107,1,1,206,4,0,134,204,0,0,116,78,6,0,205,203,206,0,42,204,107,0,1,206,1,0,1,203,0,0,134,110,0,0,24,55,6,0,204,206,203,0,19,206,110,200,0,203,206,0,143,203,6,1,119,0,6,0,134,111,0,0,220,97,4,0,0,0,0,0,0,203,111,0,143,203,6,1,141,203,6,1,25,16,203,1,3,203,201,16,42,203,203,0,1,206,1,0,1,204,0,0,134,112,0,0,24,55,6,0,203,206,204,0,19,204,112,200,16,113,204,6,120,113,210,255,119,0,1,0,134,114,0,0,4,85,6,0,1,206,34,0,1,203,4,0,134,204,0,0,116,78,6,0,114,206,203,0,38,203,3,1,32,203,203,0,1,206,0,0,32,206,206,0,19,203,203,206,141,206,7,1,1,205,0,0,125,204,203,206,205,0,0,0,143,204,8,1,0,117,4,0,0,119,3,0,141,205,8,1,0,204,205,0,143,204,9,1,119,0,6,0,0,117,144,0,0,119,143,0,141,205,7,1,0,204,205,0,143,204,9,1,25,204,0,100,1,205,4,0,1,206,0,0,134,115,0,0,24,55,6,0,204,205,206,0,1,206,0,0,52,206,115,206,184,38,1,0,25,206,0,4,1,205,4,0,1,204,0,0,134,116,0,0,24,55,6,0,206,205,204,0,25,205,0,4,26,206,116,1,1,203,4,0,134,204,0,0,116,78,6,0,205,206,203,0,16,118,117,4,16,120,119,3,13,121,117,4,19,204,121,120,20,204,118,204,120,204,43,0,141,204,9,1,33,122,204,0,38,204,3,1,33,204,204,0,1,203,0,0,33,203,203,0,20,204,204,203,20,204,204,122,120,204,18,0,134,123,0,0,4,85,6,0,1,203,34,0,1,206,4,0,134,204,0,0,116,78,6,0,123,203,206,0,1,204,255,255,1,206,255,255,134,124,0,0,84,105,6,0,3,4,204,206,128,206,0,0,0,125,206,0,0,136,125,0,0,137,124,0,119,0,36,0,16,126,4,117,16,127,3,119,13,128,117,4,19,206,128,127,20,206,126,206,121,206,11,0,134,129,0,0,4,85,6,0,1,204,34,0,1,203,4,0,134,206,0,0,116,78,6,0,129,204,203,0,0,136,4,0,0,137,3,0,119,0,20,0,141,206,9,1,34,131,206,0,141,206,9,1,21,206,119,206,0,132,206,0,41,206,131,31,42,206,206,31,21,206,117,206,0,133,206,0,141,206,9,1,41,203,131,31,42,203,203,31,134,134,0,0,240,98,6,0,132,133,206,203,128,203,0,0,0,135,203,0,0,136,135,0,0,137,134,0,129,136,0,0,139,137,0,0,140,1,144,0,0,0,0,0,2,135,0,0,255,0,0,0,2,136,0,0,216,106,0,0,2,137,0,0,220,106,0,0,1,133,0,0,136,138,0,0,0,134,138,0,136,138,0,0,25,138,138,64,137,138,0,0,130,138,0,0,136,139,0,0,49,138,138,139,24,40,1,0,135,138,0,0,1,130,0,0,1,127,0,0,1,128,0,0,1,138,20,107,1,139,4,0,1,140,0,0,134,1,0,0,24,55,6,0,138,139,140,0,1,140,176,26,1,139,4,0,1,138,0,0,134,42,0,0,24,55,6,0,140,139,138,0,1,138,4,0,1,139,0,0,134,95,0,0,24,55,6,0,136,138,139,0,45,139,42,95,172,40,1,0,1,139,180,26,1,138,4,0,1,140,0,0,134,106,0,0,24,55,6,0,139,138,140,0,1,140,4,0,1,138,0,0,134,111,0,0,24,55,6,0,137,140,138,0,52,138,106,111,168,40,1,0,1,133,3,0,119,0,2,0,1,133,3,0,32,138,133,3,121,138,38,0,1,138,32,107,1,140,4,0,1,139,0,0,134,121,0,0,24,55,6,0,138,140,139,0,1,140,176,26,134,139,0,0,228,135,4,0,140,121,0,0,1,140,176,26,1,141,4,0,1,142,0,0,134,138,0,0,24,55,6,0,136,141,142,0,1,142,4,0,134,139,0,0,116,78,6,0,140,138,142,0,1,142,176,26,25,142,142,4,25,140,136,4,1,141,4,0,1,143,0,0,134,138,0,0,24,55,6,0,140,141,143,0,1,143,4,0,134,139,0,0,116,78,6,0,142,138,143,0,1,143,32,107,1,138,4,0,134,139,0,0,116,78,6,0,143,1,138,0,1,139,4,0,1,138,0,0,134,2,0,0,24,55,6,0,137,139,138,0,1,138,4,0,1,139,0,0,134,10,0,0,24,55,6,0,136,138,139,0,1,139,4,0,1,138,0,0,134,21,0,0,24,55,6,0,136,139,138,0,1,138,4,0,1,139,0,0,134,26,0,0,24,55,6,0,137,138,139,0,2,139,0,0,242,208,0,0,42,139,139,0,1,138,1,0,1,143,0,0,134,34,0,0,24,55,6,0,139,138,143,0,2,143,0,0,244,208,0,0,42,143,143,0,1,138,1,0,1,139,0,0,134,48,0,0,24,55,6,0,143,138,139,0,19,139,34,135,32,139,139,0,41,138,48,24,42,138,138,24,33,138,138,0,20,139,139,138,120,139,34,0,2,139,0,0,1,209,0,0,42,139,139,0,1,138,1,0,1,143,0,0,134,56,0,0,24,55,6,0,139,138,143,0,19,143,56,135,33,143,143,0,121,143,23,0,1,143,4,0,1,138,0,0,134,70,0,0,24,55,6,0,137,143,138,0,1,138,4,0,1,143,0,0,134,77,0,0,24,55,6,0,136,138,143,0,3,130,70,77,1,143,4,0,1,138,0,0,134,89,0,0,24,55,6,0,137,143,138,0,1,138,4,0,1,143,0,0,134,96,0,0,24,55,6,0,136,138,143,0,4,127,89,96,1,143,4,0,1,138,0,0,134,97,0,0,24,55,6,0,136,143,138,0,1,138,4,0,1,143,0,0,134,98,0,0,24,55,6,0,137,138,143,0,1,143,192,26,41,138,97,5,3,138,138,98,41,138,138,3,3,129,143,138,0,99,129,0,42,138,99,0,1,143,1,0,1,139,0,0,134,100,0,0,24,55,6,0,138,143,139,0,0,101,129,0,25,139,101,1,42,139,139,0,1,143,1,0,1,138,0,0,134,102,0,0,24,55,6,0,139,143,138,0,26,132,26,1,0,103,132,0,25,138,2,1,56,138,103,138,12,43,1,0,119,0,192,2,0,104,132,0,0,105,132,0,1,138,0,0,15,138,138,104,34,143,105,23,19,138,138,143,121,138,182,2,26,131,21,1,0,107,131,0,25,138,10,1,56,138,107,138,64,43,1,0,119,0,176,2,0,108,131,0,0,109,131,0,34,138,108,0,1,143,80,0,17,143,143,109,20,138,138,143,120,138,166,2,1,138,232,106,1,143,2,0,1,139,0,0,134,110,0,0,24,55,6,0,138,143,139,0,41,139,110,16,42,139,139,16,38,139,139,4,33,139,139,0,38,139,139,1,19,139,139,135,41,139,139,24,42,139,139,24,33,139,139,0,120,139,17,0,0,112,132,0,1,139,4,0,1,143,0,0,134,113,0,0,24,55,6,0,137,139,143,0,45,143,112,113,220,43,1,0,0,114,131,0,1,143,4,0,1,139,0,0,134,115,0,0,24,55,6,0,136,143,139,0,52,139,114,115,240,53,1,0,0,116,131,0,0,117,132,0,1,139,192,26,41,143,116,5,3,143,143,117,41,143,143,3,3,129,139,143,0,118,129,0,42,143,118,0,1,139,1,0,1,138,0,0,134,119,0,0,24,55,6,0,143,139,138,0,41,138,119,24,42,138,138,24,0,126,138,0,0,120,126,0,32,138,120,32,120,138,114,2,0,122,129,0,0,123,126,0,41,138,100,24,42,138,138,24,33,138,138,43,33,139,123,43,19,138,138,139,121,138,18,0,25,138,122,1,42,138,138,0,1,139,1,0,1,143,0,0,134,124,0,0,24,55,6,0,138,139,143,0,41,143,102,24,42,143,143,24,1,139,128,0,19,143,143,139,41,139,124,24,42,139,139,24,1,138,128,0,19,139,139,138,53,143,143,139,240,53,1,0,25,143,122,1,42,143,143,0,1,139,1,0,1,138,0,0,134,125,0,0,24,55,6,0,143,139,138,0,0,3,126,0,41,138,125,24,42,138,138,24,1,139,128,0,19,138,138,139,33,138,138,0,32,139,3,43,20,138,138,139,121,138,77,0,41,138,102,24,42,138,138,24,1,139,128,0,19,138,138,139,33,138,138,0,120,138,6,0,41,138,100,24,42,138,138,24,32,138,138,43,120,138,2,0,119,0,66,0,1,138,4,0,1,139,0,0,134,4,0,0,24,55,6,0,136,138,139,0,0,5,131,0,46,139,4,5,0,46,1,0,1,139,4,0,1,138,0,0,134,6,0,0,24,55,6,0,137,139,138,0,0,7,132,0,46,138,6,7,0,46,1,0,1,138,4,0,1,139,0,0,134,8,0,0,24,55,6,0,136,138,139,0,0,9,132,0,1,139,192,26,41,138,8,5,3,138,138,9,41,138,138,3,3,139,139,138,42,139,139,0,1,138,1,0,1,143,0,0,134,11,0,0,24,55,6,0,139,138,143,0,41,143,11,24,42,143,143,24,134,12,0,0,232,58,6,0,143,0,0,0,33,143,12,0,120,143,26,0,0,13,131,0,1,143,4,0,1,138,0,0,134,14,0,0,24,55,6,0,137,143,138,0,1,138,192,26,41,143,13,5,3,143,143,14,41,143,143,3,3,138,138,143,42,138,138,0,1,143,1,0,1,139,0,0,134,15,0,0,24,55,6,0,138,143,139,0,41,139,15,24,42,139,139,24,134,16,0,0,232,58,6,0,139,0,0,0,33,139,16,0,120,139,2,0,119,0,253,1,0,17,129,0,25,139,17,4,1,143,4,0,1,138,0,0,134,18,0,0,24,55,6,0,139,143,138,0,1,138,0,0,45,138,18,138,72,46,1,0,0,19,132,0,0,20,131,0,0,22,126,0,134,23,0,0,148,75,5,0,19,20,22,0,0,126,23,0,119,0,115,0,1,138,232,106,1,143,2,0,1,139,0,0,134,24,0,0,24,55,6,0,138,143,139,0,41,139,24,16,42,139,139,16,1,143,0,64,19,139,139,143,33,139,139,0,38,139,139,1,19,139,139,135,19,139,139,135,33,139,139,0,121,139,49,0,25,139,18,24,1,143,2,0,1,138,0,0,134,25,0,0,24,55,6,0,139,143,138,0,41,138,25,16,42,138,138,16,1,143,0,4,19,138,138,143,33,138,138,0,38,138,138,1,19,138,138,135,19,138,138,135,33,138,138,0,121,138,33,0,2,138,0,0,242,208,0,0,42,138,138,0,1,143,1,0,1,139,0,0,134,27,0,0,24,55,6,0,138,143,139,0,2,139,0,0,244,208,0,0,42,139,139,0,1,143,1,0,1,138,0,0,134,28,0,0,24,55,6,0,139,143,138,0,19,138,27,135,32,138,138,0,41,143,28,24,42,143,143,24,33,143,143,0,20,138,138,143,120,138,180,1,2,143,0,0,1,209,0,0,42,143,143,0,1,139,0,0,1,142,1,0,134,138,0,0,116,78,6,0,143,139,142,0,119,0,171,1,41,138,0,24,42,138,138,24,33,138,138,0,121,138,6,0,0,29,132,0,0,30,131,0,134,138,0,0,28,73,2,0,29,30,0,0,134,31,0,0,24,227,3,0,18,0,0,0,41,138,31,24,42,138,138,24,33,138,138,0,121,138,35,0,1,138,232,106,1,142,2,0,1,139,0,0,134,32,0,0,24,55,6,0,138,142,139,0,41,139,32,16,42,139,139,16,1,142,0,8,19,139,139,142,33,139,139,0,38,139,139,1,19,139,139,135,41,139,139,24,42,139,139,24,33,139,139,0,121,139,7,0,1,139,26,0,134,33,0,0,20,36,6,0,139,0,0,0,25,126,33,65,119,0,12,0,25,139,18,18,42,139,139,0,1,142,1,0,1,138,0,0,134,35,0,0,24,55,6,0,139,142,138,0,41,138,35,24,42,138,138,24,0,126,138,0,119,0,1,0,1,138,232,106,1,142,2,0,1,139,0,0,134,36,0,0,24,55,6,0,138,142,139,0,41,139,36,16,42,139,139,16,38,139,139,4,33,139,139,0,38,139,139,1,19,139,139,135,19,139,139,135,33,139,139,0,121,139,17,0,0,37,132,0,1,139,4,0,1,142,0,0,134,38,0,0,24,55,6,0,137,139,142,0,53,142,37,38,240,53,1,0,0,39,131,0,1,142,4,0,1,139,0,0,134,40,0,0,24,55,6,0,136,142,139,0,53,139,39,40,240,53,1,0,0,41,132,0,0,43,131,0,134,139,0,0,124,108,5,0,41,43,0,0,1,139,20,107,1,142,4,0,1,138,0,0,134,44,0,0,24,55,6,0,139,142,138,0,25,138,44,28,1,142,2,0,1,139,0,0,134,45,0,0,24,55,6,0,138,142,139,0,2,139,0,0,3,209,0,0,42,139,139,0,1,142,1,0,1,138,0,0,134,46,0,0,24,55,6,0,139,142,138,0,0,47,126,0,41,138,45,16,42,138,138,16,38,138,138,1,32,138,138,0,41,142,46,24,42,142,142,24,33,142,142,0,20,138,138,142,40,138,138,1,32,142,47,46,19,138,138,142,121,138,2,0,1,126,32,0,1,138,0,0,46,138,18,138,60,49,1,0,1,133,45,0,119,0,13,0,0,49,126,0,134,50,0,0,96,107,6,0,2,138,0,0,255,255,0,0,19,138,50,138,19,138,138,135,41,138,138,24,42,138,138,24,46,138,49,138,108,49,1,0,1,133,45,0,32,138,133,45,121,138,6,0,1,133,0,0,0,51,126,0,134,138,0,0,172,88,6,0,51,0,0,0,2,138,0,0,242,208,0,0,42,138,138,0,1,142,1,0,1,139,0,0,134,52,0,0,24,55,6,0,138,142,139,0,2,139,0,0,244,208,0,0,42,139,139,0,1,142,1,0,1,138,0,0,134,53,0,0,24,55,6,0,139,142,138,0,19,138,52,135,32,138,138,0,41,142,53,24,42,142,142,24,33,142,142,0,20,138,138,142,120,138,4,1,2,138,0,0,1,209,0,0,42,138,138,0,1,142,1,0,1,139,0,0,134,54,0,0,24,55,6,0,138,142,139,0,19,139,54,135,33,139,139,0,121,139,249,0,2,139,0,0,42,233,0,0,42,139,139,0,1,142,1,0,1,138,0,0,134,55,0,0,24,55,6,0,139,142,138,0,41,138,55,24,42,138,138,24,1,142,98,0,1,139,24,0,138,138,142,139,168,50,1,0,164,50,1,0,164,50,1,0,164,50,1,0,164,50,1,0,164,50,1,0,200,50,1,0,164,50,1,0,220,50,1,0,240,50,1,0,4,51,1,0,164,50,1,0,24,51,1,0,164,50,1,0,164,50,1,0,164,50,1,0,164,50,1,0,164,50,1,0,164,50,1,0,56,51,1,0,164,50,1,0,164,50,1,0,164,50,1,0,92,51,1,0,119,0,55,0,0,71,132,0,0,72,131,0,0,73,127,0,4,142,71,72,4,142,142,73,36,142,142,255,121,142,48,0,119,0,203,0,0,57,131,0,25,142,10,1,52,142,57,142,240,53,1,0,119,0,42,0,0,58,132,0,26,142,26,1,52,142,58,142,240,53,1,0,119,0,37,0,0,59,132,0,25,142,2,1,52,142,59,142,240,53,1,0,119,0,32,0,0,60,131,0,26,142,21,1,52,142,60,142,240,53,1,0,119,0,27,0,0,67,132,0,0,68,131,0,0,69,130,0,3,142,67,68,4,142,142,69,36,142,142,255,121,142,20,0,119,0,175,0,0,64,132,0,0,65,131,0,0,66,127,0,1,142,1,0,4,139,64,65,4,139,139,66,56,142,142,139,240,53,1,0,119,0,10,0,0,61,132,0,0,62,131,0,0,63,130,0,1,142,1,0,3,139,61,62,4,139,139,63,56,142,142,139,240,53,1,0,119,0,1,0,0,74,126,0,1,138,32,0,1,142,93,0,138,74,138,142,40,53,1,0,4,53,1,0,4,53,1,0,44,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,124,53,1,0,4,53,1,0,228,53,1,0,232,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,4,53,1,0,236,53,1,0,2,143,0,0,1,209,0,0,42,143,143,0,1,139,0,0,1,142,1,0,134,138,0,0,116,78,6,0,143,139,142,0,119,0,51,0,119,0,50,0,0,80,131,0,1,138,4,0,1,143,0,0,134,81,0,0,24,55,6,0,136,138,143,0,52,143,80,81,112,53,1,0,0,82,132,0,1,143,4,0,1,138,0,0,134,83,0,0,24,55,6,0,137,143,138,0,52,138,82,83,112,53,1,0,119,0,33,0,0,84,128,0,25,128,84,1,119,0,30,0,0,75,131,0,1,138,4,0,1,142,0,0,134,76,0,0,24,55,6,0,136,138,142,0,52,142,75,76,192,53,1,0,0,78,132,0,1,142,4,0,1,138,0,0,134,79,0,0,24,55,6,0,137,142,138,0,52,138,78,79,192,53,1,0,119,0,13,0,2,142,0,0,1,209,0,0,42,142,142,0,1,139,0,0,1,143,1,0,134,138,0,0,116,78,6,0,142,139,143,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,0,85,131,0,25,131,85,1,119,0,77,253,0,86,132,0,25,132,86,1,119,0,61,253,2,138,0,0,242,208,0,0,42,138,138,0,1,142,1,0,1,139,0,0,134,87,0,0,24,55,6,0,138,142,139,0,2,139,0,0,244,208,0,0,42,139,139,0,1,142,1,0,1,138,0,0,134,88,0,0,24,55,6,0,139,142,138,0,0,90,128,0,19,138,87,135,32,138,138,0,41,142,88,24,42,142,142,24,33,142,142,0,20,138,138,142,40,138,138,1,1,142,1,0,15,142,142,90,19,138,138,142,121,138,9,0,2,142,0,0,1,209,0,0,42,142,142,0,1,139,0,0,1,143,1,0,134,138,0,0,116,78,6,0,142,139,143,0,2,138,0,0,1,209,0,0,42,138,138,0,1,143,1,0,1,139,0,0,134,91,0,0,24,55,6,0,138,143,139,0,2,139,0,0,249,208,0,0,42,139,139,0,1,143,1,0,1,138,0,0,134,92,0,0,24,55,6,0,139,143,138,0,41,138,91,24,42,138,138,24,33,138,138,0,41,143,92,24,42,143,143,24,33,143,143,0,19,138,138,143,121,138,3,0,137,134,0,0,139,0,0,0,1,138,4,0,1,143,0,0,134,93,0,0,24,55,6,0,137,138,143,0,1,143,4,0,1,138,0,0,134,94,0,0,24,55,6,0,136,143,138,0,1,143,64,0,134,138,0,0,208,39,6,0,93,94,143,0,137,134,0,0,139,0,0,0,140,0,160,0,0,0,0,0,2,152,0,0,216,106,0,0,2,153,0,0,192,26,0,0,2,154,0,0,220,106,0,0,1,150,0,0,136,155,0,0,0,151,155,0,136,155,0,0,25,155,155,112,137,155,0,0,130,155,0,0,136,156,0,0,49,155,155,156,140,55,1,0,135,155,0,0,2,155,0,0,183,48,1,0,1,156,47,0,134,2,0,0,52,196,3,0,155,156,0,0,1,156,0,0,45,156,2,156,184,55,1,0,137,151,0,0,139,0,0,0,25,156,2,8,1,155,4,0,1,157,0,0,134,112,0,0,24,55,6,0,156,155,157,0,33,157,112,47,121,157,16,0,2,155,0,0,38,217,0,0,42,155,155,0,1,156,0,0,1,158,1,0,134,157,0,0,116,78,6,0,155,156,158,0,2,158,0,0,192,48,1,0,134,157,0,0,144,18,6,0,158,151,0,0,137,151,0,0,139,0,0,0,25,157,2,64,1,158,4,0,1,156,0,0,134,132,0,0,24,55,6,0,157,158,156,0,32,156,132,0,121,156,9,0,2,158,0,0,217,48,1,0,25,157,151,8,134,156,0,0,144,18,6,0,158,157,0,0,137,151,0,0,139,0,0,0,25,156,2,52,1,157,4,0,1,158,0,0,134,16,0,0,24,55,6,0,156,157,158,0,1,155,0,0,1,158,14,0,138,16,155,158,180,56,1,0,44,58,1,0,76,66,1,0,8,67,1,0,12,67,1,0,16,67,1,0,20,67,1,0,176,69,1,0,72,73,1,0,76,73,1,0,176,56,1,0,156,73,1,0,160,73,1,0,164,73,1,0,119,0,62,4,1,157,60,21,42,157,157,0,1,156,1,0,1,155,1,0,134,158,0,0,116,78,6,0,157,156,155,0,1,158,20,107,1,155,4,0,1,156,0,0,134,23,0,0,24,55,6,0,158,155,156,0,25,156,23,28,1,155,2,0,1,158,0,0,134,32,0,0,24,55,6,0,156,155,158,0,41,158,32,16,42,158,158,16,38,158,158,2,33,158,158,0,121,158,8,0,2,155,0,0,233,48,1,0,25,156,151,16,134,158,0,0,144,18,6,0,155,156,0,0,119,0,31,4,1,158,20,107,1,156,4,0,1,155,0,0,134,54,0,0,24,55,6,0,158,156,155,0,25,155,54,28,1,156,2,0,1,158,0,0,134,65,0,0,24,55,6,0,155,156,158,0,25,156,54,28,41,155,65,16,42,155,155,16,38,155,155,254,2,157,0,0,255,255,0,0,19,155,155,157,1,157,2,0,134,158,0,0,116,78,6,0,156,155,157,0,134,158,0,0,204,169,3,0,152,0,0,0,2,157,0,0,11,49,1,0,25,155,151,24,134,158,0,0,112,85,6,0,157,155,0,0,2,158,0,0,5,209,0,0,42,158,158,0,1,155,1,0,1,157,0,0,134,88,0,0,24,55,6,0,158,155,157,0,41,157,88,24,42,157,157,24,33,157,157,0,120,157,17,0,2,157,0,0,27,49,1,0,134,95,0,0,24,24,6,0,157,0,0,0,25,155,151,32,1,158,4,0,134,157,0,0,116,78,6,0,155,95,158,0,2,158,0,0,32,49,1,0,25,155,151,32,134,157,0,0,112,85,6,0,158,155,0,0,134,157,0,0,120,187,4,0,119,0,224,3,1,158,4,0,1,157,0,0,134,105,0,0,24,55,6,0,154,158,157,0,0,149,105,0,1,157,4,0,1,158,0,0,134,108,0,0,24,55,6,0,152,157,158,0,0,148,108,0,0,109,148,0,0,110,149,0,41,158,109,5,3,158,158,110,41,158,158,3,3,158,153,158,25,158,158,4,1,157,4,0,1,155,0,0,134,111,0,0,24,55,6,0,158,157,155,0,0,113,148,0,0,114,149,0,1,155,0,0,46,155,111,155,236,58,1,0,41,155,113,5,3,155,155,114,41,155,155,3,3,155,153,155,25,155,155,4,1,157,4,0,1,158,0,0,134,115,0,0,24,55,6,0,155,157,158,0,25,158,115,18,42,158,158,0,1,157,1,0,1,155,0,0,134,116,0,0,24,55,6,0,158,157,155,0,0,0,116,0,119,0,12,0,41,155,113,5,3,155,155,114,41,155,155,3,3,155,153,155,42,155,155,0,1,157,1,0,1,158,0,0,134,117,0,0,24,55,6,0,155,157,158,0,0,0,117,0,41,158,0,24,42,158,158,24,0,118,158,0,134,119,0,0,232,58,6,0,118,0,0,0,33,158,119,0,120,158,2,0,119,0,18,0,1,158,172,26,1,157,4,0,1,155,0,0,134,120,0,0,24,55,6,0,158,157,155,0,0,121,149,0,3,149,121,120,1,155,168,26,1,157,4,0,1,158,0,0,134,122,0,0,24,55,6,0,155,157,158,0,0,123,148,0,3,148,123,122,119,0,184,255,0,124,148,0,0,125,149,0,41,158,124,5,3,158,158,125,41,158,158,3,3,158,153,158,25,158,158,4,1,157,4,0,1,155,0,0,134,126,0,0,24,55,6,0,158,157,155,0,0,147,126,0,1,155,0,0,46,155,126,155,72,66,1,0,0,127,147,0,25,155,127,17,42,155,155,0,1,157,1,0,1,158,0,0,134,128,0,0,24,55,6,0,155,157,158,0,0,145,128,0,0,129,145,0,41,158,129,24,42,158,158,24,32,158,158,70,121,158,19,0,1,158,232,106,1,157,2,0,1,155,0,0,134,130,0,0,24,55,6,0,158,157,155,0,1,157,232,106,41,158,130,16,42,158,158,16,1,156,255,254,19,158,158,156,2,156,0,0,255,255,0,0,19,158,158,156,1,156,2,0,134,155,0,0,116,78,6,0,157,158,156,0,25,155,2,52,1,156,4,0,1,158,0,0,134,131,0,0,24,55,6,0,155,156,158,0,1,158,1,0,1,159,13,0,138,131,158,159,156,60,1,0,152,60,1,0,152,60,1,0,152,60,1,0,80,61,1,0,152,60,1,0,152,60,1,0,152,60,1,0,152,60,1,0,152,60,1,0,84,63,1,0,16,65,1,0,20,65,1,0,119,0,68,3,0,133,147,0,25,158,133,24,1,156,2,0,1,155,0,0,134,134,0,0,24,55,6,0,158,156,155,0,25,156,133,24,41,158,134,16,42,158,158,16,1,157,0,4,20,158,158,157,2,157,0,0,255,255,0,0,19,158,158,157,1,157,2,0,134,155,0,0,116,78,6,0,156,158,157,0,0,135,149,0,0,136,148,0,134,137,0,0,228,47,4,0,135,136,0,0,41,155,137,24,42,155,155,24,33,155,155,0,120,155,2,0,119,0,39,3,0,138,149,0,0,139,148,0,0,140,147,0,25,155,140,19,42,155,155,0,1,157,1,0,1,158,0,0,134,141,0,0,24,55,6,0,155,157,158,0,41,157,141,24,42,157,157,24,134,158,0,0,208,39,6,0,138,139,157,0,119,0,23,3,0,142,147,0,25,158,142,72,1,157,4,0,1,155,0,0,134,143,0,0,24,55,6,0,158,157,155,0,0,144,147,0,1,157,116,3,134,155,0,0,36,53,5,0,157,144,0,0,0,3,147,0,134,4,0,0,24,227,3,0,3,0,0,0,41,155,4,24,42,155,155,24,33,155,155,0,121,155,20,0,0,5,149,0,0,6,148,0,0,7,148,0,0,8,149,0,41,155,7,5,3,155,155,8,41,155,155,3,3,155,153,155,42,155,155,0,1,157,1,0,1,158,0,0,134,9,0,0,24,55,6,0,155,157,158,0,41,157,9,24,42,157,157,24,134,158,0,0,208,39,6,0,5,6,157,0,0,10,147,0,25,158,10,19,42,158,158,0,1,157,1,0,1,155,0,0,134,11,0,0,24,55,6,0,158,157,155,0,0,12,149,0,1,157,172,26,1,158,4,0,134,155,0,0,116,78,6,0,157,12,158,0,0,13,148,0,1,158,168,26,1,157,4,0,134,155,0,0,116,78,6,0,158,13,157,0,0,14,147,0,1,155,26,0,134,15,0,0,20,36,6,0,155,0,0,0,25,155,15,65,1,157,255,0,19,155,155,157,0,145,155,0,25,157,15,65,1,158,255,0,19,157,157,158,1,158,168,26,134,155,0,0,8,13,3,0,14,157,158,0,0,17,147,0,134,18,0,0,24,227,3,0,17,0,0,0,41,155,18,24,42,155,155,24,33,155,155,0,121,155,9,0,0,19,149,0,0,20,148,0,0,21,145,0,41,158,21,24,42,158,158,24,134,155,0,0,208,39,6,0,19,20,158,0,0,22,147,0,25,158,22,19,42,158,158,0,1,157,1,0,134,155,0,0,116,78,6,0,158,11,157,0,0,24,147,0,25,157,24,72,1,158,4,0,134,155,0,0,116,78,6,0,157,143,158,0,0,25,147,0,134,26,0,0,24,227,3,0,25,0,0,0,1,155,160,21,42,155,155,0,1,158,1,0,1,157,0,0,134,27,0,0,24,55,6,0,155,158,157,0,1,158,160,21,42,158,158,0,1,155,255,0,19,155,27,155,1,156,255,0,19,156,26,156,20,155,155,156,1,156,255,0,19,155,155,156,1,156,1,0,134,157,0,0,116,78,6,0,158,155,156,0,119,0,150,2,25,156,2,52,1,157,4,0,1,155,0,0,134,42,0,0,24,55,6,0,156,157,155,0,32,155,42,11,121,155,38,0,1,157,0,0,25,156,151,64,1,158,0,0,1,159,1,0,134,155,0,0,12,35,4,0,157,156,158,159,25,155,151,64,1,159,4,0,1,158,0,0,134,43,0,0,24,55,6,0,155,159,158,0,1,158,4,0,1,159,0,0,134,44,0,0,24,55,6,0,152,158,159,0,52,159,43,44,200,63,1,0,119,0,52,0,25,159,151,64,25,159,159,4,1,158,4,0,1,155,0,0,134,45,0,0,24,55,6,0,159,158,155,0,1,155,4,0,1,158,0,0,134,46,0,0,24,55,6,0,154,155,158,0,52,158,45,46,4,64,1,0], eb + 71680);
  HEAPU8.set([119,0,37,0,119,0,220,255,1,158,4,0,1,155,0,0,134,47,0,0,24,55,6,0,154,158,155,0,1,155,172,26,1,158,4,0,1,159,0,0,134,48,0,0,24,55,6,0,155,158,159,0,25,158,151,64,25,158,158,4,3,155,47,48,1,156,4,0,134,159,0,0,116,78,6,0,158,155,156,0,1,159,4,0,1,156,0,0,134,49,0,0,24,55,6,0,152,159,156,0,1,156,168,26,1,159,4,0,1,155,0,0,134,50,0,0,24,55,6,0,156,159,155,0,25,159,151,64,3,156,49,50,1,158,4,0,134,155,0,0,116,78,6,0,159,156,158,0,0,51,147,0,25,158,51,20,1,156,4,0,134,155,0,0,116,78,6,0,158,152,156,0,0,52,147,0,25,155,52,24,1,156,2,0,1,158,0,0,134,53,0,0,24,55,6,0,155,156,158,0,25,156,52,24,41,155,53,16,42,155,155,16,1,159,0,32,20,155,155,159,2,159,0,0,255,255,0,0,19,155,155,159,1,159,2,0,134,158,0,0,116,78,6,0,156,155,159,0,0,55,147,0,25,159,151,64,134,158,0,0,20,182,3,0,55,159,0,0,119,0,39,2,119,0,145,255,0,28,147,0,25,157,28,24,1,156,2,0,1,155,0,0,134,29,0,0,24,55,6,0,157,156,155,0,25,156,28,24,41,157,29,16,42,157,157,16,39,157,157,8,2,158,0,0,255,255,0,0,19,157,157,158,1,158,2,0,134,155,0,0,116,78,6,0,156,157,158,0,0,30,147,0,25,155,30,24,1,158,2,0,1,157,0,0,134,31,0,0,24,55,6,0,155,158,157,0,25,158,30,24,41,155,31,16,42,155,155,16,1,156,254,251,19,155,155,156,2,156,0,0,255,255,0,0,19,155,155,156,1,156,2,0,134,157,0,0,116,78,6,0,158,155,156,0,0,33,147,0,25,157,33,17,42,157,157,0,1,156,1,0,1,155,0,0,134,34,0,0,24,55,6,0,157,156,155,0,0,35,147,0,25,156,35,18,42,156,156,0,1,157,1,0,134,155,0,0,116,78,6,0,156,34,157,0,0,36,147,0,134,37,0,0,24,227,3,0,36,0,0,0,41,155,37,24,42,155,155,24,33,155,155,0,120,155,2,0,119,0,233,1,0,38,149,0,0,39,148,0,0,40,147,0,25,155,40,18,42,155,155,0,1,157,1,0,1,156,0,0,134,41,0,0,24,55,6,0,155,157,156,0,41,157,41,24,42,157,157,24,134,156,0,0,208,39,6,0,38,39,157,0,119,0,217,1,119,0,216,1,25,159,2,52,1,156,4,0,1,155,0,0,134,102,0,0,24,55,6,0,159,156,155,0,32,155,102,2,121,155,4,0,2,146,0,0,142,49,1,0,119,0,15,0,25,155,2,52,1,156,4,0,1,159,0,0,134,103,0,0,24,55,6,0,155,156,159,0,32,159,103,3,121,159,4,0,2,146,0,0,147,49,1,0,119,0,4,0,2,146,0,0,153,49,1,0,119,0,1,0,0,104,146,0,1,156,168,26,134,159,0,0,168,167,1,0,152,156,104,0,25,159,2,52,1,156,4,0,1,155,0,0,134,106,0,0,24,55,6,0,159,156,155,0,1,156,44,21,27,159,106,20,3,156,156,159,25,156,156,16,42,156,156,0,1,159,1,0,1,158,1,0,134,155,0,0,116,78,6,0,156,159,158,0,119,0,169,1,119,0,209,255,119,0,208,255,119,0,199,253,1,159,180,21,42,159,159,0,1,155,1,0,1,156,1,0,134,158,0,0,116,78,6,0,159,155,156,0,2,156,0,0,100,159,0,0,1,155,42,0,1,159,4,0,134,158,0,0,116,78,6,0,156,155,159,0,2,159,0,0,129,159,0,0,2,155,0,0,213,53,1,0,1,156,8,0,135,158,9,0,159,155,156,0,2,156,0,0,148,159,0,0,1,155,100,0,1,159,4,0,134,158,0,0,116,78,6,0,156,155,159,0,2,159,0,0,152,159,0,0,1,155,1,0,1,156,4,0,134,158,0,0,116,78,6,0,159,155,156,0,2,156,0,0,160,159,0,0,1,155,4,0,1,159,4,0,134,158,0,0,116,78,6,0,156,155,159,0,1,158,204,106,1,159,4,0,1,155,0,0,134,56,0,0,24,55,6,0,158,159,155,0,1,155,0,0,46,155,56,155,40,68,1,0,1,155,204,106,1,159,4,0,1,158,0,0,134,57,0,0,24,55,6,0,155,159,158,0,25,158,57,52,1,159,4,0,1,155,0,0,134,58,0,0,24,55,6,0,158,159,155,0,2,159,0,0,116,159,0,0,1,158,4,0,134,155,0,0,116,78,6,0,159,58,158,0,1,155,172,26,1,158,4,0,1,159,0,0,134,59,0,0,24,55,6,0,155,158,159,0,1,159,168,26,1,158,4,0,1,155,0,0,134,60,0,0,24,55,6,0,159,158,155,0,2,158,0,0,92,159,0,0,134,155,0,0,188,25,3,0,158,59,60,0,2,155,0,0,104,159,0,0,1,158,4,0,1,159,0,0,134,61,0,0,24,55,6,0,155,158,159,0,2,159,0,0,108,159,0,0,1,158,4,0,1,155,0,0,134,62,0,0,24,55,6,0,159,158,155,0,41,155,61,5,3,155,155,62,41,155,155,3,3,155,153,155,25,155,155,4,1,158,4,0,1,159,0,0,134,63,0,0,24,55,6,0,155,158,159,0,0,147,63,0,1,159,0,0,46,159,63,159,72,69,1,0,0,64,147,0,1,159,3,0,134,66,0,0,148,37,6,0,159,64,0,0,33,159,66,0,120,159,21,0,2,159,0,0,108,159,0,0,1,158,4,0,1,155,0,0,134,67,0,0,24,55,6,0,159,158,155,0,2,155,0,0,104,159,0,0,1,158,4,0,1,159,0,0,134,68,0,0,24,55,6,0,155,158,159,0,2,158,0,0,92,159,0,0,134,159,0,0,192,66,6,0,67,68,158,0,119,0,25,1,2,159,0,0,5,209,0,0,42,159,159,0,1,158,1,0,1,155,0,0,134,69,0,0,24,55,6,0,159,158,155,0,41,155,69,24,42,155,155,24,33,155,155,0,121,155,8,0,2,158,0,0,85,49,1,0,25,159,151,48,134,155,0,0,144,18,6,0,158,159,0,0,119,0,6,1,2,159,0,0,101,49,1,0,25,158,151,56,134,155,0,0,144,18,6,0,159,158,0,0,119,0,255,0,1,155,4,0,1,158,0,0,134,70,0,0,24,55,6,0,154,155,158,0,0,149,70,0,1,158,4,0,1,155,0,0,134,71,0,0,24,55,6,0,152,158,155,0,0,148,71,0,0,72,148,0,0,73,149,0,41,155,72,5,3,155,155,73,41,155,155,3,3,155,153,155,25,155,155,4,1,158,4,0,1,159,0,0,134,74,0,0,24,55,6,0,155,158,159,0,0,75,148,0,0,76,149,0,1,159,0,0,46,159,74,159,112,70,1,0,41,159,75,5,3,159,159,76,41,159,159,3,3,159,153,159,25,159,159,4,1,158,4,0,1,155,0,0,134,77,0,0,24,55,6,0,159,158,155,0,25,155,77,18,42,155,155,0,1,158,1,0,1,159,0,0,134,78,0,0,24,55,6,0,155,158,159,0,0,1,78,0,119,0,12,0,41,159,75,5,3,159,159,76,41,159,159,3,3,159,153,159,42,159,159,0,1,158,1,0,1,155,0,0,134,79,0,0,24,55,6,0,159,158,155,0,0,1,79,0,41,155,1,24,42,155,155,24,0,80,155,0,134,81,0,0,232,58,6,0,80,0,0,0,33,155,81,0,120,155,2,0,119,0,18,0,1,155,172,26,1,158,4,0,1,159,0,0,134,82,0,0,24,55,6,0,155,158,159,0,0,83,149,0,3,149,83,82,1,159,168,26,1,158,4,0,1,155,0,0,134,84,0,0,24,55,6,0,159,158,155,0,0,85,148,0,3,148,85,84,119,0,184,255,0,86,148,0,0,87,149,0,41,155,86,5,3,155,155,87,41,155,155,3,3,155,153,155,25,155,155,4,1,158,4,0,1,159,0,0,134,89,0,0,24,55,6,0,155,158,159,0,0,147,89,0,1,159,0,0,46,159,89,159,68,73,1,0,25,159,2,52,1,158,4,0,1,155,0,0,134,90,0,0,24,55,6,0,159,158,155,0,0,91,147,0,25,155,91,24,1,158,2,0,1,159,0,0,134,92,0,0,24,55,6,0,155,158,159,0,32,159,90,7,121,159,47,0,0,93,147,0,25,159,93,24,1,158,2,0,1,155,0,0,134,94,0,0,24,55,6,0,159,158,155,0,41,155,92,16,42,155,155,16,2,158,0,0,0,128,0,0,19,155,155,158,33,155,155,0,38,155,155,1,1,158,255,0,19,155,155,158,41,155,155,24,42,155,155,24,33,155,155,0,121,155,15,0,25,158,93,24,41,159,94,16,42,159,159,16,2,156,0,0,255,127,255,255,19,159,159,156,2,156,0,0,255,255,0,0,19,159,159,156,1,156,2,0,134,155,0,0,116,78,6,0,158,159,156,0,119,0,64,0,25,156,93,24,41,159,94,16,42,159,159,16,39,159,159,64,2,158,0,0,255,255,0,0,19,159,159,158,1,158,2,0,134,155,0,0,116,78,6,0,156,159,158,0,119,0,52,0,0,96,147,0,25,155,96,24,1,158,2,0,1,159,0,0,134,98,0,0,24,55,6,0,155,158,159,0,41,159,92,16,42,159,159,16,38,159,159,64,33,159,159,0,38,159,159,1,1,158,255,0,19,159,159,158,41,159,159,24,42,159,159,24,33,159,159,0,121,159,13,0,25,158,96,24,41,155,98,16,42,155,155,16,38,155,155,191,2,156,0,0,255,255,0,0,19,155,155,156,1,156,2,0,134,159,0,0,116,78,6,0,158,155,156,0,119,0,14,0,25,156,96,24,41,155,98,16,42,155,155,16,2,158,0,0,0,128,0,0,20,155,155,158,2,158,0,0,255,255,0,0,19,155,155,158,1,158,2,0,134,159,0,0,116,78,6,0,156,155,158,0,0,99,147,0,25,158,99,16,42,158,158,0,1,155,1,0,1,156,1,0,134,159,0,0,116,78,6,0,158,155,156,0,0,100,149,0,1,156,172,26,1,155,4,0,134,159,0,0,116,78,6,0,156,100,155,0,0,101,148,0,1,155,168,26,1,156,4,0,134,159,0,0,116,78,6,0,155,101,156,0,1,156,168,26,134,159,0,0,36,182,5,0,156,0,0,0,119,0,25,0,119,0,26,255,1,157,252,106,1,155,4,0,1,158,0,0,134,97,0,0,24,55,6,0,157,155,158,0,34,158,97,2,120,158,4,0,134,158,0,0,12,78,3,0,119,0,13,0,2,155,0,0,58,49,1,0,25,157,151,40,134,158,0,0,144,18,6,0,155,157,0,0,137,151,0,0,139,0,0,0,119,0,4,0,119,0,36,252,119,0,35,252,119,0,34,252,25,155,2,64,1,158,4,0,1,159,0,0,134,107,0,0,24,55,6,0,155,158,159,0,25,158,2,64,26,155,107,1,1,156,4,0,134,159,0,0,116,78,6,0,158,155,156,0,137,151,0,0,139,0,0,0,140,1,154,0,0,0,0,0,2,146,0,0,200,106,0,0,2,147,0,0,252,106,0,0,2,148,0,0,8,3,0,0,1,144,0,0,136,149,0,0,0,145,149,0,136,149,0,0,1,150,128,0,3,149,149,150,137,149,0,0,130,149,0,0,136,150,0,0,49,149,149,150,48,74,1,0,135,149,0,0,0,2,0,0,2,150,0,0,1,209,0,0,42,150,150,0,1,151,0,0,1,152,1,0,134,149,0,0,116,78,6,0,150,151,152,0,1,152,244,2,1,151,0,0,1,150,4,0,134,149,0,0,116,78,6,0,152,151,150,0,1,150,12,3,1,151,0,0,1,152,4,0,134,149,0,0,116,78,6,0,150,151,152,0,2,149,0,0,6,209,0,0,42,149,149,0,1,152,1,0,1,151,0,0,134,53,0,0,24,55,6,0,149,152,151,0,1,151,255,0,19,151,53,151,33,151,151,0,121,151,36,0,0,112,2,0,25,151,112,24,1,152,2,0,1,149,0,0,134,124,0,0,24,55,6,0,151,152,149,0,41,149,124,16,42,149,149,16,1,152,128,0,19,149,149,152,33,149,149,0,38,149,149,1,1,152,255,0,19,149,149,152,41,149,149,24,42,149,149,24,33,149,149,0,120,149,17,0,2,152,0,0,6,209,0,0,42,152,152,0,1,151,0,0,1,150,1,0,134,149,0,0,116,78,6,0,152,151,150,0,2,150,0,0,250,208,0,0,42,150,150,0,1,151,0,0,1,152,1,0,134,149,0,0,116,78,6,0,150,151,152,0,0,23,2,0,25,149,23,17,42,149,149,0,1,152,1,0,1,151,0,0,134,34,0,0,24,55,6,0,149,152,151,0,41,151,34,24,42,151,151,24,32,151,151,88,121,151,79,0,0,49,2,0,25,151,49,18,42,151,151,0,1,152,1,0,1,149,0,0,134,58,0,0,24,55,6,0,151,152,149,0,41,149,58,24,42,149,149,24,33,149,149,88,121,149,67,0,1,149,232,106,1,152,2,0,1,151,0,0,134,76,0,0,24,55,6,0,149,152,151,0,41,151,76,16,42,151,151,16,38,151,151,4,33,151,151,0,38,151,151,1,1,152,255,0,19,151,151,152,41,151,151,24,42,151,151,24,33,151,151,0,120,151,50,0,0,104,2,0,25,152,104,18,42,152,152,0,1,149,88,0,1,150,1,0,134,151,0,0,116,78,6,0,152,149,150,0,1,151,232,106,1,150,2,0,1,149,0,0,134,105,0,0,24,55,6,0,151,150,149,0,41,149,105,16,42,149,149,16,1,150,0,8,19,149,149,150,33,149,149,0,38,149,149,1,1,150,255,0,19,149,149,150,41,149,149,24,42,149,149,24,33,149,149,0,121,149,24,0,0,106,2,0,25,149,106,8,25,149,149,4,1,150,4,0,1,151,0,0,134,107,0,0,24,55,6,0,149,150,151,0,0,108,2,0,25,151,108,8,1,150,4,0,1,149,0,0,134,109,0,0,24,55,6,0,151,150,149,0,1,149,26,0,134,110,0,0,20,36,6,0,149,0,0,0,25,150,110,65,134,149,0,0,208,39,6,0,107,109,150,0,0,111,2,0,134,113,0,0,148,195,4,0,111,0,0,0,1,149,4,0,1,150,0,0,134,114,0,0,24,55,6,0,147,149,150,0,0,142,114,0,0,115,2,0,1,150,208,106,1,149,0,0,1,151,0,0,134,116,0,0,232,39,2,0,115,150,149,151,0,117,2,0,25,151,117,17,42,151,151,0,1,149,1,0,1,150,0,0,134,118,0,0,24,55,6,0,151,149,150,0,41,150,116,24,42,150,150,24,33,150,150,0,121,150,127,3,2,150,0,0,246,208,0,0,42,150,150,0,1,149,1,0,1,151,0,0,134,119,0,0,24,55,6,0,150,149,151,0,41,151,118,24,42,151,151,24,33,151,151,73,121,151,16,0,41,151,119,24,42,151,151,24,33,151,151,0,121,151,6,0,2,149,0,0,176,251,0,0,134,151,0,0,112,85,6,0,149,145,0,0,1,149,0,0,1,150,0,0,134,151,0,0,104,72,5,0,113,149,150,0,119,0,7,0,41,151,119,24,42,151,151,24,33,151,151,0,121,151,3,0,134,151,0,0,120,187,4,0,2,150,0,0,246,208,0,0,42,150,150,0,1,149,0,0,1,152,1,0,134,151,0,0,116,78,6,0,150,149,152,0,1,151,4,0,1,152,0,0,134,120,0,0,24,55,6,0,147,151,152,0,36,152,120,0,121,152,13,0,0,121,2,0,25,152,121,17,42,152,152,0,1,151,1,0,1,149,0,0,134,122,0,0,24,55,6,0,152,151,149,0,134,149,0,0,144,122,3,0,122,0,0,0,119,0,56,0,2,149,0,0,250,208,0,0,42,149,149,0,1,151,1,0,1,152,0,0,134,123,0,0,24,55,6,0,149,151,152,0,41,152,123,24,42,152,152,24,33,152,152,0,120,152,44,0,1,152,4,0,1,151,0,0,134,125,0,0,24,55,6,0,147,152,151,0,0,126,142,0,4,142,126,125,0,127,142,0,1,151,148,26,1,152,4,0,1,149,0,0,134,128,0,0,24,55,6,0,151,152,149,0,47,149,128,127,148,78,1,0,0,129,142,0,1,152,148,26,1,151,4,0,134,149,0,0,116,78,6,0,152,129,151,0,1,149,4,0,1,151,0,0,134,130,0,0,24,55,6,0,147,149,151,0,1,151,148,26,1,149,4,0,1,152,0,0,134,131,0,0,24,55,6,0,151,149,152,0,49,152,130,131,232,78,1,0,2,149,0,0,6,209,0,0,42,149,149,0,1,151,0,0,1,150,1,0,134,152,0,0,116,78,6,0,149,151,150,0,0,132,2,0,25,152,132,24,1,150,2,0,1,151,0,0,134,133,0,0,24,55,6,0,152,150,151,0,41,151,133,16,42,151,151,16,38,151,151,8,33,151,151,0,38,151,151,1,1,150,255,0,19,151,151,150,41,151,151,24,42,151,151,24,33,151,151,0,120,151,75,3,0,134,2,0,25,151,134,17,42,151,151,0,1,150,1,0,1,152,0,0,134,135,0,0,24,55,6,0,151,150,152,0,41,152,135,24,42,152,152,24,1,150,65,0,1,153,23,0,138,152,150,153,196,79,1,0,192,79,1,0,192,79,1,0,192,79,1,0,192,79,1,0,236,79,1,0,192,79,1,0,192,79,1,0,228,80,1,0,192,79,1,0,192,79,1,0,72,82,1,0,192,79,1,0,76,84,1,0,192,79,1,0,192,79,1,0,192,79,1,0,124,86,1,0,192,79,1,0,192,79,1,0,192,79,1,0,104,88,1,0,108,88,1,0,119,0,38,3,1,150,192,106,1,151,4,0,1,149,0,0,134,136,0,0,24,55,6,0,150,151,149,0,134,149,0,0,36,126,4,0,136,0,0,0,119,0,28,3,1,150,232,106,1,153,2,0,1,151,0,0,134,39,0,0,24,55,6,0,150,153,151,0,1,153,232,106,41,150,39,16,42,150,150,16,1,149,0,1,20,150,150,149,2,149,0,0,255,255,0,0,19,150,150,149,1,149,2,0,134,151,0,0,116,78,6,0,153,150,149,0,1,151,16,3,1,149,4,0,1,150,0,0,134,40,0,0,24,55,6,0,151,149,150,0,1,149,16,3,25,151,40,1,1,153,4,0,134,150,0,0,116,78,6,0,149,151,153,0,25,153,145,64,25,151,40,1,1,149,4,0,134,150,0,0,116,78,6,0,153,151,149,0,1,149,124,11,2,151,0,0,97,252,0,0,25,153,145,64,134,150,0,0,248,82,6,0,149,151,153,0,1,150,4,0,1,153,0,0,134,41,0,0,24,55,6,0,147,150,153,0,26,150,41,1,1,151,4,0,134,153,0,0,116,78,6,0,147,150,151,0,26,153,41,1,36,153,153,0,120,153,2,0,119,0,227,2,1,151,70,0,134,153,0,0,144,122,3,0,151,0,0,0,119,0,222,2,1,149,232,106,1,151,2,0,1,150,0,0,134,137,0,0,24,55,6,0,149,151,150,0,1,151,232,106,41,149,137,16,42,149,149,16,1,153,255,223,19,149,149,153,2,153,0,0,255,255,0,0,19,149,149,153,1,153,2,0,134,150,0,0,116,78,6,0,151,149,153,0,1,150,0,3,1,153,4,0,1,149,0,0,134,138,0,0,24,55,6,0,150,153,149,0,33,149,138,0,120,149,32,0,2,153,0,0,180,251,0,0,25,150,145,8,134,149,0,0,112,85,6,0,153,150,0,0,2,149,0,0,5,209,0,0,42,149,149,0,1,150,1,0,1,153,0,0,134,3,0,0,24,55,6,0,149,150,153,0,41,153,3,24,42,153,153,24,33,153,153,0,120,153,12,0,25,150,145,16,1,149,4,0,134,153,0,0,116,78,6,0,150,113,149,0,2,149,0,0,195,251,0,0,25,150,145,16,134,153,0,0,112,85,6,0,149,150,0,0,134,153,0,0,120,187,4,0,1,153,2,0,134,4,0,0,20,36,6,0,153,0,0,0,1,153,0,3,1,150,4,0,1,149,0,0,134,5,0,0,24,55,6,0,153,150,149,0,1,150,0,3,25,153,4,2,3,153,5,153,1,151,4,0,134,149,0,0,116,78,6,0,150,153,151,0,1,149,0,3,1,151,4,0,1,153,0,0,134,6,0,0,24,55,6,0,149,151,153,0,1,153,50,0,54,153,153,6,52,82,1,0,119,0,138,2,1,151,104,0,134,153,0,0,144,122,3,0,151,0,0,0,119,0,133,2,1,153,4,0,1,151,0,0,134,42,0,0,24,55,6,0,148,153,151,0,1,151,200,2,1,153,4,0,1,150,0,0,134,43,0,0,24,55,6,0,151,153,150,0,27,150,43,10,25,150,150,50,134,44,0,0,20,36,6,0,150,0,0,0,1,150,4,0,1,153,0,0,134,45,0,0,24,55,6,0,148,150,153,0,25,150,44,2,4,150,45,150,1,151,4,0,134,153,0,0,116,78,6,0,148,150,151,0,1,153,3,0,134,46,0,0,40,95,5,0,153,0,0,0,33,153,46,0,120,153,62,0,1,153,200,2,1,151,4,0,1,150,0,0,134,47,0,0,24,55,6,0,153,151,150,0,27,150,47,10,25,150,150,50,134,48,0,0,20,36,6,0,150,0,0,0,1,150,200,2,1,151,4,0,1,153,0,0,134,50,0,0,24,55,6,0,150,151,153,0,27,153,50,10,25,153,153,50,134,51,0,0,20,36,6,0,153,0,0,0,1,153,200,2,1,151,4,0,1,150,0,0,134,52,0,0,24,55,6,0,153,151,150,0,27,150,52,10,25,150,150,50,134,54,0,0,20,36,6,0,150,0,0,0,1,150,200,2,1,151,4,0,1,153,0,0,134,55,0,0,24,55,6,0,150,151,153,0,27,153,55,10,25,153,153,50,134,56,0,0,20,36,6,0,153,0,0,0,1,153,4,0,1,151,0,0,134,57,0,0,24,55,6,0,148,153,151,0,25,153,48,2,25,150,51,2,3,153,153,150,25,150,54,2,3,153,153,150,25,150,56,2,3,153,153,150,4,153,57,153,1,150,4,0,134,151,0,0,116,78,6,0,148,153,150,0,1,151,4,0,1,150,0,0,134,59,0,0,24,55,6,0,148,151,150,0,34,150,59,0,121,150,6,0,1,151,0,0,1,153,4,0,134,150,0,0,116,78,6,0,148,151,153,0,0,60,2,0,0,61,2,0,25,153,60,8,1,151,0,0,134,150,0,0,64,100,4,0,153,61,151,0,1,2,0,0,1,150,4,0,1,151,0,0,134,62,0,0,24,55,6,0,148,150,151,0,53,151,62,42,48,84,1,0,119,0,11,2,2,150,0,0,102,252,0,0,25,153,145,72,134,151,0,0,144,18,6,0,150,153,0,0,119,0,4,2,1,143,0,0,1,140,0,0,1,151,24,107,1,153,4,0,1,150,0,0,134,63,0,0,24,55,6,0,151,153,150,0,0,141,63,0,0,64,141,0,1,150,0,0,53,150,64,150,132,84,1,0,119,0,62,0,0,65,141,0,1,150,192,106,1,153,4,0,1,151,0,0,134,66,0,0,24,55,6,0,150,153,151,0,46,151,65,66,88,85,1,0,0,67,141,0,1,151,204,106,1,153,4,0,1,150,0,0,134,68,0,0,24,55,6,0,151,153,150,0,46,150,67,68,88,85,1,0,0,69,141,0,1,150,196,106,1,153,4,0,1,151,0,0,134,70,0,0,24,55,6,0,150,153,151,0,46,151,69,70,88,85,1,0,0,71,141,0,1,151,4,0,1,153,0,0,134,72,0,0,24,55,6,0,146,151,153,0,46,153,71,72,88,85,1,0,0,73,141,0,134,74,0,0,116,4,5,0,73,0,0,0,1,153,255,0,19,153,74,153,33,153,153,0,121,153,11,0,0,75,140,0,25,140,75,1,25,153,75,1,134,77,0,0,20,36,6,0,153,0,0,0,32,153,77,0,121,153,3,0,0,78,141,0,0,143,78,0,0,79,141,0,1,153,4,0,1,151,0,0,134,80,0,0,24,55,6,0,79,153,151,0,0,141,80,0,119,0,191,255,0,81,143,0,1,151,0,0,53,151,81,151,140,85,1,0,119,0,180,1,0,82,2,0,0,83,2,0,25,151,83,8,1,153,4,0,1,150,0,0,134,84,0,0,24,55,6,0,151,153,150,0,0,85,2,0,25,150,85,8,25,150,150,4,1,153,4,0,1,151,0,0,134,86,0,0,24,55,6,0,150,153,151,0,1,151,192,26,41,153,84,5,3,153,153,86,41,153,153,3,3,151,151,153,25,151,151,4,1,153,4,0,1,150,0,0,134,87,0,0,24,55,6,0,151,153,150,0,25,153,82,8,1,151,0,0,134,150,0,0,64,100,4,0,153,87,151,0,1,2,0,0,0,88,143,0,1,151,0,0,1,153,0,0,134,150,0,0,176,164,4,0,88,151,153,0,0,89,143,0,1,150,1,0,134,90,0,0,208,181,1,0,89,150,0,0,25,153,145,80,1,151,4,0,134,150,0,0,116,78,6,0,153,90,151,0,2,151,0,0,127,252,0,0,25,153,145,80,134,150,0,0,144,18,6,0,151,153,0,0,0,91,143,0,134,150,0,0,100,97,6,0,91,0,0,0,119,0,120,1,1,153,0,0,134,7,0,0,40,95,5,0,153,0,0,0,33,153,7,0,120,153,114,1,1,153,196,106,1,151,4,0,1,149,0,0,134,8,0,0,24,55,6,0,153,151,149,0,1,149,0,0,46,149,8,149,248,86,1,0,1,149,196,106,1,151,4,0,1,153,0,0,134,9,0,0,24,55,6,0,149,151,153,0,25,153,9,52,1,151,4,0,1,149,0,0,134,10,0,0,24,55,6,0,153,151,149,0,32,149,10,2,120,149,4,0,1,144,35,0,119,0,2,0,1,144,35,0,32,149,144,35,121,149,52,0,1,149,4,0,1,151,0,0,134,11,0,0,24,55,6,0,146,149,151,0,1,151,0,0,46,151,11,151,88,87,1,0,1,151,4,0,1,149,0,0,134,12,0,0,24,55,6,0,146,151,149,0,25,149,12,52,1,151,4,0,1,153,0,0,134,13,0,0,24,55,6,0,149,151,153,0,32,153,13,2,120,153,31,0,1,151,255,255,134,153,0,0,20,25,5,0,151,0,0,0,2,153,0,0,5,209,0,0,42,153,153,0,1,151,1,0,1,149,0,0,134,14,0,0,24,55,6,0,153,151,149,0,41,149,14,24,42,149,149,24,33,149,149,0,121,149,8,0,2,151,0,0,254,251,0,0,25,153,145,32,134,149,0,0,144,18,6,0,151,153,0,0,119,0,42,1,2,153,0,0,206,251,0,0,25,151,145,24,134,149,0,0,144,18,6,0,153,151,0,0,119,0,35,1,2,149,0,0,6,209,0,0,42,149,149,0,1,151,1,0,1,153,0,0,134,15,0,0,24,55,6,0,149,151,153,0,41,153,15,24,42,153,153,24,33,153,153,0,120,153,23,1,2,153,0,0,5,209,0,0,42,153,153,0,1,151,1,0,1,149,0,0,134,16,0,0,24,55,6,0,153,151,149,0,41,149,16,24,42,149,149,24,33,149,149,0,121,149,8,0,2,151,0,0,53,252,0,0,25,153,145,48,134,149,0,0,144,18,6,0,151,153,0,0,119,0,4,1,2,153,0,0,22,252,0,0,25,151,145,40,134,149,0,0,144,18,6,0,153,151,0,0,119,0,253,0,119,0,1,0,1,149,100,0,134,17,0,0,20,36,6,0,149,0,0,0,0,18,2,0,25,149,18,17,42,149,149,0,1,151,1,0,1,153,0,0,134,19,0,0,24,55,6,0,149,151,153,0,41,153,19,24,42,153,153,24,32,153,153,87,1,151,15,0,1,149,30,0,125,20,153,151,149,0,0,0,54,149,17,20,196,88,1,0,119,0,230,0,0,21,2,0,25,149,21,17,42,149,149,0,1,151,1,0,1,153,0,0,134,22,0,0,24,55,6,0,149,151,153,0,41,153,22,24,42,153,153,24,32,153,153,87,121,153,69,0,1,153,240,106,1,151,4,0,1,149,0,0,134,24,0,0,24,55,6,0,153,151,149,0,32,149,24,0,121,149,5,0,1,151,87,0,134,149,0,0,144,122,3,0,151,0,0,0,1,149,244,106,1,151,4,0,1,153,0,0,134,25,0,0,24,55,6,0,149,151,153,0,1,151,244,106,26,149,25,1,1,150,4,0,134,153,0,0,116,78,6,0,151,149,150,0,26,153,25,1,32,153,153,0,121,153,14,0,1,150,240,106,1,149,0,0,1,151,4,0,134,153,0,0,116,78,6,0,150,149,151,0,1,151,244,106,1,149,1,0,1,150,4,0,134,153,0,0,116,78,6,0,151,149,150,0,119,0,22,0,1,153,244,106,1,150,4,0,1,149,0,0,134,26,0,0,24,55,6,0,153,150,149,0,1,149,20,3,26,150,26,1,41,150,150,2,3,149,149,150,1,150,4,0,1,153,0,0,134,27,0,0,24,55,6,0,149,150,153,0,1,150,240,106,25,149,27,1,1,151,4,0,134,153,0,0,116,78,6,0,150,149,151,0,1,153,1,0,1,151,10,0,134,28,0,0,212,44,6,0,153,151,0,0,0,139,28,0,119,0,7,0,1,151,1,0,1,153,3,0,134,29,0,0,212,44,6,0,151,153,0,0,0,139,29,0,0,30,139,0,1,153,4,0,1,151,0,0,134,31,0,0,24,55,6,0,147,153,151,0,4,153,31,30,1,149,4,0,134,151,0,0,116,78,6,0,147,153,149,0,0,32,139,0,1,151,16,107,1,149,4,0,1,153,0,0,134,33,0,0,24,55,6,0,151,149,153,0,1,149,16,107,4,151,33,32,1,150,4,0,134,153,0,0,116,78,6,0,149,151,150,0,1,153,4,0,1,150,0,0,134,35,0,0,24,55,6,0,147,153,150,0,36,150,35,0,121,150,6,0,1,153,1,0,1,151,4,0,134,150,0,0,116,78,6,0,147,153,151,0,1,150,16,107,1,151,4,0,1,153,0,0,134,36,0,0,24,55,6,0,150,151,153,0,36,153,36,0,121,153,12,0,0,37,2,0,25,153,37,17,42,153,153,0,1,151,1,0,1,150,0,0,134,38,0,0,24,55,6,0,153,151,150,0,134,150,0,0,144,122,3,0,38,0,0,0,2,151,0,0,72,252,0,0,25,153,145,56,134,150,0,0,144,18,6,0,151,153,0,0,119,0,82,0,41,152,118,24,42,152,152,24,33,152,152,73,121,152,78,0,2,152,0,0,246,208,0,0,42,152,152,0,1,150,1,0,1,153,0,0,134,92,0,0,24,55,6,0,152,150,153,0,41,153,92,24,42,153,153,24,33,153,153,0,121,153,15,0,2,150,0,0,176,251,0,0,25,152,145,88,134,153,0,0,112,85,6,0,150,152,0,0,2,152,0,0,246,208,0,0,42,152,152,0,1,150,0,0,1,151,1,0,134,153,0,0,116,78,6,0,152,150,151,0,0,93,2,0,25,153,93,17,42,153,153,0,1,151,1,0,1,150,0,0,134,94,0,0,24,55,6,0,153,151,150,0,41,150,94,24,42,150,150,24,32,150,150,70,121,150,35,0,1,150,16,3,1,151,4,0,1,153,0,0,134,95,0,0,24,55,6,0,150,151,153,0,1,153,4,0,1,151,0,0,134,96,0,0,24,55,6,0,147,153,151,0,4,153,96,95,1,150,4,0,134,151,0,0,116,78,6,0,147,153,150,0,1,151,4,0,1,150,0,0,134,97,0,0,24,55,6,0,147,151,150,0,36,150,97,0,121,150,12,0,0,98,2,0,25,150,98,17,42,150,150,0,1,151,1,0,1,153,0,0,134,99,0,0,24,55,6,0,150,151,153,0,134,153,0,0,144,122,3,0,99,0,0,0,1,151,0,0,1,150,0,0,134,153,0,0,152,70,5,0,113,151,150,0,2,153,0,0,243,208,0,0,42,153,153,0,1,150,1,0,1,151,0,0,134,100,0,0,24,55,6,0,153,150,151,0,2,151,0,0,6,209,0,0,42,151,151,0,1,150,1,0,1,153,0,0,134,101,0,0,24,55,6,0,151,150,153,0,1,153,255,0,19,153,100,153,32,153,153,0,41,150,101,24,42,150,150,24,33,150,150,0,20,153,153,150,120,153,3,0,134,153,0,0,96,111,6,0,1,150,244,2,1,151,0,0,1,152,4,0,134,153,0,0,116,78,6,0,150,151,152,0,134,153,0,0,196,168,2,0,0,102,2,0,1,153,0,0,45,153,102,153,4,93,1,0,1,1,255,255,0,103,1,0,137,145,0,0,139,103,0,0,119,0,5,0,1,1,0,0,0,103,1,0,137,145,0,0,139,103,0,0,1,153,0,0,139,153,0,0,140,2,126,0,0,0,0,0,2,112,0,0,255,0,0,0,2,113,0,0,200,117,0,0,2,114,0,0,216,106,0,0,2,115,0,0,204,117,0,0,2,116,0,0,220,106,0,0,2,117,0,0,192,26,0,0,2,118,0,0,42,233,0,0,2,119,0,0,1,209,0,0,1,110,0,0,136,120,0,0,0,111,120,0,136,120,0,0,25,120,120,32,137,120,0,0,130,120,0,0,136,121,0,0,49,120,120,121,144,93,1,0,135,120,0,0,0,3,0,0,0,4,1,0,2,121,0,0,244,208,0,0,42,121,121,0,1,122,0,0,1,123,1,0,134,120,0,0,116,78,6,0,121,122,123,0,1,120,4,3,1,123,4,0,1,122,0,0,134,50,0,0,24,55,6,0,120,123,122,0,33,122,50,0,121,122,20,0,1,122,4,3,1,123,4,0,1,120,0,0,134,83,0,0,24,55,6,0,122,123,120,0,1,123,4,3,26,122,83,1,1,121,4,0,134,120,0,0,116,78,6,0,123,122,121,0,2,121,0,0,99,18,1,0,134,120,0,0,144,18,6,0,121,111,0,0,137,111,0,0,139,0,0,0,1,120,232,106,1,121,2,0,1,122,0,0,134,93,0,0,24,55,6,0,120,121,122,0,41,122,93,16,42,122,122,16,1,121,0,2,19,122,122,121,33,122,122,0,38,122,122,1,19,122,122,112,19,122,122,112,33,122,122,0,121,122,82,0,1,122,5,0,134,16,0,0,20,36,6,0,122,0,0,0,33,122,16,0,121,122,74,0,1,122,208,106,134,28,0,0,132,200,3,0,122,0,0,0,1,120,4,0,1,123,0,0,134,121,0,0,24,55,6,0,28,120,123,0,1,123,4,0,134,122,0,0,116,78,6,0,113,121,123,0,25,123,113,4,25,120,28,4,1,124,4,0,1,125,0,0,134,121,0,0,24,55,6,0,120,124,125,0,1,125,4,0,134,122,0,0,116,78,6,0,123,121,125,0,1,122,4,0,1,125,0,0,134,33,0,0,24,55,6,0,113,122,125,0,1,125,4,0,1,122,0,0,134,40,0,0,24,55,6,0,114,125,122,0,45,122,33,40,156,95,1,0,1,122,4,0,1,125,0,0,134,51,0,0,24,55,6,0,115,122,125,0,1,125,4,0,1,122,0,0,134,56,0,0,24,55,6,0,116,125,122,0,45,122,51,56,156,95,1,0,2,125,0,0,38,217,0,0,42,125,125,0,1,121,0,0,1,123,1,0,134,122,0,0,116,78,6,0,125,121,123,0,42,123,119,0,1,121,0,0,1,125,1,0,134,122,0,0,116,78,6,0,123,121,125,0,2,125,0,0,6,209,0,0,42,125,125,0,1,121,0,0,1,123,1,0,134,122,0,0,116,78,6,0,125,121,123,0,137,111,0,0,139,0,0,0,119,0,4,0,1,110,8,0,119,0,2,0,1,110,8,0,32,122,110,8,121,122,24,0,1,110,0,0,1,122,4,0,1,123,0,0,134,63,0,0,24,55,6,0,116,122,123,0,0,71,3,0,3,122,63,71,1,121,4,0,134,123,0,0,116,78,6,0,115,122,121,0,1,123,4,0,1,121,0,0,134,75,0,0,24,55,6,0,114,123,121,0,0,76,4,0,3,123,75,76,1,122,4,0,134,121,0,0,116,78,6,0,113,123,122,0,1,121,4,0,1,122,0,0,134,77,0,0,24,55,6,0,113,121,122,0,1,122,4,0,1,121,0,0,134,78,0,0,24,55,6,0,113,122,121,0,1,121,4,0,1,122,0,0,134,79,0,0,24,55,6,0,115,121,122,0,1,122,4,0,1,121,0,0,134,80,0,0,24,55,6,0,115,122,121,0,34,121,77,0,1,122,80,0,17,122,122,78,20,121,121,122,36,122,79,0,20,121,121,122,1,122,23,0,17,122,122,80,20,121,121,122,120,121,116,1,134,81,0,0,88,84,4,0,114,113,0,0,41,121,81,24,42,121,121,24,33,121,121,0,120,121,3,0,1,110,11,0,119,0,116,2,42,121,119,0,1,122,1,0,1,123,0,0,134,82,0,0,24,55,6,0,121,122,123,0,19,123,82,112,33,123,123,0,121,123,39,0,1,123,4,0,1,122,0,0,134,84,0,0,24,55,6,0,114,123,122,0,1,122,4,0,1,123,0,0,134,85,0,0,24,55,6,0,113,122,123,0,45,123,84,85,104,97,1,0,1,123,4,0,1,122,0,0,134,86,0,0,24,55,6,0,116,123,122,0,1,122,4,0,1,123,0,0,134,87,0,0,24,55,6,0,115,122,123,0,45,123,86,87,104,97,1,0,42,122,119,0,1,121,0,0,1,125,1,0,134,123,0,0,116,78,6,0,122,121,125,0,2,125,0,0,38,217,0,0,42,125,125,0,1,121,0,0,1,122,1,0,134,123,0,0,116,78,6,0,125,121,122,0,1,123,4,0,1,122,0,0,134,88,0,0,24,55,6,0,113,123,122,0,1,122,4,0,1,123,0,0,134,89,0,0,24,55,6,0,115,122,123,0,41,123,88,5,3,123,123,89,41,123,123,3,3,123,117,123,25,123,123,1,42,123,123,0,1,122,1,0,1,121,0,0,134,90,0,0,24,55,6,0,123,122,121,0,1,121,4,0,1,122,0,0,134,91,0,0,24,55,6,0,113,121,122,0,1,122,4,0,1,121,0,0,134,92,0,0,24,55,6,0,115,122,121,0,41,121,91,5,3,121,121,92,41,121,121,3,3,121,117,121,25,121,121,4,1,122,4,0,1,123,0,0,134,94,0,0,24,55,6,0,121,122,123,0,1,123,4,0,1,122,0,0,134,95,0,0,24,55,6,0,113,123,122,0,1,122,4,0,1,123,0,0,134,96,0,0,24,55,6,0,115,122,123,0,1,123,0,0,46,123,94,123,140,98,1,0,41,123,95,5,3,123,123,96,41,123,123,3,3,123,117,123,25,123,123,4,1,122,4,0,1,121,0,0,134,97,0,0,24,55,6,0,123,122,121,0,25,121,97,18,42,121,121,0,1,122,1,0,1,123,0,0,134,98,0,0,24,55,6,0,121,122,123,0,0,2,98,0,119,0,12,0,41,123,95,5,3,123,123,96,41,123,123,3,3,123,117,123,42,123,123,0,1,122,1,0,1,121,0,0,134,99,0,0,24,55,6,0,123,122,121,0,0,2,99,0,41,121,2,24,42,121,121,24,0,100,121,0,19,121,100,112,0,109,121,0,41,121,90,24,42,121,121,24,38,121,121,16,33,121,121,0,121,121,3,0,1,110,23,0,119,0,80,0,0,101,109,0,41,121,101,24,42,121,121,24,32,121,121,46,121,121,74,0,1,121,232,106,1,122,2,0,1,123,0,0,134,102,0,0,24,55,6,0,121,122,123,0,41,123,102,16,42,123,123,16,38,123,123,8,33,123,123,0,38,123,123,1,19,123,123,112,41,123,123,24,42,123,123,24,33,123,123,0,120,123,59,0,1,109,94,0,1,123,4,0,1,122,0,0,134,103,0,0,24,55,6,0,113,123,122,0,1,122,4,0,1,123,0,0,134,104,0,0,24,55,6,0,115,122,123,0,41,122,103,5,3,122,122,104,41,122,122,3,3,122,117,122,42,122,122,0,1,121,94,0,1,125,1,0,134,123,0,0,116,78,6,0,122,121,125,0,1,123,4,0,1,125,0,0,134,105,0,0,24,55,6,0,113,123,125,0,1,125,4,0,1,123,0,0,134,106,0,0,24,55,6,0,115,125,123,0,41,123,105,5,3,123,123,106,41,123,123,3,3,123,117,123,25,123,123,1,42,123,123,0,1,125,1,0,1,121,0,0,134,5,0,0,24,55,6,0,123,125,121,0,41,125,105,5,3,125,125,106,41,125,125,3,3,125,117,125,25,125,125,1,42,125,125,0,41,123,5,24,42,123,123,24,39,123,123,16,19,123,123,112,1,122,1,0,134,121,0,0,116,78,6,0,125,123,122,0,119,0,2,0,1,110,23,0,32,121,110,23,121,121,25,0,1,110,0,0,1,121,232,106,1,122,2,0,1,123,0,0,134,6,0,0,24,55,6,0,121,122,123,0,41,123,6,16,42,123,123,16,1,122,0,1,19,123,123,122,33,123,123,0,38,123,123,1,19,123,123,112,19,123,123,112,33,123,123,0,121,123,8,0,0,7,109,0,41,123,7,24,42,123,123,24,33,123,123,70,121,123,3,0,1,110,25,0,119,0,124,1,0,8,109,0,41,123,8,24,42,123,123,24,1,122,32,0,1,121,93,0,138,123,122,121,32,102,1,0,24,102,1,0,24,102,1,0,36,102,1,0,24,102,1,0,44,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,52,102,1,0,24,102,1,0,60,102,1,0,64,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,72,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,24,102,1,0,80,102,1,0,1,110,59,0,119,0,23,1,119,0,13,0,1,110,55,0,119,0,20,1,1,110,58,0,119,0,18,1,1,110,51,0,119,0,16,1,119,0,6,0,1,110,56,0,119,0,13,1,1,110,53,0,119,0,11,1,119,0,1,0,2,123,0,0,254,208,0,0,42,123,123,0,1,122,1,0,1,121,0,0,134,9,0,0,24,55,6,0,123,122,121,0,19,121,9,112,33,121,121,0,120,121,3,0,1,110,50,0,119,0,253,0,42,121,119,0,1,122,1,0,1,123,0,0,134,10,0,0,24,55,6,0,121,122,123,0,19,123,10,112,33,123,123,0,120,123,3,0,1,110,50,0,119,0,242,0,1,123,20,107,1,122,4,0,1,121,0,0,134,11,0,0,24,55,6,0,123,122,121,0,25,121,11,28,1,122,2,0,1,123,0,0,134,12,0,0,24,55,6,0,121,122,123,0,41,123,12,16,42,123,123,16,38,123,123,2,33,123,123,0,120,123,3,0,1,110,50,0,119,0,223,0,1,123,232,106,1,122,2,0,1,121,0,0,134,13,0,0,24,55,6,0,123,122,121,0,41,121,13,16,42,121,121,16,38,121,121,4,33,121,121,0,38,121,121,1,19,121,121,112,41,121,121,24,42,121,121,24,33,121,121,0,121,121,3,0,1,110,50,0,119,0,205,0,42,121,118,0,1,122,1,0,1,123,0,0,134,14,0,0,24,55,6,0,121,122,123,0,41,123,14,24,42,123,123,24,1,122,104,0,1,121,5,0,138,123,122,121,144,103,1,0,136,103,1,0,0,105,1,0,112,106,1,0,116,106,1,0,1,110,50,0,119,0,187,0,1,122,4,0,1,121,0,0,134,15,0,0,24,55,6,0,116,122,121,0,33,121,15,1,121,121,18,0,1,121,4,0,1,122,0,0,134,17,0,0,24,55,6,0,116,121,122,0,1,122,4,0,1,121,0,0,134,18,0,0,24,55,6,0,114,122,121,0,26,121,17,1,134,19,0,0,68,249,5,0,121,18,0,0,19,121,19,112,33,21,121,0,119,0,2,0,1,21,0,0,38,121,21,1,0,20,121,0,19,121,20,112], eb + 81920);
  HEAPU8.set([0,107,121,0,1,121,4,0,1,122,0,0,134,22,0,0,24,55,6,0,116,121,122,0,33,122,22,22,121,122,18,0,1,122,4,0,1,121,0,0,134,23,0,0,24,55,6,0,116,122,121,0,1,121,4,0,1,122,0,0,134,24,0,0,24,55,6,0,114,121,122,0,25,122,23,1,134,25,0,0,68,249,5,0,122,24,0,0,19,122,25,112,33,27,122,0,119,0,2,0,1,27,0,0,38,122,27,1,0,26,122,0,19,122,26,112,0,108,122,0,0,29,107,0,0,30,108,0,19,122,29,112,19,121,30,112,21,122,122,121,33,122,122,0,120,122,3,0,1,110,50,0,119,0,120,0,0,31,107,0,41,122,31,24,42,122,122,24,33,122,122,0,121,122,9,0,42,121,118,0,1,125,107,0,1,124,1,0,134,122,0,0,116,78,6,0,121,125,124,0,1,3,255,255,119,0,8,0,42,124,118,0,1,125,106,0,1,121,1,0,134,122,0,0,116,78,6,0,124,125,121,0,1,3,1,0,1,4,0,0,134,122,0,0,116,196,5,0,1,110,8,0,119,0,172,253,1,122,4,0,1,121,0,0,134,32,0,0,24,55,6,0,114,122,121,0,33,121,32,0,121,121,18,0,1,121,4,0,1,122,0,0,134,34,0,0,24,55,6,0,116,121,122,0,1,122,4,0,1,121,0,0,134,35,0,0,24,55,6,0,114,122,121,0,26,121,35,1,134,36,0,0,68,249,5,0,34,121,0,0,19,121,36,112,33,38,121,0,119,0,2,0,1,38,0,0,38,121,38,1,0,37,121,0,19,121,37,112,0,107,121,0,1,121,4,0,1,122,0,0,134,39,0,0,24,55,6,0,114,121,122,0,33,122,39,79,121,122,18,0,1,122,4,0,1,121,0,0,134,41,0,0,24,55,6,0,116,122,121,0,1,121,4,0,1,122,0,0,134,42,0,0,24,55,6,0,114,121,122,0,25,122,42,1,134,43,0,0,68,249,5,0,41,122,0,0,19,122,43,112,33,45,122,0,119,0,2,0,1,45,0,0,38,122,45,1,0,44,122,0,19,122,44,112,0,108,122,0,0,46,107,0,0,47,108,0,19,122,46,112,19,121,47,112,21,122,122,121,33,122,122,0,120,122,3,0,1,110,50,0,119,0,28,0,0,48,107,0,41,122,48,24,42,122,122,24,33,122,122,0,121,122,9,0,42,121,118,0,1,125,104,0,1,124,1,0,134,122,0,0,116,78,6,0,121,125,124,0,1,4,255,255,119,0,8,0,42,124,118,0,1,125,108,0,1,121,1,0,134,122,0,0,116,78,6,0,124,125,121,0,1,4,1,0,1,3,0,0,134,122,0,0,116,196,5,0,1,110,8,0,119,0,80,253,119,0,164,255,119,0,71,255,32,123,110,11,121,123,18,0,2,122,0,0,38,217,0,0,42,122,122,0,1,121,0,0,1,125,1,0,134,123,0,0,116,78,6,0,122,121,125,0,42,125,119,0,1,121,0,0,1,122,1,0,134,123,0,0,116,78,6,0,125,121,122,0,137,111,0,0,139,0,0,0,119,0,124,0,32,123,110,25,121,123,10,0,2,122,0,0,136,18,1,0,25,121,111,8,134,123,0,0,144,18,6,0,122,121,0,0,137,111,0,0,139,0,0,0,119,0,113,0,32,123,110,50,121,123,18,0,42,121,119,0,1,122,0,0,1,125,1,0,134,123,0,0,116,78,6,0,121,122,125,0,2,125,0,0,38,217,0,0,42,125,125,0,1,122,0,0,1,121,1,0,134,123,0,0,116,78,6,0,125,122,121,0,137,111,0,0,139,0,0,0,119,0,94,0,32,123,110,51,121,123,38,0,42,121,119,0,1,122,0,0,1,125,1,0,134,123,0,0,116,78,6,0,121,122,125,0,1,123,4,0,1,125,0,0,134,49,0,0,24,55,6,0,114,123,125,0,1,125,4,0,1,123,0,0,134,52,0,0,24,55,6,0,116,125,123,0,41,123,49,5,3,123,123,52,41,123,123,3,3,123,117,123,25,123,123,1,42,123,123,0,1,125,1,0,1,122,0,0,134,53,0,0,24,55,6,0,123,125,122,0,41,122,53,24,42,122,122,24,1,125,128,0,19,122,122,125,33,122,122,0,121,122,59,0,134,122,0,0,204,169,3,0,113,0,0,0,119,0,55,0,32,122,110,53,121,122,20,0,134,54,0,0,232,80,2,0,113,0,0,0,0,109,54,0,0,55,109,0,41,122,55,24,42,122,122,24,32,122,122,0,121,122,3,0,137,111,0,0,139,0,0,0,0,57,109,0,41,122,57,24,42,122,122,24,32,122,122,4,121,122,37,0,137,111,0,0,139,0,0,0,119,0,34,0,32,122,110,55,121,122,10,0,134,58,0,0,248,24,4,0,114,0,0,0,1,125,20,107,1,123,4,0,134,122,0,0,116,78,6,0,125,58,123,0,119,0,23,0,32,122,110,56,121,122,10,0,41,122,90,24,42,122,122,24,38,122,122,16,33,122,122,0,120,122,16,0,134,122,0,0,232,80,2,0,114,0,0,0,119,0,12,0,32,122,110,58,121,122,10,0,2,123,0,0,40,217,0,0,42,123,123,0,1,125,1,0,1,121,1,0,134,122,0,0,116,78,6,0,123,125,121,0,1,110,59,0,32,122,110,59,121,122,65,0,42,121,119,0,1,125,0,0,1,123,1,0,134,122,0,0,116,78,6,0,121,125,123,0,0,59,109,0,41,122,59,24,42,122,122,24,134,60,0,0,188,105,6,0,122,0,0,0,33,122,60,0,120,122,39,0,1,122,4,0,1,123,0,0,134,61,0,0,24,55,6,0,113,122,123,0,1,123,4,0,1,122,0,0,134,62,0,0,24,55,6,0,115,123,122,0,41,122,61,5,3,122,122,62,41,122,122,3,3,122,117,122,25,122,122,4,1,123,4,0,1,125,0,0,134,64,0,0,24,55,6,0,122,123,125,0,1,125,0,0,53,125,64,125,136,109,1,0,0,66,109,0,41,125,66,24,42,125,125,24,33,125,125,37,120,125,2,0,119,0,22,0,0,67,109,0,2,123,0,0,43,233,0,0,42,123,123,0,1,122,1,0,134,125,0,0,116,78,6,0,123,67,122,0,119,0,13,0,1,125,204,106,1,122,4,0,1,123,0,0,134,65,0,0,24,55,6,0,125,122,123,0,1,122,0,0,134,123,0,0,112,0,3,0,113,65,122,0,137,111,0,0,139,0,0,0,1,123,4,0,1,122,0,0,134,68,0,0,24,55,6,0,116,123,122,0,1,122,4,0,1,123,0,0,134,69,0,0,24,55,6,0,114,122,123,0,134,70,0,0,64,35,6,0,41,122,70,24,42,122,122,24,134,123,0,0,208,39,6,0,68,69,122,0,41,123,90,24,42,123,123,24,1,122,128,0,19,123,123,122,33,123,123,0,121,123,30,0,1,123,176,26,1,122,4,0,1,125,0,0,134,72,0,0,24,55,6,0,123,122,125,0,1,125,180,26,1,122,4,0,1,123,0,0,134,73,0,0,24,55,6,0,125,122,123,0,41,123,72,5,3,123,123,73,41,123,123,3,3,123,117,123,42,123,123,0,1,122,1,0,1,125,0,0,134,74,0,0,24,55,6,0,123,122,125,0,41,125,74,24,42,125,125,24,32,125,125,43,121,125,4,0,134,125,0,0,176,104,3,0,113,0,0,0,1,123,4,0,1,121,0,0,134,122,0,0,24,55,6,0,113,123,121,0,1,121,4,0,134,125,0,0,116,78,6,0,114,122,121,0,25,121,114,4,25,123,113,4,1,124,4,0,1,120,0,0,134,122,0,0,24,55,6,0,123,124,120,0,1,120,4,0,134,125,0,0,116,78,6,0,121,122,120,0,137,111,0,0,139,0,0,0,140,2,124,0,0,0,0,0,2,116,0,0,200,118,0,0,2,117,0,0,204,118,0,0,2,118,0,0,196,118,0,0,2,119,0,0,192,118,0,0,1,114,0,0,136,120,0,0,0,115,120,0,136,120,0,0,25,120,120,48,137,120,0,0,130,120,0,0,136,121,0,0,49,120,120,121,52,111,1,0,135,120,0,0,1,112,0,0,1,108,0,0,1,113,0,0,47,120,0,1,104,111,1,0,0,109,0,0,25,120,0,1,45,120,120,1,96,111,1,0,1,107,114,0,119,0,11,0,1,107,100,0,119,0,9,0,0,109,1,0,25,120,1,1,45,120,120,0,128,111,1,0,1,107,114,0,119,0,3,0,1,107,100,0,119,0,1,0,0,24,109,0,1,120,36,107,1,121,132,0,5,121,24,121,3,111,120,121,0,31,107,0,41,121,31,24,42,121,121,24,32,121,121,100,121,121,45,1,0,42,109,0,25,110,42,3,0,51,110,0,1,121,36,107,1,120,132,0,5,120,51,120,3,112,121,120,1,121,168,118,1,122,0,0,1,123,4,0,134,120,0,0,116,78,6,0,121,122,123,0,1,123,172,118,1,122,1,0,1,121,4,0,134,120,0,0,116,78,6,0,123,122,121,0,1,120,4,0,1,121,0,0,134,67,0,0,24,55,6,0,111,120,121,0,1,120,176,118,1,122,4,0,134,121,0,0,116,78,6,0,120,67,122,0,25,121,111,4,1,122,4,0,1,120,0,0,134,81,0,0,24,55,6,0,121,122,120,0,1,122,180,118,1,121,4,0,134,120,0,0,116,78,6,0,122,81,121,0,0,82,112,0,1,120,4,0,1,121,0,0,134,83,0,0,24,55,6,0,82,120,121,0,1,120,184,118,1,122,4,0,134,121,0,0,116,78,6,0,120,83,122,0,0,84,112,0,25,121,84,4,1,122,4,0,1,120,0,0,134,85,0,0,24,55,6,0,121,122,120,0,1,122,188,118,1,121,4,0,134,120,0,0,116,78,6,0,122,85,121,0,25,120,111,28,1,121,2,0,1,122,0,0,134,86,0,0,24,55,6,0,120,121,122,0,41,122,86,16,42,122,122,16,38,122,122,2,33,122,122,0,120,122,87,0,1,122,4,0,1,121,0,0,134,87,0,0,24,55,6,0,111,122,121,0,25,121,111,8,1,122,4,0,1,120,0,0,134,88,0,0,24,55,6,0,121,122,120,0,26,120,88,2,134,89,0,0,20,36,6,0,120,0,0,0,1,122,176,118,3,121,87,89,25,121,121,1,1,123,4,0,134,120,0,0,116,78,6,0,122,121,123,0,25,120,111,4,1,123,4,0,1,121,0,0,134,90,0,0,24,55,6,0,120,123,121,0,25,121,111,8,25,121,121,4,1,123,4,0,1,120,0,0,134,91,0,0,24,55,6,0,121,123,120,0,1,123,180,118,3,121,90,91,26,121,121,1,1,122,4,0,134,120,0,0,116,78,6,0,123,121,122,0,25,120,111,28,1,122,2,0,1,121,0,0,134,92,0,0,24,55,6,0,120,122,121,0,41,121,92,16,42,121,121,16,38,121,121,4,33,121,121,0,120,121,2,0,119,0,33,0,1,121,176,118,1,122,4,0,1,120,0,0,134,93,0,0,24,55,6,0,121,122,120,0,1,120,180,118,1,122,4,0,1,121,0,0,134,94,0,0,24,55,6,0,120,122,121,0,1,121,192,26,41,122,93,5,3,122,122,94,41,122,122,3,3,121,121,122,25,121,121,1,42,121,121,0,1,122,1,0,1,120,0,0,134,95,0,0,24,55,6,0,121,122,120,0,41,120,95,24,42,120,120,24,1,122,128,0,19,120,120,122,33,120,120,0,40,120,120,1,120,120,172,255,119,0,1,0,0,96,112,0,25,120,96,28,1,122,2,0,1,121,0,0,134,97,0,0,24,55,6,0,120,122,121,0,41,121,97,16,42,121,121,16,38,121,121,2,33,121,121,0,120,121,70,0,0,98,112,0,1,121,4,0,1,122,0,0,134,99,0,0,24,55,6,0,98,121,122,0,0,100,112,0,25,122,100,8,1,121,4,0,1,120,0,0,134,101,0,0,24,55,6,0,122,121,120,0,26,120,101,2,134,102,0,0,20,36,6,0,120,0,0,0,1,121,184,118,3,122,99,102,25,122,122,1,1,123,4,0,134,120,0,0,116,78,6,0,121,122,123,0,0,103,112,0,25,120,103,28,1,123,2,0,1,122,0,0,134,104,0,0,24,55,6,0,120,123,122,0,41,122,104,16,42,122,122,16,38,122,122,4,33,122,122,0,120,122,2,0,119,0,33,0,1,122,184,118,1,123,4,0,1,120,0,0,134,105,0,0,24,55,6,0,122,123,120,0,1,120,188,118,1,123,4,0,1,122,0,0,134,106,0,0,24,55,6,0,120,123,122,0,1,122,192,26,41,123,105,5,3,123,123,106,41,123,123,3,3,122,122,123,25,122,122,1,42,122,122,0,1,123,1,0,1,120,0,0,134,2,0,0,24,55,6,0,122,123,120,0,41,120,2,24,42,120,120,24,1,123,128,0,19,120,120,123,33,120,120,0,40,120,120,1,120,120,189,255,119,0,1,0,1,120,180,118,1,123,4,0,1,122,0,0,134,3,0,0,24,55,6,0,120,123,122,0,1,122,188,118,1,123,4,0,1,120,0,0,134,4,0,0,24,55,6,0,122,123,120,0,4,120,3,4,135,5,10,0,120,0,0,0,26,108,5,1,1,123,0,0,1,122,4,0,134,120,0,0,116,78,6,0,118,123,122,0,1,120,176,118,1,122,4,0,1,123,0,0,134,6,0,0,24,55,6,0,120,122,123,0,1,123,184,118,1,122,4,0,1,120,0,0,134,7,0,0,24,55,6,0,123,122,120,0,15,120,6,7,1,122,1,0,1,123,255,255,125,8,120,122,123,0,0,0,1,122,4,0,134,123,0,0,116,78,6,0,119,8,122,0,1,123,176,118,1,122,4,0,1,120,0,0,134,9,0,0,24,55,6,0,123,122,120,0,1,120,184,118,1,122,4,0,1,123,0,0,134,10,0,0,24,55,6,0,120,122,123,0,4,123,9,10,135,11,10,0,123,0,0,0,0,113,11,0,119,0,51,1,0,12,107,0,41,123,12,24,42,123,123,24,32,123,123,114,121,123,46,1,0,13,109,0,25,110,13,1,0,14,110,0,1,123,36,107,1,122,132,0,5,122,14,122,3,112,123,122,1,123,168,118,1,120,1,0,1,121,4,0,134,122,0,0,116,78,6,0,123,120,121,0,1,121,172,118,1,120,0,0,1,123,4,0,134,122,0,0,116,78,6,0,121,120,123,0,1,122,4,0,1,123,0,0,134,15,0,0,24,55,6,0,111,122,123,0,1,122,176,118,1,120,4,0,134,123,0,0,116,78,6,0,122,15,120,0,25,123,111,4,1,120,4,0,1,122,0,0,134,16,0,0,24,55,6,0,123,120,122,0,1,120,180,118,1,123,4,0,134,122,0,0,116,78,6,0,120,16,123,0,0,17,112,0,1,122,4,0,1,123,0,0,134,18,0,0,24,55,6,0,17,122,123,0,1,122,184,118,1,120,4,0,134,123,0,0,116,78,6,0,122,18,120,0,0,19,112,0,25,123,19,4,1,120,4,0,1,122,0,0,134,20,0,0,24,55,6,0,123,120,122,0,1,120,188,118,1,123,4,0,134,122,0,0,116,78,6,0,120,20,123,0,25,122,111,28,1,123,2,0,1,120,0,0,134,21,0,0,24,55,6,0,122,123,120,0,41,120,21,16,42,120,120,16,38,120,120,2,33,120,120,0,120,120,87,0,1,120,4,0,1,123,0,0,134,22,0,0,24,55,6,0,111,120,123,0,25,123,111,8,1,120,4,0,1,122,0,0,134,23,0,0,24,55,6,0,123,120,122,0,1,120,176,118,3,123,22,23,26,123,123,1,1,121,4,0,134,122,0,0,116,78,6,0,120,123,121,0,25,122,111,4,1,121,4,0,1,123,0,0,134,25,0,0,24,55,6,0,122,121,123,0,25,123,111,8,25,123,123,4,1,121,4,0,1,122,0,0,134,26,0,0,24,55,6,0,123,121,122,0,26,122,26,2,134,27,0,0,20,36,6,0,122,0,0,0,1,121,180,118,3,123,25,27,25,123,123,1,1,120,4,0,134,122,0,0,116,78,6,0,121,123,120,0,25,122,111,28,1,120,2,0,1,123,0,0,134,28,0,0,24,55,6,0,122,120,123,0,41,123,28,16,42,123,123,16,38,123,123,4,33,123,123,0,120,123,2,0,119,0,33,0,1,123,176,118,1,120,4,0,1,122,0,0,134,29,0,0,24,55,6,0,123,120,122,0,1,122,180,118,1,120,4,0,1,123,0,0,134,30,0,0,24,55,6,0,122,120,123,0,1,123,192,26,41,120,29,5,3,120,120,30,41,120,120,3,3,123,123,120,25,123,123,1,42,123,123,0,1,120,1,0,1,122,0,0,134,32,0,0,24,55,6,0,123,120,122,0,41,122,32,24,42,122,122,24,1,120,128,0,19,122,122,120,33,122,122,0,40,122,122,1,120,122,172,255,119,0,1,0,0,33,112,0,25,122,33,28,1,120,2,0,1,123,0,0,134,34,0,0,24,55,6,0,122,120,123,0,41,123,34,16,42,123,123,16,38,123,123,2,33,123,123,0,120,123,72,0,0,35,112,0,25,123,35,4,1,120,4,0,1,122,0,0,134,36,0,0,24,55,6,0,123,120,122,0,0,37,112,0,25,122,37,8,25,122,122,4,1,120,4,0,1,123,0,0,134,38,0,0,24,55,6,0,122,120,123,0,26,123,38,2,134,39,0,0,20,36,6,0,123,0,0,0,1,120,188,118,3,122,36,39,25,122,122,1,1,121,4,0,134,123,0,0,116,78,6,0,120,122,121,0,0,40,112,0,25,123,40,28,1,121,2,0,1,122,0,0,134,41,0,0,24,55,6,0,123,121,122,0,41,122,41,16,42,122,122,16,38,122,122,4,33,122,122,0,120,122,2,0,119,0,33,0,1,122,184,118,1,121,4,0,1,123,0,0,134,43,0,0,24,55,6,0,122,121,123,0,1,123,188,118,1,121,4,0,1,122,0,0,134,44,0,0,24,55,6,0,123,121,122,0,1,122,192,26,41,121,43,5,3,121,121,44,41,121,121,3,3,122,122,121,25,122,122,1,42,122,122,0,1,121,1,0,1,123,0,0,134,45,0,0,24,55,6,0,122,121,123,0,41,123,45,24,42,123,123,24,1,121,128,0,19,123,123,121,33,123,123,0,40,123,123,1,120,123,187,255,119,0,1,0,1,123,176,118,1,121,4,0,1,122,0,0,134,46,0,0,24,55,6,0,123,121,122,0,1,122,184,118,1,121,4,0,1,123,0,0,134,47,0,0,24,55,6,0,122,121,123,0,4,123,46,47,135,48,10,0,123,0,0,0,26,108,48,1,1,123,180,118,1,121,4,0,1,122,0,0,134,49,0,0,24,55,6,0,123,121,122,0,1,122,188,118,1,121,4,0,1,123,0,0,134,50,0,0,24,55,6,0,122,121,123,0,15,123,49,50,1,121,1,0,1,122,255,255,125,52,123,121,122,0,0,0,1,121,4,0,134,122,0,0,116,78,6,0,118,52,121,0,1,121,0,0,1,123,4,0,134,122,0,0,116,78,6,0,119,121,123,0,1,122,180,118,1,123,4,0,1,121,0,0,134,53,0,0,24,55,6,0,122,123,121,0,1,121,188,118,1,123,4,0,1,122,0,0,134,54,0,0,24,55,6,0,121,123,122,0,4,122,53,54,135,55,10,0,122,0,0,0,0,113,55,0,0,56,108,0,26,122,56,1,134,57,0,0,20,36,6,0,122,0,0,0,25,122,111,28,1,123,2,0,1,121,0,0,134,58,0,0,24,55,6,0,122,123,121,0,41,121,58,16,42,121,121,16,38,121,121,2,33,121,121,0,121,121,6,0,1,123,176,118,134,121,0,0,84,117,5,0,123,0,0,0,119,0,5,0,1,123,176,118,134,121,0,0,120,78,4,0,111,123,0,0,0,59,112,0,25,121,59,28,1,123,2,0,1,122,0,0,134,60,0,0,24,55,6,0,121,123,122,0,41,122,60,16,42,122,122,16,38,122,122,2,33,122,122,0,121,122,6,0,1,123,184,118,134,122,0,0,84,117,5,0,123,0,0,0,119,0,6,0,0,61,112,0,1,123,184,118,134,122,0,0,120,78,4,0,61,123,0,0,1,122,176,118,1,123,4,0,1,121,0,0,134,62,0,0,24,55,6,0,122,123,121,0,1,123,4,0,134,121,0,0,116,78,6,0,116,62,123,0,1,121,180,118,1,123,4,0,1,122,0,0,134,63,0,0,24,55,6,0,121,123,122,0,1,123,4,0,134,122,0,0,116,78,6,0,117,63,123,0,0,64,108,0,1,122,168,118,1,123,4,0,1,121,0,0,134,65,0,0,24,55,6,0,122,123,121,0,1,121,4,0,1,123,0,0,134,66,0,0,24,55,6,0,116,121,123,0,3,121,66,65,1,122,4,0,134,123,0,0,116,78,6,0,116,121,122,0,1,123,172,118,1,122,4,0,1,121,0,0,134,68,0,0,24,55,6,0,123,122,121,0,1,121,4,0,1,122,0,0,134,69,0,0,24,55,6,0,117,121,122,0,3,121,69,68,1,123,4,0,134,122,0,0,116,78,6,0,117,121,123,0,1,122,0,0,54,122,122,64,200,122,1,0,119,0,50,0,0,70,108,0,25,122,57,1,45,122,70,122,116,123,1,0,0,71,113,0,26,113,71,1,33,122,71,0,120,122,2,0,119,0,35,0,134,122,0,0,84,117,5,0,116,0,0,0,1,122,4,0,1,123,0,0,134,72,0,0,24,55,6,0,119,122,123,0,1,123,4,0,1,122,0,0,134,73,0,0,24,55,6,0,116,123,122,0,3,123,73,72,1,121,4,0,134,122,0,0,116,78,6,0,116,123,121,0,1,122,4,0,1,121,0,0,134,74,0,0,24,55,6,0,118,122,121,0,1,121,4,0,1,122,0,0,134,75,0,0,24,55,6,0,117,121,122,0,3,121,75,74,1,123,4,0,134,122,0,0,116,78,6,0,117,121,123,0,119,0,218,255,134,122,0,0,84,117,5,0,116,0,0,0,0,76,108,0,26,108,76,1,119,0,171,255,1,122,4,0,1,123,0,0,134,77,0,0,24,55,6,0,116,122,123,0,1,123,184,118,1,122,4,0,1,121,0,0,134,78,0,0,24,55,6,0,123,122,121,0,45,121,77,78,252,123,1,0,1,121,4,0,1,122,0,0,134,79,0,0,24,55,6,0,117,121,122,0,1,122,188,118,1,121,4,0,1,123,0,0,134,80,0,0,24,55,6,0,122,121,123,0,45,123,79,80,252,123,1,0,137,115,0,0,139,0,0,0,2,121,0,0,81,33,1,0,134,123,0,0,144,18,6,0,121,115,0,0,137,115,0,0,139,0,0,0,140,0,118,0,0,0,0,0,2,103,0,0,120,3,0,0,2,104,0,0,104,17,0,0,2,105,0,0,200,106,0,0,2,106,0,0,16,107,0,0,2,107,0,0,196,106,0,0,2,108,0,0,252,106,0,0,2,109,0,0,236,106,0,0,2,110,0,0,112,3,0,0,2,111,0,0,216,33,1,0,2,112,0,0,116,3,0,0,2,113,0,0,232,106,0,0,1,101,0,0,136,114,0,0,0,102,114,0,136,114,0,0,1,115,128,0,3,114,114,115,137,114,0,0,130,114,0,0,136,115,0,0,49,114,114,115,168,124,1,0,135,114,0,0,1,96,0,0,2,114,0,0,126,33,1,0,1,115,33,0,134,0,0,0,52,196,3,0,114,115,0,0,1,115,0,0,45,115,0,115,216,124,1,0,137,102,0,0,139,0,0,0,25,115,0,8,1,114,4,0,1,116,0,0,134,63,0,0,24,55,6,0,115,114,116,0,33,116,63,33,121,116,29,0,2,116,0,0,5,209,0,0,42,116,116,0,1,114,1,0,1,115,0,0,134,75,0,0,24,55,6,0,116,114,115,0,41,115,75,24,42,115,115,24,33,115,115,0,121,115,10,0,2,114,0,0,171,33,1,0,25,116,102,8,134,115,0,0,144,18,6,0,114,116,0,0,137,102,0,0,139,0,0,0,119,0,8,0,2,116,0,0,132,33,1,0,134,115,0,0,144,18,6,0,116,102,0,0,137,102,0,0,139,0,0,0,1,115,204,106,1,116,4,0,1,114,0,0,134,1,0,0,24,55,6,0,115,116,114,0,45,114,0,1,160,125,1,0,1,116,204,106,1,115,0,0,1,117,4,0,134,114,0,0,116,78,6,0,116,115,117,0,1,114,2,0,1,117,0,0,134,12,0,0,24,55,6,0,113,114,117,0,41,117,12,16,42,117,117,16,1,114,0,8,19,117,117,114,33,117,117,0,38,117,117,1,1,114,255,0,19,117,117,114,0,100,117,0,25,117,0,48,1,114,4,0,1,115,0,0,134,52,0,0,24,55,6,0,117,114,115,0,32,115,52,1,38,115,115,1,1,114,255,0,19,115,115,114,0,96,115,0,1,114,0,0,1,117,0,0,134,115,0,0,176,164,4,0,0,114,117,0,25,115,0,52,1,117,4,0,1,114,0,0,134,53,0,0,24,55,6,0,115,117,114,0,1,116,0,0,1,117,14,0,138,53,116,117,120,126,1,0,168,126,1,0,108,127,1,0,164,128,1,0,236,128,1,0,152,129,1,0,132,130,1,0,88,131,1,0,120,134,1,0,184,134,1,0,36,136,1,0,156,136,1,0,84,139,1,0,108,139,1,0,119,0,68,3,1,117,0,0,41,115,100,24,42,115,115,24,33,115,115,0,40,115,115,1,38,115,115,1,1,116,255,0,19,115,115,116,134,114,0,0,212,148,4,0,117,115,0,0,119,0,56,3,41,116,100,24,42,116,116,24,33,116,116,0,120,116,40,0,1,116,2,0,1,115,0,0,134,11,0,0,24,55,6,0,113,116,115,0,41,115,11,16,42,115,115,16,1,116,0,64,19,115,115,116,33,115,115,0,38,115,115,1,1,116,255,0,19,115,115,116,41,115,115,24,42,115,115,24,33,115,115,0,121,115,5,0,1,116,0,0,134,115,0,0,212,119,4,0,116,0,0,0,1,115,1,0,134,13,0,0,148,77,6,0,115,0,0,0,1,116,21,0,1,114,0,0,134,115,0,0,132,19,6,0,116,114,13,0,134,14,0,0,236,161,4,0,2,114,0,0,40,217,0,0,42,114,114,0,1,116,1,0,134,115,0,0,116,78,6,0,114,14,116,0,1,116,1,0,1,114,1,0,134,115,0,0,212,148,4,0,116,114,0,0,119,0,7,3,1,115,4,17,42,115,115,0,1,117,1,0,1,116,1,0,134,114,0,0,116,78,6,0,115,117,116,0,1,114,4,0,1,116,0,0,134,54,0,0,24,55,6,0,107,114,116,0,1,116,0,0,46,116,54,116,228,127,1,0,1,116,4,0,1,114,0,0,134,55,0,0,24,55,6,0,107,116,114,0,25,114,55,52,1,116,4,0,1,117,0,0,134,56,0,0,24,55,6,0,114,116,117,0,32,117,56,2,120,117,4,0,1,101,12,0,119,0,2,0,1,101,12,0,32,117,101,12,121,117,39,0,1,117,4,0,1,116,0,0,134,57,0,0,24,55,6,0,105,117,116,0,1,116,0,0,46,116,57,116,68,128,1,0,1,116,4,0,1,117,0,0,134,58,0,0,24,55,6,0,105,116,117,0,25,117,58,52,1,116,4,0,1,114,0,0,134,59,0,0,24,55,6,0,117,116,114,0,32,114,59,2,120,114,18,0,1,114,3,0,134,60,0,0,20,36,6,0,114,0,0,0,1,116,0,0,25,117,60,1,4,116,116,117,134,114,0,0,20,25,5,0,116,0,0,0,25,116,102,24,134,114,0,0,144,18,6,0,111,116,0,0,134,114,0,0,156,89,3,0,119,0,192,2,2,116,0,0,190,33,1,0,25,117,102,16,134,114,0,0,144,18,6,0,116,117,0,0,119,0,185,2,1,116,24,17,42,116,116,0,1,114,1,0,1,117,1,0,134,115,0,0,116,78,6,0,116,114,117,0,1,117,1,0,134,115,0,0,20,25,5,0,117,0,0,0,2,117,0,0,8,34,1,0,25,114,102,40,134,115,0,0,144,18,6,0,117,114,0,0,119,0,167,2,25,114,102,64,2,116,0,0,34,209,0,0,1,117,4,0,134,115,0,0,116,78,6,0,114,116,117,0,2,117,0,0,42,225,0,0,2,116,0,0,176,34,1,0,25,114,102,64,134,115,0,0,248,82,6,0,117,116,114,0,1,115,2,0,1,114,0,0,134,15,0,0,24,55,6,0,113,115,114,0,41,114,15,16,42,114,114,16,38,114,114,2,33,114,114,0,38,114,114,1,1,115,255,0,19,114,114,115,0,98,114,0,1,115,4,0,1,116,0,0,134,114,0,0,212,148,4,0,115,116,0,0,0,16,98,0,41,114,16,24,42,114,114,24,33,114,114,0,120,114,3,0,134,114,0,0,12,254,4,0,134,114,0,0,116,227,5,0,119,0,124,2,1,117,64,17,42,117,117,0,1,116,1,0,1,115,1,0,134,114,0,0,116,78,6,0,117,116,115,0,1,114,244,106,1,115,4,0,1,116,0,0,134,61,0,0,24,55,6,0,114,115,116,0,1,116,4,0,134,62,0,0,212,44,6,0,61,116,0,0,1,116,4,0,1,115,0,0,134,64,0,0,24,55,6,0,108,116,115,0,3,116,64,62,1,114,4,0,134,115,0,0,116,78,6,0,108,116,114,0,1,115,4,0,1,114,0,0,134,65,0,0,24,55,6,0,106,115,114,0,3,114,64,62,47,114,65,114,96,130,1,0,1,114,4,0,1,115,0,0,134,66,0,0,24,55,6,0,106,114,115,0,25,114,66,1,1,116,4,0,134,115,0,0,116,78,6,0,106,114,116,0,25,116,66,1,1,114,4,0,134,115,0,0,116,78,6,0,108,116,114,0,134,115,0,0,116,227,5,0,2,114,0,0,239,33,1,0,25,116,102,32,134,115,0,0,144,18,6,0,114,116,0,0,119,0,65,2,1,115,2,0,1,114,0,0,134,67,0,0,24,55,6,0,113,115,114,0,41,115,67,16,42,115,115,16,1,117,0,64,20,115,115,117,2,117,0,0,255,255,0,0,19,115,115,117,1,117,2,0,134,114,0,0,116,78,6,0,113,115,117,0,1,114,2,0,134,68,0,0,148,77,6,0,114,0,0,0,1,117,27,0,1,115,1,0,1,116,20,0,134,114,0,0,172,13,6,0,117,115,116,68,1,114,0,0,134,69,0,0,212,119,4,0,114,0,0,0,41,114,69,24,42,114,114,24,33,114,114,0,120,114,31,2,2,114,0,0,55,34,1,0,2,116,0,0,62,34,1,0,134,70,0,0,224,49,6,0,114,116,0,0,25,114,102,48,1,115,4,0,134,116,0,0,116,78,6,0,114,70,115,0,2,115,0,0,70,34,1,0,25,114,102,48,134,116,0,0,144,18,6,0,115,114,0,0,119,0,12,2,1,98,0,0,1,116,4,0,1,114,0,0,134,71,0,0,24,55,6,0,110,116,114,0,1,114,0,0,46,114,71,114,232,133,1,0,1,114,4,0,1,116,0,0,134,72,0,0,24,55,6,0,103,114,116,0,134,116,0,0,164,64,6,0,72,0,0,0,1,116,4,0,1,114,0,0,134,73,0,0,24,55,6,0,110,116,114,0,0,99,73,0,0,74,99,0,1,114,0,0,53,114,74,114,200,131,1,0,119,0,56,0,0,76,99,0,134,77,0,0,116,4,5,0,76,0,0,0,41,114,77,24,42,114,114,24,33,114,114,0,121,114,40,0,1,98,1,0,1,114,4,0,1,116,0,0,134,78,0,0,24,55,6,0,103,114,116,0,0,79,99,0,25,116,79,12,25,116,116,4,1,114,4,0,1,115,0,0,134,80,0,0,24,55,6,0,116,114,115,0,0,81,99,0,25,115,81,12,1,114,4,0,1,116,0,0,134,82,0,0,24,55,6,0,115,114,116,0,134,116,0,0,164,140,5,0,78,80,82,0,1,116,4,0,1,114,0,0,134,83,0,0,24,55,6,0,103,116,114,0,1,116,36,0,134,114,0,0,64,245,1,0,83,116,0,0,42,116,104,0,1,115,1,0,1,117,1,0,134,114,0,0,116,78,6,0,116,115,117,0,0,84,99,0,1,114,4,0,1,117,0,0,134,85,0,0,24,55,6,0,84,114,117,0,0,99,85,0,119,0,197,255,1,117,4,0,1,114,0,0,134,86,0,0,24,55,6,0,112,117,114,0,0,97,86,0,0,87,97,0,1,114,0,0,53,114,87,114,208,132,1,0,119,0,71,0,0,88,97,0,25,114,88,72,1,117,4,0,1,115,0,0,134,89,0,0,24,55,6,0,114,117,115,0,0,99,89,0,0,90,99,0,1,115,0,0,53,115,90,115,4,133,1,0,119,0,50,0,0,91,99,0,134,92,0,0,116,4,5,0,91,0,0,0,41,115,92,24,42,115,115,24,33,115,115,0,121,115,34,0,1,98,1,0,1,115,4,0,1,117,0,0,134,93,0,0,24,55,6,0,103,115,117,0,0,94,97,0,25,117,94,8,25,117,117,4,1,115,4,0,1,114,0,0,134,95,0,0,24,55,6,0,117,115,114,0,0,2,97,0,25,114,2,8,1,115,4,0,1,117,0,0,134,3,0,0,24,55,6,0,114,115,117,0,134,117,0,0,164,140,5,0,93,95,3,0,1,117,4,0,1,115,0,0,134,4,0,0,24,55,6,0,103,117,115,0,1,117,36,0,134,115,0,0,64,245,1,0,4,117,0,0,0,5,99,0,1,115,4,0,1,117,0,0,134,6,0,0,24,55,6,0,5,115,117,0,0,99,6,0,119,0,203,255,0,7,97,0,1,117,4,0,1,115,0,0,134,8,0,0,24,55,6,0,7,117,115,0,0,97,8,0,119,0,182,255,0,9,98,0,41,115,9,24,42,115,115,24,33,115,115,0,121,115,13,0,42,117,104,0,1,114,1,0,1,116,1,0,134,115,0,0,116,78,6,0,117,114,116,0,2,116,0,0,121,34,1,0,134,115,0,0,44,11,6,0,116,0,0,0,119,0,87,1,2,115,0,0,55,34,1,0,2,116,0,0,62,34,1,0,134,10,0,0,224,49,6,0,115,116,0,0,25,115,102,56,1,114,4,0,134,116,0,0,116,78,6,0,115,10,114,0,2,114,0,0,70,34,1,0,25,115,102,56,134,116,0,0,144,18,6,0,114,115,0,0,119,0,68,1,1,116,124,17,42,116,116,0,1,115,1,0,1,117,1,0,134,114,0,0,116,78,6,0,116,115,117,0,2,117,0,0,209,34,1,0,25,115,102,72,134,114,0,0,144,18,6,0,117,115,0,0,134,114,0,0,92,87,6,0,119,0,52,1,1,115,144,17,42,115,115,0,1,117,1,0,1,116,1,0,134,114,0,0,116,78,6,0,115,117,116,0,1,114,244,106,1,116,4,0,1,117,0,0,134,17,0,0,24,55,6,0,114,116,117,0,1,117,8,0,134,18,0,0,212,44,6,0,17,117,0,0,1,117,4,0,1,116,0,0,134,19,0,0,24,55,6,0,108,117,116,0,3,117,19,18,1,114,4,0,134,116,0,0,116,78,6,0,108,117,114,0,1,116,4,0,1,114,0,0,134,20,0,0,24,55,6,0,106,116,114,0,3,114,19,18,47,114,20,114,248,135,1,0,1,114,4,0,1,116,0,0,134,21,0,0,24,55,6,0,108,114,116,0,1,116,4,0,1,114,0,0,134,22,0,0,24,55,6,0,106,116,114,0,1,114,244,106,1,116,4,0,1,117,0,0,134,23,0,0,24,55,6,0,114,116,117,0,3,117,22,23,25,117,117,1,47,117,117,21,188,135,1,0,1,117,4,0,1,116,0,0,134,24,0,0,24,55,6,0,106,117,116,0,25,117,24,1,1,114,4,0,134,116,0,0,116,78,6,0,106,117,114,0,1,116,4,0,1,114,0,0,134,25,0,0,24,55,6,0,106,116,114,0,25,116,25,1,1,117,4,0,134,114,0,0,116,78,6,0,106,116,117,0,25,117,25,1,1,116,4,0,134,114,0,0,116,78,6,0,108,117,116,0,134,114,0,0,116,227,5,0,134,114,0,0,156,89,3,0,2,116,0,0,246,34,1,0,25,117,102,80,134,114,0,0,144,18,6,0,116,117,0,0,119,0,217,0,1,117,164,17,42,117,117,0,1,116,1,0,1,115,1,0,134,114,0,0,116,78,6,0,117,116,115,0,2,115,0,0,38,217,0,0,42,115,115,0,1,116,0,0,1,117,1,0,134,114,0,0,116,78,6,0,115,116,117,0,1,114,1,0,134,26,0,0,0,100,5,0,114,0,0,0,41,114,26,24,42,114,114,24,33,114,114,0,121,114,194,0,2,117,0,0,20,35,1,0,25,116,102,88,134,114,0,0,144,18,6,0,117,116,0,0,119,0,187,0,1,114,4,0,1,116,0,0,134,27,0,0,24,55,6,0,107,114,116,0,1,116,0,0,46,116,27,116,48,137,1,0,1,116,4,0,1,114,0,0,134,28,0,0,24,55,6,0,107,116,114,0,25,114,28,52,1,116,4,0,1,117,0,0,134,29,0,0,24,55,6,0,114,116,117,0,32,117,29,1,121,117,17,0,1,117,4,0,1,116,0,0,134,30,0,0,24,55,6,0,107,117,116,0,25,116,30,64,1,117,4,0,1,114,0,0,134,31,0,0,24,55,6,0,116,117,114,0,1,117,0,0,4,117,117,31,134,114,0,0,140,25,6,0,109,117,0,0,1,114,4,0,1,117,0,0,134,32,0,0,24,55,6,0,105,114,117,0,1,117,0,0,46,117,32,117,196,137,1,0,1,117,4,0,1,114,0,0,134,33,0,0,24,55,6,0,105,117,114,0,25,114,33,52,1,117,4,0,1,116,0,0,134,34,0,0,24,55,6,0,114,117,116,0,32,116,34,1,121,116,17,0,1,116,4,0,1,117,0,0,134,35,0,0,24,55,6,0,105,116,117,0,25,117,35,64,1,116,4,0,1,114,0,0,134,36,0,0,24,55,6,0,117,116,114,0,1,116,0,0,4,116,116,36,134,114,0,0,140,25,6,0,109,116,0,0,1,114,4,0,1,116,0,0,134,37,0,0,24,55,6,0,109,114,116,0,1,116,124,3,1,114,4,0,1,117,0,0,134,38,0,0,24,55,6,0,116,114,117,0,48,117,37,38,32,138,1,0,1,117,124,3,1,114,4,0,1,116,0,0,134,39,0,0,24,55,6,0,117,114,116,0,1,114,4,0,134,116,0,0,116,78,6,0,109,39,114,0,1,116,4,0,1,114,0,0,134,40,0,0,24,55,6,0,107,116,114,0,1,114,0,0,46,114,40,114,172,138,1,0,1,114,4,0,1,116,0,0,134,41,0,0,24,55,6,0,107,114,116,0,25,116,41,52,1,114,4,0,1,117,0,0,134,42,0,0,24,55,6,0,116,114,117,0,32,117,42,1,121,117,15,0,1,117,4,0,1,114,0,0,134,43,0,0,24,55,6,0,107,117,114,0,25,114,43,64,1,117,4,0,1,116,0,0,134,44,0,0,24,55,6,0,114,117,116,0,134,116,0,0,140,25,6,0,109,44,0,0,1,116,4,0,1,117,0,0,134,45,0,0,24,55,6,0,105,116,117,0,1,117,0,0,46,117,45,117,56,139,1,0,1,117,4,0,1,116,0,0,134,46,0,0,24,55,6,0,105,117,116,0,25,116,46,52,1,117,4,0,1,114,0,0,134,47,0,0,24,55,6,0,116,117,114,0,32,114,47,1,121,114,15,0,1,114,4,0,1,117,0,0,134,48,0,0,24,55,6,0,105,114,117,0,25,117,48,64,1,114,4,0,1,116,0,0,134,49,0,0,24,55,6,0,117,114,116,0,134,116,0,0,140,25,6,0,109,49,0,0,2,114,0,0,57,35,1,0,25,117,102,96,134,116,0,0,144,18,6,0,114,117,0,0,119,0,13,0,1,117,12,0,1,114,1,0,134,116,0,0,212,148,4,0,117,114,0,0,119,0,7,0,1,114,13,0,1,117,1,0,134,116,0,0,212,148,4,0,114,117,0,0,119,0,1,0,134,116,0,0,196,168,2,0,25,116,0,52,1,117,4,0,1,114,0,0,134,50,0,0,24,55,6,0,116,117,114,0,1,117,204,16,27,116,50,20,3,117,117,116,134,114,0,0,236,249,4,0,117,0,0,0,0,51,96,0,41,114,51,24,42,114,114,24,33,114,114,0,120,114,3,0,137,102,0,0,139,0,0,0,134,114,0,0,100,97,6,0,0,0,0,0,137,102,0,0,139,0,0,0,140,2,144,0,0,0,0,0,2,137,0,0,255,0,0,0,2,138,0,0,30,72,1,0,2,139,0,0,60,162,0,0,1,135,0,0,136,140,0,0,0,136,140,0,136,140,0,0,25,140,140,64,137,140,0,0,130,140,0,0,136,141,0,0,49,140,140,141,56,140,1,0,135,140,0,0,1,140,1,0,1,141,88,0,134,96,0,0,120,253,5,0,140,141,0,0,1,140,4,0,134,141,0,0,116,78,6,0,139,96,140,0,1,141,4,0,1,140,0,0,134,102,0,0,24,55,6,0,139,141,140,0,1,140,0,0,53,140,102,140,140,140,1,0,1,2,255,255,0,91,2,0,137,136,0,0,139,91,0,0,2,140,0,0,176,164,0,0,1,141,4,0,1,142,0,0,134,113,0,0,24,55,6,0,140,141,142,0,2,141,0,0,29,72,1,0,42,141,141,0,1,140,0,0,14,140,113,140,40,140,140,1,38,140,140,1,19,140,140,137,1,143,1,0,134,142,0,0,116,78,6,0,141,140,143,0,2,142,0,0,29,72,1,0,42,142,142,0,1,143,1,0,1,140,0,0,134,10,0,0,24,55,6,0,142,143,140,0,41,140,10,24,42,140,140,24,33,140,140,0,121,140,31,0,1,140,33,0,135,28,11,0,140,0,0,0,34,140,28,0,120,140,5,0,1,143,31,0,135,140,12,0,143,0,0,0,119,0,22,0,2,140,0,0,52,195,0,0,1,143,4,0,1,142,0,0,134,42,0,0,24,55,6,0,140,143,142,0,135,48,13,0,1,143,4,0,134,142,0,0,116,78,6,0,136,48,143,0,2,143,0,0,65,73,1,0,134,142,0,0,84,83,6,0,42,143,136,0,1,2,255,255,0,91,2,0,137,136,0,0,139,91,0,0,2,142,0,0,180,164,0,0,1,143,4,0,1,140,0,0,134,53,0,0,24,55,6,0,142,143,140,0,1,140,0,0,53,140,53,140,4,142,1,0,2,140,0,0,90,73,1,0,135,61,14,0,140,0,0,0,1,140,0,0,14,140,61,140,2,143,0,0,99,73,1,0,125,81,140,61,143,0,0,0,2,143,0,0,111,73,1,0,135,88,15,0,81,143,0,0,1,143,1,0,135,92,16,0,88,143,0,0,2,140,0,0,180,164,0,0,1,142,4,0,134,143,0,0,116,78,6,0,140,92,142,0,2,143,0,0,180,164,0,0,1,142,4,0,1,140,0,0,134,93,0,0,24,55,6,0,143,142,140,0,1,140,0,0,53,140,93,140,100,142,1,0,2,140,0,0,33,55,1,0,1,142,62,16,135,94,17,0,140,142,0,0,1,142,0,0,135,95,16,0,94,142,0,0,2,140,0,0,180,164,0,0,1,143,4,0,134,142,0,0,116,78,6,0,140,95,143,0,2,142,0,0,180,164,0,0,1,143,4,0,1,140,0,0,134,97,0,0,24,55,6,0,142,143,140,0,1,140,0,0,53,140,97,140,208,142,1,0,2,140,0,0,52,195,0,0,1,143,4,0,1,142,0,0,134,98,0,0,24,55,6,0,140,143,142,0,2,143,0,0,114,73,1,0,25,140,136,8,134,142,0,0,84,83,6,0,98,143,140,0,1,2,255,255,0,91,2,0,137,136,0,0,139,91,0,0,2,142,0,0,180,164,0,0,1,140,4,0,1,143,0,0,134,99,0,0,24,55,6,0,142,140,143,0,25,143,99,4,1,140,4,0,1,142,0,0,134,100,0,0,24,55,6,0,143,140,142,0,25,142,100,4,1,140,4,0,1,143,0,0,134,101,0,0,24,55,6,0,142,140,143,0,1,143,4,0,1,140,0,0,134,103,0,0,24,55,6,0,139,143,140,0,25,143,103,7,42,143,143,0,1,142,0,0,14,142,101,142,40,142,142,1,38,142,142,1,19,142,142,137,1,141,1,0,134,140,0,0,116,78,6,0,143,142,141,0,1,140,4,0,1,141,0,0,134,104,0,0,24,55,6,0,139,140,141,0,25,141,104,7,42,141,141,0,1,140,1,0,1,142,0,0,134,105,0,0,24,55,6,0,141,140,142,0,2,142,0,0,188,164,0,0,1,140,4,0,1,141,0,0,134,106,0,0,24,55,6,0,142,140,141,0,41,141,105,24,42,141,141,24,33,141,141,0,1,140,0,0,14,140,106,140,20,141,141,140,120,141,24,0,2,141,0,0,135,73,1,0,135,107,14,0,141,0,0,0,1,141,0,0,14,141,107,141,2,140,0,0,150,73,1,0,125,108,141,107,140,0,0,0,2,140,0,0,111,73,1,0,135,109,15,0,108,140,0,0,1,140,1,0], eb + 92160);
  HEAPU8.set([135,110,16,0,109,140,0,0,2,141,0,0,188,164,0,0,1,142,4,0,134,140,0,0,116,78,6,0,141,110,142,0,1,140,4,0,1,142,0,0,134,111,0,0,24,55,6,0,139,140,142,0,25,142,111,7,42,142,142,0,1,140,1,0,1,141,0,0,134,112,0,0,24,55,6,0,142,140,141,0,41,141,112,24,42,141,141,24,33,141,141,0,121,141,3,0,1,135,18,0,119,0,59,0,2,141,0,0,188,164,0,0,1,140,4,0,1,142,0,0,134,114,0,0,24,55,6,0,141,140,142,0,2,142,0,0,29,72,1,0,42,142,142,0,1,140,1,0,1,141,0,0,134,115,0,0,24,55,6,0,142,140,141,0,1,141,0,0,13,141,114,141,41,140,115,24,42,140,140,24,33,140,140,0,19,141,141,140,121,141,3,0,1,135,18,0,119,0,35,0,1,141,4,0,1,140,0,0,134,116,0,0,24,55,6,0,139,141,140,0,25,141,116,9,42,141,141,0,1,142,1,0,1,143,1,0,134,140,0,0,116,78,6,0,141,142,143,0,1,140,4,0,1,143,0,0,134,117,0,0,24,55,6,0,139,140,143,0,25,140,117,10,1,142,7,0,1,141,2,0,134,143,0,0,116,78,6,0,140,142,141,0,1,143,4,0,1,141,0,0,134,118,0,0,24,55,6,0,139,143,141,0,25,143,118,12,1,142,255,255,1,140,2,0,134,141,0,0,116,78,6,0,143,142,140,0,32,141,135,18,121,141,13,0,1,141,4,0,1,140,0,0,134,119,0,0,24,55,6,0,139,141,140,0,25,141,119,9,42,141,141,0,1,142,0,0,1,143,1,0,134,140,0,0,116,78,6,0,141,142,143,0,2,140,0,0,180,164,0,0,1,143,4,0,1,142,0,0,134,120,0,0,24,55,6,0,140,143,142,0,25,142,120,12,1,143,4,0,1,140,0,0,134,121,0,0,24,55,6,0,142,143,140,0,2,143,0,0,212,164,0,0,28,142,121,8,38,142,142,255,1,141,4,0,134,140,0,0,116,78,6,0,143,142,141,0,2,140,0,0,180,164,0,0,1,141,4,0,1,142,0,0,134,122,0,0,24,55,6,0,140,141,142,0,25,142,122,8,1,141,4,0,1,140,0,0,134,123,0,0,24,55,6,0,142,141,140,0,2,141,0,0,216,164,0,0,28,142,123,32,38,142,142,255,1,143,4,0,134,140,0,0,116,78,6,0,141,142,143,0,1,140,4,0,1,143,0,0,134,124,0,0,24,55,6,0,139,140,143,0,25,143,124,7,42,143,143,0,1,140,1,0,1,142,0,0,134,125,0,0,24,55,6,0,143,140,142,0,41,142,125,24,42,142,142,24,33,142,142,0,120,142,32,0,2,142,0,0,180,164,0,0,1,140,4,0,1,143,0,0,134,126,0,0,24,55,6,0,142,140,143,0,25,143,126,4,1,140,4,0,1,142,0,0,134,127,0,0,24,55,6,0,143,140,142,0,25,142,127,4,1,140,4,0,1,143,0,0,134,128,0,0,24,55,6,0,142,140,143,0,1,143,4,0,1,140,0,0,134,129,0,0,24,55,6,0,128,143,140,0,2,143,0,0,220,164,0,0,26,142,129,1,1,141,4,0,134,140,0,0,116,78,6,0,143,142,141,0,2,140,0,0,29,72,1,0,42,140,140,0,1,141,1,0,1,142,0,0,134,130,0,0,24,55,6,0,140,141,142,0,2,142,0,0,184,164,0,0,1,141,4,0,1,140,0,0,134,131,0,0,24,55,6,0,142,141,140,0,19,140,130,137,32,140,140,0,1,141,0,0,14,141,131,141,20,140,140,141,120,140,68,0,2,140,0,0,162,73,1,0,135,132,14,0,140,0,0,0,1,140,0,0,14,140,132,140,2,141,0,0,171,73,1,0,125,3,140,132,141,0,0,0,2,141,0,0,111,73,1,0,135,4,15,0,3,141,0,0,1,141,1,0,135,5,16,0,4,141,0,0,2,140,0,0,184,164,0,0,1,142,4,0,134,141,0,0,116,78,6,0,140,5,142,0,2,141,0,0,184,164,0,0,1,142,4,0,1,140,0,0,134,6,0,0,24,55,6,0,141,142,140,0,1,140,0,0,53,140,6,140,252,147,1,0,2,140,0,0,95,71,1,0,1,142,190,0,135,7,17,0,140,142,0,0,1,142,0,0,135,8,16,0,7,142,0,0,2,140,0,0,184,164,0,0,1,141,4,0,134,142,0,0,116,78,6,0,140,8,141,0,2,142,0,0,184,164,0,0,1,141,4,0,1,140,0,0,134,9,0,0,24,55,6,0,142,141,140,0,1,140,0,0,46,140,9,140,76,148,1,0,2,140,0,0,184,164,0,0,1,141,4,0,1,142,0,0,134,11,0,0,24,55,6,0,140,141,142,0,1,141,0,0,135,142,18,0,11,141,0,0,2,142,0,0,29,72,1,0,42,142,142,0,1,141,1,0,1,140,0,0,134,12,0,0,24,55,6,0,142,141,140,0,41,140,12,24,42,140,140,24,33,140,140,0,121,140,87,0,2,140,0,0,183,73,1,0,135,13,14,0,140,0,0,0,0,133,13,0,0,14,133,0,1,140,0,0,46,140,14,140,184,148,1,0,0,15,133,0,134,16,0,0,60,7,5,0,15,0,0,0,0,19,16,0,119,0,2,0,1,19,25,0,2,140,0,0,212,164,0,0,1,141,4,0,1,142,0,0,134,17,0,0,24,55,6,0,140,141,142,0,5,18,19,17,2,141,0,0,196,164,0,0,1,140,4,0,134,142,0,0,116,78,6,0,141,18,140,0,2,142,0,0,193,73,1,0,135,20,14,0,142,0,0,0,0,133,20,0,0,21,133,0,1,142,0,0,46,142,21,142,48,149,1,0,0,22,133,0,134,23,0,0,60,7,5,0,22,0,0,0,0,26,23,0,119,0,2,0,1,26,80,0,2,142,0,0,216,164,0,0,1,140,4,0,1,141,0,0,134,24,0,0,24,55,6,0,142,140,141,0,5,25,26,24,2,140,0,0,200,164,0,0,1,142,4,0,134,141,0,0,116,78,6,0,140,25,142,0,2,141,0,0,200,164,0,0,1,142,4,0,1,140,0,0,134,27,0,0,24,55,6,0,141,142,140,0,2,140,0,0,196,164,0,0,1,142,4,0,1,141,0,0,134,29,0,0,24,55,6,0,140,142,141,0,1,141,0,0,2,142,0,0,0,0,16,1,135,30,19,0,27,29,141,142,2,141,0,0,176,164,0,0,1,140,4,0,134,142,0,0,116,78,6,0,141,30,140,0,119,0,73,0,2,142,0,0,196,164,0,0,1,140,4,0,1,141,0,0,134,31,0,0,24,55,6,0,142,140,141,0,33,141,31,0,120,141,28,0,2,141,0,0,176,164,0,0,1,140,4,0,1,142,0,0,134,32,0,0,24,55,6,0,141,140,142,0,25,142,32,12,1,140,4,0,1,141,0,0,134,33,0,0,24,55,6,0,142,140,141,0,2,141,0,0,204,164,0,0,1,140,4,0,1,142,0,0,134,34,0,0,24,55,6,0,141,140,142,0,2,140,0,0,196,164,0,0,4,141,33,34,1,143,4,0,134,142,0,0,116,78,6,0,140,141,143,0,2,142,0,0,200,164,0,0,1,143,4,0,1,141,0,0,134,35,0,0,24,55,6,0,142,143,141,0,33,141,35,0,120,141,28,0,2,141,0,0,176,164,0,0,1,143,4,0,1,142,0,0,134,36,0,0,24,55,6,0,141,143,142,0,25,142,36,8,1,143,4,0,1,141,0,0,134,37,0,0,24,55,6,0,142,143,141,0,2,141,0,0,208,164,0,0,1,143,4,0,1,142,0,0,134,38,0,0,24,55,6,0,141,143,142,0,2,143,0,0,200,164,0,0,4,141,37,38,1,140,4,0,134,142,0,0,116,78,6,0,143,141,140,0,2,142,0,0,176,164,0,0,1,140,4,0,1,141,0,0,134,39,0,0,24,55,6,0,142,140,141,0,1,141,0,0,53,141,39,141,120,151,1,0,2,141,0,0,52,195,0,0,1,140,4,0,1,142,0,0,134,40,0,0,24,55,6,0,141,140,142,0,135,41,13,0,25,140,136,16,1,141,4,0,134,142,0,0,116,78,6,0,140,41,141,0,2,141,0,0,202,73,1,0,25,140,136,16,134,142,0,0,84,83,6,0,40,141,140,0,1,2,255,255,0,91,2,0,137,136,0,0,139,91,0,0,1,142,4,0,1,140,0,0,134,43,0,0,24,55,6,0,139,142,140,0,25,140,43,9,42,140,140,0,1,142,1,0,1,141,0,0,134,44,0,0,24,55,6,0,140,142,141,0,41,141,44,24,42,141,141,24,33,141,141,0,121,141,3,0,134,141,0,0,160,179,4,0,1,134,0,0,0,45,134,0,34,141,45,8,120,141,2,0,119,0,104,0,0,46,134,0,38,141,46,4,33,141,141,0,1,142,192,0,1,140,0,0,125,47,141,142,140,0,0,0,0,49,134,0,41,142,49,2,3,142,138,142,42,142,142,0,19,141,47,137,1,143,1,0,134,140,0,0,116,78,6,0,142,141,143,0,0,50,134,0,38,140,50,2,33,140,140,0,1,143,192,0,1,141,0,0,125,51,140,143,141,0,0,0,0,52,134,0,41,143,52,2,3,143,138,143,25,143,143,1,42,143,143,0,19,140,51,137,1,142,1,0,134,141,0,0,116,78,6,0,143,140,142,0,0,54,134,0,38,141,54,1,33,141,141,0,1,142,192,0,1,140,0,0,125,55,141,142,140,0,0,0,0,56,134,0,41,142,56,2,3,142,138,142,25,142,142,2,42,142,142,0,19,141,55,137,1,143,1,0,134,140,0,0,116,78,6,0,142,141,143,0,0,57,134,0,38,140,57,4,33,140,140,0,1,143,64,0,125,58,140,137,143,0,0,0,0,59,134,0,25,140,59,8,41,140,140,2,3,140,138,140,42,140,140,0,19,141,58,137,1,142,1,0,134,143,0,0,116,78,6,0,140,141,142,0,0,60,134,0,38,143,60,2,33,143,143,0,1,142,64,0,125,62,143,137,142,0,0,0,0,63,134,0,25,143,63,8,41,143,143,2,3,143,138,143,25,143,143,1,42,143,143,0,19,141,62,137,1,140,1,0,134,142,0,0,116,78,6,0,143,141,140,0,0,64,134,0,38,142,64,1,33,142,142,0,1,140,64,0,125,65,142,137,140,0,0,0,0,66,134,0,25,142,66,8,41,142,142,2,3,142,138,142,25,142,142,2,42,142,142,0,19,141,65,137,1,143,1,0,134,140,0,0,116,78,6,0,142,141,143,0,0,67,134,0,25,134,67,1,119,0,150,255,1,134,0,0,0,68,134,0,34,140,68,16,120,140,2,0,119,0,57,0,2,140,0,0,176,164,0,0,1,143,4,0,1,141,0,0,134,69,0,0,24,55,6,0,140,143,141,0,25,141,69,4,1,143,4,0,1,140,0,0,134,70,0,0,24,55,6,0,141,143,140,0,0,71,134,0,41,140,71,2,3,140,138,140,42,140,140,0,1,143,1,0,1,141,0,0,134,72,0,0,24,55,6,0,140,143,141,0,0,73,134,0,41,141,73,2,3,141,138,141,25,141,141,1,42,141,141,0,1,143,1,0,1,140,0,0,134,74,0,0,24,55,6,0,141,143,140,0,0,75,134,0,41,140,75,2,3,140,138,140,25,140,140,2,42,140,140,0,1,143,1,0,1,141,0,0,134,76,0,0,24,55,6,0,140,143,141,0,135,77,20,0,70,72,74,76,0,78,134,0,2,143,0,0,224,164,0,0,41,140,78,2,3,143,143,140,1,140,4,0,134,141,0,0,116,78,6,0,143,77,140,0,0,79,134,0,25,134,79,1,119,0,197,255,1,140,1,0,135,141,21,0,140,0,0,0,134,141,0,0,120,91,6,0,2,141,0,0,29,72,1,0,42,141,141,0,1,140,1,0,1,143,0,0,134,80,0,0,24,55,6,0,141,140,143,0,41,143,80,24,42,143,143,24,33,143,143,0,121,143,15,0,33,143,0,0,121,143,8,0,1,143,4,0,1,140,0,0,134,82,0,0,24,55,6,0,1,143,140,0,0,83,82,0,119,0,3,0,2,83,0,0,233,73,1,0,134,140,0,0,228,91,6,0,83,0,0,0,134,84,0,0,148,98,6,0,1,140,4,0,1,143,0,0,134,85,0,0,24,55,6,0,139,140,143,0,25,140,85,32,1,141,4,0,134,143,0,0,116,78,6,0,140,84,141,0,134,86,0,0,176,97,6,0,1,143,4,0,1,141,0,0,134,87,0,0,24,55,6,0,139,143,141,0,25,143,87,36,1,140,4,0,134,141,0,0,116,78,6,0,143,86,140,0,1,141,4,0,1,140,0,0,134,89,0,0,24,55,6,0,139,141,140,0,25,141,89,48,1,143,150,0,1,142,4,0,134,140,0,0,116,78,6,0,141,143,142,0,1,140,4,0,1,142,0,0,134,90,0,0,24,55,6,0,139,140,142,0,25,140,90,6,42,140,140,0,1,143,0,0,1,141,1,0,134,142,0,0,116,78,6,0,140,143,141,0,134,142,0,0,64,108,6,0,1,2,0,0,0,91,2,0,137,136,0,0,139,91,0,0,140,2,158,0,0,0,0,0,2,152,0,0,192,2,0,0,2,153,0,0,216,106,0,0,1,150,0,0,136,154,0,0,0,151,154,0,136,154,0,0,25,154,154,48,137,154,0,0,130,154,0,0,136,155,0,0,49,154,154,155,248,155,1,0,135,154,0,0,0,2,0,0,1,147,0,0,0,71,2,0,1,154,0,0,45,154,71,154,108,156,1,0,1,154,220,106,1,155,4,0,1,156,0,0,134,105,0,0,24,55,6,0,154,155,156,0,1,156,4,0,1,155,0,0,134,113,0,0,24,55,6,0,153,156,155,0,134,120,0,0,212,193,5,0,105,113,0,0,0,2,120,0,1,155,0,0,45,155,120,155,100,156,1,0,137,151,0,0,139,0,0,0,119,0,3,0,1,147,1,0,119,0,1,0,0,134,2,0,25,155,134,8,1,156,4,0,1,154,0,0,134,3,0,0,24,55,6,0,155,156,154,0,32,154,3,63,121,154,97,0,0,16,2,0,25,154,16,52,1,156,4,0,1,155,0,0,134,29,0,0,24,55,6,0,154,156,155,0,32,155,29,10,121,155,88,0,0,43,2,0,25,155,43,68,1,156,4,0,1,154,0,0,134,55,0,0,24,55,6,0,155,156,154,0,38,154,55,16,33,154,154,0,121,154,78,0,0,79,2,0,1,156,112,3,134,154,0,0,36,53,5,0,156,79,0,0,1,154,220,106,1,156,4,0,1,155,0,0,134,85,0,0,24,55,6,0,154,156,155,0,1,155,4,0,1,156,0,0,134,91,0,0,24,55,6,0,153,155,156,0,134,97,0,0,236,29,6,0,41,155,97,24,42,155,155,24,134,156,0,0,208,39,6,0,85,91,155,0,1,156,20,107,1,155,4,0,1,154,0,0,134,99,0,0,24,55,6,0,156,155,154,0,25,154,99,28,1,155,2,0,1,156,0,0,134,100,0,0,24,55,6,0,154,155,156,0,41,156,100,16,42,156,156,16,38,156,156,2,33,156,156,0,1,155,35,0,1,154,46,0,125,101,156,155,154,0,0,0,1,154,4,0,1,155,0,0,134,102,0,0,24,55,6,0,153,154,155,0,1,155,220,106,1,154,4,0,1,156,0,0,134,103,0,0,24,55,6,0,155,154,156,0,1,154,192,26,41,155,102,5,3,155,155,103,41,155,155,3,3,154,154,155,42,154,154,0,1,155,255,0,19,155,101,155,1,157,1,0,134,156,0,0,116,78,6,0,154,155,157,0,0,104,2,0,134,156,0,0,100,97,6,0,104,0,0,0,2,157,0,0,254,26,1,0,134,156,0,0,144,18,6,0,157,151,0,0,137,151,0,0,139,0,0,0,1,156,24,107,1,157,4,0,1,155,0,0,134,106,0,0,24,55,6,0,156,157,155,0,1,155,0,0,45,155,106,155,156,158,1,0,0,107,2,0,1,157,24,107,1,156,4,0,134,155,0,0,116,78,6,0,157,107,156,0,134,108,0,0,144,48,6,0,0,109,2,0,25,156,109,28,42,156,156,0,1,157,1,0,134,155,0,0,116,78,6,0,156,108,157,0,1,155,4,0,1,157,0,0,134,110,0,0,24,55,6,0,152,155,157,0,25,155,110,1,1,156,4,0,134,157,0,0,116,78,6,0,152,155,156,0,119,0,185,1,1,148,0,0,1,157,24,107,1,156,4,0,1,155,0,0,134,111,0,0,24,55,6,0,157,156,155,0,0,149,111,0,0,112,149,0,1,155,0,0,53,155,112,155,208,158,1,0,119,0,29,0,0,114,149,0,25,155,114,8,1,156,4,0,1,157,0,0,134,115,0,0,24,55,6,0,155,156,157,0,0,116,2,0,25,157,116,8,1,156,4,0,1,155,0,0,134,117,0,0,24,55,6,0,157,156,155,0,53,155,115,117,24,159,1,0,1,150,14,0,119,0,11,0,0,118,149,0,0,148,118,0,0,119,149,0,1,155,4,0,1,156,0,0,134,121,0,0,24,55,6,0,119,155,156,0,0,149,121,0,119,0,224,255,32,156,150,14,121,156,73,1,1,150,0,0,0,122,149,0,25,156,122,8,1,155,4,0,1,157,0,0,134,123,0,0,24,55,6,0,156,155,157,0,0,124,2,0,25,157,124,8,1,155,4,0,1,156,0,0,134,125,0,0,24,55,6,0,157,155,156,0,52,156,123,125,144,159,1,0,119,0,38,0,0,126,149,0,25,156,126,52,1,155,4,0,1,157,0,0,134,127,0,0,24,55,6,0,156,155,157,0,0,128,2,0,25,157,128,52,1,155,4,0,1,156,0,0,134,129,0,0,24,55,6,0,157,155,156,0,53,156,127,129,212,159,1,0,119,0,21,0,0,130,149,0,0,148,130,0,0,131,149,0,1,156,4,0,1,155,0,0,134,132,0,0,24,55,6,0,131,156,155,0,1,155,0,0,52,155,132,155,36,160,1,0,0,133,149,0,1,155,4,0,1,156,0,0,134,135,0,0,24,55,6,0,133,155,156,0,0,149,135,0,1,150,14,0,119,0,202,255,0,136,149,0,25,156,136,8,1,155,4,0,1,157,0,0,134,137,0,0,24,55,6,0,156,155,157,0,0,138,2,0,25,157,138,8,1,155,4,0,1,156,0,0,134,139,0,0,24,55,6,0,157,155,156,0,45,156,137,139,104,164,1,0,0,140,149,0,25,156,140,52,1,155,4,0,1,157,0,0,134,141,0,0,24,55,6,0,156,155,157,0,0,142,2,0,25,157,142,52,1,155,4,0,1,156,0,0,134,143,0,0,24,55,6,0,157,155,156,0,45,156,141,143,104,164,1,0,0,144,149,0,25,156,144,8,1,155,4,0,1,157,0,0,134,145,0,0,24,55,6,0,156,155,157,0,32,157,145,33,121,157,3,0,1,150,23,0,119,0,197,0,0,146,149,0,25,157,146,8,1,155,4,0,1,156,0,0,134,4,0,0,24,55,6,0,157,155,156,0,32,156,4,63,121,156,3,0,1,150,23,0,119,0,186,0,0,5,149,0,25,156,5,8,1,155,4,0,1,157,0,0,134,6,0,0,24,55,6,0,156,155,157,0,32,157,6,58,121,157,3,0,1,150,23,0,119,0,175,0,0,14,2,0,25,157,14,72,1,155,4,0,1,156,0,0,134,15,0,0,24,55,6,0,157,155,156,0,0,17,149,0,0,148,17,0,33,156,15,0,120,156,2,0,119,0,197,0,0,18,149,0,25,156,18,8,1,155,4,0,1,157,0,0,134,19,0,0,24,55,6,0,156,155,157,0,0,20,2,0,25,157,20,8,1,155,4,0,1,156,0,0,134,21,0,0,24,55,6,0,157,155,156,0,52,156,19,21,156,161,1,0,119,0,54,0,0,22,149,0,25,156,22,52,1,155,4,0,1,157,0,0,134,23,0,0,24,55,6,0,156,155,157,0,0,24,2,0,25,157,24,52,1,155,4,0,1,156,0,0,134,25,0,0,24,55,6,0,157,155,156,0,52,156,23,25,224,161,1,0,119,0,37,0,0,26,149,0,25,156,26,72,1,155,4,0,1,157,0,0,134,27,0,0,24,55,6,0,156,155,157,0,0,28,2,0,25,157,28,72,1,155,4,0,1,156,0,0,134,30,0,0,24,55,6,0,157,155,156,0,53,156,27,30,36,162,1,0,119,0,20,0,0,31,149,0,0,148,31,0,0,32,149,0,1,156,4,0,1,155,0,0,134,33,0,0,24,55,6,0,32,156,155,0,1,155,0,0,52,155,33,155,112,162,1,0,0,34,149,0,1,155,4,0,1,156,0,0,134,35,0,0,24,55,6,0,34,155,156,0,0,149,35,0,119,0,187,255,0,36,149,0,25,156,36,8,1,155,4,0,1,157,0,0,134,37,0,0,24,55,6,0,156,155,157,0,0,38,2,0,25,157,38,8,1,155,4,0,1,156,0,0,134,39,0,0,24,55,6,0,157,155,156,0,52,156,37,39,180,162,1,0,119,0,110,0,0,40,149,0,25,156,40,52,1,155,4,0,1,157,0,0,134,41,0,0,24,55,6,0,156,155,157,0,0,42,2,0,25,157,42,52,1,155,4,0,1,156,0,0,134,44,0,0,24,55,6,0,157,155,156,0,52,156,41,44,248,162,1,0,119,0,93,0,0,45,149,0,25,156,45,72,1,155,4,0,1,157,0,0,134,46,0,0,24,55,6,0,156,155,157,0,0,47,2,0,25,157,47,72,1,155,4,0,1,156,0,0,134,48,0,0,24,55,6,0,157,155,156,0,52,156,46,48,60,163,1,0,119,0,76,0,0,49,2,0,25,156,49,48,1,155,4,0,1,157,0,0,134,50,0,0,24,55,6,0,156,155,157,0,0,51,149,0,25,157,51,48,1,155,4,0,1,156,0,0,134,52,0,0,24,55,6,0,157,155,156,0,25,155,51,48,3,157,52,50,1,154,4,0,134,156,0,0,116,78,6,0,155,157,154,0,1,156,4,0,1,154,0,0,134,53,0,0,24,55,6,0,152,156,154,0,26,156,53,1,1,157,4,0,134,154,0,0,116,78,6,0,152,156,157,0,0,54,147,0,0,56,2,0,134,57,0,0,8,205,4,0,54,56,0,0,41,154,57,24,42,154,154,24,33,154,154,0,120,154,3,0,137,151,0,0,139,0,0,0,32,154,150,23,121,154,26,0,0,7,147,0,0,8,2,0,134,9,0,0,8,205,4,0,7,8,0,0,41,154,9,24,42,154,154,24,33,154,154,0,121,154,15,0,0,10,149,0,25,154,10,48,1,157,4,0,1,156,0,0,134,11,0,0,24,55,6,0,154,157,156,0,25,157,10,48,25,154,11,1,1,155,4,0,134,156,0,0,116,78,6,0,157,154,155,0,119,0,3,0,137,151,0,0,139,0,0,0,0,12,2,0,134,156,0,0,100,97,6,0,12,0,0,0,0,13,149,0,0,2,13,0,1,148,0,0,0,58,148,0,1,156,0,0,46,156,58,156,124,165,1,0,0,59,147,0,0,60,2,0,134,61,0,0,8,205,4,0,59,60,0,0,41,156,61,24,42,156,156,24,33,156,156,0,120,156,3,0,137,151,0,0,139,0,0,0,134,62,0,0,144,48,6,0,0,63,2,0,25,155,63,28,42,155,155,0,1,154,1,0,134,156,0,0,116,78,6,0,155,62,154,0,0,64,148,0,1,156,4,0,1,154,0,0,134,65,0,0,24,55,6,0,64,156,154,0,0,66,2,0,1,156,4,0,134,154,0,0,116,78,6,0,66,65,156,0,0,67,148,0,0,68,2,0,25,156,68,4,1,155,4,0,134,154,0,0,116,78,6,0,156,67,155,0,0,69,148,0,1,154,4,0,1,155,0,0,134,70,0,0,24,55,6,0,69,154,155,0,1,155,0,0,46,155,70,155,100,165,1,0,0,72,2,0,0,73,148,0,1,155,4,0,1,154,0,0,134,74,0,0,24,55,6,0,73,155,154,0,25,155,74,4,1,156,4,0,134,154,0,0,116,78,6,0,155,72,156,0,0,75,2,0,0,76,148,0,1,156,4,0,134,154,0,0,116,78,6,0,76,75,156,0,0,77,2,0,25,154,77,68,1,156,4,0,1,155,0,0,134,78,0,0,24,55,6,0,154,156,155,0,25,156,77,68,39,154,78,16,1,157,4,0,134,155,0,0,116,78,6,0,156,154,157,0,1,155,116,3,1,157,4,0,1,154,0,0,134,80,0,0,24,55,6,0,155,157,154,0,0,149,80,0,0,81,149,0,1,154,0,0,53,154,81,154,224,165,1,0,119,0,26,0,0,82,149,0,25,154,82,20,1,157,4,0,1,155,0,0,134,83,0,0,24,55,6,0,154,157,155,0,0,84,2,0,25,155,84,12,45,155,83,155,36,166,1,0,0,86,149,0,25,157,86,20,1,154,4,0,134,155,0,0,116,78,6,0,157,153,154,0,0,87,149,0,1,155,4,0,1,154,0,0,134,88,0,0,24,55,6,0,87,155,154,0,0,149,88,0,119,0,227,255,0,89,2,0,25,154,89,8,1,155,4,0,1,157,0,0,134,90,0,0,24,55,6,0,154,155,157,0,32,157,90,44,121,157,9,0,2,155,0,0,241,208,0,0,42,155,155,0,1,154,1,0,1,156,1,0,134,157,0,0,116,78,6,0,155,154,156,0,41,157,1,24,42,157,157,24,33,157,157,0,121,157,3,0,137,151,0,0,139,0,0,0,2,157,0,0,5,209,0,0,42,157,157,0,1,156,1,0,1,154,0,0,134,92,0,0,24,55,6,0,157,156,154,0,41,154,92,24,42,154,154,24,33,154,154,0,120,154,7,0,2,156,0,0,41,27,1,0,25,157,151,8,134,154,0,0,112,85,6,0,156,157,0,0,0,93,2,0,2,154,0,0,5,209,0,0,42,154,154,0,1,157,1,0,1,156,0,0,134,94,0,0,24,55,6,0,154,157,156,0,41,156,94,24,42,156,156,24,33,156,156,0,40,156,156,1,38,156,156,1,1,157,255,0,19,156,156,157,134,95,0,0,208,181,1,0,93,156,0,0,0,96,2,0,25,156,96,28,42,156,156,0,1,157,1,0,1,154,0,0,134,98,0,0,24,55,6,0,156,157,154,0,25,157,151,16,1,156,4,0,134,154,0,0,116,78,6,0,157,95,156,0,25,156,151,16,25,156,156,4,41,157,98,24,42,157,157,24,1,155,4,0,134,154,0,0,116,78,6,0,156,157,155,0,2,155,0,0,245,36,1,0,25,157,151,16,134,154,0,0,144,18,6,0,155,157,0,0,137,151,0,0,139,0,0,0,140,3,103,0,0,0,0,0,2,88,0,0,172,159,0,0,2,89,0,0,192,26,0,0,2,90,0,0,216,106,0,0,2,91,0,0,176,159,0,0,2,92,0,0,255,0,0,0,2,93,0,0,5,209,0,0,2,94,0,0,252,106,0,0,2,95,0,0,220,106,0,0,2,96,0,0,21,50,1,0,1,86,0,0,136,97,0,0,0,87,97,0,136,97,0,0,1,98,176,0,3,97,97,98,137,97,0,0,130,97,0,0,136,98,0,0,49,97,97,98,40,168,1,0,135,97,0,0,1,83,0,0,25,98,87,64,25,98,98,8,1,99,41,0,1,100,4,0,134,97,0,0,116,78,6,0,98,99,100,0,25,100,87,64,25,100,100,52,1,99,9,0,1,98,4,0,134,97,0,0,116,78,6,0,100,99,98,0,25,98,87,64,25,98,98,37,2,99,0,0,157,49,1,0,1,100,8,0,135,97,9,0,98,99,100,0,25,100,87,64,25,100,100,56,1,99,100,0,1,98,4,0,134,97,0,0,116,78,6,0,100,99,98,0,25,98,87,64,25,98,98,60,1,99,0,0,1,100,4,0,134,97,0,0,116,78,6,0,98,99,100,0,1,100,24,21,1,99,4,0,134,97,0,0,116,78,6,0,100,2,99,0,25,97,1,4,1,99,4,0,1,100,0,0,134,7,0,0,24,55,6,0,97,99,100,0,1,100,4,0,1,99,0,0,134,14,0,0,24,55,6,0,1,100,99,0,3,99,7,14,1,100,254,255,1,97,5,0,138,99,100,97,32,169,1,0,36,169,1,0,40,169,1,0,48,169,1,0,104,169,1,0,119,0,21,0,119,0,18,0,119,0,3,0,1,83,47,0,119,0,17,0,25,100,1,4,1,97,4,0,1,98,0,0,134,28,0,0,24,55,6,0,100,97,98,0,32,98,28,0,1,97,45,0,1,100,124,0,125,39,98,97,100,0,0,0,19,100,39,92,0,83,100,0,119,0,3,0,1,83,92,0,119,0,1,0,1,97,4,0,1,98,0,0,134,100,0,0,24,55,6,0,0,97,98,0,1,98,4,0,134,99,0,0,116,78,6,0,88,100,98,0,25,98,88,4,25,97,0,4,1,101,4,0,1,102,0,0,134,100,0,0,24,55,6,0,97,101,102,0,1,102,4,0,134,99,0,0,116,78,6,0,98,100,102,0,14,99,0,90,38,99,99,1,19,99,99,92,0,84,99,0,1,85,0,0,1,82,0,0,2,80,0,0,180,159,0,0,0,50,80,0,2,99,0,0,220,159,0,0,57,99,50,99,248,169,1,0,119,0,194,2,0,51,85,0,41,99,51,24,42,99,99,24,33,99,99,0,40,99,99,1,120,99,2,0,119,0,187,2,25,99,1,4,1,102,4,0,1,100,0,0,134,52,0,0,24,55,6,0,99,102,100,0,1,100,4,0,1,102,0,0,134,53,0,0,24,55,6,0,91,100,102,0,3,100,53,52,1,99,4,0,134,102,0,0,116,78,6,0,91,100,99,0,1,102,4,0,1,99,0,0,134,54,0,0,24,55,6,0,1,102,99,0,1,99,4,0,1,102,0,0,134,55,0,0,24,55,6,0,88,99,102,0,3,99,55,54,1,100,4,0,134,102,0,0,116,78,6,0,88,99,100,0,0,56,80,0,1,99,4,0,1,98,0,0,134,100,0,0,24,55,6,0,88,99,98,0,1,98,4,0,134,102,0,0,116,78,6,0,56,100,98,0,25,98,56,4,25,99,88,4,1,101,4,0,1,97,0,0,134,100,0,0,24,55,6,0,99,101,97,0,1,97,4,0,134,102,0,0,116,78,6,0,98,100,97,0,1,102,4,0,1,97,0,0,134,57,0,0,24,55,6,0,88,102,97,0,1,97,4,0,1,102,0,0,134,58,0,0,24,55,6,0,91,97,102,0,41,102,57,5,3,102,102,58,41,102,102,3,3,102,89,102,25,102,102,4,1,97,4,0,1,100,0,0,134,59,0,0,24,55,6,0,102,97,100,0,1,100,4,0,1,97,0,0,134,60,0,0,24,55,6,0,88,100,97,0,1,97,4,0,1,100,0,0,134,61,0,0,24,55,6,0,91,97,100,0,1,100,0,0,46,100,59,100,180,171,1,0,41,100,60,5,3,100,100,61,41,100,100,3,3,100,89,100,25,100,100,4,1,97,4,0,1,102,0,0,134,62,0,0,24,55,6,0,100,97,102,0,25,102,62,18,42,102,102,0,1,97,1,0,1,100,0,0,134,63,0,0,24,55,6,0,102,97,100,0,0,3,63,0,119,0,12,0,41,100,60,5,3,100,100,61,41,100,100,3,3,100,89,100,42,100,100,0,1,97,1,0,1,102,0,0,134,64,0,0,24,55,6,0,100,97,102,0,0,3,64,0,41,102,3,24,42,102,102,24,0,65,102,0,19,102,65,92,41,102,102,24,42,102,102,24,1,97,32,0,1,100,93,0,138,102,97,100,128,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,132,173,1,0,120,173,1,0,252,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,120,173,1,0,0,174,1,0,1,86,17,0,119,0,35,0,119,0,32,0,1,97,4,0,1,100,0,0,134,66,0,0,24,55,6,0,90,97,100,0,1,100,4,0,1,97,0,0,134,67,0,0,24,55,6,0,88,100,97,0,45,97,66,67,244,173,1,0,1,97,4,0,1,100,0,0,134,68,0,0,24,55,6,0,95,97,100,0,1,100,4,0,1,97,0,0,134,69,0,0,24,55,6,0,91,100,97,0,45,97,68,69,236,173,1,0,1,86,17,0,119,0,8,0,1,86,14,0,119,0,6,0,1,86,14,0,119,0,4,0,119,0,1,0,1,86,14,0,119,0,1,0,32,102,86,14,121,102,52,0,1,86,0,0,0,70,82,0,41,102,70,24,42,102,102,24,33,102,102,0,120,102,9,0,0,71,84,0,41,102,71,24,42,102,102,24,33,102,102,0,40,102,102,1,38,102,102,1,19,102,102,92,0,84,102,0,1,82,0,0,25,102,1,4,1,97,4,0,1,100,0,0,134,72,0,0,24,55,6,0,102,97,100,0,25,97,1,4,1,102,0,0,4,102,102,72,1,98,4,0,134,100,0,0,116,78,6,0,97,102,98,0,1,100,4,0,1,98,0,0,134,73,0,0,24,55,6,0,1,100,98,0,1,100,0,0,4,100,100,73,1,102,4,0,134,98,0,0,116,78,6,0,1,100,102,0,0,74,80,0,26,80,74,8,1,102,4,0,134,98,0,0,116,78,6,0,87,2,102,0,2,102,0,0,161,49,1,0,134,98,0,0,144,18,6,0,102,87,0,0,119,0,134,1,32,98,86,17,121,98,132,1,1,86,0,0,0,75,84,0,41,98,75,24,42,98,98,24,33,98,98,0,121,98,3,0,1,86,33,0,119,0,214,0,1,98,4,0,1,102,0,0,134,76,0,0,24,55,6,0,88,98,102,0,1,102,4,0,1,98,0,0,134,77,0,0,24,55,6,0,91,102,98,0,41,98,76,5,3,98,98,77,41,98,98,3,3,98,89,98,25,98,98,4,1,102,4,0,1,100,0,0,134,78,0,0,24,55,6,0,98,102,100,0,1,100,0,0,46,100,78,100,84,178,1,0,1,84,1,0,0,79,82,0,41,100,79,24,42,100,100,24,33,100,100,0,40,100,100,1,38,100,100,1,19,100,100,92,0,82,100,0,1,100,4,0,1,102,0,0,134,4,0,0,24,55,6,0,88,100,102,0,1,102,4,0,1,100,0,0,134,5,0,0,24,55,6,0,91,102,100,0,41,100,4,5,3,100,100,5,41,100,100,3,3,100,89,100,42,100,100,0,1,102,1,0,1,98,0,0,134,6,0,0,24,55,6,0,100,102,98,0,25,102,78,19,42,102,102,0,1,100,1,0,134,98,0,0,116,78,6,0,102,6,100,0,1,98,3,0,134,8,0,0,148,37,6,0,98,78,0,0,33,98,8,0,120,98,84,0,25,100,87,64,25,100,100,12,1,97,4,0,1,101,0,0,134,102,0,0,24,55,6,0,88,97,101,0,1,101,4,0,134,98,0,0,116,78,6,0,100,102,101,0,25,101,87,64,25,101,101,12,25,101,101,4,25,100,88,4,1,97,4,0,1,99,0,0,134,102,0,0,24,55,6,0,100,97,99,0,1,99,4,0,134,98,0,0,116,78,6,0,101,102,99,0,1,85,1,0,25,98,78,17,42,98,98,0,1,99,1,0,1,102,0,0,134,9,0,0,24,55,6,0,98,99,102,0,41,102,9,24,42,102,102,24,32,102,102,68,121,102,33,0,2,102,0,0,147,49,1,0,134,10,0,0,84,226,5,0,2,102,0,0,32,102,10,0,121,102,26,0,2,99,0,0,176,49,1,0,25,98,87,8,134,102,0,0,112,85,6,0,99,98,0,0,42,102,93,0,1,98,1,0,1,99,0,0,134,11,0,0,24,55,6,0,102,98,99,0,41,99,11,24,42,99,99,24,33,99,99,0,120,99,7,0,2,98,0,0,194,49,1,0,25,102,87,16,134,99,0,0,112,85,6,0,98,102,0,0,134,99,0,0,120,187,4,0,119,0,82,0,1,99,4,0,1,102,0,0,134,12,0,0,24,55,6,0,91,99,102,0,1,102,4,0,1,99,0,0,134,13,0,0,24,55,6,0,88,102,99,0,25,102,87,64,134,99,0,0,192,66,6,0,12,13,102,0,119,0,67,0,19,99,65,92,41,99,99,24,42,99,99,24,33,99,99,77,120,99,13,0,25,99,78,18,42,99,99,0,1,102,1,0,1,98,0,0,134,15,0,0,24,55,6,0,99,102,98,0,41,98,15,24,42,98,98,24,32,98,98,77,120,98,2,0,119,0,50,0,45,98,0,90,168,177,1,0,134,98,0,0,36,182,5,0,88,0,0,0,42,98,93,0,1,102,1,0,1,99,0,0,134,16,0,0,24,55,6,0,98,102,99,0,41,99,16,24,42,99,99,24,33,99,99,0,121,99,13,0,25,102,87,24,1,98,4,0,134,99,0,0,116,78,6,0,102,2,98,0,2,98,0,0,210,49,1,0,25,102,87,24,134,99,0,0,144,18,6,0,98,102,0,0,119,0,23,0,134,17,0,0,148,195,4,0,78,0,0,0,25,102,87,32,1,98,4,0,134,99,0,0,116,78,6,0,102,2,98,0,25,98,87,32,25,98,98,4,1,102,4,0,134,99,0,0,116,78,6,0,98,17,102,0,2,102,0,0,220,49,1,0,25,98,87,32,134,99,0,0,144,18,6,0,102,98,0,0,119,0,2,0,1,86,33,0,32,99,86,33,121,99,147,0,1,86,0,0,0,18,84,0,19,99,18,92,33,99,99,0,121,99,142,0,1,99,4,0,1,98,0,0,134,19,0,0,24,55,6,0,88,99,98,0,1,98,4,0,1,99,0,0,134,20,0,0,24,55,6,0,90,98,99,0,45,99,19,20,168,180,1,0,1,99,4,0,1,98,0,0,134,21,0,0,24,55,6,0,91,99,98,0,1,98,4,0,1,99,0,0,134,22,0,0,24,55,6,0,95,98,99,0,45,99,21,22,168,180,1,0,1,84,0,0,0,23,82,0,41,99,23,24,42,99,99,24,33,99,99,0,40,99,99,1,38,99,99,1,19,99,99,92,0,82,99,0,1,99,3,0,134,24,0,0,40,95,5,0,99,0,0,0,33,99,24,0,121,99,11,0,25,98,87,56,1,102,4,0,134,99,0,0,116,78,6,0,98,2,102,0,25,102,87,56,134,99,0,0,144,18,6,0,96,102,0,0,119,0,93,0,1,99,6,0,1,102,6,0,134,25,0,0,212,44,6,0,99,102,0,0,1,102,4,0,1,99,0,0,134,26,0,0,24,55,6,0,94,102,99,0,4,102,26,25,1,98,4,0,134,99,0,0,116,78,6,0,94,102,98,0,4,99,26,25,36,99,99,0,121,99,40,0,45,99,0,90,156,179,1,0,1,98,98,0,134,99,0,0,144,122,3,0,98,0,0,0,119,0,33,0,1,99,4,0,1,98,0,0,134,27,0,0,24,55,6,0,0,99,98,0,25,98,0,4,1,99,4,0,1,102,0,0,134,29,0,0,24,55,6,0,98,99,102,0,41,102,27,5,3,102,102,29,41,102,102,3,3,102,89,102,25,102,102,4,1,99,4,0,1,98,0,0,134,30,0,0,24,55,6,0,102,99,98,0,25,98,30,17,42,98,98,0,1,99,1,0,1,102,0,0,134,31,0,0,24,55,6,0,98,99,102,0,134,102,0,0,144,122,3,0,31,0,0,0,119,0,1,0,1,85,1,0,42,102,93,0,1,99,1,0,1,98,0,0,134,32,0,0,24,55,6,0,102,99,98,0,41,98,32,24,42,98,98,24,33,98,98,0,121,98,13,0,25,99,87,40,1,102,4,0,134,98,0,0,116,78,6,0,99,2,102,0,2,102,0,0,243,49,1,0,25,99,87,40,134,98,0,0,144,18,6,0,102,99,0,0,119,0,13,0,25,99,87,48,1,102,4,0,134,98,0,0,116,78,6,0,99,2,102,0,2,102,0,0,255,49,1,0,25,99,87,48,134,98,0,0,144,18,6,0,102,99,0,0,119,0,1,0,1,98,4,0,1,99,0,0,134,33,0,0,24,55,6,0,91,98,99,0,1,99,4,0,1,98,0,0,134,34,0,0,24,55,6,0,88,99,98,0,0,35,83,0,41,99,35,24,42,99,99,24,134,98,0,0,208,39,6,0,33,34,99,0,134,98,0,0,224,106,6,0,0,36,80,0,25,80,36,8,119,0,58,253,2,81,0,0,180,159,0,0,0,37,81,0,0,38,80,0,55,98,37,38,24,181,1,0,119,0,45,0,0,40,81,0,25,98,40,4,1,99,4,0,1,102,0,0,134,41,0,0,24,55,6,0,98,99,102,0,0,42,81,0,1,102,4,0,1,99,0,0,134,43,0,0,24,55,6,0,42,102,99,0,0,44,81,0,1,99,4,0,1,102,0,0,134,45,0,0,24,55,6,0,44,99,102,0,0,46,81,0,25,102,46,4,1,99,4,0,1,98,0,0,134,47,0,0,24,55,6,0,102,99,98,0,41,98,45,5,3,98,98,47,41,98,98,3,3,98,89,98,42,98,98,0,1,99,1,0,1,102,0,0,134,48,0,0,24,55,6,0,98,99,102,0,41,99,48,24,42,99,99,24,134,102,0,0,208,39,6,0,41,43,99,0,0,49,81,0,25,81,49,8,119,0,208,255,137,87,0,0,139,0,0,0,140,2,94,0,0,0,0,0,2,85,0,0,42,225,0,0,2,86,0,0,34,209,0,0,2,87,0,0,128,0,0,0,2,88,0,0,219,50,1,0,2,89,0,0,224,50,1,0,1,83,0,0,136,90,0,0,0,84,90,0,136,90,0,0,1,91,160,0,3,90,90,91,137,90,0,0,130,90,0,0,136,91,0,0,49,90,90,91,48,182,1,0,135,90,0,0,2,81,0,0,42,225,0,0,25,90,0,52,1,91,4,0,1,92,0,0,134,55,0,0,24,55,6,0,90,91,92,0,25,92,0,8,1,91,4,0,1,90,0,0,134,67,0,0,24,55,6,0,92,91,90,0,1,93,33,0,1,92,61,0,138,67,93,92,108,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,184,183,1,0,28,186,1,0,104,183,1,0,100,186,1,0,104,183,1,0,104,183,1,0,124,186,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,224,186,1,0,104,183,1,0,104,183,1,0,36,188,1,0,104,183,1,0,112,188,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,104,183,1,0,56,190,1,0,119,0,61,2,1,90,96,25,41,91,55,2,3,90,90,91,1,91,4,0,1,92,0,0,134,7,0,0,24,55,6,0,90,91,92,0,2,91,0,0,80,54,1,0,1,90,204,16,27,93,55,20,3,90,90,93,1,93,28,0,134,92,0,0,228,147,3,0,0,91,7,90,93,0,0,0,119,0,42,2,1,92,100,20,27,90,55,20,3,92,92,90,1,90,4,0,1,91,0,0,134,69,0,0,24,55,6,0,92,90,91,0,0,82,69,0,25,91,0,48,1,90,4,0,1,92,0,0,134,70,0,0,24,55,6,0,91,90,92,0,0,71,81,0,1,92,1,0,47,92,92,70], eb + 102400);
  HEAPU8.set([76,184,1,0,25,92,0,48,1,90,4,0,1,91,0,0,134,72,0,0,24,55,6,0,92,90,91,0,25,90,84,56,1,92,4,0,134,91,0,0,116,78,6,0,90,72,92,0,2,92,0,0,204,50,1,0,25,90,84,56,134,91,0,0,248,82,6,0,71,92,90,0,119,0,16,0,0,73,82,0,134,74,0,0,64,51,6,0,73,0,0,0,25,90,84,64,1,92,4,0,134,91,0,0,116,78,6,0,90,74,92,0,2,92,0,0,208,50,1,0,25,90,84,64,134,91,0,0,248,82,6,0,71,92,90,0,135,75,22,0,85,0,0,0,3,81,85,75,25,91,0,68,1,90,4,0,1,92,0,0,134,76,0,0,24,55,6,0,91,90,92,0,0,77,81,0,38,92,76,2,33,92,92,0,121,92,36,0,25,92,0,56,1,90,4,0,1,91,0,0,134,78,0,0,24,55,6,0,92,90,91,0,25,91,0,60,1,90,4,0,1,92,0,0,134,79,0,0,24,55,6,0,91,90,92,0,1,92,41,0,134,2,0,0,136,232,5,0,78,79,92,0,0,3,82,0,25,90,84,72,1,91,4,0,134,92,0,0,116,78,6,0,90,2,91,0,25,91,84,72,25,91,91,4,1,90,4,0,134,92,0,0,116,78,6,0,91,3,90,0,2,90,0,0,213,50,1,0,25,91,84,72,134,92,0,0,248,82,6,0,77,90,91,0,119,0,11,0,0,4,82,0,25,91,84,80,1,90,4,0,134,92,0,0,116,78,6,0,91,4,90,0,25,90,84,80,134,92,0,0,248,82,6,0,77,88,90,0,25,92,0,48,1,90,4,0,1,91,0,0,134,5,0,0,24,55,6,0,92,90,91,0,1,91,1,0,47,91,91,5,168,185,1,0,0,6,81,0,2,90,0,0,222,50,1,0,135,91,23,0,6,90,0,0,25,91,0,76,1,90,4,0,1,92,0,0,134,8,0,0,24,55,6,0,91,90,92,0,1,92,0,0,46,92,8,92,24,186,1,0,135,9,22,0,85,0,0,0,3,81,85,9,0,10,81,0,25,92,0,76,1,90,4,0,1,91,0,0,134,11,0,0,24,55,6,0,92,90,91,0,25,90,84,88,1,92,4,0,134,91,0,0,116,78,6,0,90,11,92,0,25,92,84,88,134,91,0,0,248,82,6,0,10,89,92,0,119,0,145,1,25,90,0,64,1,92,4,0,1,93,0,0,134,30,0,0,24,55,6,0,90,92,93,0,3,92,84,87,1,90,4,0,134,93,0,0,116,78,6,0,92,30,90,0,2,90,0,0,24,51,1,0,3,92,84,87,134,93,0,0,248,82,6,0,85,90,92,0,119,0,127,1,0,29,81,0,2,92,0,0,3,51,1,0,135,90,24,0,29,92,0,0,119,0,121,1,1,90,80,26,41,91,55,2,3,90,90,91,1,91,4,0,1,92,0,0,134,49,0,0,24,55,6,0,90,91,92,0,1,92,24,26,41,91,55,2,3,92,92,91,1,91,4,0,1,90,0,0,134,50,0,0,24,55,6,0,92,91,90,0,1,91,44,21,27,92,55,20,3,91,91,92,1,92,30,0,134,90,0,0,228,147,3,0,0,49,50,91,92,0,0,0,119,0,96,1,25,92,0,48,1,91,4,0,1,90,0,0,134,63,0,0,24,55,6,0,92,91,90,0,0,64,81,0,32,90,55,1,121,90,48,0,32,90,63,1,121,90,22,0,134,65,0,0,64,51,6,0,86,0,0,0,25,91,84,32,1,92,4,0,134,90,0,0,116,78,6,0,91,65,92,0,25,92,84,32,25,92,92,4,1,91,4,0,134,90,0,0,116,78,6,0,92,86,91,0,2,91,0,0,161,50,1,0,25,92,84,32,134,90,0,0,248,82,6,0,64,91,92,0,119,0,64,1,25,90,0,48,1,92,4,0,1,91,0,0,134,66,0,0,24,55,6,0,90,92,91,0,25,92,84,40,1,90,4,0,134,91,0,0,116,78,6,0,92,66,90,0,25,90,84,40,25,90,90,4,1,92,4,0,134,91,0,0,116,78,6,0,90,86,92,0,2,92,0,0,168,50,1,0,25,90,84,40,134,91,0,0,248,82,6,0,64,92,90,0,119,0,40,1,32,91,63,1,121,91,6,0,2,90,0,0,175,50,1,0,135,91,24,0,64,90,0,0,119,0,33,1,25,91,0,48,1,90,4,0,1,92,0,0,134,68,0,0,24,55,6,0,91,90,92,0,25,90,84,48,1,91,4,0,134,92,0,0,116,78,6,0,90,68,91,0,2,91,0,0,185,50,1,0,25,90,84,48,134,92,0,0,248,82,6,0,64,91,90,0,119,0,15,1,1,92,152,25,41,93,55,2,3,92,92,93,1,93,4,0,1,90,0,0,134,35,0,0,24,55,6,0,92,93,90,0,2,93,0,0,119,54,1,0,1,92,228,17,27,91,55,20,3,92,92,91,1,91,29,0,134,90,0,0,228,147,3,0,0,93,35,92,91,0,0,0,119,0,252,0,25,90,0,48,1,92,4,0,1,91,0,0,134,51,0,0,24,55,6,0,90,92,91,0,0,52,81,0,32,91,51,1,121,91,8,0,2,92,0,0,111,50,1,0,135,91,24,0,52,92,0,0,2,81,0,0,51,225,0,0,119,0,19,0,25,91,0,48,1,92,4,0,1,90,0,0,134,53,0,0,24,55,6,0,91,92,90,0,1,92,4,0,134,90,0,0,116,78,6,0,84,53,92,0,2,92,0,0,121,50,1,0,134,90,0,0,248,82,6,0,52,92,84,0,135,54,22,0,85,0,0,0,3,81,85,54,1,90,252,18,27,92,55,20,3,80,90,92,25,92,80,16,42,92,92,0,1,90,1,0,1,91,0,0,134,56,0,0,24,55,6,0,92,90,91,0,41,91,56,24,42,91,91,24,33,91,91,0,121,91,19,0,0,57,81,0,1,91,4,0,1,90,0,0,134,58,0,0,24,55,6,0,80,91,90,0,25,91,84,8,1,92,4,0,134,90,0,0,116,78,6,0,91,58,92,0,2,92,0,0,133,50,1,0,25,91,84,8,134,90,0,0,248,82,6,0,57,92,91,0,119,0,186,0,25,90,80,12,1,91,4,0,1,92,0,0,134,59,0,0,24,55,6,0,90,91,92,0,0,60,81,0,1,92,0,0,46,92,59,92,232,189,1,0,25,92,80,12,1,91,4,0,1,90,0,0,134,61,0,0,24,55,6,0,92,91,90,0,25,91,84,16,1,92,4,0,134,90,0,0,116,78,6,0,91,61,92,0,2,92,0,0,139,50,1,0,25,91,84,16,134,90,0,0,248,82,6,0,60,92,91,0,119,0,158,0,1,90,208,25,41,91,55,2,3,90,90,91,1,91,4,0,1,92,0,0,134,62,0,0,24,55,6,0,90,91,92,0,25,91,84,24,1,90,4,0,134,92,0,0,116,78,6,0,91,62,90,0,2,90,0,0,149,50,1,0,25,91,84,24,134,92,0,0,248,82,6,0,60,90,91,0,119,0,138,0,1,91,44,16,27,92,55,20,3,91,91,92,1,92,4,0,1,90,0,0,134,12,0,0,24,55,6,0,91,92,90,0,0,82,12,0,25,90,0,68,1,92,4,0,1,91,0,0,134,13,0,0,24,55,6,0,90,92,91,0,0,14,81,0,38,91,13,2,33,91,91,0,121,91,80,0,1,91,212,2,41,92,55,2,3,91,91,92,1,92,4,0,1,90,0,0,134,15,0,0,24,55,6,0,91,92,90,0,25,90,0,64,1,92,4,0,1,91,0,0,134,16,0,0,24,55,6,0,90,92,91,0,4,91,15,16,1,92,0,0,1,90,93,0,134,17,0,0,136,232,5,0,91,92,90,0,0,18,82,0,25,92,84,96,1,91,4,0,134,90,0,0,116,78,6,0,92,17,91,0,25,91,84,96,25,91,91,4,1,92,4,0,134,90,0,0,116,78,6,0,91,18,92,0,2,92,0,0,235,50,1,0,25,91,84,96,134,90,0,0,248,82,6,0,14,92,91,0,2,90,0,0,5,209,0,0,42,90,90,0,1,91,1,0,1,92,0,0,134,19,0,0,24,55,6,0,90,91,92,0,41,92,19,24,42,92,92,24,33,92,92,0,120,92,6,0,0,20,81,0,2,91,0,0,243,50,1,0,135,92,23,0,20,91,0,0,135,21,22,0,85,0,0,0,3,81,85,21,0,22,81,0,25,92,0,64,1,91,4,0,1,90,0,0,134,23,0,0,24,55,6,0,92,91,90,0,25,91,84,104,1,92,10,0,4,92,92,23,1,93,4,0,134,90,0,0,116,78,6,0,91,92,93,0,2,93,0,0,255,50,1,0,25,92,84,104,134,90,0,0,248,82,6,0,22,93,92,0,119,0,11,0,0,24,82,0,25,92,84,112,1,93,4,0,134,90,0,0,116,78,6,0,92,24,93,0,25,93,84,112,134,90,0,0,248,82,6,0,14,88,93,0,25,90,0,76,1,93,4,0,1,92,0,0,134,25,0,0,24,55,6,0,90,93,92,0,1,92,0,0,46,92,25,92,88,192,1,0,135,26,22,0,85,0,0,0,3,81,85,26,0,27,81,0,25,92,0,76,1,93,4,0,1,90,0,0,134,28,0,0,24,55,6,0,92,93,90,0,25,93,84,120,1,92,4,0,134,90,0,0,116,78,6,0,93,28,92,0,25,92,84,120,134,90,0,0,248,82,6,0,27,89,92,0,119,0,1,0,2,93,0,0,248,208,0,0,42,93,93,0,1,92,1,0,1,90,0,0,134,31,0,0,24,55,6,0,93,92,90,0,41,90,31,24,42,90,90,24,33,90,90,0,121,90,54,0,1,90,192,106,1,92,4,0,1,93,0,0,134,32,0,0,24,55,6,0,90,92,93,0,45,93,0,32,192,192,1,0,0,33,81,0,2,92,0,0,39,51,1,0,135,93,23,0,33,92,0,0,1,93,204,106,1,92,4,0,1,90,0,0,134,34,0,0,24,55,6,0,93,92,90,0,45,90,0,34,244,192,1,0,0,36,81,0,2,92,0,0,53,51,1,0,135,90,23,0,36,92,0,0,1,90,196,106,1,92,4,0,1,93,0,0,134,37,0,0,24,55,6,0,90,92,93,0,45,93,0,37,44,193,1,0,0,38,81,0,2,92,0,0,71,51,1,0,135,93,23,0,38,92,0,0,119,0,14,0,1,93,200,106,1,92,4,0,1,90,0,0,134,39,0,0,24,55,6,0,93,92,90,0,45,90,0,39,96,193,1,0,0,40,81,0,2,92,0,0,87,51,1,0,135,90,23,0,40,92,0,0,1,90,255,0,19,90,1,90,33,90,90,0,121,90,42,0,42,90,85,0,1,92,1,0,1,93,0,0,134,41,0,0,24,55,6,0,90,92,93,0,41,93,41,24,42,93,93,24,134,42,0,0,188,105,6,0,93,0,0,0,33,93,42,0,121,93,29,0,42,93,85,0,1,92,1,0,1,90,0,0,134,43,0,0,24,55,6,0,93,92,90,0,41,90,43,24,42,90,90,24,134,44,0,0,92,102,6,0,90,0,0,0,42,92,85,0,1,93,255,0,19,93,44,93,1,91,1,0,134,90,0,0,116,78,6,0,92,93,91,0,2,91,0,0,41,229,0,0,42,91,91,0,1,93,0,0,1,92,1,0,134,90,0,0,116,78,6,0,91,93,92,0,137,84,0,0,139,85,0,0,41,90,1,24,42,90,90,24,33,90,90,0,121,90,11,0,2,92,0,0,41,229,0,0,42,92,92,0,1,93,0,0,1,91,1,0,134,90,0,0,116,78,6,0,92,93,91,0,137,84,0,0,139,85,0,0,42,90,85,0,1,91,1,0,1,93,0,0,134,45,0,0,24,55,6,0,90,91,93,0,41,93,45,24,42,93,93,24,134,46,0,0,12,106,6,0,93,0,0,0,33,93,46,0,120,93,11,0,2,91,0,0,41,229,0,0,42,91,91,0,1,90,0,0,1,92,1,0,134,93,0,0,116,78,6,0,91,90,92,0,137,84,0,0,139,85,0,0,42,93,85,0,1,92,1,0,1,90,0,0,134,47,0,0,24,55,6,0,93,92,90,0,41,90,47,24,42,90,90,24,134,48,0,0,36,102,6,0,90,0,0,0,42,92,85,0,1,93,255,0,19,93,48,93,1,91,1,0,134,90,0,0,116,78,6,0,92,93,91,0,2,91,0,0,41,229,0,0,42,91,91,0,1,93,0,0,1,92,1,0,134,90,0,0,116,78,6,0,91,93,92,0,137,84,0,0,139,85,0,0,140,1,112,0,0,0,0,0,2,101,0,0,216,106,0,0,2,102,0,0,255,0,0,0,2,103,0,0,220,106,0,0,2,104,0,0,6,209,0,0,2,105,0,0,168,26,0,0,1,99,0,0,136,106,0,0,0,100,106,0,136,106,0,0,25,106,106,48,137,106,0,0,130,106,0,0,136,107,0,0,49,106,106,107,116,195,1,0,135,106,0,0,1,94,255,127,1,98,0,0,25,106,0,68,1,107,4,0,1,108,0,0,134,68,0,0,24,55,6,0,106,107,108,0,0,97,68,0,25,108,0,24,1,107,2,0,1,106,0,0,134,83,0,0,24,55,6,0,108,107,106,0,41,106,83,16,42,106,106,16,38,106,106,32,33,106,106,0,38,106,106,1,19,106,106,102,19,106,106,102,33,106,106,0,121,106,15,0,0,20,97,0,25,106,20,24,1,107,4,0,1,108,0,0,134,26,0,0,24,55,6,0,106,107,108,0,32,108,26,0,121,108,6,0,25,107,0,20,1,106,4,0,134,108,0,0,116,78,6,0,107,101,106,0,25,108,0,20,1,106,4,0,1,107,0,0,134,52,0,0,24,55,6,0,108,106,107,0,45,107,52,101,76,196,1,0,1,107,20,107,1,106,4,0,1,108,0,0,134,58,0,0,24,55,6,0,107,106,108,0,0,96,58,0,119,0,11,0,25,108,0,20,1,106,4,0,1,107,0,0,134,64,0,0,24,55,6,0,108,106,107,0,134,65,0,0,248,24,4,0,64,0,0,0,0,96,65,0,25,107,0,8,1,106,4,0,1,108,0,0,134,66,0,0,24,55,6,0,107,106,108,0,25,108,0,8,25,108,108,4,1,106,4,0,1,107,0,0,134,67,0,0,24,55,6,0,108,106,107,0,1,107,192,26,41,106,66,5,3,106,106,67,41,106,106,3,3,107,107,106,42,107,107,0,1,106,1,0,1,108,0,0,134,69,0,0,24,55,6,0,107,106,108,0,41,108,69,24,42,108,108,24,32,108,108,43,38,108,108,1,19,108,108,102,0,93,108,0,0,70,97,0,0,71,96,0,53,108,70,71,4,197,1,0,1,99,16,0,119,0,98,0,0,72,97,0,25,92,72,36,0,73,92,0,0,74,97,0,25,108,74,32,1,106,4,0,1,107,0,0,134,75,0,0,24,55,6,0,108,106,107,0,0,76,97,0,25,107,76,36,41,106,75,3,3,107,107,106,55,107,73,107,72,197,1,0,119,0,41,0,25,107,0,20,1,106,4,0,1,108,0,0,134,77,0,0,24,55,6,0,107,106,108,0,0,78,92,0,134,79,0,0,132,40,6,0,77,78,0,0,0,80,94,0,47,108,79,80,220,197,1,0,0,81,92,0,1,106,72,0,1,109,4,0,1,110,0,0,134,107,0,0,24,55,6,0,81,109,110,0,1,110,4,0,134,108,0,0,116,78,6,0,106,107,110,0,1,110,72,0,25,110,110,4,25,106,81,4,1,109,4,0,1,111,0,0,134,107,0,0,24,55,6,0,106,109,111,0,1,111,4,0,134,108,0,0,116,78,6,0,110,107,111,0,0,94,79,0,0,82,92,0,25,92,82,8,119,0,202,255,0,84,93,0,41,108,84,24,42,108,108,24,33,108,108,0,120,108,2,0,119,0,35,0,25,108,0,8,1,111,4,0,1,107,0,0,134,85,0,0,24,55,6,0,108,111,107,0,25,107,0,8,25,107,107,4,1,111,4,0,1,108,0,0,134,86,0,0,24,55,6,0,107,111,108,0,1,108,192,26,41,111,85,5,3,111,111,86,41,111,111,3,3,108,108,111,25,108,108,1,42,108,108,0,1,111,1,0,1,107,0,0,134,87,0,0,24,55,6,0,108,111,107,0,1,107,164,3,41,111,87,24,42,111,111,24,38,111,111,15,1,108,132,0,5,111,111,108,3,97,107,111,1,93,0,0,119,0,154,255,32,111,99,16,121,111,251,0,25,111,0,20,1,107,4,0,1,108,0,0,134,88,0,0,24,55,6,0,111,107,108,0,1,107,72,0,1,110,4,0,1,109,0,0,134,111,0,0,24,55,6,0,88,110,109,0,1,109,4,0,134,108,0,0,116,78,6,0,107,111,109,0,1,109,72,0,25,109,109,4,25,107,88,4,1,110,4,0,1,106,0,0,134,111,0,0,24,55,6,0,107,110,106,0,1,106,4,0,134,108,0,0,116,78,6,0,109,111,106,0,25,108,0,17,42,108,108,0,1,106,1,0,1,111,0,0,134,89,0,0,24,55,6,0,108,106,111,0,41,111,89,24,42,111,111,24,32,111,111,68,121,111,212,0,25,111,0,8,25,111,111,4,1,106,4,0,1,108,0,0,134,90,0,0,24,55,6,0,111,106,108,0,1,108,4,0,1,106,0,0,134,91,0,0,24,55,6,0,103,108,106,0,52,106,90,91,24,200,1,0,25,106,0,8,1,108,4,0,1,111,0,0,134,2,0,0,24,55,6,0,106,108,111,0,1,111,4,0,1,108,0,0,134,3,0,0,24,55,6,0,101,111,108,0,52,108,2,3,24,200,1,0,25,108,0,8,25,108,108,4,1,111,4,0,1,106,0,0,134,4,0,0,24,55,6,0,108,111,106,0,1,106,4,0,1,111,0,0,134,5,0,0,24,55,6,0,103,106,111,0,4,111,4,5,135,6,10,0,111,0,0,0,25,111,0,8,1,106,4,0,1,108,0,0,134,7,0,0,24,55,6,0,111,106,108,0,1,108,4,0,1,106,0,0,134,8,0,0,24,55,6,0,101,108,106,0,4,106,7,8,135,9,10,0,106,0,0,0,52,106,6,9,24,200,1,0,119,0,153,0,25,106,0,8,134,10,0,0,132,40,6,0,106,101,0,0,36,106,10,36,121,106,147,0,25,106,0,24,1,108,2,0,1,111,0,0,134,11,0,0,24,55,6,0,106,108,111,0,41,111,11,16,42,111,111,16,38,111,111,8,33,111,111,0,38,111,111,1,19,111,111,102,41,111,111,24,42,111,111,24,33,111,111,0,120,111,131,0,1,111,5,0,134,12,0,0,20,36,6,0,111,0,0,0,32,111,12,0,121,111,125,0,1,111,4,0,1,108,0,0,134,13,0,0,24,55,6,0,103,111,108,0,25,108,0,8,25,108,108,4,1,111,4,0,1,106,0,0,134,14,0,0,24,55,6,0,108,111,106,0,4,106,13,14,134,15,0,0,220,78,6,0,106,0,0,0,1,111,172,26,1,108,4,0,134,106,0,0,116,78,6,0,111,15,108,0,1,106,4,0,1,108,0,0,134,16,0,0,24,55,6,0,101,106,108,0,25,108,0,8,1,106,4,0,1,111,0,0,134,17,0,0,24,55,6,0,108,106,111,0,4,111,16,17,134,18,0,0,220,78,6,0,111,0,0,0,1,106,4,0,134,111,0,0,116,78,6,0,105,18,106,0,2,111,0,0,246,208,0,0,42,111,111,0,1,106,1,0,1,108,0,0,134,19,0,0,24,55,6,0,111,106,108,0,41,108,19,24,42,108,108,24,33,108,108,0,121,108,3,0,134,108,0,0,120,187,4,0,25,106,0,8,2,111,0,0,147,49,1,0,134,108,0,0,168,167,1,0,106,105,111,0,2,111,0,0,1,209,0,0,42,111,111,0,1,106,0,0,1,109,1,0,134,108,0,0,116,78,6,0,111,106,109,0,1,109,244,2,1,106,0,0,1,111,4,0,134,108,0,0,116,78,6,0,109,106,111,0,1,111,12,3,1,106,0,0,1,109,4,0,134,108,0,0,116,78,6,0,111,106,109,0,42,108,104,0,1,109,1,0,1,106,0,0,134,21,0,0,24,55,6,0,108,109,106,0,19,106,21,102,33,106,106,0,121,106,32,0,25,106,0,24,1,109,2,0,1,108,0,0,134,22,0,0,24,55,6,0,106,109,108,0,41,108,22,16,42,108,108,16,1,109,128,0,19,108,108,109,33,108,108,0,38,108,108,1,19,108,108,102,41,108,108,24,42,108,108,24,33,108,108,0,120,108,15,0,42,109,104,0,1,106,0,0,1,111,1,0,134,108,0,0,116,78,6,0,109,106,111,0,2,111,0,0,250,208,0,0,42,111,111,0,1,106,0,0,1,109,1,0,134,108,0,0,116,78,6,0,111,106,109,0,1,1,0,0,0,63,1,0,137,100,0,0,139,63,0,0,1,108,72,0,134,23,0,0,80,48,2,0,0,108,0,0,41,108,23,24,42,108,108,24,33,108,108,0,121,108,17,0,25,108,0,17,42,108,108,0,1,109,1,0,1,106,0,0,134,53,0,0,24,55,6,0,108,109,106,0,41,106,53,24,42,106,106,24,32,106,106,70,121,106,187,0,1,1,0,0,0,63,1,0,137,100,0,0,139,63,0,0,119,0,182,0,1,106,72,0,1,109,4,0,1,108,0,0,134,24,0,0,24,55,6,0,106,109,108,0,1,108,4,0,1,109,0,0,134,25,0,0,24,55,6,0,101,108,109,0,45,109,24,25,92,203,1,0,1,109,76,0,1,108,4,0,1,106,0,0,134,27,0,0,24,55,6,0,109,108,106,0,1,106,4,0,1,108,0,0,134,28,0,0,24,55,6,0,103,106,108,0,45,108,27,28,92,203,1,0,134,29,0,0,224,73,1,0,0,0,0,0,0,1,29,0,0,63,1,0,137,100,0,0,139,63,0,0,1,108,72,0,1,106,4,0,1,109,0,0,134,30,0,0,24,55,6,0,108,106,109,0,25,109,0,20,1,106,4,0,1,108,0,0,134,31,0,0,24,55,6,0,109,106,108,0,1,108,4,0,1,106,0,0,134,32,0,0,24,55,6,0,31,108,106,0,45,106,30,32,172,205,1,0,1,106,76,0,1,108,4,0,1,109,0,0,134,33,0,0,24,55,6,0,106,108,109,0,25,109,0,20,1,108,4,0,1,106,0,0,134,34,0,0,24,55,6,0,109,108,106,0,25,106,34,4,1,108,4,0,1,109,0,0,134,35,0,0,24,55,6,0,106,108,109,0,45,109,33,35,172,205,1,0,1,109,112,3,1,108,4,0,1,106,0,0,134,36,0,0,24,55,6,0,109,108,106,0,0,95,36,0,0,37,95,0,1,106,0,0,53,106,37,106,40,204,1,0,119,0,21,0,25,106,0,20,1,108,4,0,1,109,0,0,134,38,0,0,24,55,6,0,106,108,109,0,0,39,95,0,0,40,95,0,25,109,39,12,45,109,38,109,92,204,1,0,1,99,38,0,119,0,8,0,1,109,4,0,1,108,0,0,134,50,0,0,24,55,6,0,40,109,108,0,0,95,50,0,119,0,232,255,32,108,99,38,121,108,64,0,1,109,112,3,134,108,0,0,36,53,5,0,109,40,0,0,0,41,95,0,25,109,0,72,134,108,0,0,124,205,5,0,109,41,0,0,25,108,0,68,1,109,4,0,1,106,0,0,134,42,0,0,24,55,6,0,108,109,106,0,25,106,42,28,1,109,2,0,1,108,0,0,134,43,0,0,24,55,6,0,106,109,108,0,41,108,43,16,42,108,108,16,38,108,108,2,33,108,108,0,1,109,35,0,1,106,46,0,125,44,108,109,106,0,0,0,0,45,95,0,25,106,45,12,1,109,4,0,1,108,0,0,134,46,0,0,24,55,6,0,106,109,108,0,0,47,95,0,25,108,47,12,25,108,108,4,1,109,4,0,1,106,0,0,134,48,0,0,24,55,6,0,108,109,106,0,1,109,192,26,41,108,46,5,3,108,108,48,41,108,108,3,3,109,109,108,42,109,109,0,19,108,44,102,1,111,1,0,134,106,0,0,116,78,6,0,109,108,111,0,134,49,0,0,52,255,3,0,0,0,0,0,25,111,0,20,1,108,4,0,134,106,0,0,116,78,6,0,111,49,108,0,25,106,0,17,42,106,106,0,1,108,1,0,1,111,0,0,134,51,0,0,24,55,6,0,106,108,111,0,41,111,51,24,42,111,111,24,33,111,111,70,121,111,2,0,1,98,1,0,1,108,80,0,134,111,0,0,20,182,3,0,0,108,0,0,0,54,98,0,19,111,54,102,33,111,111,0,121,111,59,0,25,111,0,8,1,108,4,0,1,106,0,0,134,55,0,0,24,55,6,0,111,108,106,0,25,106,0,20,1,108,4,0,1,111,0,0,134,56,0,0,24,55,6,0,106,108,111,0,1,111,4,0,1,108,0,0,134,57,0,0,24,55,6,0,56,111,108,0,45,108,55,57,180,206,1,0,25,108,0,8,25,108,108,4,1,111,4,0,1,106,0,0,134,59,0,0,24,55,6,0,108,111,106,0,25,106,0,20,1,111,4,0,1,108,0,0,134,60,0,0,24,55,6,0,106,111,108,0,25,108,60,4,1,111,4,0,1,106,0,0,134,61,0,0,24,55,6,0,108,111,106,0,45,106,59,61,180,206,1,0,25,106,0,24,1,111,2,0,1,108,0,0,134,62,0,0,24,55,6,0,106,111,108,0,25,111,0,24,41,106,62,16,42,106,106,16,1,109,255,223,19,106,106,109,2,109,0,0,255,255,0,0,19,106,106,109,1,109,2,0,134,108,0,0,116,78,6,0,111,106,109,0,1,1,0,0,0,63,1,0,137,100,0,0,139,63,0,0,140,1,88,0,0,0,0,0,2,81,0,0,255,0,0,0,1,79,0,0,136,82,0,0,0,80,82,0,136,82,0,0,25,82,82,48,137,82,0,0,130,82,0,0,136,83,0,0,49,82,82,83,0,207,1,0,135,82,0,0,2,82,0,0,76,159,0,0,1,83,4,0,1,84,0,0,134,45,0,0,24,55,6,0,82,83,84,0,33,84,45,0,121,84,13,0,2,84,0,0,76,159,0,0,1,83,4,0,1,82,0,0,134,58,0,0,24,55,6,0,84,83,82,0,0,1,58,0,0,51,1,0,137,80,0,0,139,51,0,0,119,0,240,3,2,82,0,0,38,217,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,66,0,0,24,55,6,0,82,83,84,0,19,83,66,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,39,217,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,76,0,0,24,55,6,0,84,83,82,0,19,83,76,81,134,82,0,0,68,5,6,0,0,83,0,0,1,82,92,25,1,83,4,0,1,84,0,0,134,9,0,0,24,55,6,0,82,83,84,0,134,84,0,0,156,47,5,0,0,9,0,0,2,84,0,0,40,217,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,20,0,0,24,55,6,0,84,83,82,0,19,83,20,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,241,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,35,0,0,24,55,6,0,82,83,84,0,19,83,35,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,242,208,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,46,0,0,24,55,6,0,84,83,82,0,19,83,46,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,243,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,52,0,0,24,55,6,0,82,83,84,0,19,83,52,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,244,208,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,53,0,0,24,55,6,0,84,83,82,0,19,83,53,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,245,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,54,0,0,24,55,6,0,82,83,84,0,19,83,54,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,246,208,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,55,0,0,24,55,6,0,84,83,82,0,19,83,55,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,247,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,56,0,0,24,55,6,0,82,83,84,0,19,83,56,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,248,208,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,57,0,0,24,55,6,0,84,83,82,0,19,83,57,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,249,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,59,0,0,24,55,6,0,82,83,84,0,19,83,59,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,250,208,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,60,0,0,24,55,6,0,84,83,82,0,19,83,60,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,251,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,61,0,0,24,55,6,0,82,83,84,0,19,83,61,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,252,208,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,62,0,0,24,55,6,0,84,83,82,0,19,83,62,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,253,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,63,0,0,24,55,6,0,82,83,84,0,19,83,63,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,254,208,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,64,0,0,24,55,6,0,84,83,82,0,19,83,64,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,255,208,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,65,0,0,24,55,6,0,82,83,84,0,19,83,65,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,0,209,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,67,0,0,24,55,6,0,84,83,82,0,19,83,67,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,1,209,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,68,0,0,24,55,6,0,82,83,84,0,19,83,68,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,2,209,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,69,0,0,24,55,6,0,84,83,82,0,19,83,69,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,3,209,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,70,0,0,24,55,6,0,82,83,84,0,19,83,70,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,4,209,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,71,0,0,24,55,6,0,84,83,82,0,19,83,71,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,5,209,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,72,0,0,24,55,6,0,82,83,84,0,19,83,72,81,134,84,0,0,68,5,6,0,0,83,0,0,2,84,0,0,6,209,0,0,42,84,84,0,1,83,1,0,1,82,0,0,134,73,0,0,24,55,6,0,84,83,82,0,19,83,73,81,134,82,0,0,68,5,6,0,0,83,0,0,2,82,0,0,7,209,0,0,42,82,82,0,1,83,1,0,1,84,0,0,134,74,0,0,24,55,6,0,82,83,84,0,19,83,74,81,134,84,0,0,68,5,6,0,0,83,0,0,1,83,0,0,134,84,0,0,156,47,5,0,0,83,0,0,2,83,0,0,8,209,0,0,1,82,26,0,134,84,0,0,224,180,5,0,0,83,82,0,2,84,0,0,41,217,0,0,42,84,84,0,1,82,1,0,1,83,0,0,134,75,0,0,24,55,6,0,84,82,83,0,134,83,0,0,120,27,6,0,0,75,0,0,2,82,0,0,42,217,0,0,1,84,0,4,134,83,0,0,56,10,6,0,0,82,84,0,2,84,0,0,42,221,0,0,1,82,0,4,134,83,0,0,56,10,6,0,0,84,82,0,134,83,0,0,132,241,5,0,0,0,0,0,2,82,0,0,42,225,0,0,1,84,0,8,134,83,0,0,56,10,6,0,0,82,84,0,134,83,0,0,172,242,5,0,0,0,0,0,2,83,0,0,44,161,0,0,1,84,4,0,1,82,0,0,134,77,0,0,24,55,6,0,83,84,82,0,134,82,0,0,136,235,5,0,0,77,0,0,2,82,0,0,42,233,0,0,42,82,82,0,1,84,1,0,1,83,0,0,134,78,0,0,24,55,6,0,82,84,83,0,134,83,0,0,120,27,6,0,0,78,0,0,134,83,0,0,116,211,5,0,0,0,0,0,2,83,0,0,43,233,0,0,42,83,83,0,1,84,1,0,1,82,0,0,134,2,0,0,24,55,6,0,83,84,82,0,134,82,0,0,120,27,6,0,0,2,0,0,2,84,0,0,44,233,0,0,1,83,0,4,134,82,0,0,56,10,6,0,0,84,83,0,134,82,0,0,184,68,5,0,0,0,0,0,1,82,136,26,1,83,4,0,1,84,0,0,134,3,0,0,24,55,6,0,82,83,84,0,134,84,0,0,156,47,5,0,0,3,0,0,2,83,0,0,34,209,0,0,1,82,0,4,134,84,0,0,56,10,6,0,0,83,82,0,2,82,0,0,34,213,0,0,1,83,0,4,134,84,0,0,56,10,6,0,0,82,83,0,1,83,144,2,1,82,3,0,134,84,0,0,96,186,5,0,0,83,82,0,2,84,0,0,34,217,0,0,42,84,84,0,1,82,1,0,1,83,0,0,134,4,0,0,24,55,6,0,84,82,83,0,134,83,0,0,120,27,6,0,0,4,0,0,2,83,0,0,35,217,0,0,42,83,83,0,1,82,1,0,1,84,0,0,134,5,0,0,24,55,6,0,83,82,84,0,134,84,0,0,120,27,6,0,0,5,0,0,2,84,0,0,36,217,0,0,42,84,84,0,1,82,1,0,1,83,0,0,134,6,0,0,24,55,6,0,84,82,83,0,134,83,0,0,120,27,6,0,0,6,0,0,2,83,0,0,37,217,0,0,42,83,83,0,1,82,1,0,1,84,0,0,134,7,0,0,24,55,6,0,83,82,84,0,134,84,0,0,120,27,6,0,0,7,0,0,1,82,156,2,1,83,8,0,134,84,0,0,96,186,5,0,0,82,83,0,1,84,140,26,1,83,4,0,1,82,0,0,134,8,0,0,24,55,6,0,84,83,82,0,134,82,0,0,156,47,5,0,0,8,0,0,1,82,144,26,1,83,4,0,1,84,0,0,134,10,0,0,24,55,6,0,82,83,84,0,134,84,0,0,156,47,5,0,0,10,0,0,1,84,188,2,1,83,4,0,1,82,0,0,134,11,0,0,24,55,6,0,84,83,82,0,134,82,0,0,156,47,5,0,0,11,0,0,1,82,192,2,1,83,4,0,1,84,0,0,134,12,0,0,24,55,6,0,82,83,84,0,134,84,0,0,156,47,5,0,0,12,0,0,1,84,196,2,1,83,4,0,1,82,0,0,134,13,0,0,24,55,6,0,84,83,82,0,134,82,0,0,156,47,5,0,0,13,0,0,1,82,200,2,1,83,4,0,1,84,0,0,134,14,0,0,24,55,6,0,82,83,84,0,134,84,0,0,156,47,5,0,0,14,0,0,1,84,152,26,1,83,4,0,1,82,0,0,134,15,0,0,24,55,6,0,84,83,82,0,134,82,0,0,156,47,5,0,0,15,0,0,1,82,204,2,1,83,4,0,1,84,0,0,134,16,0,0,24,55,6,0,82,83,84,0,134,84,0,0,156,47,5,0,0,16,0,0,1,84,208,2,1,83,4,0,1,82,0,0,134,17,0,0,24,55,6,0,84,83,82,0,134,82,0,0,156,47,5,0,0,17,0,0,1,83,212,2,1,84,8,0,134,82,0,0,152,187,5,0,0,83,84,0,1,82,244,2,1,84,4,0,1,83,0,0,134,18,0,0,24,55,6,0,82,84,83,0,134,83,0,0,156,47,5,0,0,18,0,0,1,83,156,26,1,84,4,0,1,82,0,0,134,19,0,0,24,55,6,0,83,84,82,0,134,82,0,0,156,47,5,0,0,19,0,0,1,82,252,2,1,84,4,0,1,83,0,0,134,21,0,0,24,55,6,0,82,84,83,0,134,83,0,0,156,47,5,0,0,21,0,0,1,83,0,3,1,84,4,0,1,82,0,0,134,22,0,0,24,55,6,0,83,84,82,0,134,82,0,0,156,47,5,0,0,22,0,0,1,82,4,3,1,84,4,0,1,83,0,0,134,23,0,0,24,55,6,0,82,84,83,0,134,83,0,0,156,47,5,0,0,23,0,0,1,83,8,3,1,84,4,0,1,82,0,0,134,24,0,0,24,55,6,0,83,84,82,0,134,82,0,0,156,47,5,0,0,24,0,0,1,82,12,3,1,84,4,0,1,83,0,0,134,25,0,0,24,55,6,0,82,84,83,0,134,83,0,0,156,47,5,0,0,25,0,0,1,83,16,3,1,84,4,0,1,82,0,0,134,26,0,0,24,55,6,0,83,84,82,0,134,82,0,0,156,47,5,0,0,26,0,0,1,82,160,26,1,84,4,0,1,83,0,0,134,27,0,0,24,55,6,0,82,84,83,0,134,83,0,0,156,47,5,0,0,27,0,0,1,83,164,26,1,84,4,0,1,82,0,0,134,28,0,0,24,55,6,0,83,84,82,0,134,82,0,0,156,47,5,0,0,28,0,0,1,84,20,3,1,83,21,0,134,82,0,0,152,187,5,0,0,84,83,0,25,83,80,8,1,85,168,26,1,86,4,0,1,87,0,0,134,84,0,0,24,55,6,0,85,86,87,0,1,87,4,0,134,82,0,0,116,78,6,0,83,84,87,0,25,87,80,8,25,87,87,4,1,83,168,26,25,83,83,4,1,86,4,0,1,85,0,0,134,84,0,0,24,55,6,0,83,86,85,0,1,85,4,0,134,82,0,0,116,78,6,0,87,84,85,0,25,85,80,8,134,82,0,0,44,9,6,0,0,85,0,0,25,85,80,16,1,87,176,26,1,86,4,0,1,83,0,0,134,84,0,0,24,55,6,0,87,86,83,0,1,83,4,0,134,82,0,0,116,78,6,0,85,84,83,0,25,83,80,16,25,83,83,4,1,85,176,26,25,85,85,4,1,86,4,0,1,87,0,0,134,84,0,0,24,55,6,0,85,86,87,0,1,87,4,0,134,82,0,0,116,78,6,0,83,84,87,0,25,87,80,16,134,82,0,0,44,9,6,0,0,87,0,0,25,87,80,24,1,83,184,26,1,86,4,0,1,85,0,0,134,84,0,0,24,55,6,0,83,86,85,0,1,85,4,0,134,82,0,0,116,78,6,0,87,84,85,0,25,85,80,24,25,85,85,4,1,87,184,26,25,87,87,4,1,86,4,0,1,83,0,0,134,84,0,0,24,55,6,0,87,86,83,0,1,83,4,0,134,82,0,0,116,78,6,0,85,84,83,0,25,83,80,24,134,82,0,0,44,9,6,0,0,83,0,0,1,83,208,106,134,82,0,0,108,138,3,0,0,83,0,0,1,82,24,107,1,83,4,0,1,84,0,0,134,29,0,0,24,55,6,0,82,83,84,0,1,84,192,106,1,83,4,0,1,82,0,0,134,30,0,0,24,55,6,0,84,83,82,0,134,82,0,0,204,0,6,0,0,29,30,0,1,82,24,107,1,83,4,0,1,84,0,0,134,31,0,0,24,55,6,0,82,83,84,0,1,84,196,106,1,83,4,0,1,82,0,0,134,32,0,0,24,55,6,0,84,83,82,0,134,82,0,0,204,0,6,0,0,31,32,0,1,82,24,107,1,83,4,0,1,84,0,0,134,33,0,0,24,55,6,0,82,83,84,0,1,84,200,106,1,83,4,0,1,82,0,0,134,34,0,0,24,55,6,0,84,83,82,0,134,82,0,0,204,0,6,0,0,33,34,0,1,82,24,107,1,83,4,0,1,84,0,0,134,36,0,0,24,55,6,0,82,83,84,0,1,84,204,106,1,83,4,0,1,82,0,0,134,37,0,0,24,55,6,0,84,83,82,0,134,82,0,0,204,0,6,0,0,36,37,0,1,82,24,107,1,83,4,0,1,84,0,0,134,38,0,0,24,55,6,0,82,83,84,0,1,84,104,3,1,83,4,0,1,82,0,0,134,39,0,0,24,55,6,0,84,83,82,0,134,82,0,0,204,0,6,0,0,38,39,0,1,82,24,107,1,83,4,0,1,84,0,0,134,40,0,0,24,55,6,0,82,83,84,0,1,84,108,3,1,83,4,0,1,82,0,0,134,41,0,0,24,55,6,0,84,83,82,0,134,82,0,0,204,0,6,0,0,40,41,0,1,82,112,3,1,83,4,0,1,84,0,0,134,42,0,0,24,55,6,0,82,83,84,0,134,84,0,0,244,228,5,0,0,42,0,0,1,84,116,3,1,83,4,0,1,82,0,0,134,43,0,0,24,55,6,0,84,83,82,0,134,82,0,0,140,134,5,0,0,43,0,0,1,83,192,26,1,84,0,10,134,82,0,0,132,58,5,0,0,83,84,0,1,84,124,3,134,82,0,0,104,31,5,0,0,84,0,0,1,84,36,107,1,83,9,0,134,82,0,0,0,217,5,0,0,84,83,0,1,82,32,107,1,83,4,0,1,84,0,0,134,44,0,0,24,55,6,0,82,83,84,0,134,84,0,0,156,219,5,0,0,44,0,0,1,83,164,3,1,82,13,0,134,84,0,0,0,217,5,0,0,83,82,0,1,82,88,10,1,83,26,0,134,84,0,0,216,200,5,0,0,82,83,0,1,83,160,15,1,82,7,0,134,84,0,0,64,228,4,0,0,83,82,0,1,82,44,16,1,83,8,0,134,84,0,0,64,228,4,0,0,82,83,0,1,83,204,16,1,82,14,0,134,84,0,0,64,228,4,0,0,83,82,0,1,82,228,17,1,83,14,0,134,84,0,0,64,228,4,0,0,82,83,0,1,83,252,18,1,82,18,0,134,84,0,0,64,228,4,0,0,83,82,0,1,82,100,20,1,83,10,0,134,84,0,0,64,228,4,0,0,82,83,0,1,83,44,21,1,82,14,0,134,84,0,0,64,228,4,0,0,83,82,0,1,82,76,1,1,83,20,0,134,84,0,0,180,143,3,0,0,82,83,0,1,83,0,0,134,84,0,0,156,47,5,0,0,83,0,0,1,84,140,2,1,83,4,0,1,82,0,0,134,47,0,0,24,55,6,0,84,83,82,0,134,82,0,0,156,47,5,0,0,47,0,0,25,83,80,32,1,85,200,117,1,86,4,0,1,87,0,0,134,84,0,0,24,55,6,0,85,86,87,0,1,87,4,0,134,82,0,0,116,78,6,0,83,84,87,0,25,87,80,32,25,87,87,4,1,83,200,117,25,83,83,4,1,86,4,0,1,85,0,0,134,84,0,0,24,55,6,0,83,86,85,0,1,85,4,0,134,82,0,0,116,78,6,0,87,84,85,0,25,85,80,32,134,82,0,0,44,9,6,0,0,85,0,0,2,82,0,0,48,161,0,0,1,85,4,0,1,84,0,0,134,48,0,0,24,55,6,0,82,85,84,0,134,84,0,0,156,47,5,0,0,48,0,0,2,84,0,0,68,162,0,0,1,85,4,0,1,82,0,0,134,49,0,0,24,55,6,0,84,85,82,0,134,82,0,0,64,230,4,0,0,49,0,0,2,82,0,0,76,159,0,0,1,85,4,0,1,84,0,0,134,50,0,0,24,55,6,0,82,85,84,0,0,1,50,0,0,51,1,0,137,80,0,0,139,51,0,0,1,84,0,0,139,84,0,0,140,3,138,0,0,0,0,0,2,131,0,0,60,162,0,0,1,127,0,0,136,132,0,0,0,128,132,0,136,132,0,0,25,132,132,48,137,132,0,0,130,132,0,0,136,133,0,0,49,132,132,133,84,223,1,0,135,132,0,0,1,132,0,0,53,132,0,132,112,223,1,0,1,3,0,0,0,85,3,0,137,128,0,0,139,85,0,0,25,132,0,24,1,133,4,0,1,134,0,0,134,109,0,0,24,55,6,0,132,133,134,0,38,134,109,32,33,134,134,0,121,134,32,0,25,134,0,76,1,133,4,0,1,132,0,0,134,20,0,0,24,55,6,0,134,133,132,0,25,132,0,16,1,133,4,0,1,134,0,0,134,42,0,0,24,55,6,0,132,133,134,0,25,134,0,20,1,133,4,0,1,132,0,0,134,56,0,0,24,55,6,0,134,133,132,0,134,60,0,0,4,222,2,0,20,1,2,42,56,0,0,0,0,121,60,0,1,132,0,0,53,132,60,132,12,224,1,0,1,3,0,0], eb + 112640);
  HEAPU8.set([0,85,3,0,137,128,0,0,139,85,0,0,119,0,105,0,25,132,0,24,1,133,4,0,1,134,0,0,134,74,0,0,24,55,6,0,132,133,134,0,38,134,74,1,33,134,134,0,121,134,31,0,25,134,0,76,1,133,4,0,1,132,0,0,134,86,0,0,24,55,6,0,134,133,132,0,25,132,0,16,1,133,4,0,1,134,0,0,134,87,0,0,24,55,6,0,132,133,134,0,25,134,0,20,1,133,4,0,1,132,0,0,134,88,0,0,24,55,6,0,134,133,132,0,134,89,0,0,144,216,2,0,86,1,2,87,88,0,0,0,0,121,89,0,1,132,0,0,53,132,89,132,176,225,1,0,1,3,0,0,0,85,3,0,137,128,0,0,139,85,0,0,1,132,4,0,1,133,0,0,134,90,0,0,24,55,6,0,131,132,133,0,25,133,90,56,1,132,4,0,1,134,0,0,134,91,0,0,24,55,6,0,133,132,134,0,45,134,0,91,68,225,1,0,1,134,4,0,1,132,0,0,134,92,0,0,24,55,6,0,131,134,132,0,25,132,92,32,1,134,4,0,1,133,0,0,134,93,0,0,24,55,6,0,132,134,133,0,1,133,4,0,1,134,0,0,134,94,0,0,24,55,6,0,131,133,134,0,25,134,94,52,1,133,4,0,1,132,0,0,134,95,0,0,24,55,6,0,134,133,132,0,4,123,93,95,1,122,0,0,119,0,15,0,25,132,0,16,1,133,4,0,1,134,0,0,134,96,0,0,24,55,6,0,132,133,134,0,0,123,96,0,25,134,0,20,1,133,4,0,1,132,0,0,134,97,0,0,24,55,6,0,134,133,132,0,0,122,97,0,0,98,123,0,0,99,122,0,134,100,0,0,140,248,3,0,1,2,98,99,0,121,100,0,1,132,0,0,53,132,100,132,176,225,1,0,1,3,0,0,0,85,3,0,137,128,0,0,139,85,0,0,25,132,0,4,1,133,4,0,1,134,0,0,134,101,0,0,24,55,6,0,132,133,134,0,0,102,121,0,25,134,102,12,1,133,4,0,1,132,0,0,134,103,0,0,24,55,6,0,134,133,132,0,47,132,101,103,12,226,1,0,25,132,0,4,1,133,4,0,1,134,0,0,134,104,0,0,24,55,6,0,132,133,134,0,0,107,104,0,119,0,9,0,0,105,121,0,25,134,105,12,1,133,4,0,1,132,0,0,134,106,0,0,24,55,6,0,134,133,132,0,0,107,106,0,0,124,107,0,1,132,4,0,1,133,0,0,134,108,0,0,24,55,6,0,0,132,133,0,0,110,121,0,25,133,110,8,1,132,4,0,1,134,0,0,134,111,0,0,24,55,6,0,133,132,134,0,47,134,108,111,132,226,1,0,1,134,4,0,1,132,0,0,134,112,0,0,24,55,6,0,0,134,132,0,0,115,112,0,119,0,9,0,0,113,121,0,25,132,113,8,1,134,4,0,1,133,0,0,134,114,0,0,24,55,6,0,132,134,133,0,0,115,114,0,0,125,115,0,25,133,0,24,1,134,4,0,1,132,0,0,134,116,0,0,24,55,6,0,133,134,132,0,38,132,116,33,33,132,132,0,120,132,157,0,0,117,121,0,134,118,0,0,52,198,4,0,117,0,0,0,0,121,118,0,1,132,0,0,53,132,118,132,252,226,1,0,1,3,0,0,0,85,3,0,137,128,0,0,139,85,0,0,0,119,121,0,134,132,0,0,56,73,6,0,119,0,0,0,0,4,121,0,25,132,0,8,1,134,4,0,1,133,0,0,134,5,0,0,24,55,6,0,132,134,133,0,0,6,121,0,25,133,6,8,1,134,4,0,1,132,0,0,134,7,0,0,24,55,6,0,133,134,132,0,47,132,5,7,108,227,1,0,25,132,0,8,1,134,4,0,1,133,0,0,134,8,0,0,24,55,6,0,132,134,133,0,0,12,8,0,119,0,9,0,0,9,121,0,25,133,9,8,1,134,4,0,1,132,0,0,134,10,0,0,24,55,6,0,133,134,132,0,0,12,10,0,26,11,12,1,25,132,0,12,1,134,4,0,1,133,0,0,134,13,0,0,24,55,6,0,132,134,133,0,0,14,121,0,25,133,14,12,1,134,4,0,1,132,0,0,134,15,0,0,24,55,6,0,133,134,132,0,47,132,13,15,236,227,1,0,25,132,0,12,1,134,4,0,1,133,0,0,134,16,0,0,24,55,6,0,132,134,133,0,0,21,16,0,119,0,9,0,0,17,121,0,25,133,17,12,1,134,4,0,1,132,0,0,134,18,0,0,24,55,6,0,133,134,132,0,0,21,18,0,26,19,21,1,1,134,0,0,1,133,0,0,1,135,0,0,1,136,0,0,1,137,0,0,134,132,0,0,248,234,3,0,0,4,134,133,135,136,11,19,137,0,0,0,1,120,0,0,0,22,120,0,25,132,0,8,1,137,4,0,1,136,0,0,134,23,0,0,24,55,6,0,132,137,136,0,54,136,22,23,100,228,1,0,119,0,55,0,0,24,120,0,25,136,0,44,1,137,4,0,1,132,0,0,134,25,0,0,24,55,6,0,136,137,132,0,41,132,24,2,3,132,25,132,1,137,4,0,1,136,0,0,134,26,0,0,24,55,6,0,132,137,136,0,1,136,0,0,53,136,26,136,172,228,1,0,119,0,37,0,0,27,120,0,25,136,0,44,1,137,4,0,1,132,0,0,134,28,0,0,24,55,6,0,136,137,132,0,41,132,27,2,3,132,28,132,1,137,4,0,1,136,0,0,134,29,0,0,24,55,6,0,132,137,136,0,1,136,0,0,46,136,29,136,48,229,1,0,0,30,120,0,25,136,0,44,1,137,4,0,1,132,0,0,134,31,0,0,24,55,6,0,136,137,132,0,41,132,30,2,3,132,31,132,1,137,4,0,1,136,0,0,134,32,0,0,24,55,6,0,132,137,136,0,135,136,6,0,32,0,0,0,0,33,120,0,25,120,33,1,119,0,193,255,25,136,0,24,1,137,4,0,1,132,0,0,134,34,0,0,24,55,6,0,136,137,132,0,0,35,121,0,25,137,35,24,1,136,4,0,134,132,0,0,116,78,6,0,137,34,136,0,25,132,0,28,1,136,4,0,1,137,0,0,134,36,0,0,24,55,6,0,132,136,137,0,0,37,121,0,25,136,37,28,1,132,4,0,134,137,0,0,116,78,6,0,136,36,132,0,25,137,0,36,42,137,137,0,1,132,1,0,1,136,0,0,134,38,0,0,24,55,6,0,137,132,136,0,0,39,121,0,25,132,39,36,42,132,132,0,1,137,1,0,134,136,0,0,116,78,6,0,132,38,137,0,25,136,0,37,42,136,136,0,1,137,1,0,1,132,0,0,134,40,0,0,24,55,6,0,136,137,132,0,0,41,121,0,25,137,41,37,42,137,137,0,1,136,1,0,134,132,0,0,116,78,6,0,137,40,136,0,25,132,0,38,42,132,132,0,1,136,1,0,1,137,0,0,134,43,0,0,24,55,6,0,132,136,137,0,0,44,121,0,25,136,44,38,42,136,136,0,1,132,1,0,134,137,0,0,116,78,6,0,136,43,132,0,25,137,0,39,42,137,137,0,1,132,1,0,1,136,0,0,134,45,0,0,24,55,6,0,137,132,136,0,0,46,121,0,25,132,46,39,42,132,132,0,1,137,1,0,134,136,0,0,116,78,6,0,132,45,137,0,25,136,0,42,42,136,136,0,1,137,1,0,1,132,0,0,134,47,0,0,24,55,6,0,136,137,132,0,0,48,121,0,25,137,48,42,42,137,137,0,1,136,1,0,134,132,0,0,116,78,6,0,137,47,136,0,25,132,0,56,1,136,4,0,1,137,0,0,134,49,0,0,24,55,6,0,132,136,137,0,0,50,121,0,25,137,50,8,1,136,4,0,1,132,0,0,134,51,0,0,24,55,6,0,137,136,132,0,26,132,51,1,47,132,132,49,252,230,1,0,1,54,0,0,119,0,8,0,25,132,0,56,1,136,4,0,1,137,0,0,134,52,0,0,24,55,6,0,132,136,137,0,0,54,52,0,0,53,121,0,25,136,53,56,1,132,4,0,134,137,0,0,116,78,6,0,136,54,132,0,25,137,0,60,1,132,4,0,1,136,0,0,134,55,0,0,24,55,6,0,137,132,136,0,25,136,0,8,1,132,4,0,1,137,0,0,134,57,0,0,24,55,6,0,136,132,137,0,26,137,57,1,45,137,55,137,144,231,1,0,0,58,121,0,25,137,58,8,1,132,4,0,1,136,0,0,134,59,0,0,24,55,6,0,137,132,136,0,26,68,59,1,119,0,34,0,25,136,0,60,1,132,4,0,1,137,0,0,134,61,0,0,24,55,6,0,136,132,137,0,0,62,121,0,25,137,62,8,1,132,4,0,1,136,0,0,134,63,0,0,24,55,6,0,137,132,136,0,26,136,63,1,47,136,61,136,240,231,1,0,25,136,0,60,1,132,4,0,1,137,0,0,134,64,0,0,24,55,6,0,136,132,137,0,0,68,64,0,119,0,10,0,0,65,121,0,25,137,65,8,1,132,4,0,1,136,0,0,134,66,0,0,24,55,6,0,137,132,136,0,26,68,66,1,119,0,1,0,0,67,121,0,25,132,67,60,1,137,4,0,134,136,0,0,116,78,6,0,132,68,137,0,25,136,0,76,1,137,4,0,1,132,0,0,134,69,0,0,24,55,6,0,136,137,132,0,0,70,121,0,25,137,70,76,1,136,4,0,134,132,0,0,116,78,6,0,137,69,136,0,25,132,0,40,42,132,132,0,1,136,1,0,1,137,0,0,134,71,0,0,24,55,6,0,132,136,137,0,0,72,121,0,25,136,72,40,42,136,136,0,1,132,1,0,134,137,0,0,116,78,6,0,136,71,132,0,25,137,0,41,42,137,137,0,1,132,1,0,1,136,0,0,134,73,0,0,24,55,6,0,137,132,136,0,0,75,121,0,25,132,75,41,42,132,132,0,1,137,1,0,134,136,0,0,116,78,6,0,132,73,137,0,25,136,0,32,1,137,4,0,1,132,0,0,134,76,0,0,24,55,6,0,136,137,132,0,0,77,121,0,25,137,77,32,1,136,4,0,134,132,0,0,116,78,6,0,137,76,136,0,0,78,121,0,25,136,78,4,1,137,4,0,134,132,0,0,116,78,6,0,136,124,137,0,0,79,121,0,1,137,4,0,134,132,0,0,116,78,6,0,79,125,137,0,25,132,0,48,1,137,4,0,1,136,0,0,134,80,0,0,24,55,6,0,132,137,136,0,135,136,6,0,80,0,0,0,25,136,0,52,1,137,4,0,1,132,0,0,134,81,0,0,24,55,6,0,136,137,132,0,135,132,6,0,81,0,0,0,25,132,0,44,1,137,4,0,1,136,0,0,134,82,0,0,24,55,6,0,132,137,136,0,135,136,6,0,82,0,0,0,0,83,121,0,0,126,0,0,0,129,83,0,25,130,126,80,1,132,4,0,1,135,0,0,134,137,0,0,24,55,6,0,129,132,135,0,1,135,4,0,134,136,0,0,116,78,6,0,126,137,135,0,25,126,126,4,25,129,129,4,54,136,126,130,152,233,1,0,0,84,121,0,135,136,6,0,84,0,0,0,0,3,0,0,0,85,3,0,137,128,0,0,139,85,0,0,140,2,69,0,0,0,0,0,2,60,0,0,60,197,0,0,2,61,0,0,84,197,0,0,2,62,0,0,48,197,0,0,2,63,0,0,92,198,0,0,2,64,0,0,44,197,0,0,1,58,0,0,136,65,0,0,0,59,65,0,25,65,0,4,1,66,4,0,1,67,0,0,134,3,0,0,24,55,6,0,65,66,67,0,38,67,3,248,3,31,0,67,1,67,4,0,1,66,0,0,134,34,0,0,24,55,6,0,60,67,66,0,38,66,3,3,33,66,66,1,18,67,34,0,19,66,66,67,16,67,0,31,19,66,66,67,120,66,2,0,135,66,8,0,38,66,3,248,39,66,66,4,3,66,0,66,1,67,4,0,1,65,0,0,134,43,0,0,24,55,6,0,66,67,65,0,38,65,43,1,32,65,65,0,121,65,2,0,135,65,8,0,38,65,3,3,32,65,65,0,121,65,26,0,1,65,0,1,48,65,1,65,200,234,1,0,1,55,0,0,139,55,0,0,38,65,3,248,25,67,1,4,55,65,65,67,16,235,1,0,2,65,0,0,12,199,0,0,1,67,4,0,1,66,0,0,134,27,0,0,24,55,6,0,65,67,66,0,41,66,27,1,38,67,3,248,4,67,67,1,55,66,66,67,16,235,1,0,0,55,0,0,139,55,0,0,1,55,0,0,139,55,0,0,38,66,3,248,55,66,66,1,228,235,1,0,1,66,15,0,38,67,3,248,4,67,67,1,55,66,66,67,64,235,1,0,0,55,0,0,139,55,0,0,25,67,0,4,38,65,3,1,20,65,65,1,39,65,65,2,1,68,4,0,134,66,0,0,116,78,6,0,67,65,68,0,25,68,1,4,3,68,0,68,38,65,3,248,4,65,65,1,39,65,65,3,1,67,4,0,134,66,0,0,116,78,6,0,68,65,67,0,38,66,3,248,39,66,66,4,3,66,0,66,1,67,4,0,1,65,0,0,134,30,0,0,24,55,6,0,66,67,65,0,38,67,3,248,39,67,67,4,3,67,0,67,39,66,30,1,1,68,4,0,134,65,0,0,116,78,6,0,67,66,68,0,3,68,0,1,38,66,3,248,4,66,66,1,134,65,0,0,248,0,1,0,68,66,0,0,0,55,0,0,139,55,0,0,2,65,0,0,68,197,0,0,1,66,4,0,1,68,0,0,134,32,0,0,24,55,6,0,65,66,68,0,45,68,31,32,204,236,1,0,2,68,0,0,56,197,0,0,1,66,4,0,1,65,0,0,134,33,0,0,24,55,6,0,68,66,65,0,38,65,3,248,3,65,33,65,55,65,1,65,60,236,1,0,1,55,0,0,139,55,0,0,25,66,0,4,38,68,3,1,20,68,68,1,39,68,68,2,1,67,4,0,134,65,0,0,116,78,6,0,66,68,67,0,25,67,1,4,3,67,0,67,38,68,3,248,3,68,33,68,4,68,68,1,39,68,68,1,1,66,4,0,134,65,0,0,116,78,6,0,67,68,66,0,2,66,0,0,68,197,0,0,3,68,0,1,1,67,4,0,134,65,0,0,116,78,6,0,66,68,67,0,2,67,0,0,56,197,0,0,38,68,3,248,3,68,33,68,4,68,68,1,1,66,4,0,134,65,0,0,116,78,6,0,67,68,66,0,0,55,0,0,139,55,0,0,2,65,0,0,64,197,0,0,1,66,4,0,1,68,0,0,134,35,0,0,24,55,6,0,65,66,68,0,45,68,31,35,104,238,1,0,2,68,0,0,52,197,0,0,1,66,4,0,1,65,0,0,134,36,0,0,24,55,6,0,68,66,65,0,38,65,3,248,3,37,36,65,48,65,37,1,36,237,1,0,1,55,0,0,139,55,0,0,1,65,15,0,4,66,37,1,48,65,65,66,208,237,1,0,25,66,0,4,38,68,3,1,20,68,68,1,39,68,68,2,1,67,4,0,134,65,0,0,116,78,6,0,66,68,67,0,25,67,1,4,3,67,0,67,4,68,37,1,39,68,68,1,1,66,4,0,134,65,0,0,116,78,6,0,67,68,66,0,3,66,0,37,4,68,37,1,1,67,4,0,134,65,0,0,116,78,6,0,66,68,67,0,25,65,37,4,3,65,0,65,1,67,4,0,1,68,0,0,134,38,0,0,24,55,6,0,65,67,68,0,25,67,37,4,3,67,0,67,38,65,38,254,1,66,4,0,134,68,0,0,116,78,6,0,67,65,66,0,3,56,0,1,4,57,37,1,119,0,25,0,25,66,0,4,38,65,3,1,20,65,65,37,39,65,65,2,1,67,4,0,134,68,0,0,116,78,6,0,66,65,67,0,25,68,37,4,3,68,0,68,1,67,4,0,1,65,0,0,134,39,0,0,24,55,6,0,68,67,65,0,25,67,37,4,3,67,0,67,39,68,39,1,1,66,4,0,134,65,0,0,116,78,6,0,67,68,66,0,1,56,0,0,1,57,0,0,2,66,0,0,52,197,0,0,1,68,4,0,134,65,0,0,116,78,6,0,66,57,68,0,2,68,0,0,64,197,0,0,1,66,4,0,134,65,0,0,116,78,6,0,68,56,66,0,0,55,0,0,139,55,0,0,38,65,43,2,32,65,65,0,120,65,3,0,1,55,0,0,139,55,0,0,38,65,43,248,38,66,3,248,3,40,65,66,48,66,40,1,152,238,1,0,1,55,0,0,139,55,0,0,1,66,0,1,48,66,43,66,240,239,1,0,38,66,3,248,25,66,66,8,3,66,0,66,1,65,4,0,1,68,0,0,134,41,0,0,24,55,6,0,66,65,68,0,38,68,3,248,25,68,68,12,3,68,0,68,1,65,4,0,1,66,0,0,134,42,0,0,24,55,6,0,68,65,66,0,43,66,43,3,41,66,66,1,41,66,66,2,3,66,61,66,52,66,41,66,44,239,1,0,48,66,41,34,8,239,1,0,135,66,8,0,25,66,41,12,1,65,4,0,1,68,0,0,134,44,0,0,24,55,6,0,66,65,68,0,52,68,44,31,44,239,1,0,135,68,8,0,45,68,42,41,112,239,1,0,1,68,4,0,1,65,0,0,134,45,0,0,24,55,6,0,64,68,65,0,1,68,1,0,43,66,43,3,22,68,68,66,40,68,68,255,19,68,45,68,1,66,4,0,134,65,0,0,116,78,6,0,64,68,66,0,119,0,50,1,43,65,43,3,41,65,65,1,41,65,65,2,3,65,61,65,45,65,42,65,144,239,1,0,25,2,42,8,119,0,15,0,48,65,42,34,156,239,1,0,135,65,8,0,25,65,42,8,1,66,4,0,1,68,0,0,134,46,0,0,24,55,6,0,65,66,68,0,45,68,46,31,196,239,1,0,25,2,42,8,119,0,2,0,135,68,8,0,25,66,41,12,1,65,4,0,134,68,0,0,116,78,6,0,66,42,65,0,1,65,4,0,134,68,0,0,116,78,6,0,2,41,65,0,119,0,18,1,38,68,3,248,25,68,68,24,3,68,0,68,1,65,4,0,1,66,0,0,134,47,0,0,24,55,6,0,68,65,66,0,38,66,3,248,25,66,66,12,3,66,0,66,1,65,4,0,1,68,0,0,134,48,0,0,24,55,6,0,66,65,68,0,45,68,48,31,84,241,1,0,38,68,3,248,25,68,68,20,3,68,0,68,1,65,4,0,1,66,0,0,134,7,0,0,24,55,6,0,68,65,66,0,1,66,0,0,45,66,7,66,172,240,1,0,38,66,3,248,25,66,66,16,3,66,0,66,1,65,4,0,1,68,0,0,134,8,0,0,24,55,6,0,66,65,68,0,1,68,0,0,45,68,8,68,152,240,1,0,1,51,0,0,119,0,89,0,0,49,8,0,38,68,3,248,25,68,68,16,3,52,0,68,119,0,5,0,0,49,7,0,38,68,3,248,25,68,68,20,3,52,0,68,25,9,49,20,1,68,4,0,1,65,0,0,134,10,0,0,24,55,6,0,9,68,65,0,1,65,0,0,52,65,10,65,236,240,1,0,0,49,10,0,0,52,9,0,119,0,245,255,25,11,49,16,1,65,4,0,1,68,0,0,134,12,0,0,24,55,6,0,11,65,68,0,1,68,0,0,45,68,12,68,28,241,1,0,0,50,49,0,0,53,52,0,119,0,4,0,0,49,12,0,0,52,11,0,119,0,230,255,48,68,53,34,56,241,1,0,135,68,8,0,119,0,49,0,1,65,0,0,1,66,4,0,134,68,0,0,116,78,6,0,53,65,66,0,0,51,50,0,119,0,42,0,38,68,3,248,25,68,68,8,3,68,0,68,1,66,4,0,1,65,0,0,134,4,0,0,24,55,6,0,68,66,65,0,48,65,4,34,128,241,1,0,135,65,8,0,25,65,4,12,1,66,4,0,1,68,0,0,134,5,0,0,24,55,6,0,65,66,68,0,52,68,5,31,164,241,1,0,135,68,8,0,25,68,48,8,1,66,4,0,1,65,0,0,134,6,0,0,24,55,6,0,68,66,65,0,45,65,6,31,244,241,1,0,25,66,4,12,1,68,4,0,134,65,0,0,116,78,6,0,66,48,68,0,25,68,48,8,1,66,4,0,134,65,0,0,116,78,6,0,68,4,66,0,0,51,48,0,119,0,2,0,135,65,8,0,1,65,0,0,52,65,47,65,52,244,1,0,38,65,3,248,25,65,65,28,3,65,0,65,1,66,4,0,1,68,0,0,134,13,0,0,24,55,6,0,65,66,68,0,41,68,13,2,3,68,63,68,1,66,4,0,1,65,0,0,134,14,0,0,24,55,6,0,68,66,65,0,45,65,31,14,164,242,1,0,41,66,13,2,3,66,63,66,1,68,4,0,134,65,0,0,116,78,6,0,66,51,68,0,1,65,0,0,13,54,51,65,121,54,45,0,1,65,4,0,1,68,0,0,134,15,0,0,24,55,6,0,62,65,68,0,1,65,1,0,22,65,65,13,40,65,65,255,19,65,15,65,1,66,4,0,134,68,0,0,116,78,6,0,62,65,66,0,119,0,101,0,1,68,4,0,1,66,0,0,134,16,0,0,24,55,6,0,60,68,66,0,48,66,47,16,196,242,1,0,135,66,8,0,25,66,47,16,1,68,4,0,1,65,0,0,134,17,0,0,24,55,6,0,66,68,65,0,45,65,17,31,252,242,1,0,25,68,47,16,1,66,4,0,134,65,0,0,116,78,6,0,68,51,66,0,119,0,6,0,25,66,47,20,1,68,4,0,134,65,0,0,116,78,6,0,66,51,68,0,1,65,0,0,13,18,51,65,120,18,71,0,1,65,4,0,1,68,0,0,134,19,0,0,24,55,6,0,60,65,68,0,16,20,51,19,121,20,2,0,135,68,8,0,25,21,51,24,1,65,4,0,134,68,0,0,116,78,6,0,21,47,65,0,38,68,3,248,25,68,68,16,3,68,0,68,1,65,4,0,1,66,0,0,134,22,0,0,24,55,6,0,68,65,66,0,1,66,0,0,52,66,22,66,184,243,1,0,48,66,22,19,140,243,1,0,135,66,8,0,119,0,12,0,25,23,51,16,1,65,4,0,134,66,0,0,116,78,6,0,23,22,65,0,25,65,22,24,1,68,4,0,134,66,0,0,116,78,6,0,65,51,68,0,119,0,1,0,38,66,3,248,25,66,66,20,3,66,0,66,1,68,4,0,1,65,0,0,134,24,0,0,24,55,6,0,66,68,65,0,1,65,0,0,52,65,24,65,52,244,1,0,1,65,4,0,1,68,0,0,134,25,0,0,24,55,6,0,60,65,68,0,48,68,24,25,8,244,1,0,135,68,8,0,119,0,12,0,25,26,51,20,1,65,4,0,134,68,0,0,116,78,6,0,26,24,65,0,25,65,24,24,1,66,4,0,134,68,0,0,116,78,6,0,65,51,66,0,119,0,1,0,4,68,40,1,35,68,68,16,121,68,26,0,25,66,0,4,38,65,3,1,20,65,40,65,39,65,65,2,1,67,4,0,134,68,0,0,116,78,6,0,66,65,67,0,39,68,40,4,3,68,0,68,1,67,4,0,1,65,0,0,134,28,0,0,24,55,6,0,68,67,65,0,39,67,40,4,3,67,0,67,39,68,28,1,1,66,4,0,134,65,0,0,116,78,6,0,67,68,66,0,0,55,0,0,139,55,0,0,119,0,38,0,25,66,0,4,38,68,3,1,20,68,68,1,39,68,68,2,1,67,4,0,134,65,0,0,116,78,6,0,66,68,67,0,25,67,1,4,3,67,0,67,4,68,40,1,39,68,68,3,1,66,4,0,134,65,0,0,116,78,6,0,67,68,66,0,39,65,40,4,3,65,0,65,1,66,4,0,1,68,0,0,134,29,0,0,24,55,6,0,65,66,68,0,39,66,40,4,3,66,0,66,39,65,29,1,1,67,4,0,134,68,0,0,116,78,6,0,66,65,67,0,3,67,0,1,4,65,40,1,134,68,0,0,248,0,1,0,67,65,0,0,0,55,0,0,139,55,0,0,1,68,0,0,139,68,0,0,140,2,103,0,0,0,0,0,2,98,0,0,84,162,0,0,2,99,0,0,255,0,0,0,1,96,0,0,136,100,0,0,0,97,100,0,136,100,0,0,25,100,100,48,137,100,0,0,130,100,0,0,136,101,0,0,49,100,100,101,132,245,1,0,135,100,0,0,1,100,0,0,53,100,0,100,160,245,1,0,1,2,255,255,0,60,2,0,137,97,0,0,139,60,0,0,25,100,0,4,1,101,4,0,1,102,0,0,134,79,0,0,24,55,6,0,100,101,102,0,0,94,79,0,1,102,4,0,1,101,0,0,134,87,0,0,24,55,6,0,0,102,101,0,0,95,87,0,0,3,95,0,25,101,0,8,1,102,4,0,1,100,0,0,134,14,0,0,24,55,6,0,101,102,100,0,54,100,14,3,224,255,1,0,0,26,94,0,25,100,0,12,1,102,4,0,1,101,0,0,134,41,0,0,24,55,6,0,100,102,101,0,0,51,95,0,0,58,94,0,15,101,41,26,34,102,51,0,20,101,101,102,34,102,58,0,20,101,101,102,120,101,108,2,2,101,0,0,60,162,0,0,1,102,4,0,1,100,0,0,134,61,0,0,24,55,6,0,101,102,100,0,25,100,61,5,42,100,100,0,1,102,1,0,1,101,0,0,134,62,0,0,24,55,6,0,100,102,101,0,41,101,62,24,42,101,101,24,33,101,101,0,121,101,3,0,1,64,0,0,119,0,7,0,2,101,0,0,0,0,1,0,19,101,1,101,33,101,101,0,40,101,101,1,0,64,101,0,38,101,64,1,0,63,101,0,2,101,0,0,255,255,0,0,19,101,1,101,0,93,101,0,2,101,0,0,0,0,255,255,19,101,1,101,0,92,101,0,19,101,63,99,19,101,101,99,33,101,101,0,121,101,33,1,0,65,93,0,0,66,93,0,35,101,65,32,32,102,66,127,20,101,101,102,121,101,25,1,0,67,93,0,1,101,8,0,1,102,120,0,138,67,101,102,48,249,1,0,72,249,1,0,40,250,1,0,220,248,1,0,220,248,1,0,232,250,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,220,248,1,0,236,250,1,0,0,90,92,0,39,101,90,94,134,91,0,0,64,245,1,0,0,101,0,0,32,101,91,255,121,101,6,0,1,2,255,255,0,60,2,0,137,97,0,0,139,60,0,0,119,0,143,0,25,101,1,64,134,4,0,0,64,245,1,0,0,101,0,0,0,2,4,0,0,60,2,0,137,97,0,0,139,60,0,0,119,0,134,0,0,84,94,0,26,94,84,1,26,101,84,1,34,101,101,0,120,101,129,0,119,0,133,0,0,68,94,0,1,101,4,0,1,102,0,0,134,69,0,0,24,55,6,0,98,101,102,0,1,102,4,0,1,101,0,0,134,70,0,0,24,55,6,0,98,102,101,0,6,101,68,69,38,101,101,255,25,101,101,1,5,71,101,70,0,72,94,0,54,101,72,71,152,249,1,0,1,96,17,0,119,0,23,0,0,73,92,0,39,101,73,32,134,74,0,0,64,245,1,0,0,101,0,0,32,101,74,255,121,101,3,0,1,96,14,0,119,0,14,0,25,101,0,4,1,102,4,0,1,100,0,0,134,75,0,0,24,55,6,0,101,102,100,0,33,100,75,0,120,100,3,0,1,96,17,0,119,0,4,0,0,76,94,0,25,94,76,1,119,0,230,255,32,100,96,14,121,100,6,0,1,2,255,255,0,60,2,0,137,97,0,0,139,60,0,0,119,0,79,0,32,100,96,17,121,100,77,0,1,2,0,0,0,60,2,0,137,97,0,0,139,60,0,0,119,0,72,0,2,100,0,0,60,162,0,0,1,102,4,0,1,101,0,0,134,77,0,0,24,55,6,0,100,102,101,0,25,101,77,5,42,101,101,0,1,102,1,0,1,100,0,0,134,78,0,0,24,55,6,0,101,102,100,0,41,100,78,24,42,100,100,24,33,100,100,0,120,100,2,0,1,94,0,0,134,100,0,0,156,81,4,0,0,0,0,0,0,80,95,0,25,95,80,1,25,100,0,60,1,102,4,0,1,101,0,0,134,81,0,0,24,55,6,0,100,102,101,0,25,101,80,1,54,101,81,101,176,250,1,0,119,0,43,0,0,82,95,0,26,95,82,1,1,101,1,0,134,83,0,0,124,178,3,0,0,101,0,0,32,101,83,255,120,101,2,0,119,0,34,0,1,2,255,255,0,60,2,0,137,97,0,0,139,60,0,0,119,0,24,0,119,0,23,0,0,85,92,0,39,101,85,94,134,86,0,0,64,245,1,0,0,101,0,0,32,101,86,255,121,101,6,0,1,2,255,255,0,60,2,0,137,97,0,0,139,60,0,0,119,0,11,0,0,88,92,0,39,101,88,63,134,89,0,0,64,245,1,0,0,101,0,0,0,2,89,0,0,60,2,0,137,97,0,0,139,60,0,0,119,0,1,0,1,94,0,0,119,0,4,0,1,96,31,0,119,0,2,0,1,96,31,0,32,101,96,31,121,101,246,0,0,5,92,0,2,101,0,0,0,0,0,255,19,101,5,101,33,101,101,0,120,101,10,0,25,101,0,28,1,102,4,0,1,100,0,0,134,6,0,0,24,55,6,0,101,102,100,0,0,7,92,0,20,100,7,6,0,92,100,0,0,8,92,0,25,100,0,32,1,102,4,0,1,101,0,0,134,9,0,0,24,55,6,0,100,102,101,0,2,101,0,0,0,0,0,255,19,101,8,101,33,101,101,0,121,101,8,0,0,11,92,0,2,101,0,0,0,0,255,0,19,101,9,101,20,101,11,101,0,92,101,0,119,0,7,0,0,10,92,0,2,101,0,0,0,0,255,255,19,101,9,101,20,101,10,101,0,92,101,0,0,12,93,0,32,101,12,32,121,101,11,0,25,101,0,32,1,102,4,0,1,100,0,0,134,13,0,0,24,55,6,0,101,102,100,0,2,100,0,0,255,255,0,0,19,100,13,100,0,93,100,0,0,15,92,0,0,16,93,0,20,100,16,15,0,93,100,0,0,17,94,0,0,18,95,0,25,100,0,44,1,102,4,0,1,101,0,0,134,19,0,0,24,55,6,0,100,102,101,0,41,101,18,2,3,101,19,101,1,102,4,0,1,100,0,0,134,20,0,0,24,55,6,0,101,102,100,0,41,100,17,2,3,100,20,100,1,102,4,0,1,101,0,0,134,21,0,0,24,55,6,0,100,102,101,0,0,22,93,0,46,101,21,22,156,254,1,0,0,23,95,0,25,101,0,48,1,102,4,0,1,100,0,0,134,24,0,0,24,55,6,0,101,102,100,0,41,100,23,2,3,100,24,100,1,102,4,0,1,101,0,0,134,25,0,0,24,55,6,0,100,102,101,0,0,27,94,0,0,28,95,0,32,101,25,255,121,101,27,0,25,101,0,52,1,102,4,0,1,100,0,0,134,29,0,0,24,55,6,0,101,102,100,0,41,102,28,2,3,102,29,102,1,101,4,0,134,100,0,0,116,78,6,0,102,27,101,0,0,30,95,0,25,100,0,48,1,101,4,0,1,102,0,0,134,31,0,0,24,55,6,0,100,101,102,0,41,101,30,2,3,101,31,101,1,100,4,0,134,102,0,0,116,78,6,0,101,27,100,0,119,0,60,0,25,102,0,48,1,100,4,0,1,101,0,0,134,32,0,0,24,55,6,0,102,100,101,0,41,101,28,2,3,101,32,101,1,100,4,0,1,102,0,0,134,33,0,0,24,55,6,0,101,100,102,0,0,34,94,0,0,35,95,0,47,102,27,33,208,253,1,0,25,102,0,48,1,100,4,0,1,101,0,0,134,36,0,0,24,55,6,0,102,100,101,0,41,100,35,2,3,100,36,100,1,102,4,0,134,101,0,0,116,78,6,0,100,34,102,0,119,0,30,0,25,101,0,52,1,102,4,0,1,100,0,0,134,37,0,0,24,55,6,0,101,102,100,0,41,100,35,2,3,100,37,100,1,102,4,0,1,101,0,0,134,38,0,0,24,55,6,0,100,102,101,0,47,101,38,34,68,254,1,0,0,39,94,0,0,40,95,0,25,101,0,52,1,102,4,0,1,100,0,0,134,42,0,0,24,55,6,0,101,102,100,0,41,102,40,2,3,102,42,102,1,101,4,0,134,100,0,0,116,78,6,0,102,39,101,0,0,43,93,0,0,44,94,0,0,45,95,0,25,100,0,44,1,101,4,0,1,102,0,0,134,46,0,0,24,55,6,0,100,101,102,0,41,102,45,2,3,102,46,102,1,101,4,0,1,100,0,0,134,47,0,0,24,55,6,0,102,101,100,0,41,101,44,2,3,101,47,101,1,102,4,0,134,100,0,0,116,78,6,0,101,43,102,0,0,48,94,0,25,94,48,1,25,100,0,12,1,102,4,0,1,101,0,0,134,49,0,0,24,55,6,0,100,102,101,0,25,101,48,1,49,101,49,101,52,255,1,0,1,94,0,0,0,50,95,0,25,95,50,1,25,101,0,60,1,102,4,0,1,100,0,0,134,52,0,0,24,55,6,0,101,102,100,0,25,100,50,1,47,100,52,100,52,255,1,0,0,53,95,0,26,95,53,1,1,100,1,0,134,54,0,0,124,178,3,0,0,100,0,0,32,100,54,255,121,100,8,0,134,100,0,0,0,42,6,0,0,0,0,0,1,2,255,255,0,60,2,0,137,97,0,0,139,60,0,0,0,55,94,0,25,102,0,4,1,101,4,0,134,100,0,0,116,78,6,0,102,55,101,0,0,56,95,0,1,101,4,0,134,100,0,0,116,78,6,0,0,56,101,0,25,100,0,40,42,100,100,0,1,101,1,0,1,102,0,0,134,57,0,0,24,55,6,0,100,101,102,0,41,102,57,24,42,102,102,24,33,102,102,0,121,102,4,0,134,102,0,0,124,212,4,0,0,0,0,0,25,102,0,41,42,102,102,0,1,101,1,0,1,100,0,0,134,59,0,0,24,55,6,0,102,101,100,0,41,100,59,24,42,100,100,24,33,100,100,0,121,100,4,0,134,100,0,0,20,57,6,0,0,0,0,0,1,2,0,0,0,60,2,0,137,97,0,0,139,60,0,0,1,2,255,255,0,60,2,0,137,97,0,0,139,60,0,0,140,3,113,0,0,0,0,0,2,100,0,0,255,0,0,0,2,101,0,0,25,54,0,0,2,102,0,0,101,43,0,0,2,103,0,0,164,26,0,0,2,104,0,0,24,4,0,0,2,105,0,0,0,4,0,0,2,106,0,0,255,255,0,0,2,107,0,0,232,251,255,255,2,108,0,0,16,4,0,0,1,98,0,0,136,109,0,0,0,99,109,0,136,109,0,0,25,109,109,112,137,109,0,0,130,109,0,0,136,110,0,0,49,109,109,110,108,0,2,0,135,109,0,0,134,109,0,0,144,118,6,0,1,109,0,0,49,109,109,1,176,1,2,0,2,109,0,0,76,162,0,0,1,110,4,0,1,111,0,0,134,73,0,0,24,55,6,0,109,110,111,0,26,110,73,1,1,109,0,0,2,112,0,0,167,37,1,0,134,111,0,0,220,36,6,0,110,109,112,0,134,111,0,0,224,106,6,0,2,111,0,0,68,162,0,0,1,112,4,0,1,109,0,0,134,80,0,0,24,55,6,0,111,112,109,0,2,112,0,0,42,225,0,0,1,111,80,0,134,109,0,0,140,127,2,0,80,112,111,0,134,109,0,0,196,101,6,0,2,111,0,0,194,37,1,0,134,109,0,0,192,79,6,0,111,99,0,0,134,109,0,0,132,92,6,0,2,109,0,0,68,162,0,0,1,111,4,0,1,112,0,0,134,85,0,0,24,55,6,0,109,111,112,0,134,112,0,0,96,200,4,0,85,0,0,0,2,112,0,0,64,162,0,0,1,111,4,0,1,109,0,0,134,90,0,0,24,55,6,0,112,111,109,0,134,109,0,0,96,200,4,0,90,0,0,0,1,109,120,3,1,111,4,0,1,112,0,0,134,3,0,0,24,55,6,0,109,111,112,0,1,112,0,0,46,112,3,112,176,1,2,0,1,112,120,3,1,111,4,0,1,109,0,0,134,12,0,0,24,55,6,0,112,111,109,0,134,109,0,0,96,200,4,0,12,0,0,0,1,109,176,117,1,111,4,0,1,112,0,0,134,18,0,0,24,55,6,0,109,111,112,0,5,112,18,104,135,27,5,0,112,0,0,0,1,112,176,117,1,111,4,0,1,109,0,0,134,33,0,0,24,55,6,0,112,111,109,0,5,109,33,104,3,94,27,109,0,97,27,0,0,53,97,0,55,109,53,94,8,2,2,0,119,0,116,0,0,62,97,0,25,111,62,4,1,112,0,0,1,110,4,0,134,109,0,0,116,78,6,0,111,112,110,0,1,95,0,0,0,63,95,0,54,109,63,105,56,2,2,0,119,0,17,0,134,64,0,0,20,36,6,0,100,0,0,0,0,65,95,0,0,66,97,0,25,110,66,14,3,110,110,65,42,110,110,0,19,112,64,100,1,111,1,0,134,109,0,0,116,78,6,0,110,112,111,0,0,67,95,0,25,95,67,1,119,0,237,255,1,109,4,0,1,111,0,0,134,68,0,0,24,55,6,0,103,109,111,0,5,109,68,102,3,109,109,101,1,112,4,0,134,111,0,0,116,78,6,0,103,109,112,0,0,69,97,0,25,112,69,8,5,109,68,102,3,109,109,101,42,109,109,16,19,109,109,106,1,110,4,0,134,111,0,0,116,78,6,0,112,109,110,0,1,111,4,0,1,110,0,0,134,70,0,0,24,55,6,0,103,111,110,0,5,111,70,102,3,111,111,101,1,109,4,0,134,110,0,0,116,78,6,0,103,111,109,0,0,71,97,0,3,109,71,108,5,111,70,102,3,111,111,101,42,111,111,16,19,111,111,106,1,112,4,0,134,110,0,0,116,78,6,0,109,111,112,0,1,110,4,0,1,112,0,0,134,72,0,0,24,55,6,0,103,110,112,0,5,110,72,102,3,110,110,101,1,111,4,0,134,112,0,0,116,78,6,0,103,110,111,0,0,74,97,0,25,111,74,12,5,110,72,102,3,110,110,101,42,110,110,16,19,110,110,106,19,110,110,106,1,109,2,0,134,112,0,0,116,78,6,0,111,110,109,0,1,112,4,0,1,109,0,0,134,75,0,0,24,55,6,0,103,112,109,0,5,112,75,102,3,112,112,101,1,110,4,0,134,109,0,0,116,78,6,0,103,112,110,0,0,76,97,0,5,110,75,102,3,110,110,101,42,110,110,16,19,110,110,106,1,112,4,0,134,109,0,0,116,78,6,0,76,110,112,0,0,77,97,0,3,97,77,104,119,0,138,255,1,112,2,0,1,110,0,0,135,109,25,0,112,110,0,0,134,109,0,0,132,154,4,0,27,0,0,0,1,96,0,0,1,109,92,25,1,110,4,0,1,112,0,0,134,78,0,0,24,55,6,0,109,110,112,0,33,112,78,0,120,112,174,0,134,79,0,0,116,118,6,0,0,97,27,0,0,81,97,0,55,112,81,94,48,4,2,0,119,0,45,0,0,82,97,0,25,112,82,4,1,110,4,0,1,109,0,0,134,83,0,0,24,55,6,0,112,110,109,0,54,109,83,0,224,4,2,0,2,109,0,0,252,11,1,0,42,109,109,0,1,110,1,0,1,112,0,0,134,84,0,0,24,55,6,0,109,110,112,0,41,112,84,24,42,112,112,24,32,112,112,0,33,110,1,2,19,112,112,110,121,112,19,0,0,86,97,0,1,112,4,0,1,110,0,0,134,87,0,0,24,55,6,0,86,112,110,0,45,110,87,79,212,4,2,0,0,88,97,0,25,110,88,8,1,112,4,0,1,109,0,0,134,89,0,0,24,55,6,0,110,112,109,0,33,109,89,2,121,109,2,0,0,97,94,0,0,91,97,0,3,97,91,104,119,0,209,255,0,92,97,0,48,109,92,94,200,6,2,0,2,109,0,0,252,11,1,0,42,109,109,0,1,112,1,0,1,110,0,0,134,93,0,0,24,55,6,0,109,112,110,0,32,110,1,2,41,112,93,24,42,112,112,24,33,112,112,0,20,110,110,112,121,110,3,0,4,96,94,104,119,0,31,0,0,4,97,0,0,96,4,0,0,5,96,0,55,110,5,94,68,5,2,0,119,0,21,0,0,6,96,0,1,110,4,0,1,112,0,0,134,7,0,0,24,55,6,0,6,110,112,0,45,112,7,79,136,5,2,0,0,8,96,0,25,112,8,8,1,110,4,0,1,109,0,0,134,9,0,0,24,55,6,0,112,110,109,0,33,109,9,2,120,109,4,0,0,10,96,0,3,96,10,104,119,0,233,255,0,11,96,0,50,109,94,11,164,5,2,0,4,96,94,104,0,13,96,0,0,14,97,0,55,109,14,13,184,5,2,0,119,0,9,0,0,15,96,0,0,16,96,0,4,110,16,104,135,109,26,0,15,110,104,0,0,17,96,0,4,96,17,104,119,0,244,255,0,19,97,0,25,110,19,4,1,112,4,0,134,109,0,0,116,78,6,0,110,0,112,0,0,20,97,0,25,112,20,14,2,110,0,0,44,233,0,0,135,109,9,0,112,110,105,0,0,21,97,0,25,110,21,8,1,112,4,0,134,109,0,0,116,78,6,0,110,1,112,0,32,109,1,2,121,109,14,0,1,109,152,26,1,112,4,0,1,110,0,0,134,22,0,0,24,55,6,0,109,112,110,0,0,23,97,0,3,112,23,108,1,109,4,0,134,110,0,0,116,78,6,0,112,22,109,0,119,0,13,0,1,110,200,2,1,109,4,0,1,112,0,0,134,24,0,0,24,55,6,0,110,109,112,0,0,25,97,0,3,109,25,108,1,110,4,0,134,112,0,0,116,78,6,0,109,24,110,0,0,26,97,0,25,110,26,12,41,109,2,24,42,109,109,24,1,111,2,0,134,112,0,0,116,78,6,0,110,109,111,0,0,28,97,0,1,111,4,0,134,112,0,0,116,78,6,0,28,79,111,0,0,29,97,0,0,96,29,0,33,112,1,255,121,112,5,0,1,111,10,0,134,112,0,0,20,105,6,0,111,0,0,0,1,112,180,117,1,111,4,0,1,109,0,0,134,30,0,0,24,55,6,0,112,111,109,0,2,109,0,0,252,11,1,0,42,109,109,0,1,111,1,0,1,112,0,0,134,31,0,0,24,55,6,0,109,111,112,0,19,112,31,100,33,112,112,0,2,111,0,0,196,37,1,0,2,109,0,0,203,37,1,0,125,32,112,111,109,0,0,0,25,111,99,8,1,112,4,0,134,109,0,0,116,78,6,0,111,30,112,0,25,112,99,8,25,112,112,4,1,111,4,0,134,109,0,0,116,78,6,0,112,32,111,0,2,111,0,0,213,37,1,0,25,112,99,8,134,109,0,0,192,79,6,0,111,112,0,0,2,112,0,0,225,37,1,0,25,111,99,16,134,109,0,0,192,79,6,0,112,111,0,0,0,97,27,0,0,34,97,0,55,109,34,94,168,7,2,0,119,0,154,0,0,35,97,0,25,109,35,4,1,111,4,0,1,112,0,0,134,36,0,0,24,55,6,0,109,111,112,0,33,112,36,0,120,112,2,0,119,0,144,0,0,37,96,0,0,38,97,0,45,112,37,38,232,7,2,0,134,112,0,0,124,116,6,0,0,39,97,0,0,40,97,0,25,112,40,4,1,111,4,0,1,109,0,0,134,41,0,0], eb + 122880);
  HEAPU8.set([24,55,6,0,112,111,109,0,0,42,97,0,0,43,97,0,25,109,43,8,1,111,4,0,1,112,0,0,134,44,0,0,24,55,6,0,109,111,112,0,1,112,36,120,41,111,44,2,3,112,112,111,1,111,4,0,1,109,0,0,134,45,0,0,24,55,6,0,112,111,109,0,0,46,97,0,3,109,46,108,1,111,4,0,1,112,0,0,134,47,0,0,24,55,6,0,109,111,112,0,25,111,99,24,4,109,39,27,6,109,109,104,38,109,109,255,25,109,109,1,1,110,4,0,134,112,0,0,116,78,6,0,111,109,110,0,25,110,99,24,25,110,110,4,1,109,4,0,134,112,0,0,116,78,6,0,110,41,109,0,25,109,99,24,25,109,109,8,25,110,42,14,1,111,4,0,134,112,0,0,116,78,6,0,109,110,111,0,25,111,99,24,25,111,111,12,1,110,4,0,134,112,0,0,116,78,6,0,111,45,110,0,25,110,99,24,25,110,110,16,1,111,4,0,134,112,0,0,116,78,6,0,110,47,111,0,2,111,0,0,240,37,1,0,25,110,99,24,134,112,0,0,192,79,6,0,111,110,0,0,0,48,97,0,25,112,48,8,1,110,4,0,1,111,0,0,134,49,0,0,24,55,6,0,112,110,111,0,32,111,49,0,121,111,3,0,1,98,44,0,119,0,11,0,0,50,97,0,25,111,50,8,1,110,4,0,1,112,0,0,134,51,0,0,24,55,6,0,111,110,112,0,32,112,51,3,121,112,2,0,1,98,44,0,32,112,98,44,121,112,25,0,1,98,0,0,0,52,97,0,25,112,52,12,1,110,2,0,1,111,0,0,134,54,0,0,24,55,6,0,112,110,111,0,19,111,54,100,1,110,1,0,134,55,0,0,196,207,4,0,111,110,0,0,25,111,99,48,1,112,4,0,134,110,0,0,116,78,6,0,111,55,112,0,2,112,0,0,11,38,1,0,25,111,99,48,134,110,0,0,192,79,6,0,112,111,0,0,2,111,0,0,157,92,1,0,25,112,99,56,134,110,0,0,192,79,6,0,111,112,0,0,0,56,96,0,0,57,97,0,45,110,56,57,240,9,2,0,134,110,0,0,148,116,6,0,1,112,10,0,134,110,0,0,20,105,6,0,112,0,0,0,0,58,97,0,3,97,58,104,119,0,100,255,0,59,96,0,1,110,0,0,53,110,59,110,36,10,2,0,137,99,0,0,139,0,0,0,134,60,0,0,40,119,6,0,41,110,60,24,42,110,110,24,33,110,110,0,120,110,3,0,137,99,0,0,139,0,0,0,1,110,2,0,1,112,1,0,135,61,25,0,110,112,0,0,134,112,0,0,184,54,4,0,27,0,0,0,134,112,0,0,16,119,6,0,1,110,2,0,135,112,25,0,110,61,0,0,137,99,0,0,139,0,0,0,140,0,120,0,0,0,0,0,2,113,0,0,8,3,0,0,2,114,0,0,252,18,0,0,2,115,0,0,204,16,0,0,1,111,0,0,136,116,0,0,0,112,116,0,136,116,0,0,25,116,116,48,137,116,0,0,130,116,0,0,136,117,0,0,49,116,116,117,200,10,2,0,135,116,0,0,1,110,0,0,134,116,0,0,32,107,6,0,134,116,0,0,116,105,6,0,2,117,0,0,84,38,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,149,38,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,214,38,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,23,39,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,88,39,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,153,39,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,218,39,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,27,40,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,84,38,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,92,40,1,0,134,116,0,0,236,86,6,0,117,0,0,0,134,116,0,0,92,106,6,0,2,117,0,0,157,40,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,221,40,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,117,0,0,34,41,1,0,134,116,0,0,236,86,6,0,117,0,0,0,2,116,0,0,76,162,0,0,1,117,4,0,1,118,0,0,134,0,0,0,24,55,6,0,116,117,118,0,26,117,0,1,1,116,0,0,2,119,0,0,115,52,1,0,134,118,0,0,220,36,6,0,117,116,119,0,134,118,0,0,224,106,6,0,1,119,32,0,134,118,0,0,112,14,6,0,119,0,0,0,134,118,0,0,32,107,6,0,1,119,0,0,1,116,0,0,2,117,0,0,91,41,1,0,134,118,0,0,220,36,6,0,119,116,117,0,1,118,4,0,1,117,0,0,134,59,0,0,24,55,6,0,113,118,117,0,1,117,24,107,1,118,4,0,1,116,0,0,134,65,0,0,24,55,6,0,117,118,116,0,0,108,65,0,0,72,108,0,1,116,0,0,53,116,72,116,160,12,2,0,119,0,65,2,0,82,108,0,25,116,82,8,1,118,4,0,1,117,0,0,134,95,0,0,24,55,6,0,116,118,117,0,1,116,33,0,1,118,61,0,138,95,116,118,192,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,176,14,2,0,188,13,2,0,188,13,2,0,152,15,2,0,188,13,2,0,188,13,2,0,160,15,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,160,16,2,0,188,13,2,0,188,13,2,0,200,16,2,0,188,13,2,0,180,18,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,188,13,2,0,164,19,2,0,119,0,191,1,0,100,108,0,25,116,100,52,1,119,4,0,1,117,0,0,134,102,0,0,24,55,6,0,116,119,117,0,27,117,102,20,3,117,115,117,25,117,117,8,1,119,4,0,1,116,0,0,134,103,0,0,24,55,6,0,117,119,116,0,0,110,103,0,0,104,108,0,25,116,104,48,1,119,4,0,1,117,0,0,134,105,0,0,24,55,6,0,116,119,117,0,0,106,110,0,5,107,106,105,0,110,107,0,0,1,108,0,25,117,1,52,1,119,4,0,1,116,0,0,134,2,0,0,24,55,6,0,117,119,116,0,27,116,2,20,3,109,115,116,0,3,109,0,25,116,3,16,42,116,116,0,1,119,1,0,1,117,0,0,134,4,0,0,24,55,6,0,116,119,117,0,41,117,4,24,42,117,117,24,33,117,117,0,120,117,5,0,0,5,110,0,28,117,5,2,38,117,117,255,0,110,117,0,0,7,109,0,25,119,7,16,42,119,119,0,1,116,1,0,1,118,1,0,134,117,0,0,116,78,6,0,119,116,118,0,119,0,131,1,0,18,108,0,25,116,18,52,1,118,4,0,1,117,0,0,134,28,0,0,24,55,6,0,116,118,117,0,1,117,100,20,27,118,28,20,3,117,117,118,25,117,117,8,1,118,4,0,1,116,0,0,134,44,0,0,24,55,6,0,117,118,116,0,0,110,44,0,0,50,108,0,25,116,50,56,1,118,4,0,1,117,0,0,134,60,0,0,24,55,6,0,116,118,117,0,0,61,108,0,25,117,61,60,1,118,4,0,1,116,0,0,134,62,0,0,24,55,6,0,117,118,116,0,0,63,108,0,25,116,63,48,1,118,4,0,1,117,0,0,134,64,0,0,24,55,6,0,116,118,117,0,0,66,110,0,3,117,60,62,27,117,117,3,3,117,117,64,5,67,66,117,0,110,67,0,0,68,108,0,25,117,68,68,1,118,4,0,1,116,0,0,134,69,0,0,24,55,6,0,117,118,116,0,25,118,68,68,39,117,69,2,1,119,4,0,134,116,0,0,116,78,6,0,118,117,119,0,119,0,73,1,1,110,232,3,119,0,71,1,0,33,108,0,25,117,33,52,1,116,4,0,1,118,0,0,134,34,0,0,24,55,6,0,117,116,118,0,1,118,44,21,27,116,34,20,3,109,118,116,0,35,109,0,25,116,35,8,1,118,4,0,1,117,0,0,134,36,0,0,24,55,6,0,116,118,117,0,0,110,36,0,0,37,108,0,25,117,37,64,1,118,4,0,1,116,0,0,134,38,0,0,24,55,6,0,117,118,116,0,0,39,110,0,27,116,38,20,3,110,39,116,0,40,108,0,25,116,40,68,1,118,4,0,1,117,0,0,134,41,0,0,24,55,6,0,116,118,117,0,38,117,41,2,33,117,117,0,120,117,5,0,0,42,110,0,28,117,42,2,38,117,117,255,0,110,117,0,0,43,108,0,25,117,43,68,1,118,4,0,1,116,0,0,134,45,0,0,24,55,6,0,117,118,116,0,25,118,43,68,39,117,45,2,1,119,4,0,134,116,0,0,116,78,6,0,118,117,119,0,0,46,109,0,25,119,46,16,42,119,119,0,1,117,1,0,1,118,1,0,134,116,0,0,116,78,6,0,119,117,118,0,119,0,7,1,0,101,108,0,25,117,101,48,1,118,4,0,1,116,0,0,134,6,0,0,24,55,6,0,117,118,116,0,41,116,6,1,0,110,116,0,119,0,253,0,0,8,108,0,25,117,8,52,1,118,4,0,1,116,0,0,134,9,0,0,24,55,6,0,117,118,116,0,1,116,228,17,27,118,9,20,3,109,116,118,0,10,109,0,25,118,10,8,1,116,4,0,1,117,0,0,134,11,0,0,24,55,6,0,118,116,117,0,0,110,11,0,0,12,108,0,25,117,12,52,1,116,4,0,1,118,0,0,134,13,0,0,24,55,6,0,117,116,118,0,32,118,13,1,121,118,3,0,1,111,17,0,119,0,33,0,0,14,108,0,25,118,14,52,1,116,4,0,1,117,0,0,134,15,0,0,24,55,6,0,118,116,117,0,32,117,15,8,121,117,3,0,1,111,17,0,119,0,22,0,0,16,108,0,25,117,16,52,1,116,4,0,1,118,0,0,134,17,0,0,24,55,6,0,117,116,118,0,32,118,17,0,121,118,3,0,1,111,17,0,119,0,11,0,0,19,108,0,25,118,19,52,1,116,4,0,1,117,0,0,134,20,0,0,24,55,6,0,118,116,117,0,32,117,20,7,121,117,2,0,1,111,17,0,32,117,111,17,121,117,25,0,1,111,0,0,0,21,108,0,25,117,21,64,1,116,4,0,1,118,0,0,134,22,0,0,24,55,6,0,117,116,118,0,1,118,0,0,47,118,118,22,28,18,2,0,0,23,108,0,25,118,23,64,1,116,4,0,1,117,0,0,134,24,0,0,24,55,6,0,118,116,117,0,0,25,110,0,27,117,24,100,3,110,25,117,119,0,3,0,1,110,10,0,119,0,1,0,0,26,108,0,25,117,26,68,1,116,4,0,1,118,0,0,134,27,0,0,24,55,6,0,117,116,118,0,38,118,27,2,33,118,118,0,120,118,5,0,0,29,110,0,28,118,29,2,38,118,118,255,0,110,118,0,0,30,108,0,25,118,30,68,1,116,4,0,1,117,0,0,134,31,0,0,24,55,6,0,118,116,117,0,25,116,30,68,39,118,31,2,1,119,4,0,134,117,0,0,116,78,6,0,116,118,119,0,0,32,109,0,25,119,32,16,42,119,119,0,1,118,1,0,1,116,1,0,134,117,0,0,116,78,6,0,119,118,116,0,119,0,130,0,0,86,108,0,25,117,86,52,1,118,4,0,1,116,0,0,134,87,0,0,24,55,6,0,117,118,116,0,27,116,87,20,3,116,114,116,25,116,116,8,1,118,4,0,1,117,0,0,134,88,0,0,24,55,6,0,116,118,117,0,0,110,88,0,0,89,108,0,25,117,89,48,1,118,4,0,1,116,0,0,134,90,0,0,24,55,6,0,117,118,116,0,0,91,110,0,5,92,91,90,0,110,92,0,0,93,108,0,25,116,93,52,1,118,4,0,1,117,0,0,134,94,0,0,24,55,6,0,116,118,117,0,27,117,94,20,3,109,114,117,0,96,109,0,25,117,96,16,42,117,117,0,1,118,1,0,1,116,0,0,134,97,0,0,24,55,6,0,117,118,116,0,41,116,97,24,42,116,116,24,33,116,116,0,120,116,5,0,0,98,110,0,28,116,98,2,38,116,116,255,0,110,116,0,0,99,109,0,25,118,99,16,42,118,118,0,1,117,1,0,1,119,1,0,134,116,0,0,116,78,6,0,118,117,119,0,119,0,70,0,0,70,108,0,25,116,70,52,1,119,4,0,1,117,0,0,134,71,0,0,24,55,6,0,116,119,117,0,1,117,44,16,27,119,71,20,3,117,117,119,25,117,117,8,1,119,4,0,1,116,0,0,134,73,0,0,24,55,6,0,117,119,116,0,0,110,73,0,0,74,108,0,25,116,74,64,1,119,4,0,1,117,0,0,134,75,0,0,24,55,6,0,116,119,117,0,0,76,110,0,1,117,9,0,4,117,117,75,27,117,117,100,3,110,76,117,0,77,108,0,25,117,77,52,1,119,4,0,1,116,0,0,134,78,0,0,24,55,6,0,117,119,116,0,1,116,212,2,41,119,78,2,3,116,116,119,1,119,4,0,1,117,0,0,134,79,0,0,24,55,6,0,116,119,117,0,0,80,108,0,25,117,80,64,1,119,4,0,1,116,0,0,134,81,0,0,24,55,6,0,117,119,116,0,0,83,110,0,4,116,79,81,27,116,116,10,3,110,83,116,0,84,108,0,25,116,84,68,1,119,4,0,1,117,0,0,134,85,0,0,24,55,6,0,116,119,117,0,25,119,84,68,39,116,85,2,1,118,4,0,134,117,0,0,116,78,6,0,119,116,118,0,119,0,1,0,0,47,110,0,34,116,47,0,121,116,2,0,1,110,0,0,0,48,108,0,25,116,48,28,42,116,116,0,1,118,1,0,1,117,0,0,134,49,0,0,24,55,6,0,116,118,117,0,0,51,110,0,0,52,108,0,1,117,0,0,134,53,0,0,208,181,1,0,52,117,0,0,41,118,49,24,42,118,118,24,1,116,4,0,134,117,0,0,116,78,6,0,112,118,116,0,25,116,112,4,1,118,4,0,134,117,0,0,116,78,6,0,116,51,118,0,25,118,112,8,1,116,4,0,134,117,0,0,116,78,6,0,118,53,116,0,2,116,0,0,107,41,1,0,134,117,0,0,120,61,6,0,116,112,0,0,0,54,110,0,1,117,4,0,1,116,0,0,134,55,0,0,24,55,6,0,113,117,116,0,3,117,55,54,1,118,4,0,134,116,0,0,116,78,6,0,113,117,118,0,0,56,108,0,1,116,4,0,1,118,0,0,134,57,0,0,24,55,6,0,56,116,118,0,0,108,57,0,119,0,188,253,25,116,112,16,1,117,4,0,134,118,0,0,116,78,6,0,116,59,117,0,2,117,0,0,120,41,1,0,25,116,112,16,134,118,0,0,120,61,6,0,117,116,0,0,134,118,0,0,224,106,6,0,1,118,4,0,1,116,0,0,134,58,0,0,24,55,6,0,113,118,116,0,1,118,2,0,1,117,32,0,134,116,0,0,240,255,1,0,58,118,117,0,1,117,0,0,134,116,0,0,20,99,6,0,117,0,0,0,137,112,0,0,139,0,0,0,140,0,121,0,0,0,0,0,2,105,0,0,188,120,0,0,2,106,0,0,184,120,0,0,2,107,0,0,200,2,0,0,2,108,0,0,241,208,0,0,2,109,0,0,192,26,0,0,2,110,0,0,152,26,0,0,2,111,0,0,112,3,0,0,2,112,0,0,132,0,0,0,2,113,0,0,36,107,0,0,2,114,0,0,255,255,0,0,1,103,0,0,136,115,0,0,0,104,115,0,136,115,0,0,25,115,115,48,137,115,0,0,130,115,0,0,136,116,0,0,49,115,115,116,152,22,2,0,135,115,0,0,25,116,104,16,1,117,26,0,1,118,4,0,134,115,0,0,116,78,6,0,116,117,118,0,25,118,104,16,25,118,118,4,1,117,8,0,1,116,4,0,134,115,0,0,116,78,6,0,118,117,116,0,1,102,36,107,0,0,102,0,1,115,200,111,55,115,0,115,228,22,2,0,119,0,25,0,0,71,102,0,25,116,71,24,1,117,0,0,1,118,4,0,134,115,0,0,116,78,6,0,116,117,118,0,0,81,102,0,25,118,81,32,1,117,0,0,1,116,4,0,134,115,0,0,116,78,6,0,118,117,116,0,0,92,102,0,25,116,92,28,1,117,0,0,1,118,2,0,134,115,0,0,116,78,6,0,116,117,118,0,0,1,102,0,3,102,1,112,119,0,228,255,1,115,4,0,134,12,0,0,20,36,6,0,115,0,0,0,1,101,0,0,0,17,101,0,54,115,17,12,104,23,2,0,119,0,25,0,134,34,0,0,116,56,6,0,5,115,34,112,3,115,113,115,25,115,115,28,1,118,2,0,1,117,0,0,134,49,0,0,24,55,6,0,115,118,117,0,5,118,34,112,3,118,113,118,25,118,118,28,41,115,49,16,42,115,115,16,39,115,115,2,19,115,115,114,1,116,2,0,134,117,0,0,116,78,6,0,118,115,116,0,0,61,101,0,25,101,61,1,119,0,229,255,1,101,0,0,1,102,36,107,0,62,101,0,34,117,62,9,120,117,2,0,119,0,44,2,0,63,101,0,25,117,104,16,1,116,4,0,1,115,0,0,134,64,0,0,24,55,6,0,117,116,115,0,30,115,63,3,38,115,115,255,5,65,115,64,25,116,65,1,1,117,4,0,134,115,0,0,116,78,6,0,106,116,117,0,0,66,101,0,25,115,104,16,25,115,115,4,1,117,4,0,1,116,0,0,134,67,0,0,24,55,6,0,115,117,116,0,28,116,66,3,38,116,116,255,5,68,116,67,1,117,4,0,134,116,0,0,116,78,6,0,105,68,117,0,0,69,102,0,25,116,69,28,1,117,2,0,1,115,0,0,134,70,0,0,24,55,6,0,116,117,115,0,41,115,70,16,42,115,115,16,38,115,115,2,33,115,115,0,121,115,86,0,1,115,4,0,1,117,0,0,134,72,0,0,24,55,6,0,106,115,117,0,25,117,104,16,1,115,4,0,1,116,0,0,134,73,0,0,24,55,6,0,117,115,116,0,26,116,73,2,134,74,0,0,20,36,6,0,116,0,0,0,0,75,102,0,3,115,72,74,25,115,115,1,1,117,4,0,134,116,0,0,116,78,6,0,75,115,117,0,1,116,4,0,1,117,0,0,134,76,0,0,24,55,6,0,105,116,117,0,25,117,104,16,25,117,117,4,1,116,4,0,1,115,0,0,134,77,0,0,24,55,6,0,117,116,115,0,26,115,77,2,134,78,0,0,20,36,6,0,115,0,0,0,0,79,102,0,25,116,79,4,3,117,76,78,25,117,117,1,1,118,4,0,134,115,0,0,116,78,6,0,116,117,118,0,0,80,102,0,25,118,80,8,1,117,176,255,1,116,4,0,134,115,0,0,116,78,6,0,118,117,116,0,0,82,102,0,25,116,82,8,25,116,116,4,1,117,232,255,1,118,4,0,134,115,0,0,116,78,6,0,116,117,118,0,0,83,102,0,25,115,83,4,1,118,4,0,1,117,0,0,134,84,0,0,24,55,6,0,115,118,117,0,1,117,0,0,47,117,117,84,200,25,2,0,0,85,102,0,25,117,85,4,1,118,4,0,1,115,0,0,134,86,0,0,24,55,6,0,117,118,115,0,34,88,86,23,119,0,2,0,1,88,0,0,40,115,88,1,0,87,115,0,120,87,173,255,119,0,168,1,1,115,10,0,134,89,0,0,20,36,6,0,115,0,0,0,1,115,4,0,1,118,0,0,134,90,0,0,24,55,6,0,107,115,118,0,26,118,90,1,47,118,89,118,128,26,2,0,0,91,102,0,25,118,91,28,1,115,2,0,1,117,0,0,134,93,0,0,24,55,6,0,118,115,117,0,25,115,91,28,41,118,93,16,42,118,118,16,39,118,118,1,19,118,118,114,1,116,2,0,134,117,0,0,116,78,6,0,115,118,116,0,1,117,15,0,134,94,0,0,20,36,6,0,117,0,0,0,32,117,94,0,121,117,8,0,0,95,102,0,25,116,95,28,1,118,4,0,1,115,2,0,134,117,0,0,116,78,6,0,116,118,115,0,0,96,102,0,25,117,96,28,1,115,2,0,1,118,0,0,134,97,0,0,24,55,6,0,117,115,118,0,41,118,97,16,42,118,118,16,38,118,118,4,33,118,118,0,121,118,89,0,25,118,104,16,1,115,4,0,1,117,0,0,134,98,0,0,24,55,6,0,118,115,117,0,0,99,102,0,25,115,99,8,26,118,98,1,1,116,4,0,134,117,0,0,116,78,6,0,115,118,116,0,25,117,104,16,25,117,117,4,1,116,4,0,1,118,0,0,134,100,0,0,24,55,6,0,117,116,118,0,0,2,102,0,25,116,2,8,25,116,116,4,26,117,100,1,1,115,4,0,134,118,0,0,116,78,6,0,116,117,115,0,1,118,4,0,1,115,0,0,134,3,0,0,24,55,6,0,106,118,115,0,0,4,102,0,1,118,4,0,134,115,0,0,116,78,6,0,4,3,118,0,32,115,3,1,121,115,7,0,0,5,102,0,1,118,0,0,1,117,4,0,134,115,0,0,116,78,6,0,5,118,117,0,1,115,4,0,1,117,0,0,134,6,0,0,24,55,6,0,105,115,117,0,0,7,102,0,25,115,7,4,1,118,4,0,134,117,0,0,116,78,6,0,115,6,118,0,32,117,6,0,121,117,136,0,0,8,102,0,25,117,8,4,1,118,4,0,1,115,0,0,134,9,0,0,24,55,6,0,117,118,115,0,25,118,8,4,25,117,9,1,1,116,4,0,134,115,0,0,116,78,6,0,118,117,116,0,0,10,102,0,25,115,10,8,25,115,115,4,1,116,4,0,1,117,0,0,134,11,0,0,24,55,6,0,115,116,117,0,25,116,10,8,25,116,116,4,26,115,11,1,1,118,4,0,134,117,0,0,116,78,6,0,116,115,118,0,119,0,107,0,25,117,104,16,1,118,4,0,1,115,0,0,134,13,0,0,24,55,6,0,117,118,115,0,26,115,13,4,134,14,0,0,20,36,6,0,115,0,0,0,0,15,102,0,25,118,15,8,25,117,14,4,1,116,4,0,134,115,0,0,116,78,6,0,118,117,116,0,25,115,104,16,25,115,115,4,1,116,4,0,1,117,0,0,134,16,0,0,24,55,6,0,115,116,117,0,26,117,16,4,134,18,0,0,20,36,6,0,117,0,0,0,0,19,102,0,25,116,19,8,25,116,116,4,25,115,18,4,1,118,4,0,134,117,0,0,116,78,6,0,116,115,118,0,1,117,4,0,1,118,0,0,134,20,0,0,24,55,6,0,106,117,118,0,25,118,104,16,1,117,4,0,1,115,0,0,134,21,0,0,24,55,6,0,118,117,115,0,0,22,102,0,25,115,22,8,1,117,4,0,1,118,0,0,134,23,0,0,24,55,6,0,115,117,118,0,4,118,21,23,134,24,0,0,20,36,6,0,118,0,0,0,0,25,102,0,3,117,20,24,1,115,4,0,134,118,0,0,116,78,6,0,25,117,115,0,1,118,4,0,1,115,0,0,134,26,0,0,24,55,6,0,105,118,115,0,25,115,104,16,25,115,115,4,1,118,4,0,1,117,0,0,134,27,0,0,24,55,6,0,115,118,117,0,0,28,102,0,25,117,28,8,25,117,117,4,1,118,4,0,1,115,0,0,134,29,0,0,24,55,6,0,117,118,115,0,4,115,27,29,134,30,0,0,20,36,6,0,115,0,0,0,0,31,102,0,25,118,31,4,3,117,26,30,1,116,4,0,134,115,0,0,116,78,6,0,118,117,116,0,0,32,102,0,25,115,32,4,1,116,4,0,1,117,0,0,134,33,0,0,24,55,6,0,115,116,117,0,33,117,33,0,40,117,117,1,120,117,152,255,119,0,1,0,0,35,102,0,134,117,0,0,16,90,4,0,35,0,0,0,1,117,2,0,134,36,0,0,20,36,6,0,117,0,0,0,32,117,36,0,121,117,128,0,42,117,108,0,1,116,1,0,1,115,0,0,134,37,0,0,24,55,6,0,117,116,115,0,41,115,37,24,42,115,115,24,33,115,115,0,121,115,14,0,1,115,4,0,1,116,0,0,134,38,0,0,24,55,6,0,107,115,116,0,1,116,4,0,1,115,0,0,134,39,0,0,24,55,6,0,110,116,115,0,56,115,39,38,60,30,2,0,119,0,105,0,134,40,0,0,56,80,6,0,1,115,4,0,1,116,0,0,134,41,0,0,24,55,6,0,107,115,116,0,27,116,41,10,25,116,116,50,134,42,0,0,20,36,6,0,116,0,0,0,0,43,102,0,25,115,43,24,25,117,42,2,1,118,4,0,134,116,0,0,116,78,6,0,115,117,118,0,25,118,40,64,25,117,42,2,1,115,4,0,134,116,0,0,116,78,6,0,118,117,115,0,0,44,102,0,0,45,102,0,25,115,45,16,1,117,0,0,1,118,0,0,134,116,0,0,12,35,4,0,44,115,117,118,0,46,102,0,25,118,40,12,25,115,46,16,1,119,4,0,1,120,0,0,134,117,0,0,24,55,6,0,115,119,120,0,1,120,4,0,134,116,0,0,116,78,6,0,118,117,120,0,25,120,40,12,25,120,120,4,25,118,46,16,25,118,118,4,1,119,4,0,1,115,0,0,134,117,0,0,24,55,6,0,118,119,115,0,1,115,4,0,134,116,0,0,116,78,6,0,120,117,115,0,0,47,102,0,25,116,47,16,1,115,4,0,1,117,0,0,134,48,0,0,24,55,6,0,116,115,117,0,0,50,102,0,25,117,50,16,25,117,117,4,1,115,4,0,1,116,0,0,134,51,0,0,24,55,6,0,117,115,116,0,41,115,48,5,3,115,115,51,41,115,115,3,3,115,109,115,42,115,115,0,1,117,42,0,1,120,1,0,134,116,0,0,116,78,6,0,115,117,120,0,25,120,40,68,1,117,8,0,1,115,4,0,134,116,0,0,116,78,6,0,120,117,115,0,25,115,40,72,1,117,1,0,1,120,4,0,134,116,0,0,116,78,6,0,115,117,120,0,25,120,40,8,1,117,42,0,1,115,4,0,134,116,0,0,116,78,6,0,120,117,115,0,134,116,0,0,124,205,5,0,111,40,0,0,1,116,100,0,134,52,0,0,20,36,6,0,116,0,0,0,0,53,102,0,25,116,53,24,1,115,4,0,1,117,0,0,134,54,0,0,24,55,6,0,116,115,117,0,1,117,0,0,15,117,117,54,1,115,80,0,1,116,25,0,125,55,117,115,116,0,0,0,47,116,52,55,120,32,2,0,134,56,0,0,56,80,6,0,0,57,102,0,25,115,104,8,1,117,0,0,1,120,1,0,134,116,0,0,12,35,4,0,57,115,117,120,1,116,0,0,134,58,0,0,24,191,5,0,116,0,0,0,25,120,104,8,134,116,0,0,8,13,3,0,56,58,120,0,134,116,0,0,84,250,5,0,56,0,0,0,0,59,102,0,3,102,59,112,0,60,101,0,25,101,60,1,119,0,210,253,137,104,0,0,139,0,0,0,140,3,196,0,0,0,0,0,2,191,0,0,255,255,0,0,2,192,0,0,255,0,0,0,1,189,0,0,136,193,0,0,0,190,193,0,1,193,20,0,16,5,193,1,120,5,201,1,1,195,9,0,1,193,10,0,138,1,195,193,252,32,2,0,136,33,2,0,68,34,2,0,244,34,2,0,196,35,2,0,148,36,2,0,76,37,2,0,28,38,2,0,212,38,2,0,92,39,2,0,119,0,187,1,1,193,4,0,1,194,0,0,134,119,0,0,24,55,6,0,2,193,194,0,0,6,119,0,1,194,0,0,25,31,194,4,0,140,31,0,26,139,140,1,3,42,6,139,1,194,0,0,25,53,194,4,0,143,53,0,26,142,143,1,40,194,142,255,0,141,194,0,19,194,42,141,0,64,194,0,0,75,64,0,1,194,4,0,1,193,0,0,134,86,0,0,24,55,6,0,75,194,193,0,25,129,75,4,1,194,4,0,134,193,0,0,116,78,6,0,2,129,194,0,1,194,4,0,134,193,0,0,116,78,6,0,0,86,194,0,119,0,152,1,1,193,4,0,1,194,0,0,134,123,0,0,24,55,6,0,2,193,194,0,0,97,123,0,1,194,0,0,25,108,194,4,0,145,108,0,26,144,145,1,3,7,97,144,1,194,0,0,25,18,194,4,0,148,18,0,26,147,148,1,40,194,147,255,0,146,194,0,19,194,7,146,0,23,194,0,0,24,23,0,1,194,4,0,1,193,0,0,134,25,0,0,24,55,6,0,24,194,193,0,25,136,24,4,1,194,4,0,134,193,0,0,116,78,6,0,2,136,194,0,34,26,25,0,41,193,26,31,42,193,193,31,0,27,193,0,0,28,0,0,0,29,28,0,1,194,4,0,134,193,0,0,116,78,6,0,29,25,194,0,25,30,28,4,0,32,30,0,1,194,4,0,134,193,0,0,116,78,6,0,32,27,194,0,119,0,105,1,1,193,4,0,1,194,0,0,134,127,0,0,24,55,6,0,2,193,194,0,0,33,127,0,1,194,0,0,25,34,194,4,0,150,34,0,26,149,150,1,3,35,33,149,1,194,0,0,25,36,194,4,0,153,36,0,26,152,153,1,40,194,152,255,0,151,194,0,19,194,35,151,0,37,194,0,0,38,37,0,1,194,4,0,1,193,0,0,134,39,0,0,24,55,6,0,38,194,193,0,25,137,38,4,1,194,4,0,134,193,0,0,116,78,6,0,2,137,194,0,0,40,0,0,0,41,40,0,1,194,4,0,134,193,0,0,116,78,6,0,41,39,194,0,25,43,40,4,0,44,43,0,1,194,0,0,1,195,4,0,134,193,0,0,116,78,6,0,44,194,195,0,119,0,61,1,1,193,4,0,1,195,0,0,134,128,0,0,24,55,6,0,2,193,195,0,0,45,128,0,1,195,0,0,25,46,195,8,0,155,46,0,26,154,155,1,3,47,45,154,1,195,0,0,25,48,195,8,0,158,48,0,26,157,158,1,40,195,157,255,0,156,195,0,19,195,47,156,0,49,195,0,0,50,49,0,0,51,50,0,0,52,51,0,1,195,4,0,1,193,0,0,134,54,0,0,24,55,6,0,52,195,193,0,25,55,51,4,0,56,55,0,1,193,4,0,1,195,0,0,134,57,0,0,24,55,6,0,56,193,195,0,25,138,50,8,1,193,4,0,134,195,0,0,116,78,6,0,2,138,193,0,0,58,0,0,0,59,58,0,1,193,4,0,134,195,0,0,116,78,6,0,59,54,193,0,25,60,58,4,0,61,60,0,1,193,4,0,134,195,0,0,116,78,6,0,61,57,193,0,119,0,9,1,1,195,4,0,1,193,0,0,134,120,0,0,24,55,6,0,2,195,193,0,0,62,120,0,1,193,0,0,25,63,193,4,0,160,63,0,26,159,160,1,3,65,62,159,1,193,0,0,25,66,193,4,0,163,66,0,26,162,163,1,40,193,162,255,0,161,193,0,19,193,65,161,0,67,193,0,0,68,67,0,1,193,4,0,1,195,0,0,134,69,0,0,24,55,6,0,68,193,195,0,25,130,68,4,1,193,4,0,134,195,0,0,116,78,6,0,2,130,193,0,19,195,69,191,0,70,195,0,41,195,70,16,42,195,195,16,0,71,195,0,34,72,71,0,41,195,72,31,42,195,195,31,0,73,195,0,0,74,0,0,0,76,74,0,1,193,4,0,134,195,0,0,116,78,6,0,76,71,193,0,25,77,74,4,0,78,77,0,1,193,4,0,134,195,0,0,116,78,6,0,78,73,193,0,119,0,213,0,1,195,4,0,1,193,0,0,134,121,0,0,24,55,6,0,2,195,193,0,0,79,121,0,1,193,0,0,25,80,193,4,0,165,80,0,26,164,165,1,3,81,79,164,1,193,0,0,25,82,193,4,0,168,82,0,26,167,168,1,40,193,167,255,0,166,193,0,19,193,81,166,0,83,193,0,0,84,83,0,1,193,4,0,1,195,0,0,134,85,0,0,24,55,6,0,84,193,195,0,25,131,84,4,1,193,4,0,134,195,0,0,116,78,6,0,2,131,193,0,19,195,85,191,0,4,195,0,0,87,0,0,0,88,87,0,1,193,4,0,134,195,0,0,116,78,6,0,88,4,193,0,25,89,87,4,0,90,89,0,1,193,0,0,1,194,4,0,134,195,0,0,116,78,6,0,90,193,194,0,119,0,167,0,1,195,4,0,1,194,0,0,134,122,0,0,24,55,6,0,2,195,194,0,0,91,122,0,1,194,0,0,25,92,194,4,0,170,92,0,26,169,170,1,3,93,91,169,1,194,0,0,25,94,194,4,0,173,94,0,26,172,173,1,40,194,172,255,0,171,194,0,19,194,93,171,0,95,194,0,0,96,95,0,1,194,4,0,1,195,0,0,134,98,0,0,24,55,6,0,96,194,195,0,25,132,96,4,1,194,4,0,134,195,0,0,116,78,6,0,2,132,194,0,19,195,98,192,0,99,195,0,41,195,99,24,42,195,195,24,0,100,195,0,34,101,100,0,41,195,101,31,42,195,195,31,0,102,195,0,0,103,0,0,0,104,103,0,1,194,4,0,134,195,0,0,116,78,6,0,104,100,194,0,25,105,103,4,0,106,105,0,1,194,4,0,134,195,0,0,116,78,6,0,106,102,194,0,119,0,115,0,1,195,4,0,1,194,0,0,134,124,0,0,24,55,6,0,2,195,194,0,0,107,124,0,1,194,0,0,25,109,194,4,0,175,109,0,26,174,175,1,3,110,107,174,1,194,0,0,25,111,194,4,0,178,111,0,26,177,178,1,40,194,177,255,0,176,194,0,19,194,110,176,0,112,194,0,0,113,112,0,1,194,4,0,1,195,0,0,134,114,0,0,24,55,6,0,113,194,195,0,25,133,113,4,1,194,4,0,134,195,0,0,116,78,6,0,2,133,194,0,19,195,114,192,0,3,195,0,0,115,0,0,0,116,115,0,1,194,4,0,134,195,0,0,116,78,6,0,116,3,194,0,25,117,115,4,0,118,117,0,1,194,0,0,1,193,4,0,134,195,0,0,116,78,6,0,118,194,193,0,119,0,69,0,1,195,4,0,1,193,0,0,134,125,0,0,24,55,6,0,2,195,193,0,0,8,125,0,1,193,0,0,25,9,193,8,0,180,9,0,26,179,180,1,3,10,8,179,1,193,0,0,25,11,193,8,0,183,11,0,26,182,183,1,40,193,182,255,0,181,193,0,19,193,10,181,0,12,193,0,0,13,12,0,1,193,8,0,134,14,0,0,208,90,6,0,13,193,0,0,25,134,13,8,1,195,4,0,134,193,0,0,116,78,6,0,2,134,195,0,1,195,8,0,134,193,0,0,56,86,6,0,0,14,195,0,119,0,35,0,1,193,4,0,1,195,0,0,134,126,0,0,24,55,6,0,2,193,195,0,0,15,126,0,1,195,0,0,25,16,195,8,0,185,16,0,26,184,185,1,3,17,15,184,1,195,0,0,25,19,195,8,0,188,19,0,26,187,188,1,40,195,187,255,0,186,195,0,19,195,17,186,0,20,195,0,0,21,20,0,1,195,8,0,134,22,0,0,208,90,6,0,21,195,0,0,25,135,21,8,1,193,4,0,134,195,0,0,116,78,6,0,2,135,193,0,1,193,8,0,134,195,0,0,56,86,6,0,0,22,193,0,119,0,1,0,139,0,0,0,140,4,102,0,0,0,0,0,2,95,0,0,196,106,0,0,2,96,0,0,200,106,0,0,2,97,0,0,204,106,0,0,1,93,0,0,136,98,0,0,0,94,98,0,136,98,0,0,25,98,98,64,137,98,0,0,130,98,0,0,136,99,0,0,49,98,98,99,52,40,2,0,135,98,0,0,1,90,0,0,1,98,0,0,45,98,2,98,88,40,2,0,25,98,0,28,25,88,98,20,1,91,0,0,1,92,0,0,119,0,255,0,1,98,0,0,45,98,2,98,108,40,2,0,1,36,0,0,119,0,8,0,25,98,2,56,1,99,4,0,1,100,0,0,134,30,0,0,24,55,6,0,98,99,100,0,0,36,30,0,0,92,36,0,1,100,0,0,45,100,2,100,160,40,2,0,1,51,0,0,119,0,8,0,25,100,2,60,1,99,4,0,1,98,0,0,134,50,0,0,24,55,6,0,100,99,98,0,0,51,50,0,0,91,51,0,1,98,4,0,1,99,0,0,134,52,0,0,24,55,6,0,97,98,99,0,45,99,2,52,24,43,2,0,1,99,4,0,1,98,0,0,134,53,0,0,24,55,6,0,95,99,98,0,1,98,0,0,46,98,53,98,112,41,2,0,1,98,4,0,1,99,0,0,134,54,0,0,24,55,6,0,95,98,99,0,25,99,54,52,1,98,4,0,1,100,0,0,134,55,0,0,24,55,6,0,99,98,100,0,32,100,55,8,121,100,15,0,1,100,4,0,1,98,0,0,134,56,0,0,24,55,6,0,95,100,98,0,25,98,56,64,1,100,4,0,1,99,0,0,134,57,0,0,24,55,6,0,98,100,99,0,0,58,91,0,3,91,58,57,119,0,4,0,1,93,11,0,119,0,2,0,1,93,11,0,32,99,93,11,121,99,35,0,1,99,4,0,1,100,0,0,134,59,0,0,24,55,6,0,95,99,100,0,1,100,0,0,46,100,59,100,4,42,2,0,1,100,4,0,1,99,0,0,134,60,0,0,24,55,6,0,95,100,99,0,25,99,60,52,1,100,4,0,1,98,0,0,134,61,0,0,24,55,6,0,99,100,98,0,32,98,61,7,121,98,14,0,1,98,4,0,1,100,0,0,134,62,0,0,24,55,6,0,95,98,100,0,25,100,62,64,1,98,4,0,1,99,0,0,134,63,0,0,24,55,6,0,100,98,99,0,0,64,92,0,3,92,64,63,1,99,4,0,1,98,0,0,134,65,0,0,24,55,6,0,96,99,98,0,1,98,0,0,46,98,65,98,144,42,2,0,1,98,4,0,1,99,0,0,134,66,0,0,24,55,6,0,96,98,99,0,25,99,66,52,1,98,4,0,1,100,0,0,134,67,0,0,24,55,6,0,99,98,100,0,32,100,67,8,121,100,15,0,1,100,4,0,1,98,0,0,134,68,0,0,24,55,6,0,96,100,98,0,25,98,68,64,1,100,4,0,1,99,0,0,134,69,0,0,24,55,6,0,98,100,99,0,0,70,91,0,3,91,70,69,119,0,35,0,1,99,4,0,1,100,0,0,134,71,0,0,24,55,6,0,96,99,100,0,1,100,0,0,46,100,71,100,24,43,2,0,1,100,4,0,1,99,0,0,134,72,0,0,24,55,6,0,96,100,99,0,25,99,72,52,1,100,4,0,1,98,0,0,134,73,0,0,24,55,6,0,99,100,98,0,32,98,73,7,121,98,14,0,1,98,4,0,1,100,0,0,134,74,0,0,24,55,6,0,96,98,100,0,25,100,74,64,1,98,4,0,1,99,0,0,134,75,0,0,24,55,6,0,100,98,99,0,0,76,92,0,3,92,76,75,25,88,2,29,41,99,3,24,42,99,99,24,33,99,99,0,121,99,74,0,25,99,2,68,1,98,4,0,1,100,0,0,134,77,0,0,24,55,6,0,99,98,100,0,1,100,4,0,1,98,0,0,134,78,0,0,24,55,6,0,97,100,98,0,38,98,77,4,33,98,98,0,1,100,0,0,14,100,78,100,19,98,98,100,121,98,48,0,1,98,4,0,1,100,0,0,134,79,0,0,24,55,6,0,97,98,100,0,25,100,79,52,1,98,4,0,1,99,0,0,134,80,0,0,24,55,6,0,100,98,99,0,25,99,2,24,1,98,4,0,1,100,0,0,134,81,0,0,24,55,6,0,99,98,100,0,45,100,80,81,44,44,2,0,25,88,2,37,1,100,4,0,1,98,0,0,134,82,0,0,24,55,6,0,97,100,98,0,25,98,82,56,1,100,4,0,1,99,0,0,134,83,0,0,24,55,6,0,98,100,99,0,0,84,92,0,3,92,84,83,1,99,4,0,1,100,0,0,134,85,0,0,24,55,6,0,97,99,100,0,25,100,85,60,1,99,4,0,1,98,0,0,134,86,0,0,24,55,6,0,100,99,98,0,0,87,91,0,3,91,87,86,119,0,10,0,25,98,2,24,1,99,4,0,1,100,0,0,134,4,0,0,24,55,6,0,98,99,100,0,34,100,4,0,121,100,2,0,25,88,2,37,25,100,1,24,1,99,2,0,1,98,0,0,134,5,0,0,24,55,6,0,100,99,98,0,41,98,5,16,42,98,98,16,1,99,0,32,19,98,98,99,33,98,98,0,38,98,98,1,1,99,255,0,19,98,98,99,41,98,98,24,42,98,98,24,33,98,98,0,120,98,3,0,0,6,92,0,25,92,6,4,25,98,1,28,25,98,98,12,1,99,4,0,1,100,0,0,134,7,0,0,24,55,6,0,98,99,100,0,0,89,7,0,25,100,1,28,1,99,236,106,45,100,100,99,56,46,2,0,1,100,192,106,1,99,4,0,1,98,0,0,134,8,0,0,24,55,6,0,100,99,98,0,1,98,0,0,46,98,8,98,40,45,2,0,1,98,192,106,1,99,4,0,1,100,0,0,134,9,0,0,24,55,6,0,98,99,100,0,25,100,9,64,1,99,4,0,1,98,0,0,134,10,0,0,24,55,6,0,100,99,98,0,0,89,10,0,1,98,4,0,1,99,0,0,134,11,0,0,24,55,6,0,95,98,99,0,1,99,0,0,46,99,11,99,176,45,2,0,1,99,4,0,1,98,0,0,134,12,0,0,24,55,6,0,95,99,98,0,25,98,12,52,1,99,4,0,1,100,0,0,134,13,0,0,24,55,6,0,98,99,100,0,32,100,13,0,121,100,14,0,1,100,4,0,1,99,0,0,134,14,0,0,24,55,6,0,95,100,99,0,25,99,14,64,1,100,4,0,1,98,0,0,134,15,0,0,24,55,6,0,99,100,98,0,0,16,89,0,4,89,16,15,1,98,4,0,1,100,0,0,134,17,0,0,24,55,6,0,96,98,100,0,1,100,0,0,46,100,17,100,56,46,2,0,1,100,4,0,1,98,0,0,134,18,0,0,24,55,6,0,96,100,98,0,25,98,18,52,1,100,4,0,1,99,0,0,134,19,0,0,24,55,6,0,98,100,99,0,32,99,19,0,121,99,14,0,1,99,4,0,1,100,0,0,134,20,0,0,24,55,6,0,96,99,100,0,25,100,20,64,1,99,4,0,1,98,0,0,134,21,0,0,24,55,6,0,100,99,98,0,0,22,89,0,4,89,22,21,0,23,88,0,1,98,0,0,53,98,23,98,80,46,2,0,1,93,44,0,119,0,122,0,0,24,88,0,42,98,24,0,1,99,1,0,1,100,0,0,134,25,0,0,24,55,6,0,98,99,100,0,41,100,25,24,42,100,100,24,33,100,100,0,120,100,3,0,1,93,44,0,119,0,109,0,0,26,88,0,134,27,0,0,60,7,5,0,26,0,0,0,0,28,88,0,1,100,120,0,134,29,0,0,160,89,6,0,28,100,0,0,0,88,29,0,1,100,0,0,45,100,29,100,192,46,2,0,1,93,44,0,119,0,94,0,0,31,88,0,25,88,31,1,25,100,31,1,134,32,0,0,60,7,5,0,100,0,0,0,25,100,0,28,25,100,100,8,1,99,4,0,1,98,0,0,134,33,0,0,24,55,6,0,100,99,98,0,0,34,89,0,0,35,92,0,25,98,0,28,1,99,4,0,1,100,0,0,134,37,0,0,24,55,6,0,98,99,100,0,1,100,8,112,41,99,37,2,3,100,100,99,1,99,4,0,1,98,0,0,134,38,0,0,24,55,6,0,100,99,98,0,3,98,35,38,134,39,0,0,176,34,6,0,33,34,98,0,33,98,39,0,121,98,45,0,134,40,0,0,212,44,6,0,27,32,0,0,0,41,91,0,25,98,0,28,1,99,4,0,1,100,0,0,134,42,0,0,24,55,6,0,98,99,100,0,1,100,136,112,41,99,42,2,3,100,100,99,1,99,4,0,1,98,0,0,134,43,0,0,24,55,6,0,100,99,98,0,3,99,41,40,3,99,99,43,34,99,99,0,121,99,4,0,1,99,0,0,0,98,99,0,119,0,4,0,3,99,41,40,3,99,99,43,0,98,99,0,0,44,98,0,25,98,1,28,25,98,98,16,1,99,4,0,1,100,0,0,134,45,0,0,24,55,6,0,98,99,100,0,25,99,1,28,25,99,99,16,4,98,45,44,1,101,4,0,134,100,0,0,116,78,6,0,99,98,101,0,1,90,1,0,0,46,88,0], eb + 133120);
  HEAPU8.set([1,100,47,0,134,47,0,0,160,89,6,0,46,100,0,0,0,88,47,0,1,100,0,0,45,100,47,100,40,48,2,0,1,93,44,0,119,0,4,0,0,48,88,0,25,88,48,1,119,0,130,255,32,100,93,44,121,100,4,0,0,49,90,0,137,94,0,0,139,49,0,0,1,100,0,0,139,100,0,0,140,2,202,0,0,0,0,0,2,193,0,0,192,26,0,0,2,194,0,0,255,0,0,0,2,195,0,0,112,3,0,0,1,191,0,0,136,196,0,0,0,192,196,0,136,196,0,0,25,196,196,48,137,196,0,0,130,196,0,0,136,197,0,0,49,196,196,197,156,48,2,0,135,196,0,0,0,5,0,0,0,6,1,0,0,93,5,0,25,104,93,8,0,183,104,0,1,187,1,0,0,115,5,0,25,126,115,24,1,196,2,0,1,197,0,0,134,137,0,0,24,55,6,0,126,196,197,0,41,197,137,16,42,197,197,16,0,148,197,0,1,197,0,2,19,197,148,197,0,159,197,0,33,170,159,0,38,197,170,1,0,7,197,0,19,197,7,194,0,18,197,0,19,197,18,194,0,29,197,0,33,40,29,0,121,40,11,0,1,197,5,0,134,51,0,0,20,36,6,0,197,0,0,0,33,62,51,0,121,62,3,0,1,191,7,0,119,0,4,0,1,191,3,0,119,0,2,0,1,191,3,0,32,197,191,3,121,197,144,1,0,73,5,0,25,84,73,17,42,197,84,0,1,196,1,0,1,198,0,0,134,91,0,0,24,55,6,0,197,196,198,0,41,198,91,24,42,198,198,24,0,92,198,0,32,94,92,80,121,94,9,0,1,198,5,0,134,95,0,0,20,36,6,0,198,0,0,0,32,96,95,0,121,96,3,0,1,191,7,0,119,0,123,1,0,97,5,0,25,98,97,17,42,198,98,0,1,196,1,0,1,197,0,0,134,99,0,0,24,55,6,0,198,196,197,0,41,197,99,24,42,197,197,24,0,100,197,0,32,101,100,66,121,101,9,0,1,197,2,0,134,102,0,0,20,36,6,0,197,0,0,0,32,103,102,0,121,103,3,0,1,191,7,0,119,0,102,1,0,118,183,0,0,119,6,0,134,120,0,0,132,40,6,0,118,119,0,0,0,182,120,0,0,121,183,0,1,196,80,0,1,199,4,0,1,200,0,0,134,198,0,0,24,55,6,0,121,199,200,0,1,200,4,0,134,197,0,0,116,78,6,0,196,198,200,0,1,200,80,0,25,200,200,4,25,196,121,4,1,199,4,0,1,201,0,0,134,198,0,0,24,55,6,0,196,199,201,0,1,201,4,0,134,197,0,0,116,78,6,0,200,198,201,0,0,122,183,0,25,123,122,4,1,197,4,0,1,201,0,0,134,124,0,0,24,55,6,0,123,197,201,0,25,125,124,1,0,185,125,0,0,127,185,0,1,201,23,0,17,128,201,127,1,201,22,0,125,2,128,201,125,0,0,0,0,185,2,0,0,129,183,0,1,201,4,0,1,197,0,0,134,130,0,0,24,55,6,0,129,201,197,0,25,131,130,1,0,184,131,0,0,132,184,0,1,197,80,0,17,133,197,132,1,197,79,0,125,3,133,197,131,0,0,0,0,184,3,0,0,134,183,0,1,197,4,0,1,201,0,0,134,135,0,0,24,55,6,0,134,197,201,0,26,136,135,1,0,189,136,0,0,138,189,0,0,139,184,0,17,140,138,139,120,140,2,0,119,0,29,1,0,141,189,0,34,142,141,0,120,142,22,1,0,143,189,0,1,197,88,0,1,198,4,0,134,201,0,0,116,78,6,0,197,143,198,0,0,144,183,0,25,145,144,4,1,201,4,0,1,198,0,0,134,146,0,0,24,55,6,0,145,201,198,0,26,147,146,1,0,190,147,0,0,149,190,0,0,150,185,0,17,151,149,150,120,151,2,0,119,0,2,1,0,152,190,0,1,201,92,0,1,197,4,0,134,198,0,0,116,78,6,0,201,152,197,0,0,153,183,0,1,198,88,0,134,154,0,0,88,84,4,0,153,198,0,0,41,198,154,24,42,198,198,24,33,155,198,0,121,155,239,0,0,156,189,0,41,198,156,5,0,157,198,0,0,158,190,0,3,160,157,158,41,198,160,3,3,161,193,198,25,162,161,4,1,198,4,0,1,197,0,0,134,163,0,0,24,55,6,0,162,198,197,0,1,197,0,0,14,164,163,197,0,165,189,0,41,197,165,5,0,166,197,0,0,167,190,0,3,168,166,167,41,197,168,3,3,169,193,197,121,164,16,0,25,171,169,4,1,197,4,0,1,198,0,0,134,172,0,0,24,55,6,0,171,197,198,0,25,173,172,18,42,198,173,0,1,197,1,0,1,201,0,0,134,174,0,0,24,55,6,0,198,197,201,0,0,4,174,0,119,0,8,0,42,201,169,0,1,197,1,0,1,198,0,0,134,175,0,0,24,55,6,0,201,197,198,0,0,4,175,0,41,198,4,24,42,198,198,24,0,176,198,0,19,198,176,194,0,177,198,0,0,181,177,0,0,178,181,0,41,198,178,24,42,198,198,24,0,179,198,0,134,180,0,0,232,58,6,0,179,0,0,0,33,8,180,0,121,8,179,0,0,9,181,0,41,198,9,24,42,198,198,24,0,10,198,0,32,11,10,63,121,11,54,0,1,198,4,0,1,197,0,0,134,12,0,0,24,55,6,0,195,198,197,0,0,186,12,0,0,13,186,0,1,197,0,0,14,14,13,197,120,14,2,0,119,0,30,0,0,15,190,0,0,16,186,0,25,17,16,12,25,19,17,4,1,197,4,0,1,198,0,0,134,20,0,0,24,55,6,0,19,197,198,0,13,21,15,20,121,21,11,0,0,22,189,0,0,23,186,0,25,24,23,12,1,198,4,0,1,197,0,0,134,25,0,0,24,55,6,0,24,198,197,0,13,26,22,25,120,26,9,0,0,27,186,0,1,197,4,0,1,198,0,0,134,28,0,0,24,55,6,0,27,197,198,0,0,186,28,0,119,0,223,255,0,30,186,0,1,198,0,0,14,31,30,198,121,31,10,0,0,32,186,0,25,33,32,52,1,198,4,0,1,197,0,0,134,34,0,0,24,55,6,0,33,198,197,0,32,35,34,10,120,35,120,0,0,36,189,0,41,197,36,5,0,37,197,0,0,38,190,0,3,39,37,38,41,197,39,3,3,41,193,197,25,42,41,4,1,197,4,0,1,198,0,0,134,43,0,0,24,55,6,0,42,197,198,0,0,186,43,0,1,198,0,0,14,44,43,198,121,44,14,0,0,45,186,0,25,46,45,17,42,198,46,0,1,197,1,0,1,201,0,0,134,47,0,0,24,55,6,0,198,197,201,0,41,201,47,24,42,201,201,24,0,48,201,0,32,49,48,88,120,49,90,0,0,50,190,0,0,52,189,0,0,53,6,0,25,54,53,4,1,201,4,0,1,197,0,0,134,55,0,0,24,55,6,0,54,201,197,0,0,56,6,0,1,197,4,0,1,201,0,0,134,57,0,0,24,55,6,0,56,197,201,0,134,58,0,0,4,25,6,0,50,52,55,57,0,188,58,0,0,59,188,0,0,60,182,0,15,61,59,60,121,61,29,0,1,187,1,0,1,197,80,0,1,200,88,0,1,199,4,0,1,196,0,0,134,198,0,0,24,55,6,0,200,199,196,0,1,196,4,0,134,201,0,0,116,78,6,0,197,198,196,0,1,196,80,0,25,196,196,4,1,197,88,0,25,197,197,4,1,199,4,0,1,200,0,0,134,198,0,0,24,55,6,0,197,199,200,0,1,200,4,0,134,201,0,0,116,78,6,0,196,198,200,0,0,63,188,0,0,182,63,0,119,0,39,0,0,64,188,0,0,65,182,0,13,66,64,65,121,66,35,0,0,67,187,0,25,68,67,1,0,187,68,0,134,69,0,0,20,36,6,0,68,0,0,0,32,70,69,0,121,70,27,0,1,200,80,0,1,196,88,0,1,199,4,0,1,197,0,0,134,198,0,0,24,55,6,0,196,199,197,0,1,197,4,0,134,201,0,0,116,78,6,0,200,198,197,0,1,197,80,0,25,197,197,4,1,200,88,0,25,200,200,4,1,199,4,0,1,196,0,0,134,198,0,0,24,55,6,0,200,199,196,0,1,196,4,0,134,201,0,0,116,78,6,0,197,198,196,0,0,71,188,0,0,182,71,0,0,72,190,0,25,74,72,1,0,190,74,0,119,0,251,254,0,75,189,0,25,76,75,1,0,189,76,0,119,0,224,254,32,201,191,7,121,201,60,0,0,105,5,0,134,106,0,0,132,200,3,0,105,0,0,0,1,196,80,0,1,197,4,0,1,199,0,0,134,198,0,0,24,55,6,0,106,197,199,0,1,199,4,0,134,201,0,0,116,78,6,0,196,198,199,0,1,199,80,0,25,199,199,4,25,196,106,4,1,197,4,0,1,200,0,0,134,198,0,0,24,55,6,0,196,197,200,0,1,200,4,0,134,201,0,0,116,78,6,0,199,198,200,0,0,107,6,0,1,201,80,0,134,108,0,0,132,40,6,0,201,107,0,0,0,182,108,0,1,201,20,0,134,109,0,0,20,36,6,0,201,0,0,0,32,110,109,0,121,110,22,0,0,111,5,0,25,112,111,24,1,201,2,0,1,200,0,0,134,113,0,0,24,55,6,0,112,201,200,0,41,200,113,16,42,200,200,16,0,114,200,0,1,200,255,253,19,200,114,200,0,116,200,0,2,200,0,0,255,255,0,0,19,200,116,200,0,117,200,0,1,201,2,0,134,200,0,0,116,78,6,0,112,117,201,0,0,77,182,0,33,78,77,0,120,78,8,0,1,89,0,0,38,200,89,1,0,88,200,0,19,200,88,194,0,90,200,0,137,192,0,0,139,90,0,0,1,200,80,0,1,201,4,0,1,198,0,0,134,79,0,0,24,55,6,0,200,201,198,0,1,198,216,106,1,201,4,0,1,200,0,0,134,80,0,0,24,55,6,0,198,201,200,0,13,81,79,80,121,81,16,0,1,200,84,0,1,201,4,0,1,198,0,0,134,82,0,0,24,55,6,0,200,201,198,0,1,198,220,106,1,201,4,0,1,200,0,0,134,83,0,0,24,55,6,0,198,201,200,0,13,85,82,83,0,87,85,0,119,0,2,0,1,87,0,0,40,200,87,1,0,86,200,0,0,89,86,0,38,200,89,1,0,88,200,0,19,200,88,194,0,90,200,0,137,192,0,0,139,90,0,0,140,0,57,0,0,0,0,0,2,49,0,0,7,1,0,0,2,50,0,0,2,1,0,0,2,51,0,0,102,1,0,0,2,52,0,0,6,1,0,0,2,53,0,0,83,1,0,0,1,47,0,0,136,54,0,0,0,48,54,0,136,54,0,0,25,54,54,16,137,54,0,0,130,54,0,0,136,55,0,0,49,54,54,55,144,57,2,0,135,54,0,0,1,41,0,0,1,42,0,0,1,43,0,0,1,44,0,0,2,54,0,0,68,162,0,0,1,55,4,0,1,56,0,0,134,0,0,0,24,55,6,0,54,55,56,0,134,1,0,0,172,91,2,0,0,0,0,0,0,41,1,0,0,12,41,0,32,23,12,255,121,23,3,0,1,47,3,0,119,0,123,1,0,34,43,0,32,36,34,3,121,36,3,0,1,47,5,0,119,0,118,1,0,13,43,0,32,14,13,1,121,14,21,0,0,15,41,0,32,16,15,27,121,16,3,0,1,44,1,0,119,0,228,255,0,17,41,0,32,18,17,70,0,19,41,0,32,20,19,79,20,56,18,20,0,45,56,0,0,21,41,0,32,22,21,91,20,56,45,22,0,46,56,0,120,46,3,0,1,47,16,0,119,0,97,1,1,43,2,0,119,0,213,255,0,25,43,0,32,26,25,2,121,26,81,1,0,27,41,0,1,56,1,0,1,55,7,1,138,27,56,55,140,62,2,0,148,62,2,0,156,62,2,0,164,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,172,62,2,0,180,62,2,0,188,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,196,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,204,62,2,0,136,62,2,0,136,62,2,0,216,62,2,0,228,62,2,0,240,62,2,0,252,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,8,63,2,0,16,63,2,0,24,63,2,0,32,63,2,0,136,62,2,0,136,62,2,0,40,63,2,0,48,63,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,56,63,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,64,63,2,0,72,63,2,0,80,63,2,0,88,63,2,0,96,63,2,0,104,63,2,0,112,63,2,0,120,63,2,0,128,63,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,62,2,0,136,63,2,0,119,0,66,0,1,41,11,0,119,0,64,0,1,41,10,0,119,0,62,0,1,41,12,0,119,0,60,0,1,41,8,0,119,0,58,0,1,41,21,0,119,0,56,0,1,41,14,0,119,0,54,0,1,41,2,0,119,0,52,0,1,41,12,0,119,0,50,0,1,42,121,0,1,43,3,0,119,0,47,0,1,42,98,0,1,43,3,0,119,0,44,0,1,42,85,0,1,43,3,0,119,0,41,0,1,42,78,0,1,43,3,0,119,0,38,0,1,42,89,0,1,43,3,0,119,0,35,0,1,41,11,0,119,0,33,0,1,41,10,0,119,0,31,0,1,41,12,0,119,0,29,0,1,41,8,0,119,0,27,0,1,41,46,0,119,0,25,0,1,41,121,0,119,0,23,0,1,41,8,0,119,0,21,0,1,41,98,0,119,0,19,0,1,41,106,0,119,0,17,0,1,41,110,0,119,0,15,0,1,41,104,0,119,0,13,0,1,41,46,0,119,0,11,0,1,41,108,0,119,0,9,0,1,41,121,0,119,0,7,0,1,41,107,0,119,0,5,0,1,41,117,0,119,0,3,0,1,41,25,0,119,0,1,0,0,28,43,0,33,29,28,2,120,29,130,254,0,30,41,0,32,31,30,27,120,31,3,0,1,47,60,0,119,0,7,0,1,55,1,0,134,56,0,0,24,39,6,0,55,0,0,0,1,43,1,0,119,0,119,254,32,56,47,3,121,56,8,0,1,43,0,0,134,56,0,0,24,89,6,0,134,56,0,0,60,100,6,0,1,41,27,0,119,0,68,2,32,56,47,5,121,56,30,0,0,37,41,0,32,38,37,94,121,38,8,0,0,39,42,0,134,40,0,0,36,102,6,0,39,0,0,0,38,56,40,31,0,2,56,0,0,41,2,0,0,3,41,0,32,4,3,126,121,4,6,0,0,5,42,0,134,6,0,0,92,102,6,0,5,0,0,0,0,41,6,0,0,7,44,0,32,8,7,1,121,8,45,2,0,9,41,0,134,10,0,0,36,102,6,0,9,0,0,0,38,56,10,31,0,11,56,0,0,41,11,0,119,0,37,2,32,56,47,16,121,56,123,0,0,24,41,0,1,56,2,1,1,55,101,0,138,24,56,55,24,66,2,0,32,66,2,0,40,66,2,0,48,66,2,0,56,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,64,66,2,0,72,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,20,66,2,0,80,66,2,0,119,0,185,1,1,41,10,0,119,0,183,1,1,41,11,0,119,0,181,1,1,41,8,0,119,0,179,1,1,41,12,0,119,0,177,1,1,41,25,0,119,0,175,1,1,41,14,0,119,0,173,1,1,41,21,0,119,0,171,1,1,41,2,0,119,0,169,1,32,56,47,60,121,56,167,1,0,32,41,0,1,56,2,1,1,55,35,1,138,32,56,55,0,71,2,0,8,71,2,0,16,71,2,0,24,71,2,0,32,71,2,0,40,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,48,71,2,0,56,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,64,71,2,0,252,70,2,0,252,70,2,0,72,71,2,0,80,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,88,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,96,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,104,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,112,71,2,0,252,70,2,0,252,70,2,0,120,71,2,0,252,70,2,0,252,70,2,0,128,71,2,0,252,70,2,0,136,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,144,71,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,152,71,2,0,160,71,2,0,168,71,2,0,176,71,2,0,184,71,2,0,192,71,2,0,200,71,2,0,208,71,2,0,216,71,2,0,224,71,2,0,232,71,2,0,240,71,2,0,248,71,2,0,0,72,2,0,8,72,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,16,72,2,0,24,72,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,32,72,2,0,40,72,2,0,48,72,2,0,56,72,2,0,252,70,2,0,64,72,2,0,72,72,2,0,80,72,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,88,72,2,0,96,72,2,0,104,72,2,0,112,72,2,0,120,72,2,0,128,72,2,0,136,72,2,0,144,72,2,0,152,72,2,0,252,70,2,0,160,72,2,0,168,72,2,0,176,72,2,0,184,72,2,0,192,72,2,0,200,72,2,0,208,72,2,0,216,72,2,0,224,72,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,252,70,2,0,232,72,2,0,240,72,2,0,119,0,127,0,1,41,106,0,119,0,125,0,1,41,107,0,119,0,123,0,1,41,104,0,119,0,121,0,1,41,108,0,119,0,119,0,1,41,121,0,119,0,117,0,1,41,8,0,119,0,115,0,1,41,10,0,119,0,113,0,1,41,11,0,119,0,111,0,1,41,2,0,119,0,109,0,1,41,110,0,119,0,107,0,1,41,117,0,119,0,105,0,1,41,98,0,119,0,103,0,1,41,98,0,119,0,101,0,1,41,2,0,119,0,99,0,1,41,25,0,119,0,97,0,1,41,8,0,119,0,95,0,1,41,14,0,119,0,93,0,1,41,21,0,119,0,91,0,1,41,12,0,119,0,89,0,1,41,8,0,119,0,87,0,1,41,12,0,119,0,85,0,1,41,21,0,119,0,83,0,1,41,14,0,119,0,81,0,1,41,25,0,119,0,79,0,1,41,2,0,119,0,77,0,1,41,121,0,119,0,75,0,1,41,107,0,119,0,73,0,1,41,117,0,119,0,71,0,1,41,104,0,119,0,69,0,1,41,117,0,119,0,67,0,1,41,108,0,119,0,65,0,1,41,98,0,119,0,63,0,1,41,106,0,119,0,61,0,1,41,110,0,119,0,59,0,1,41,11,0,119,0,57,0,1,41,10,0,119,0,55,0,1,41,25,0,119,0,53,0,1,41,21,0,119,0,51,0,1,41,14,0,119,0,49,0,1,41,2,0,119,0,47,0,1,41,10,0,119,0,45,0,1,41,12,0,119,0,43,0,1,41,8,0,119,0,41,0,1,41,2,0,119,0,39,0,1,41,10,0,119,0,37,0,1,41,14,0,119,0,35,0,1,41,8,0,119,0,33,0,1,41,46,0,119,0,31,0,1,41,12,0,119,0,29,0,1,41,25,0,119,0,27,0,1,41,11,0,119,0,25,0,1,41,21,0,119,0,23,0,1,41,2,0,119,0,21,0,1,41,10,0,119,0,19,0,1,41,14,0,119,0,17,0,1,41,8,0,119,0,15,0,1,41,46,0,119,0,13,0,1,41,12,0,119,0,11,0,1,41,25,0,119,0,9,0,1,41,11,0,119,0,7,0,1,41,21,0,119,0,5,0,1,41,11,0,119,0,3,0,1,41,10,0,119,0,1,0,134,56,0,0,24,89,6,0,134,56,0,0,60,100,6,0,0,33,41,0,38,56,33,127,0,35,56,0,137,48,0,0,139,35,0,0,140,2,52,0,0,0,0,0,2,43,0,0,255,0,0,0,2,44,0,0,232,106,0,0,2,45,0,0,0,32,0,0,2,46,0,0,255,255,0,0,2,47,0,0,216,106,0,0,1,41,0,0,136,48,0,0,0,42,48,0,136,48,0,0,25,48,48,48,137,48,0,0,130,48,0,0,136,49,0,0,49,48,48,49,120,73,2,0,135,48,0,0,1,48,192,26,41,49,1,5,3,49,49,0,41,49,49,3,3,48,48,49,25,48,48,4,1,49,4,0,1,50,0,0,134,37,0,0,24,55,6,0,48,49,50,0,1,50,0,0,45,50,37,50,188,73,2,0,134,50,0,0,196,101,6,0,135,50,8,0,25,50,37,17,42,50,50,0,1,49,1,0,1,48,0,0,134,8,0,0,24,55,6,0,50,49,48,0,25,48,37,24,1,49,2,0,1,50,0,0,134,17,0,0,24,55,6,0,48,49,50,0,41,50,17,16,42,50,50,16,19,50,50,45,33,50,50,0,38,50,50,1,19,50,50,43,41,50,50,24,42,50,50,24,33,50,50,0,120,50,121,0,1,50,3,0,134,25,0,0,20,36,6,0,50,0,0,0,33,50,25,0,121,50,115,0,25,50,37,24,1,49,2,0,1,48,0,0,134,26,0,0,24,55,6,0,50,49,48,0,41,48,26,16,42,48,48,16,1,49,0,8,19,48,48,49,33,48,48,0,38,48,48,1,19,48,48,43,19,48,48,43,33,48,48,0,121,48,99,0,25,48,37,24,1,49,2,0,1,50,0,0,134,27,0,0,24,55,6,0,48,49,50,0,41,50,27,16,42,50,50,16,1,49,0,1,19,50,50,49,33,50,50,0,38,50,50,1,19,50,50,43,41,50,50,24,42,50,50,24,33,50,50,0,120,50,82,0,1,50,196,106,1,49,4,0,1,48,0,0,134,28,0,0,24,55,6,0,50,49,48,0,1,48,0,0,46,48,28,48,16,75,2,0,1,48,196,106,1,49,4,0,1,50,0,0,134,29,0,0,24,55,6,0,48,49,50,0,25,50,29,52,1,49,4,0,1,48,0,0,134,30,0,0,24,55,6,0,50,49,48,0,32,48,30,12,120,48,59,0,1,48,200,106,1,49,4,0,1,50,0,0,134,31,0,0,24,55,6,0,48,49,50,0,1,50,0,0,46,50,31,50,108,75,2,0,1,50,200,106,1,49,4,0,1,48,0,0,134,32,0,0,24,55,6,0,50,49,48,0,25,48,32,52,1,49,4,0,1,50,0,0,134,33,0,0,24,55,6,0,48,49,50,0,32,50,33,12,120,50,36,0,1,50,2,0,1,49,0,0,134,34,0,0,24,55,6,0,44,50,49,0,41,49,34,16,42,49,49,16,38,49,49,8,33,49,49,0,38,49,49,1,19,49,49,43,41,49,49,24,42,49,49,24,33,49,49,0,120,49,21,0,25,50,37,20,1,48,4,0,134,49,0,0,116,78,6,0,50,47,48,0,25,49,37,24,1,48,2,0,1,50,0,0,134,35,0,0,24,55,6,0,49,48,50,0,25,48,37,24,41,49,35,16,42,49,49,16,20,49,49,45,19,49,49,46,1,51,2,0,134,50,0,0,116,78,6,0,48,49,51,0,41,50,8,24,42,50,50,24,32,50,50,77,121,50,221,0,1,50,2,0,1,51,0,0,134,36,0,0,24,55,6,0,44,50,51,0,41,51,36,16,42,51,51,16,38,51,51,4,33,51,51,0,38,51,51,1,19,51,51,43,41,51,51,24,42,51,51,24,33,51,51,0,120,51,206,0,1,51,2,0,1,50,0,0,134,38,0,0,24,55,6,0,44,51,50,0,41,50,38,16,42,50,50,16,1,51,0,8,19,50,50,51,33,50,50,0,38,50,50,1,19,50,50,43,41,50,50,24,42,50,50,24,33,50,50,0,120,50,190,0,25,50,37,24,1,51,2,0,1,49,0,0,134,39,0,0,24,55,6,0,50,51,49,0,41,49,39,16,42,49,49,16,38,49,49,16,33,49,49,0,38,49,49,1,19,49,49,43,41,49,49,24,42,49,49,24,33,49,49,0,120,49,174,0,25,49,37,24,1,51,2,0,1,50,0,0,134,40,0,0,24,55,6,0,49,51,50,0,41,50,40,16,42,50,50,16,38,50,50,8,33,50,50,0,38,50,50,1,19,50,50,43,41,50,50,24,42,50,50,24,33,50,50,0,120,50,158,0,25,50,37,24,1,51,2,0,1,49,0,0,134,2,0,0,24,55,6,0,50,51,49,0,41,49,2,16,42,49,49,16,19,49,49,45,33,49,49,0,38,49,49,1,19,49,49,43,19,49,49,43,33,49,49,0,121,49,143,0,1,49,20,107,1,51,4,0,1,50,0,0,134,3,0,0,24,55,6,0,49,51,50,0,1,50,0,0,46,50,3,50,152,77,2,0,25,50,3,28,1,51,2,0,1,49,0,0,134,4,0,0,24,55,6,0,50,51,49,0,41,49,4,16,42,49,49,16,38,49,49,1,33,49,49,0,121,49,4,0,1,41,21,0,119,0,2,0,1,41,21,0,32,49,41,21,121,49,18,0,1,49,220,106,1,51,4,0,1,50,0,0,134,5,0,0,24,55,6,0,49,51,50,0,1,50,4,0,1,51,0,0,134,6,0,0,24,55,6,0,47,50,51,0,134,7,0,0,4,25,6,0,0,1,5,6,34,51,7,3,120,51,2,0,119,0,101,0,25,51,37,24,1,50,2,0,1,49,0,0,134,9,0,0,24,55,6,0,51,50,49,0,25,50,37,24,41,51,9,16,42,51,51,16,39,51,51,16,19,51,51,46,1,48,2,0,134,49,0,0,116,78,6,0,50,51,48,0,1,49,3,0,134,10,0,0,40,95,5,0,49,0,0,0,33,49,10,0,120,49,80,0,1,49,2,0,1,48,0,0,134,11,0,0,24,55,6,0,44,49,48,0,1,48,20,0,134,12,0,0,148,77,6,0,48,0,0,0,41,48,11,16,42,48,48,16,1,49,0,2,19,48,48,49,33,48,48,0,38,48,48,1,19,48,48,43,41,48,48,24,42,48,48,24,33,48,48,0,121,48,6,0,1,49,8,0,134,48,0,0,56,46,6,0,49,12,0,0,119,0,10,0,1,48,2,0,134,13,0,0,148,77,6,0,48,0,0,0,1,49,8,0,1,51,0,0,134,48,0,0,172,13,6,0,49,51,12,13,1,48,2,0,1,51,0,0,134,14,0,0,24,55,6,0,44,48,51,0,41,48,14,16,42,48,48,16,1,49,0,2,20,48,48,49,19,48,48,46,1,49,2,0,134,51,0,0,116,78,6,0,44,48,49,0,134,15,0,0,148,195,4,0,37,0,0,0,1,49,4,0,134,51,0,0,116,78,6,0,42,15,49,0,2,49,0,0,219,50,1,0,134,51,0,0,112,85,6,0,49,42,0,0,2,51,0,0,70,18,1,0,134,16,0,0,84,226,5,0,15,51,0,0,33,51,16,0,121,51,7,0,2,49,0,0,73,18,1,0,25,48,42,8,134,51,0,0,112,85,6,0,49,48,0,0,2,48,0,0,75,18,1,0,25,49,42,16,134,51,0,0,144,18,6,0,48,49,0,0,25,51,37,24,1,49,2,0,1,48,0,0,134,18,0,0,24,55,6,0,51,49,48,0,41,48,18,16,42,48,48,16,38,48,48,32,33,48,48,0,38,48,48,1,19,48,48,43,19,48,48,43,33,48,48,0,120,48,4,0,0,24,37,0,137,42,0,0,139,24,0,0,25,48,37,24,1,49,2,0,1,51,0,0,134,19,0,0,24,55,6,0,48,49,51,0,41,51,19,16,42,51,51,16,19,51,51,45,33,51,51,0,38,51,51,1,19,51,51,43,41,51,51,24,42,51,51,24,33,51,51,0,121,51,4,0,0,24,37,0,137,42,0,0,139,24,0,0,25,51,37,24,1,49,2,0,1,48,0,0,134,20,0,0,24,55,6,0,51,49,48,0,25,49,37,24,41,51,20,16,42,51,51,16,20,51,51,45,19,51,51,46,1,50,2,0,134,48,0,0,116,78,6,0,49,51,50,0,1,48,20,107,1,50,4,0,1,51,0,0,134,21,0,0,24,55,6,0,48,50,51,0,25,51,21,24,1,50,4,0,1,48,0,0,134,22,0,0,24,55,6,0,51,50,48,0,33,48,22,0,121,48,17,0,1,48,20,107,1,50,4,0,1,51,0,0,134,23,0,0,24,55,6,0,48,50,51,0,25,50,37,20,25,48,23,16,1,49,4,0,134,51,0,0,116,78,6,0,50,48,49,0,0,24,37,0,137,42,0,0,139,24,0,0,119,0,9,0,25,49,37,20,1,48,4,0,134,51,0,0,116,78,6,0,49,47,48,0,0,24,37,0,137,42,0,0,139,24,0,0,1,51,0,0,139,51,0,0,140,1,146,0,0,0,0,0,2,137,0,0,8,113,0,0,2,138,0,0,116,113,0,0,2,139,0,0,200,106,0,0,1,135,0,0,136,140,0,0,0,136,140,0,136,140,0,0,1,141,192,0,3,140,140,141,137,140,0,0,130,140,0,0,136,141,0,0,49,140,140,141,56,81,2,0,135,140,0,0,1,140,160,0,3,131,136,140,1,140,152,0,3,130,136,140,1,140,144,0,3,129,136,140,1,140,136,0,3,128,136,140,1,140,128,0,3,127,136,140,25,126,136,120,25,125,136,112,25,123,136,104,25,122,136,96,25,121,136,88,25,120,136,80,25,119,136,72,25,118,136,64,25,117,136,56,25,116,136,48,25,134,136,40,25,133,136,32,25,132,136,24,25,124,136,16,25,115,136,8,0,114,136,0,0,2,0,0,1,140,232,106,1,141,2,0,1,142,0,0,134,23,0,0,24,55,6,0,140,141,142,0,41,142,23,16,42,142,142,16,0,34,142,0,38,142,34,8,0,45,142,0,33,56,45,0,38,142,56,1,0,67,142,0,1,142,255,0,19,142,67,142,0,78,142,0,41,142,78,24,42,142,142,24,33,89,142,0,121,89,5,0,1,1,6,0,0,13,1,0,137,136,0,0,139,13,0,0,2,141,0,0,1,209,0,0,42,141,141,0,1,140,0,0,1,143,1,0,134,142,0,0,116,78,6,0,141,140,143,0,1,143,244,2,1,140,0,0,1,141,4,0,134,142,0,0,116,78,6,0,143,140,141,0,0,100,2,0,1,142,4,0,1,141,0,0,134,3,0,0,24,55,6,0,100,142,141,0,41,141,3,5,0,14,141,0,0,15,2,0,25,16,15,4,1,141,4,0,1,142,0,0,134,17,0,0,24,55,6,0,16,141,142,0,3,18,14,17,1,142,192,26,41,141,18,3,3,19,142,141,0,112,19,0,0,20,112,0,42,142,20,0,1,140,94,0,1,143,1,0,134,141,0,0,116,78,6,0,142,140,143,0,0,21,112,0,25,22,21,1,42,141,22,0,1,143,1,0,1,140,0,0,134,24,0,0,24,55,6,0,141,143,140,0,41,140,24,24,42,140,140,24,0,25,140,0,38,140,25,7,0,26,140,0,1,140,255,0,19,140,26,140,0,27,140,0,0,113,27,0,0,28,112,0,25,29,28,1,42,140,29,0,1,143,1,0,1,141,0,0,134,30,0,0,24,55,6,0,140,143,141,0,41,141,30,24,42,141,141,24,0,31,141,0,39,141,31,64,0,32,141,0,1,141,255,0,19,141,32,141,0,33,141,0,42,143,29,0,1,140,1,0,134,141,0,0,116,78,6,0,143,33,140,0,0,35,113,0,41,141,35,24,42,141,141,24,0,36,141,0,1,140,0,0,1,145,8,0,138,36,140,145,132,83,2,0,212,83,2,0,140,85,2,0,56,86,2,0,144,86,2,0,224,86,2,0,208,88,2,0,12,89,2,0,119,0,4,2,1,141,200,2,1,140,4,0,1,143,0,0,134,37,0,0,24,55,6,0,141,140,143,0,25,38,37,1,1,140,200,2,1,141,4,0,134,143,0,0,116,78,6,0,140,38,141,0,134,143,0,0,16,53,3,0,2,141,0,0,155,18,1,0,134,143,0,0,144,18,6,0,141,114,0,0,119,0,240,1,1,143,244,106,1,141,4,0,1,140,0,0,134,69,0,0,24,55,6,0,143,141,140,0,26,70,69,1,1,140,248,106,1,141,4,0,1,143,0,0,134,71,0,0,24,55,6,0,140,141,143,0,1,143,1,0,134,72,0,0,176,34,6,0,70,71,143,0,33,73,72,0,120,73,51,0,134,80,0,0,56,80,6,0,0,111,80,0,0,81,111,0,1,141,3,0,134,143,0,0,240,86,4,0,81,141,0,0,0,82,111,0,25,83,82,48,1,141,1,0,1,140,4,0,134,143,0,0,116,78,6,0,83,141,140,0,0,84,111,0,25,85,84,12,1,141,216,106,1,142,4,0,1,144,0,0,134,140,0,0,24,55,6,0,141,142,144,0,1,144,4,0,134,143,0,0,116,78,6,0,85,140,144,0,25,144,85,4,1,142,216,106,25,142,142,4,1,141,4,0,1,145,0,0,134,140,0,0,24,55,6,0,142,141,145,0,1,145,4,0,134,143,0,0,116,78,6,0,144,140,145,0,0,86,111,0,1,145,0,0,134,143,0,0,124,72,4,0,86,145,0,0,2,145,0,0,173,20,1,0,134,143,0,0,144,18,6,0,145,127,0,0,119,0,171,1,1,143,1,0,1,145,6,0,134,74,0,0,212,44,6,0,143,145,0,0,1,145,252,106,1,143,4,0,1,140,0,0,134,75,0,0,24,55,6,0,145,143,140,0,4,76,75,74,1,143,252,106,1,145,4,0,134,140,0,0,116,78,6,0,143,76,145,0,1,140,252,106,1,145,4,0,1,143,0,0,134,77,0,0,24,55,6,0,140,145,143,0,36,79,77,0,121,79,11,0,2,145,0,0,128,20,1,0,134,143,0,0,144,18,6,0,145,125,0,0,1,145,97,0,134,143,0,0,144,122,3,0,145,0,0,0,119,0,136,1,2,145,0,0,148,20,1,0,134,143,0,0,144,18,6,0,145,126,0,0,119,0,130,1,1,140,5,0,134,61,0,0,148,77,6,0,140,0,0,0,1,140,0,3,1,143,4,0,1,141,0,0,134,62,0,0,24,55,6,0,140,143,141,0,3,63,62,61,1,143,0,3,1,140,4,0,134,141,0,0,116,78,6,0,143,63,140,0,1,141,232,106,1,140,2,0,1,143,0,0,134,64,0,0,24,55,6,0,141,140,143,0,41,143,64,16,42,143,143,16,0,65,143,0,1,143,255,223,19,143,65,143,0,66,143,0,2,143,0,0,255,255,0,0,19,143,66,143,0,68,143,0,1,140,232,106,1,141,2,0,134,143,0,0,116,78,6,0,140,68,141,0,2,141,0,0,74,20,1,0,134,143,0,0,144,18,6,0,141,123,0,0,119,0,87,1,1,143,3,0,134,39,0,0,148,77,6,0,143,0,0,0,1,143,4,3,1,141,4,0,1,140,0,0,134,40,0,0,24,55,6,0,143,141,140,0,3,41,40,39,1,141,4,3,1,143,4,0,134,140,0,0,116,78,6,0,141,41,143,0,2,143,0,0,177,18,1,0,134,140,0,0,144,18,6,0,143,115,0,0,119,0,65,1,134,143,0,0,92,19,5,0,0,87,2,0,25,88,87,4,1,143,4,0,1,145,0,0,134,90,0,0,24,55,6,0,88,143,145,0,0,91,2,0,1,145,4,0,1,143,0,0,134,92,0,0,24,55,6,0,91,145,143,0,1,145,94,0,134,143,0,0,208,39,6,0,90,92,145,0,119,0,45,1,1,143,244,106,1,145,4,0,1,140,0,0,134,93,0,0,24,55,6,0,143,145,140,0,25,94,93,1,1,140,248,106,1,145,4,0,1,143,0,0,134,95,0,0,24,55,6,0,140,145,143,0,1,143,1,0,134,96,0,0,176,34,6,0,94,95,143,0,33,97,96,0,120,97,7,0,2,145,0,0,198,20,1,0,134,143,0,0,144,18,6,0,145,128,0,0,119,0,20,1,1,143,1,0,1,145,4,0,134,98,0,0,212,44,6,0,143,145,0,0,1,145,252,106,1,143,4,0,1,140,0,0,134,99,0,0,24,55,6,0,145,143,140,0,4,101,99,98,1,143,252,106,1,145,4,0,134,140,0,0,116,78,6,0,143,101,145,0,1,140,252,106,1,145,4,0,1,143,0,0,134,102,0,0,24,55,6,0,140,145,143,0,36,103,102,0,121,103,10,0,2,145,0,0,244,20,1,0,134,143,0,0,144,18,6,0,145,129,0,0,1,145,100,0,134,143,0,0,144,122,3,0,145,0,0,0,1,143,196,106,1,145,4,0,1,140,0,0,134,104,0,0,24,55,6,0,143,145,140,0,1,140,0,0,14,105,104,140,121,105,17,0,1,140,196,106,1,145,4,0,1,143,0,0,134,106,0,0], eb + 143360);
  HEAPU8.set([24,55,6,0,140,145,143,0,25,107,106,52,1,143,4,0,1,145,0,0,134,108,0,0,24,55,6,0,107,143,145,0,32,109,108,2,120,109,4,0,1,135,31,0,119,0,2,0,1,135,31,0,32,145,135,31,121,145,32,0,1,145,4,0,1,143,0,0,134,110,0,0,24,55,6,0,139,145,143,0,1,143,0,0,14,4,110,143,121,4,14,0,1,143,4,0,1,145,0,0,134,5,0,0,24,55,6,0,139,143,145,0,25,6,5,52,1,145,4,0,1,143,0,0,134,7,0,0,24,55,6,0,6,145,143,0,32,8,7,2,120,8,11,0,1,143,0,0,134,9,0,0,40,95,5,0,143,0,0,0,33,10,9,0,120,10,5,0,1,145,255,255,134,143,0,0,20,25,5,0,145,0,0,0,2,145,0,0,15,21,1,0,134,143,0,0,144,18,6,0,145,130,0,0,119,0,177,0,2,145,0,0,57,21,1,0,134,143,0,0,144,18,6,0,145,131,0,0,1,143,192,106,1,145,4,0,1,140,0,0,134,11,0,0,24,55,6,0,143,145,140,0,134,140,0,0,36,126,4,0,11,0,0,0,119,0,162,0,1,140,11,0,134,42,0,0,20,36,6,0,140,0,0,0,1,140,0,0,1,143,11,0,138,42,140,143,88,89,2,0,112,89,2,0,212,89,2,0,236,89,2,0,4,90,2,0,104,90,2,0,128,90,2,0,228,90,2,0,252,90,2,0,20,91,2,0,44,91,2,0,119,0,143,0,2,143,0,0,207,18,1,0,134,140,0,0,144,18,6,0,143,124,0,0,119,0,137,0,1,140,4,0,1,143,0,0,134,43,0,0,24,55,6,0,138,140,143,0,134,44,0,0,20,36,6,0,43,0,0,0,41,143,44,2,3,46,137,143,1,143,4,0,1,140,0,0,134,47,0,0,24,55,6,0,46,143,140,0,1,143,4,0,134,140,0,0,116,78,6,0,132,47,143,0,2,143,0,0,248,18,1,0,134,140,0,0,144,18,6,0,143,132,0,0,119,0,112,0,2,143,0,0,28,19,1,0,134,140,0,0,144,18,6,0,143,133,0,0,119,0,106,0,2,143,0,0,70,19,1,0,134,140,0,0,144,18,6,0,143,134,0,0,119,0,100,0,1,140,4,0,1,143,0,0,134,48,0,0,24,55,6,0,138,140,143,0,134,49,0,0,20,36,6,0,48,0,0,0,41,143,49,2,3,50,137,143,1,143,4,0,1,140,0,0,134,51,0,0,24,55,6,0,50,143,140,0,1,143,4,0,134,140,0,0,116,78,6,0,116,51,143,0,2,143,0,0,118,19,1,0,134,140,0,0,144,18,6,0,143,116,0,0,119,0,75,0,2,143,0,0,150,19,1,0,134,140,0,0,144,18,6,0,143,117,0,0,119,0,69,0,1,140,4,0,1,143,0,0,134,52,0,0,24,55,6,0,138,140,143,0,134,53,0,0,20,36,6,0,52,0,0,0,41,143,53,2,3,54,137,143,1,143,4,0,1,140,0,0,134,55,0,0,24,55,6,0,54,143,140,0,1,143,4,0,134,140,0,0,116,78,6,0,118,55,143,0,2,143,0,0,180,19,1,0,134,140,0,0,144,18,6,0,143,118,0,0,119,0,44,0,2,143,0,0,214,19,1,0,134,140,0,0,144,18,6,0,143,119,0,0,119,0,38,0,2,143,0,0,245,19,1,0,134,140,0,0,144,18,6,0,143,120,0,0,119,0,32,0,2,143,0,0,21,20,1,0,134,140,0,0,144,18,6,0,143,121,0,0,119,0,26,0,1,140,4,0,1,143,0,0,134,57,0,0,24,55,6,0,138,140,143,0,134,58,0,0,20,36,6,0,57,0,0,0,41,143,58,2,3,59,137,143,1,143,4,0,1,140,0,0,134,60,0,0,24,55,6,0,59,143,140,0,1,143,4,0,134,140,0,0,116,78,6,0,122,60,143,0,2,143,0,0,55,20,1,0,134,140,0,0,144,18,6,0,143,122,0,0,119,0,1,0,134,140,0,0,96,111,6,0,0,12,113,0,0,1,12,0,0,13,1,0,137,136,0,0,139,13,0,0,140,1,180,0,0,0,0,0,2,173,0,0,60,162,0,0,2,174,0,0,40,169,0,0,2,175,0,0,27,2,0,0,1,171,0,0,136,176,0,0,0,172,176,0,136,176,0,0,25,176,176,16,137,176,0,0,130,176,0,0,136,177,0,0,49,176,176,177,248,91,2,0,135,176,0,0,0,3,0,0,0,80,3,0,1,176,0,0,14,91,80,176,120,91,5,0,1,2,255,255,0,76,2,0,137,172,0,0,139,76,0,0,1,170,0,0,1,176,4,0,1,177,0,0,134,102,0,0,24,55,6,0,173,176,177,0,25,113,102,68,1,177,4,0,1,176,0,0,134,124,0,0,24,55,6,0,113,177,176,0,33,135,124,0,121,135,16,0,1,176,4,0,1,177,0,0,134,146,0,0,24,55,6,0,173,176,177,0,25,157,146,68,1,177,4,0,1,176,0,0,134,4,0,0,24,55,6,0,157,177,176,0,41,176,4,1,0,15,176,0,0,170,15,0,119,0,27,0,0,26,3,0,25,37,26,64,1,176,4,0,1,177,0,0,134,48,0,0,24,55,6,0,37,176,177,0,33,59,48,0,121,59,18,0,0,70,3,0,25,77,70,64,1,177,4,0,1,176,0,0,134,78,0,0,24,55,6,0,77,177,176,0,28,176,78,50,38,176,176,255,0,79,176,0,0,170,79,0,0,81,170,0,33,82,81,0,1,176,1,0,125,1,82,79,176,0,0,0,0,170,1,0,0,83,3,0,25,84,83,24,1,176,4,0,1,177,0,0,134,85,0,0,24,55,6,0,84,176,177,0,38,177,85,16,0,86,177,0,33,87,86,0,120,87,87,0,0,88,3,0,25,89,88,37,42,177,89,0,1,176,1,0,1,178,0,0,134,90,0,0,24,55,6,0,177,176,178,0,41,178,90,24,42,178,178,24,33,92,178,0,121,92,3,0,1,171,11,0,119,0,57,0,0,93,3,0,25,94,93,20,1,178,4,0,1,176,0,0,134,95,0,0,24,55,6,0,94,178,176,0,0,96,3,0,25,97,96,4,1,176,4,0,1,178,0,0,134,98,0,0,24,55,6,0,97,176,178,0,3,99,95,98,1,178,4,0,1,176,0,0,134,100,0,0,24,55,6,0,173,178,176,0,25,101,100,20,1,176,4,0,1,178,0,0,134,103,0,0,24,55,6,0,101,176,178,0,14,104,99,103,120,104,29,0,0,105,3,0,25,106,105,16,1,178,4,0,1,176,0,0,134,107,0,0,24,55,6,0,106,178,176,0,0,108,3,0,1,176,4,0,1,178,0,0,134,109,0,0,24,55,6,0,108,176,178,0,3,110,107,109,1,178,4,0,1,176,0,0,134,111,0,0,24,55,6,0,173,178,176,0,25,112,111,16,1,176,4,0,1,178,0,0,134,114,0,0,24,55,6,0,112,176,178,0,14,115,110,114,120,115,2,0,1,171,11,0,32,178,171,11,121,178,11,0,0,116,3,0,134,117,0,0,56,223,5,0,116,0,0,0,1,178,255,0,19,178,117,178,0,118,178,0,33,119,118,0,120,119,2,0,119,0,5,0,0,120,3,0,134,178,0,0,124,212,4,0,120,0,0,0,2,178,0,0,32,165,0,0,1,176,4,0,1,177,0,0,134,121,0,0,24,55,6,0,178,176,177,0,33,122,121,0,121,122,28,0,2,177,0,0,32,165,0,0,1,176,4,0,1,178,0,0,134,123,0,0,24,55,6,0,177,176,178,0,26,125,123,1,2,176,0,0,32,165,0,0,1,177,4,0,134,178,0,0,116,78,6,0,176,125,177,0,2,178,0,0,36,165,0,0,41,177,125,2,3,126,178,177,1,177,4,0,1,178,0,0,134,127,0,0,24,55,6,0,126,177,178,0,0,2,127,0,0,76,2,0,137,172,0,0,139,76,0,0,1,178,4,0,1,177,0,0,134,128,0,0,24,55,6,0,173,178,177,0,25,129,128,4,42,177,129,0,1,178,1,0,1,176,0,0,134,130,0,0,24,55,6,0,177,178,176,0,41,176,130,24,42,176,176,24,33,131,176,0,120,131,58,0,1,176,4,0,1,178,0,0,134,132,0,0,24,55,6,0,173,176,178,0,25,133,132,2,42,178,133,0,1,176,1,0,1,177,0,0,134,134,0,0,24,55,6,0,178,176,177,0,41,177,134,24,42,177,177,24,33,136,177,0,120,136,42,0,2,177,0,0,36,169,0,0,1,176,4,0,1,178,0,0,134,137,0,0,24,55,6,0,177,176,178,0,1,178,4,0,1,176,0,0,134,138,0,0,24,55,6,0,174,178,176,0,15,139,137,138,121,139,28,0,2,176,0,0,36,169,0,0,1,178,4,0,1,177,0,0,134,140,0,0,24,55,6,0,176,178,177,0,25,141,140,1,2,178,0,0,36,169,0,0,1,176,4,0,134,177,0,0,116,78,6,0,178,141,176,0,2,177,0,0,44,169,0,0,41,176,140,2,3,142,177,176,1,176,4,0,1,177,0,0,134,143,0,0,24,55,6,0,142,176,177,0,0,2,143,0,0,76,2,0,137,172,0,0,139,76,0,0,1,176,0,0,1,178,4,0,134,177,0,0,116,78,6,0,174,176,178,0,2,178,0,0,36,169,0,0,1,176,0,0,1,179,4,0,134,177,0,0,116,78,6,0,178,176,179,0,134,144,0,0,192,1,6,0,41,177,144,24,42,177,177,24,33,145,177,0,120,145,57,0,1,177,4,0,1,179,0,0,134,147,0,0,24,55,6,0,173,177,179,0,25,148,147,68,1,179,4,0,1,177,0,0,134,149,0,0,24,55,6,0,148,179,177,0,33,150,149,0,121,150,3,0,1,171,23,0,119,0,26,0,0,151,3,0,25,152,151,64,1,177,4,0,1,179,0,0,134,153,0,0,24,55,6,0,152,177,179,0,33,154,153,0,121,154,3,0,1,171,23,0,119,0,15,0,0,160,3,0,25,161,160,39,42,179,161,0,1,177,1,0,1,176,0,0,134,162,0,0,24,55,6,0,179,177,176,0,41,176,162,24,42,176,176,24,33,163,176,0,121,163,3,0,1,171,27,0,119,0,237,0,32,176,171,23,121,176,10,0,1,171,0,0,0,155,170,0,33,156,155,0,120,156,3,0,1,171,24,0,119,0,229,0,0,158,170,0,26,159,158,1,0,170,159,0,1,177,50,0,134,176,0,0,112,90,6,0,177,0,0,0,119,0,195,255,134,164,0,0,100,13,4,0,0,168,164,0,1,176,4,0,1,177,0,0,134,165,0,0,24,55,6,0,173,176,177,0,25,166,165,82,42,177,166,0,1,176,1,0,1,179,0,0,134,167,0,0,24,55,6,0,177,176,179,0,41,179,167,24,42,179,179,24,33,5,179,0,121,5,23,0,0,6,3,0,25,7,6,42,42,179,7,0,1,176,1,0,1,177,0,0,134,8,0,0,24,55,6,0,179,176,177,0,41,177,8,24,42,177,177,24,33,9,177,0,120,9,3,0,1,168,255,255,119,0,9,0,0,10,168,0,13,11,10,175,121,11,6,0,0,12,3,0,134,13,0,0,24,134,3,0,12,0,0,0,0,168,13,0,0,14,168,0,32,16,14,255,120,16,151,255,0,17,168,0,32,18,17,13,121,18,35,0,1,177,4,0,1,176,0,0,134,19,0,0,24,55,6,0,173,177,176,0,25,20,19,1,42,176,20,0,1,177,1,0,1,179,0,0,134,21,0,0,24,55,6,0,176,177,179,0,1,179,255,0,19,179,21,179,0,22,179,0,33,23,22,0,121,23,18,0,1,179,4,0,1,177,0,0,134,24,0,0,24,55,6,0,173,179,177,0,25,25,24,4,42,177,25,0,1,179,1,0,1,176,0,0,134,27,0,0,24,55,6,0,177,179,176,0,41,176,27,24,42,176,176,24,33,28,176,0,120,28,2,0,1,168,10,0,1,176,4,0,1,179,0,0,134,29,0,0,24,55,6,0,173,176,179,0,25,30,29,3,42,179,30,0,1,176,1,0,1,177,0,0,134,31,0,0,24,55,6,0,179,176,177,0,1,177,255,0,19,177,31,177,0,32,177,0,33,33,32,0,121,33,26,0,1,177,4,0,1,176,0,0,134,34,0,0,24,55,6,0,173,177,176,0,25,35,34,82,42,176,35,0,1,177,1,0,1,179,0,0,134,36,0,0,24,55,6,0,176,177,179,0,41,179,36,24,42,179,179,24,33,38,179,0,120,38,10,0,0,39,3,0,0,40,168,0,134,179,0,0,64,245,1,0,39,40,0,0,0,41,3,0,134,179,0,0,124,212,4,0,41,0,0,0,1,179,4,0,1,177,0,0,134,42,0,0,24,55,6,0,173,179,177,0,25,43,42,4,42,177,43,0,1,179,1,0,1,176,0,0,134,44,0,0,24,55,6,0,177,179,176,0,1,176,255,0,19,176,44,176,0,45,176,0,33,46,45,0,121,46,3,0,1,171,44,0,119,0,79,0,1,176,4,0,1,179,0,0,134,47,0,0,24,55,6,0,173,176,179,0,25,49,47,2,42,179,49,0,1,176,1,0,1,177,0,0,134,50,0,0,24,55,6,0,179,176,177,0,1,177,255,0,19,177,50,177,0,51,177,0,33,52,51,0,121,52,3,0,1,171,44,0,119,0,60,0,0,54,168,0,32,55,54,8,1,177,4,0,1,176,0,0,134,56,0,0,24,55,6,0,174,177,176,0,121,55,21,0,2,176,0,0,36,169,0,0,1,177,4,0,1,179,0,0,134,57,0,0,24,55,6,0,176,177,179,0,15,58,57,56,121,58,34,0,1,179,4,0,1,177,0,0,134,60,0,0,24,55,6,0,174,179,177,0,26,61,60,1,1,179,4,0,134,177,0,0,116,78,6,0,174,61,179,0,119,0,23,0,1,177,254,1,15,62,56,177,121,62,20,0,0,63,168,0,1,177,4,0,1,179,0,0,134,64,0,0,24,55,6,0,174,177,179,0,25,65,64,1,1,177,4,0,134,179,0,0,116,78,6,0,174,65,177,0,2,179,0,0,44,169,0,0,41,177,64,2,3,66,179,177,1,179,4,0,134,177,0,0,116,78,6,0,66,63,179,0,0,67,168,0,32,68,67,10,0,69,168,0,32,71,69,13,20,177,68,71,0,169,177,0,121,169,233,254,1,171,51,0,119,0,1,0,32,177,171,24,121,177,6,0,1,2,255,255,0,76,2,0,137,172,0,0,139,76,0,0,119,0,45,0,32,177,171,27,121,177,6,0,1,2,255,255,0,76,2,0,137,172,0,0,139,76,0,0,119,0,38,0,32,177,171,44,121,177,7,0,0,53,168,0,0,2,53,0,0,76,2,0,137,172,0,0,139,76,0,0,119,0,30,0,32,177,171,51,121,177,28,0,2,177,0,0,36,169,0,0,1,179,4,0,1,176,0,0,134,72,0,0,24,55,6,0,177,179,176,0,25,73,72,1,2,179,0,0,36,169,0,0,1,177,4,0,134,176,0,0,116,78,6,0,179,73,177,0,2,176,0,0,44,169,0,0,41,177,72,2,3,74,176,177,1,177,4,0,1,176,0,0,134,75,0,0,24,55,6,0,74,177,176,0,0,2,75,0,0,76,2,0,137,172,0,0,139,76,0,0,1,176,0,0,139,176,0,0,140,5,75,0,0,0,0,0,0,5,0,0,0,6,1,0,0,7,6,0,0,8,2,0,0,9,3,0,0,10,9,0,32,69,7,0,121,69,41,0,33,11,4,0,32,69,10,0,121,69,18,0,121,11,12,0,9,70,5,8,1,71,4,0,134,69,0,0,116,78,6,0,4,70,71,0,25,71,4,4,1,70,0,0,1,72,4,0,134,69,0,0,116,78,6,0,71,70,72,0,1,68,0,0,7,67,5,8,129,68,0,0,139,67,0,0,119,0,21,0,120,11,5,0,1,68,0,0,1,67,0,0,129,68,0,0,139,67,0,0,38,72,0,255,1,70,4,0,134,69,0,0,116,78,6,0,4,72,70,0,25,70,4,4,38,72,1,0,1,71,4,0,134,69,0,0,116,78,6,0,70,72,71,0,1,68,0,0,1,67,0,0,129,68,0,0,139,67,0,0,32,12,10,0,32,69,8,0,121,69,111,0,121,12,18,0,33,69,4,0,121,69,12,0,9,71,7,8,1,72,4,0,134,69,0,0,116,78,6,0,4,71,72,0,25,72,4,4,1,71,0,0,1,70,4,0,134,69,0,0,116,78,6,0,72,71,70,0,1,68,0,0,7,67,7,8,129,68,0,0,139,67,0,0,32,69,5,0,121,69,18,0,33,69,4,0,121,69,12,0,1,70,0,0,1,71,4,0,134,69,0,0,116,78,6,0,4,70,71,0,25,71,4,4,9,70,7,10,1,72,4,0,134,69,0,0,116,78,6,0,71,70,72,0,1,68,0,0,7,67,7,10,129,68,0,0,139,67,0,0,26,13,10,1,19,69,13,10,32,69,69,0,121,69,25,0,33,69,4,0,121,69,15,0,38,72,0,255,39,72,72,0,1,70,4,0,134,69,0,0,116,78,6,0,4,72,70,0,25,70,4,4,19,72,13,7,38,71,1,0,20,72,72,71,1,71,4,0,134,69,0,0,116,78,6,0,70,72,71,0,1,68,0,0,134,69,0,0,196,76,6,0,10,0,0,0,24,69,7,69,0,67,69,0,129,68,0,0,139,67,0,0,135,14,27,0,10,0,0,0,135,69,27,0,7,0,0,0,4,15,14,69,37,69,15,30,121,69,15,0,25,16,15,1,1,69,31,0,4,17,69,15,0,36,16,0,22,69,7,17,24,71,5,16,20,69,69,71,0,35,69,0,24,69,7,16,0,34,69,0,1,33,0,0,22,69,5,17,0,32,69,0,119,0,160,0,32,69,4,0,121,69,5,0,1,68,0,0,1,67,0,0,129,68,0,0,139,67,0,0,38,71,0,255,39,71,71,0,1,72,4,0,134,69,0,0,116,78,6,0,4,71,72,0,25,72,4,4,38,71,1,0,20,71,6,71,1,70,4,0,134,69,0,0,116,78,6,0,72,71,70,0,1,68,0,0,1,67,0,0,129,68,0,0,139,67,0,0,119,0,136,0,120,12,50,0,135,27,27,0,10,0,0,0,135,69,27,0,7,0,0,0,4,28,27,69,37,69,28,31,121,69,20,0,25,29,28,1,1,69,31,0,4,30,69,28,26,69,28,31,42,69,69,31,0,31,69,0,0,36,29,0,24,69,5,29,19,69,69,31,22,70,7,30,20,69,69,70,0,35,69,0,24,69,7,29,19,69,69,31,0,34,69,0,1,33,0,0,22,69,5,30,0,32,69,0,119,0,109,0,32,69,4,0,121,69,5,0,1,68,0,0,1,67,0,0,129,68,0,0,139,67,0,0,38,70,0,255,39,70,70,0,1,71,4,0,134,69,0,0,116,78,6,0,4,70,71,0,25,71,4,4,38,70,1,0,20,70,6,70,1,72,4,0,134,69,0,0,116,78,6,0,71,70,72,0,1,68,0,0,1,67,0,0,129,68,0,0,139,67,0,0,26,18,8,1,19,69,18,8,33,69,69,0,121,69,44,0,135,69,27,0,8,0,0,0,25,20,69,33,135,69,27,0,7,0,0,0,4,21,20,69,1,69,64,0,4,22,69,21,1,69,32,0,4,23,69,21,42,69,23,31,0,24,69,0,26,25,21,32,42,69,25,31,0,26,69,0,0,36,21,0,26,69,23,1,42,69,69,31,24,72,7,25,19,69,69,72,22,72,7,23,24,70,5,21,20,72,72,70,19,72,72,26,20,69,69,72,0,35,69,0,24,69,7,21,19,69,26,69,0,34,69,0,22,69,5,22,19,69,69,24,0,33,69,0,22,69,7,22,24,72,5,25,20,69,69,72,19,69,69,24,22,72,5,23,26,70,21,33,42,70,70,31,19,72,72,70,20,69,69,72,0,32,69,0,119,0,39,0,33,69,4,0,121,69,12,0,19,72,18,5,1,70,4,0,134,69,0,0,116,78,6,0,4,72,70,0,25,70,4,4,1,72,0,0,1,71,4,0,134,69,0,0,116,78,6,0,70,72,71,0,32,69,8,1,121,69,10,0,38,69,1,0,20,69,6,69,0,68,69,0,38,69,0,255,39,69,69,0,0,67,69,0,129,68,0,0,139,67,0,0,119,0,15,0,134,19,0,0,196,76,6,0,8,0,0,0,24,69,7,19,39,69,69,0,0,68,69,0,1,69,32,0,4,69,69,19,22,69,7,69,24,71,5,19,20,69,69,71,0,67,69,0,129,68,0,0,139,67,0,0,32,69,36,0,121,69,8,0,0,63,32,0,0,62,33,0,0,61,34,0,0,60,35,0,1,59,0,0,1,58,0,0,119,0,89,0,38,69,2,255,39,69,69,0,0,37,69,0,38,69,3,0,20,69,9,69,0,38,69,0,1,69,255,255,1,71,255,255,134,39,0,0,84,105,6,0,37,38,69,71,128,71,0,0,0,40,71,0,0,46,32,0,0,45,33,0,0,44,34,0,0,43,35,0,0,42,36,0,1,41,0,0,43,71,45,31,41,69,46,1,20,71,71,69,0,47,71,0,41,71,45,1,20,71,41,71,0,48,71,0,41,71,43,1,43,69,46,31,20,71,71,69,39,71,71,0,0,49,71,0,43,71,43,31,41,69,44,1,20,71,71,69,0,50,71,0,134,71,0,0,240,98,6,0,39,40,49,50,128,71,0,0,0,51,71,0,42,71,51,31,34,72,51,0,1,70,255,255,1,73,0,0,125,69,72,70,73,0,0,0,41,69,69,1,20,71,71,69,0,52,71,0,38,71,52,1,0,53,71,0,19,71,52,37,34,73,51,0,1,70,255,255,1,72,0,0,125,69,73,70,72,0,0,0,42,69,69,31,34,70,51,0,1,73,255,255,1,74,0,0,125,72,70,73,74,0,0,0,41,72,72,1,20,69,69,72,19,69,69,38,134,54,0,0,240,98,6,0,49,50,71,69,0,55,54,0,128,69,0,0,0,56,69,0,26,57,42,1,32,69,57,0,120,69,8,0,0,46,47,0,0,45,48,0,0,44,56,0,0,43,55,0,0,42,57,0,0,41,53,0,119,0,194,255,0,63,47,0,0,62,48,0,0,61,56,0,0,60,55,0,1,59,0,0,0,58,53,0,0,64,62,0,1,65,0,0,20,69,63,65,0,66,69,0,33,69,4,0,121,69,11,0,39,71,60,0,1,72,4,0,134,69,0,0,116,78,6,0,4,71,72,0,25,72,4,4,1,71,4,0,134,69,0,0,116,78,6,0,72,61,71,0,39,69,64,0,43,69,69,31,41,71,66,1,20,69,69,71,41,71,65,1,43,72,64,31,20,71,71,72,38,71,71,0,20,69,69,71,20,69,69,59,0,68,69,0,41,69,64,1,1,71,0,0,43,71,71,31,20,69,69,71,38,69,69,254,20,69,69,58,0,67,69,0,129,68,0,0,139,67,0,0,140,2,152,0,0,0,0,0,2,145,0,0,60,162,0,0,2,146,0,0,76,162,0,0,2,147,0,0,80,162,0,0,1,143,0,0,136,148,0,0,0,144,148,0,136,148,0,0,25,148,148,64,137,148,0,0,130,148,0,0,136,149,0,0,49,148,148,149,164,108,2,0,135,148,0,0,25,137,144,40,25,141,144,32,25,140,144,24,25,139,144,16,25,138,144,8,0,136,144,0,0,3,0,0,0,46,1,0,1,148,4,0,1,149,0,0,134,57,0,0,24,55,6,0,145,148,149,0,1,149,0,0,14,68,57,149,121,68,21,0,1,149,4,0,1,148,0,0,134,79,0,0,24,55,6,0,145,149,148,0,42,148,79,0,1,149,1,0,1,150,0,0,134,90,0,0,24,55,6,0,148,149,150,0,1,150,255,0,19,150,90,150,0,101,150,0,33,112,101,0,121,112,5,0,1,2,0,0,0,39,2,0,137,144,0,0,139,39,0,0,0,123,3,0,0,4,46,0,134,15,0,0,236,139,1,0,123,4,0,0,32,26,15,255,121,26,16,0,2,150,0,0,52,195,0,0,1,149,4,0,1,148,0,0,134,37,0,0,24,55,6,0,150,149,148,0,2,149,0,0,99,72,1,0,134,148,0,0,84,83,6,0,37,149,136,0,1,149,8,0,135,148,7,0,149,0,0,0,1,148,4,0,1,149,0,0,134,40,0,0,24,55,6,0,145,148,149,0,25,41,40,1,42,148,41,0,1,150,1,0,1,151,1,0,134,149,0,0,116,78,6,0,148,150,151,0,1,149,4,0,1,151,0,0,134,42,0,0,24,55,6,0,145,149,151,0,25,43,42,5,42,149,43,0,1,150,0,0,1,148,1,0,134,151,0,0,116,78,6,0,149,150,148,0,1,151,4,0,1,148,0,0,134,44,0,0,24,55,6,0,145,151,148,0,25,45,44,4,42,151,45,0,1,150,0,0,1,149,1,0,134,148,0,0,116,78,6,0,151,150,149,0,1,148,4,0,1,149,0,0,134,47,0,0,24,55,6,0,145,148,149,0,25,48,47,2,42,148,48,0,1,150,1,0,1,151,1,0,134,149,0,0,116,78,6,0,148,150,151,0,1,149,4,0,1,151,0,0,134,49,0,0,24,55,6,0,145,149,151,0,25,50,49,80,42,149,50,0,1,150,0,0,1,148,1,0,134,151,0,0,116,78,6,0,149,150,148,0,1,151,4,0,1,148,0,0,134,51,0,0,24,55,6,0,145,151,148,0,25,52,51,81,42,151,52,0,1,150,0,0,1,149,1,0,134,148,0,0,116,78,6,0,151,150,149,0,1,148,4,0,1,149,0,0,134,53,0,0,24,55,6,0,145,148,149,0,25,54,53,3,42,148,54,0,1,150,1,0,1,151,1,0,134,149,0,0,116,78,6,0,148,150,151,0,1,149,4,0,1,151,0,0,134,55,0,0,24,55,6,0,145,149,151,0,25,56,55,24,1,149,1,0,1,150,4,0,134,151,0,0,116,78,6,0,56,149,150,0,1,151,4,0,1,150,0,0,134,58,0,0,24,55,6,0,145,151,150,0,25,59,58,8,42,151,59,0,1,149,0,0,1,148,1,0,134,150,0,0,116,78,6,0,151,149,148,0,1,150,4,0,1,148,0,0,134,60,0,0,24,55,6,0,145,150,148,0,25,61,60,40,1,150,0,0,1,149,4,0,134,148,0,0,116,78,6,0,61,150,149,0,1,148,4,0,1,149,0,0,134,62,0,0,24,55,6,0,145,148,149,0,25,63,62,44,1,148,0,0,1,150,4,0,134,149,0,0,116,78,6,0,63,148,150,0,1,149,4,0,1,150,0,0,134,64,0,0,24,55,6,0,145,149,150,0,25,65,64,60,1,149,0,0,1,148,4,0,134,150,0,0,116,78,6,0,65,149,148,0,1,150,4,0,1,148,0,0,134,66,0,0,24,55,6,0,145,150,148,0,25,67,66,64,1,150,0,0,1,149,4,0,134,148,0,0,116,78,6,0,67,150,149,0,1,148,4,0,1,149,0,0,134,69,0,0,24,55,6,0,145,148,149,0,25,70,69,68,1,148,0,0,1,150,4,0,134,149,0,0,116,78,6,0,70,148,150,0,1,149,4,0,1,150,0,0,134,71,0,0,24,55,6,0,145,149,150,0,25,72,71,84,1,149,255,255,1,148,2,0,134,150,0,0,116,78,6,0,72,149,148,0,134,73,0,0,148,115,6,0,1,150,4,0,1,148,0,0,134,74,0,0,24,55,6,0,145,150,148,0,25,75,74,28,1,150,4,0,134,148,0,0,116,78,6,0,75,73,150,0,1,148,4,0,1,150,0,0,134,76,0,0,24,55,6,0,145,148,150,0,25,77,76,32,1,150,4,0,1,148,0,0,134,78,0,0,24,55,6,0,77,150,148,0,1,150,4,0,134,148,0,0,116,78,6,0,146,78,150,0,1,148,4,0,1,150,0,0,134,80,0,0,24,55,6,0,145,148,150,0,25,81,80,36,1,150,4,0,1,148,0,0,134,82,0,0,24,55,6,0,81,150,148,0,1,150,4,0,134,148,0,0,116,78,6,0,147,82,150,0,1,148,4,0,1,150,0,0,134,83,0,0,24,55,6,0,146,148,150,0,34,84,83,2,1,150,4,0,1,148,0,0,134,85,0,0,24,55,6,0,147,150,148,0,34,86,85,2,20,148,84,86,0,135,148,0,121,135,35,0,2,148,0,0,52,195,0,0,1,150,4,0,1,149,0,0,134,87,0,0,24,55,6,0,148,150,149,0,1,149,4,0,1,150,0,0,134,88,0,0,24,55,6,0,146,149,150,0,1,150,4,0,1,149,0,0,134,89,0,0,24,55,6,0,147,150,149,0,1,150,4,0,134,149,0,0,116,78,6,0,138,88,150,0,25,142,138,4,1,150,4,0,134,149,0,0,116,78,6,0,142,89,150,0,2,150,0,0,131,72,1,0,134,149,0,0,84,83,6,0,87,150,138,0,1,150,4,0,135,149,7,0,150,0,0,0,1,149,4,0,1,150,0,0,134,91,0,0,24,55,6,0,146,149,150,0,1,150,4,0,1,149,0,0,134,92,0,0,24,55,6,0,147,150,149,0,1,149,0,0,1,150,0,0,134,93,0,0,148,240,4,0,91,92,149,150,2,149,0,0,64,162,0,0,1,148,4,0,134,150,0,0,116,78,6,0,149,93,148,0,1,150,0,0,13,94,93,150,121,94,16,0,2,150,0,0,52,195,0,0,1,148,4,0,1,149,0,0,134,95,0,0,24,55,6,0,150,148,149,0,2,148,0,0,172,72,1,0,134,149,0,0,84,83,6,0,95,148,139,0,1,148,2,0,135,149,7,0,148,0,0,0,1,149,4,0,1,148,0,0,134,96,0,0,24,55,6,0,146,149,148,0,1,148,4,0,1,149,0,0,134,97,0,0,24,55,6,0,147,148,149,0,1,149,0,0,1,148,0,0,134,98,0,0,148,240,4,0,96,97,149,148,2,149,0,0,72,162,0,0,1,150,4,0,134,148,0,0,116,78,6,0,149,98,150,0,1,148,0,0,13,99,98,148,121,99,16,0,2,148,0,0,52,195,0,0,1,150,4,0,1,149,0,0,134,100,0,0,24,55,6,0,148,150,149,0,2,150,0,0,209,72,1,0,134,149,0,0,84,83,6,0,100,150,140,0,1,150,2,0,135,149,7,0,150,0,0,0,2,149,0,0,72,162,0,0,1,150,4,0,1,148,0,0,134,102,0,0,24,55,6,0,149,150,148,0,1,150,255,255,134,148,0,0,20,53,6,0,102,150,0,0,2,148,0,0,72,162,0,0,1,150,4,0,1,149,0,0,134,103,0,0,24,55,6,0,148,150,149,0,134,149,0,0,56,73,6,0,103,0,0,0,134,149,0,0,128,186,3,0,1,149,4,0,1,150,0,0,134,104,0,0,24,55,6,0,145,149,150,0,25,105,104,52,1,150,4,0,1,149,0,0,134,106,0,0,24,55,6,0,105,150,149,0,1,149,4,0,1,150,0,0,134,107,0,0,24,55,6,0,146,149,150,0,4,108,107,106,1,149,4,0,134,150,0,0,116,78,6,0,146,108,149,0,1,134,0,0,0,109,134,0,2,150,0,0,32,55,1,0,42,150,150,0,1,149,1,0,1,148,0,0,134,110,0,0,24,55,6,0,150,149,148,0,41,148,110,24,42,148,148,24,0,111,148,0,15,113,109,111,120,113,2,0,119,0,106,0,0,114,134,0,2,148,0,0,128,162,0,0,41,149,114,3,3,115,148,149,1,149,4,0,1,148,0,0,134,116,0,0,24,55,6,0,115,149,148,0,34,117,116,0,0,118,134,0,2,148,0,0,128,162,0,0,41,149,118,3,3,119,148,149,25,120,119,4,1,149,4,0,1,148,0,0,134,121,0,0,24,55,6,0,120,149,148,0,1,148,4,0,1,149,0,0,134,122,0,0,24,55,6,0,147,148,149,0,121,117,20,0,1,149,4,0,1,148,0,0,134,124,0,0,24,55,6,0,146,149,148,0,26,125,124,1,1,148,1,0,1,149,0,0,134,126,0,0,148,240,4,0,148,122,125,149,1,149,4,0,1,148,0,0,134,127,0,0,24,55,6,0,147,149,148,0,135,148,28,0,121,126,127,0,119,0,29,0,1,148,4,0,1,149,0,0,134,128,0,0,24,55,6,0,145,148,149,0,25,129,128,64,1,149,4,0,1,148,0,0,134,130,0,0,24,55,6,0,129,149,148,0,25,131,130,1,1,149,4,0,134,148,0,0,116,78,6,0,129,131,149,0,1,148,1,0,1,149,0,0,134,132,0,0,148,240,4,0,148,122,130,149,1,149,4,0,1,148,0,0,134,133,0,0,24,55,6,0,147,149,148,0,135,148,28,0,121,132,133,0,1,148,4,0,1,149,0,0,134,5,0,0,24,55,6,0,145,148,149,0,25,6,5,60,1,149,4,0,1,148,0,0,134,7,0,0,24,55,6,0,6,149,148,0,25,8,7,1,1,149,4,0,134,148,0,0,116,78,6,0,6,8,149,0,1,148,4,0,1,149,0,0,134,9,0,0,24,55,6,0,146,148,149,0,26,10,9,1,1,148,4,0,134,149,0,0,116,78,6,0,146,10,148,0,0,11,134,0,25,12,11,1,0,134,12,0,119,0,137,255,2,148,0,0,32,55,1,0,42,148,148,0,1,150,0,0,1,151,1,0,134,149,0,0,116,78,6,0,148,150,151,0,1,149,4,0,1,151,0,0,134,13,0,0,24,55,6,0,146,149,151,0,1,151,4,0,1,149,0,0,134,14,0,0,24,55,6,0,147,151,149,0,1,149,4,0,1,151,0,0,134,16,0,0,24,55,6,0,145,149,151,0,25,17,16,64,1,151,4,0,1,149,0,0,134,18,0,0,24,55,6,0,17,151,149,0,1,149,0,0,134,19,0,0,148,240,4,0,13,14,18,149,2,151,0,0,68,162,0,0,1,150,4,0,134,149,0,0,116,78,6,0,151,19,150,0,1,149,0,0,14,20,19,149,120,20,16,0,2,149,0,0,52,195,0,0,1,150,4,0,1,151,0,0,134,21,0,0,24,55,6,0,149,150,151,0,2,150,0,0,251,72,1,0,134,151,0,0,84,83,6,0,21,150,141,0,1,150,1,0,135,151,7,0,150,0,0,0,2,151,0,0,68,162,0,0,1,150,4,0,1,149,0,0,134,22,0,0,24,55,6,0,151,150,149,0,134,149,0,0,116,236,4,0,22,0,0,0,1,149,4,0,1,150,0,0,134,23,0,0,24,55,6,0,145,149,150,0,25,24,23,72,42,150,24,0,1,149,1,0,1,151,0,0,134,25,0,0,24,55,6,0,150,149,151,0,41,151,25,24,42,151,151,24,33,27,151,0,2,151,0,0,64,162,0,0,1,149,4,0,1,150,0,0,134,28,0,0,24,55,6,0,151,149,150,0,121,27,43,0,134,150,0,0,0,209,5,0,28,0,0,0,2,150,0,0,68,162,0,0,1,149,4,0,1,151,0,0,134,29,0,0,24,55,6,0,150,149,151,0,134,151,0,0,0,209,5,0,29,0,0,0,2,151,0,0,68,162,0,0,1,149,4,0,1,150,0,0,134,30,0,0,24,55,6,0,151,149,150,0,25,31,30,36,42,149,31,0,1,151,0,0,1,148,1,0,134,150,0,0,116,78,6,0,149,151,148,0,2,150,0,0,64,162,0,0,1,148,4,0,1,151,0,0,134,32,0,0,24,55,6,0,150,148,151,0,25,33,32,36,42,148,33,0,1,150,0,0,1,149,1,0,134,151,0,0,116,78,6,0,148,150,149,0,119,0,8,0,25,34,28,36,42,149,34,0,1,150,1,0,1,148,1,0,134,151,0,0,116,78,6,0,149,150,148,0,134,151,0,0,32,218,5,0,2,148,0,0,92,162,0,0,1,150,255,255,1,149,4,0,134,151,0,0,116,78,6,0,148,150,149,0,2,149,0,0,88,162,0,0,1,150,255,255,1,148,4,0,134,151,0,0,116,78,6,0,149,150,148,0,2,148,0,0,96,162,0,0,1,150,0,0,1,149,2,0,134,151,0,0,116,78,6,0,148,150,149,0,2,149,0,0,98,162,0,0,1,150,0,0,1,148,2,0,134,151,0,0,116,78,6,0,149,150,148,0,2,148,0,0,100,162,0,0,1,150,0,0,1,149,2,0,134,151,0,0,116,78,6,0,148,150,149,0,2,149,0,0,104,162,0,0,1,150,0,0,1,148,4,0,134,151,0,0,116,78,6,0,149,150,148,0,1,151,4,0,1,148,0,0,134,35,0,0,24,55,6,0,145,151,148,0,42,151,35,0,1,150,1,0,1,149,1,0,134,148,0,0,116,78,6,0,151,150,149,0,134,148,0,0,120,110,6,0,134,36,0,0,116,115,6,0,1,149,4,0,134,148,0,0,116,78,6,0,137,36,149,0,2,149,0,0,160,54,1,0,2,150,0,0,32,73,1,0,134,148,0,0,248,82,6,0,149,150,137,0,2,148,0,0,68,162,0,0,1,150,4,0,1,149,0,0,134,38,0,0,24,55,6,0,148,150,149,0,0,2,38,0,0,39,2,0,137,144,0,0,139,39,0,0,140,2,181,0,0,0,0,0,2,175,0,0,255,255,255,255,2,176,0,0,0,0,16,0,2,177,0,0,0,0,240,127,1,173,0,0,136,178,0,0,0,174,178,0,127,179,0,0,1,180,8,0,134,178,0,0,56,86,6,0,179,0,180,0,127,178,0,0,1,180,4,0,1,179,0,0,134,5,0,0,24,55,6,0,178,180,179,0,127,179,0,0,25,179,179,4,1,180,4,0,1,178,0,0,134,6,0,0,24,55,6,0,179,180,178,0,127,180,0,0,1,179,8,0,134,178,0,0,56,86,6,0,180,1,179,0,127,178,0,0,1,179,4,0,1,180,0,0,134,74,0,0,24,55,6,0,178,179,180,0,127,180,0,0,25,180,180,4,1,179,4,0,1,178,0,0,134,85,0,0,24,55,6,0,180,179,178,0,1,178,52,0,135,96,3,0,5,6,178,0,128,178,0,0,0,107,178,0,1,178,255,7,19,178,96,178,0,118,178,0,1,178,52,0,135,129,3,0,74,85,178,0,128,178,0,0,0,140,178,0,1,178,255,7,19,178,129,178,0,151,178,0,2,178,0,0,0,0,0,128,19,178,6,178,0,7,178,0,1,178,1,0,135,18,1,0,74,85,178,0,128,178,0,0,0,29,178,0,32,40,18,0,32,51,29,0,19,178,40,51,0,62,178,0,121,62,3,0,1,173,3,0,119,0,85,1,2,178,0,0,255,255,255,127,19,178,85,178,0,70,178,0,16,71,177,70,1,178,0,0,16,72,178,74,13,73,70,177,19,178,73,72,0,75,178,0,20,178,71,75,0,76,178,0,1,178,255,7,13,77,118,178,20,178,76,77,0,172,178,0,121,172,3,0,1,173,3,0,119,0,66,1,1,178,1,0,135,80,1,0,5,6,178,0,128,178,0,0,0,81,178,0,16,82,29,81,16,83,18,80,13,84,81,29,19,178,84,83,0,86,178,0,20,178,82,86,0,87,178,0,120,87,10,0,13,88,80,18,13,89,81,29,19,178,88,89,0,90,178,0,59,178,0,0,65,91,0,178,126,4,90,91,0,0,0,0,139,4,0,0,32,92,118,0,121,92,50,0,1,178,12,0,135,93,1,0,5,6,178,0,128,178,0,0,0,94,178,0,1,178,255,255,15,95,178,94,16,97,175,93,32,98,94,255,19,178,98,97,0,99,178,0,20,178,95,99,0,100,178,0,121,100,25,0,0,102,93,0,0,103,94,0,1,163,0,0,26,101,163,1,1,178,1,0,135,104,1,0,102,103,178,0,128,178,0,0,0,105,178,0,1,178,255,255,15,106,178,105,16,108,175,104,32,109,105,255,19,178,109,108,0,110,178,0,20,178,106,110,0,111,178,0,121,111,5,0,0,102,104,0,0,103,105,0,0,163,101,0,119,0,238,255,0,162,101,0,119,0,2,0,1,162,0,0,1,178,1,0,4,112,178,162,135,113,1,0,5,6,112,0,128,178,0,0,0,114,178,0,0,144,113,0,0,145,114,0,0,164,162,0,119,0,10,0,2,178,0,0,255,255,15,0,19,178,6,178,0,115,178,0,20,178,115,176,0,116,178,0,0,144,5,0,0,145,116,0,0,164,118,0,32,117,151,0,121,117,50,0,1,178,12,0,135,119,1,0,74,85,178,0,128,178,0,0,0,120,178,0,1,178,255,255,15,121,178,120,16,122,175,119,32,123,120,255,19,178,123,122,0,124,178,0,20,178,121,124,0,125,178,0,121,125,25,0,0,127,119,0,0,128,120,0,1,170,0,0,26,126,170,1,1,178,1,0,135,130,1,0,127,128,178,0,128,178,0,0,0,131,178,0,1,178,255,255,15,132,178,131,16,133,175,130,32,134,131,255,19,178,134,133,0,135,178,0,20,178,132,135,0,136,178,0,121,136,5,0,0,127,130,0,0,128,131,0,0,170,126,0,119,0,238,255,0,169,126,0,119,0,2,0,1,169,0,0,1,178,1,0,4,137,178,169,135,138,1,0,74,85,137,0,128,178,0,0,0,139,178,0,0,146,138,0,0,147,139,0,0,171,169,0,119,0,10,0,2,178,0,0,255,255,15,0,19,178,85,178,0,141,178,0,20,178,141,176,0,142,178,0,0,146,74,0,0,147,142,0,0,171,151,0,15,143,171,164,134,148,0,0,240,98,6,0,144,145,146,147,128,178,0,0,0,149,178,0,1,178,255,255,15,150,178,149,16,152,175,148,32,153,149,255,19,178,153,152,0,154,178,0,20,178,150,154,0,155,178,0,121,143,57,0,0,65,155,0,0,66,148,0,0,67,149,0,0,156,144,0,0,158,145,0,0,166,164,0,121,65,9,0,13,157,156,146,13,159,158,147,19,178,157,159,0,160,178,0,120,160,41,0,0,8,66,0,0,9,67,0,119,0,3,0,0,8,156,0,0,9,158,0,1,178,1,0,135,10,1,0,8,9,178,0,128,178,0,0,0,11,178,0,26,12,166,1,15,13,171,12,134,14,0,0,240,98,6,0,10,11,146,147,128,178,0,0,0,15,178,0,1,178,255,255,15,16,178,15,16,17,175,14,32,19,15,255,19,178,19,17,0,20,178,0,20,178,16,20,0,21,178,0,121,13,8,0,0,65,21,0,0,66,14,0,0,67,15,0,0,156,10,0,0,158,11,0,0,166,12,0,119,0,218,255,0,3,21,0,0,22,10,0,0,24,11,0,0,68,14,0,0,69,15,0,0,165,12,0,119,0,11,0,59,178,0,0,65,161,0,178,58,2,161,0,119,0,109,0,0,3,155,0,0,22,144,0,0,24,145,0,0,68,148,0,0,69,149,0,0,165,164,0,121,3,13,0,13,23,22,146,13,25,24,147,19,178,23,25,0,26,178,0,121,26,5,0,59,178,0,0,65,35,0,178,58,2,35,0,119,0,93,0,0,27,69,0,0,30,68,0,119,0,3,0,0,27,24,0,0,30,22,0,16,28,27,176,35,31,30,0,13,32,27,176,19,178,32,31,0,33,178,0,20,178,28,33,0,34,178,0,121,34,26,0,0,36,30,0,0,37,27,0,0,168,165,0,1,178,1,0,135,38,1,0,36,37,178,0,128,178,0,0,0,39,178,0,26,41,168,1,16,42,39,176,35,43,38,0,13,44,39,176,19,178,44,43,0,45,178,0,20,178,42,45,0,46,178,0,121,46,5,0,0,36,38,0,0,37,39,0,0,168,41,0,119,0,239,255,0,48,38,0,0,49,39,0,0,167,41,0,119,0,4,0,0,48,30,0,0,49,27,0,0,167,165,0,1,178,0,0,15,47,178,167,121,47,22,0,1,178,0,0,2,179,0,0,0,0,240,255,134,50,0,0,84,105,6,0,48,49,178,179,128,179,0,0,0,52,179,0,1,179,0,0,1,178,52,0,135,53,1,0,167,179,178,0,128,178,0,0,0,54,178,0,20,178,50,53,0,55,178,0,20,178,52,54,0,56,178,0,0,61,56,0,0,64,55,0,119,0,9,0,1,178,1,0,4,57,178,167,135,58,3,0,48,49,57,0,128,178,0,0,0,59,178,0,0,61,59,0,0,64,58,0,20,178,61,7,0,60,178,0,127,179,0,0,1,180,4,0,134,178,0,0,116,78,6,0,179,64,180,0,127,180,0,0,25,180,180,4,1,179,4,0,134,178,0,0,116,78,6,0,180,60,179,0,127,178,0,0,1,179,8,0,134,63,0,0,208,90,6,0,178,179,0,0,58,2,63,0,32,179,173,3,121,179,4,0,65,78,0,1,66,79,78,78,58,2,79,0,139,2,0,0,140,3,189,0,0,0,0,0,2,182,0,0,255,0,0,0,2,183,0,0,95,72,1,0,2,184,0,0,84,162,0,0,1,180,0,0,136,185,0,0,0,181,185,0,136,185,0,0,25,185,185,48,137,185,0,0,130,185,0,0,136,186,0,0,49,185,185,186,216,127,2,0,135,185,0,0,0,4,0,0,0,80,1,0,0,91,2,0,0,102,4,0,1,185,0,0,14,113,102,185,0,124,80,0,1,185,0,0,14,135,124,185,19,185,113,135], eb + 153600);
  HEAPU8.set([0,175,185,0,120,175,5,0,1,3,255,255,0,76,3,0,137,181,0,0,139,76,0,0,1,169,0,0,0,146,80,0,0,177,146,0,1,178,0,0,0,157,4,0,25,5,157,4,1,185,4,0,1,186,0,0,134,16,0,0,24,55,6,0,5,185,186,0,0,179,16,0,2,186,0,0,60,162,0,0,1,185,4,0,1,187,0,0,134,27,0,0,24,55,6,0,186,185,187,0,25,38,27,2,42,187,38,0,1,185,1,0,1,186,0,0,134,49,0,0,24,55,6,0,187,185,186,0,0,172,49,0,2,186,0,0,60,162,0,0,1,185,4,0,1,187,0,0,134,60,0,0,24,55,6,0,186,185,187,0,25,71,60,3,42,187,71,0,1,185,1,0,1,186,0,0,134,77,0,0,24,55,6,0,187,185,186,0,0,173,77,0,0,78,4,0,25,79,78,39,42,186,79,0,1,185,1,0,1,187,0,0,134,81,0,0,24,55,6,0,186,185,187,0,0,174,81,0,2,187,0,0,60,162,0,0,1,185,4,0,1,186,0,0,134,82,0,0,24,55,6,0,187,185,186,0,25,83,82,3,42,185,83,0,1,187,0,0,1,188,1,0,134,186,0,0,116,78,6,0,185,187,188,0,134,186,0,0,72,104,6,0,0,84,4,0,25,85,84,39,42,188,85,0,1,187,0,0,1,185,1,0,134,186,0,0,116,78,6,0,188,187,185,0,0,86,4,0,134,186,0,0,124,212,4,0,86,0,0,0,0,87,178,0,41,186,87,24,42,186,186,24,33,88,186,0,40,186,88,1,0,89,186,0,120,89,2,0,119,0,84,1,0,90,4,0,134,92,0,0,172,91,2,0,90,0,0,0,0,168,92,0,0,93,168,0,1,186,8,0,1,185,16,0,138,93,186,185,180,130,2,0,88,131,2,0,96,132,2,0,216,129,2,0,216,129,2,0,144,132,2,0,216,129,2,0,216,129,2,0,216,129,2,0,216,129,2,0,216,129,2,0,216,129,2,0,216,129,2,0,148,132,2,0,216,129,2,0,64,133,2,0,0,43,169,0,0,44,91,0,15,45,43,44,120,45,4,0,134,186,0,0,208,87,6,0,119,0,47,1,2,186,0,0,60,162,0,0,1,187,4,0,1,185,0,0,134,46,0,0,24,55,6,0,186,187,185,0,25,47,46,82,42,185,47,0,1,187,1,0,1,186,0,0,134,48,0,0,24,55,6,0,185,187,186,0,41,186,48,24,42,186,186,24,32,50,186,0,0,51,168,0,1,186,0,1,15,52,51,186,19,186,50,52,0,176,186,0,121,176,24,1,0,53,168,0,19,186,53,182,0,54,186,0,0,55,177,0,25,56,55,1,0,177,56,0,42,187,55,0,1,185,1,0,134,186,0,0,116,78,6,0,187,54,185,0,0,57,173,0,41,186,57,24,42,186,186,24,33,58,186,0,121,58,6,0,0,59,4,0,0,61,168,0,134,186,0,0,64,245,1,0,59,61,0,0,0,62,169,0,25,63,62,1,0,169,63,0,119,0,255,0,0,123,177,0,0,125,80,0,16,126,125,123,121,126,251,0,0,127,173,0,41,185,127,24,42,185,185,24,33,128,185,0,121,128,5,0,0,129,4,0,134,185,0,0,144,86,6,0,129,183,0,0,0,130,177,0,26,131,130,1,0,177,131,0,42,185,131,0,1,187,1,0,1,186,0,0,134,132,0,0,24,55,6,0,185,187,186,0,19,186,132,182,0,133,186,0,0,168,133,0,0,134,168,0,34,136,134,32,121,136,10,0,0,137,173,0,19,186,137,182,0,138,186,0,33,139,138,0,121,139,5,0,0,140,4,0,134,186,0,0,144,86,6,0,140,183,0,0,0,141,169,0,26,142,141,1,0,169,142,0,119,0,214,0,1,168,32,0,1,186,4,0,1,185,0,0,134,94,0,0,24,55,6,0,184,186,185,0,0,95,4,0,25,96,95,4,1,185,4,0,1,186,0,0,134,97,0,0,24,55,6,0,96,185,186,0,0,98,179,0,4,99,97,98,1,186,4,0,1,185,0,0,134,100,0,0,24,55,6,0,184,186,185,0,8,185,99,100,38,185,185,255,0,101,185,0,4,103,94,101,0,171,103,0,1,170,0,0,0,104,170,0,0,105,171,0,15,106,104,105,120,106,2,0,119,0,183,0,0,107,169,0,0,108,91,0,15,109,107,108,121,109,26,0,0,110,173,0,41,185,110,24,42,185,185,24,33,111,185,0,121,111,6,0,0,112,4,0,0,114,168,0,134,185,0,0,64,245,1,0,112,114,0,0,0,115,168,0,19,185,115,182,0,116,185,0,0,117,177,0,25,118,117,1,0,177,118,0,42,186,117,0,1,187,1,0,134,185,0,0,116,78,6,0,186,116,187,0,0,119,169,0,25,120,119,1,0,169,120,0,119,0,3,0,134,185,0,0,208,87,6,0,0,121,170,0,25,122,121,1,0,170,122,0,119,0,217,255,1,178,1,0,0,40,173,0,41,186,40,24,42,186,186,24,33,41,186,0,121,41,142,0,0,42,4,0,1,187,10,0,134,186,0,0,64,245,1,0,42,187,0,0,119,0,136,0,119,0,244,255,0,143,177,0,0,144,80,0,16,145,144,143,120,145,2,0,119,0,37,0,0,147,173,0,41,186,147,24,42,186,186,24,33,148,186,0,121,148,5,0,0,149,4,0,134,186,0,0,144,86,6,0,149,183,0,0,0,150,177,0,26,151,150,1,0,177,151,0,42,186,151,0,1,187,1,0,1,185,0,0,134,152,0,0,24,55,6,0,186,187,185,0,19,185,152,182,0,153,185,0,0,168,153,0,0,154,168,0,34,155,154,32,120,155,2,0,119,0,227,255,0,156,173,0,19,185,156,182,0,158,185,0,33,159,158,0,120,159,2,0,119,0,221,255,0,160,4,0,134,185,0,0,144,86,6,0,160,183,0,0,119,0,216,255,1,169,0,0,119,0,92,0,0,161,177,0,0,162,80,0,16,163,162,161,120,163,2,0,119,0,31,0,0,164,177,0,26,165,164,1,42,185,165,0,1,187,1,0,1,186,0,0,134,166,0,0,24,55,6,0,185,187,186,0,41,186,166,24,42,186,186,24,0,167,186,0,32,6,167,32,120,6,2,0,119,0,17,0,0,7,173,0,41,186,7,24,42,186,186,24,33,8,186,0,121,8,5,0,0,9,4,0,134,186,0,0,144,86,6,0,9,183,0,0,0,10,177,0,26,11,10,1,0,177,11,0,0,12,169,0,26,13,12,1,0,169,13,0,119,0,222,255,0,14,177,0,0,15,80,0,16,17,15,14,120,17,2,0,119,0,52,0,0,18,177,0,26,19,18,1,42,186,19,0,1,187,1,0,1,185,0,0,134,20,0,0,24,55,6,0,186,187,185,0,41,185,20,24,42,185,185,24,0,21,185,0,33,22,21,32,120,22,2,0,119,0,38,0,0,23,173,0,41,185,23,24,42,185,185,24,33,24,185,0,121,24,5,0,0,25,4,0,134,185,0,0,144,86,6,0,25,183,0,0,0,26,177,0,26,28,26,1,0,177,28,0,42,185,28,0,1,187,1,0,1,186,0,0,134,29,0,0,24,55,6,0,185,187,186,0,19,186,29,182,0,30,186,0,0,168,30,0,0,31,168,0,34,32,31,32,121,32,10,0,0,33,173,0,19,186,33,182,0,34,186,0,33,35,34,0,121,35,5,0,0,36,4,0,134,186,0,0,144,86,6,0,36,183,0,0,0,37,169,0,26,39,37,1,0,169,39,0,119,0,201,255,0,64,4,0,134,186,0,0,124,212,4,0,64,0,0,0,119,0,166,254,0,65,177,0,42,185,65,0,1,187,0,0,1,188,1,0,134,186,0,0,116,78,6,0,185,187,188,0,0,66,173,0,2,186,0,0,60,162,0,0,1,188,4,0,1,187,0,0,134,67,0,0,24,55,6,0,186,188,187,0,25,68,67,3,42,188,68,0,1,186,1,0,134,187,0,0,116,78,6,0,188,66,186,0,0,69,172,0,2,187,0,0,60,162,0,0,1,186,4,0,1,188,0,0,134,70,0,0,24,55,6,0,187,186,188,0,25,72,70,2,42,186,72,0,1,187,1,0,134,188,0,0,116,78,6,0,186,69,187,0,0,73,174,0,0,74,4,0,25,75,74,39,42,187,75,0,1,186,1,0,134,188,0,0,116,78,6,0,187,73,186,0,1,3,0,0,0,76,3,0,137,181,0,0,139,76,0,0,140,0,183,0,0,0,0,0,2,178,0,0,64,162,0,0,1,176,0,0,136,179,0,0,0,177,179,0,136,179,0,0,25,179,179,32,137,179,0,0,130,179,0,0,136,180,0,0,49,179,179,180,184,135,2,0,135,179,0,0,1,179,4,0,1,180,0,0,134,1,0,0,24,55,6,0,178,179,180,0,1,180,0,0,14,81,1,180,120,81,5,0,1,0,255,255,0,77,0,0,137,177,0,0,139,77,0,0,134,92,0,0,232,67,6,0,41,180,92,24,42,180,180,24,33,103,180,0,121,103,18,0,134,180,0,0,148,108,6,0,1,169,1,0,2,180,0,0,60,162,0,0,1,179,4,0,1,181,0,0,134,114,0,0,24,55,6,0,180,179,181,0,42,179,114,0,1,180,1,0,1,182,1,0,134,181,0,0,116,78,6,0,179,180,182,0,119,0,14,0,1,181,4,0,1,182,0,0,134,125,0,0,24,55,6,0,178,181,182,0,25,136,125,36,42,182,136,0,1,181,1,0,1,180,0,0,134,147,0,0,24,55,6,0,182,181,180,0,0,169,147,0,1,175,0,0,0,158,175,0,2,180,0,0,60,162,0,0,1,181,4,0,1,182,0,0,134,2,0,0,24,55,6,0,180,181,182,0,25,13,2,32,1,182,4,0,1,181,0,0,134,24,0,0,24,55,6,0,13,182,181,0,15,35,158,24,120,35,2,0,119,0,68,1,0,46,169,0,1,181,255,0,19,181,46,181,0,57,181,0,33,68,57,0,121,68,3,0,1,176,10,0,119,0,23,0,0,78,175,0,1,181,4,0,1,182,0,0,134,79,0,0,24,55,6,0,178,181,182,0,25,80,79,48,1,182,4,0,1,181,0,0,134,82,0,0,24,55,6,0,80,182,181,0,41,181,78,2,3,83,82,181,1,181,4,0,1,182,0,0,134,84,0,0,24,55,6,0,83,181,182,0,33,85,84,255,121,85,2,0,1,176,10,0,32,182,176,10,121,182,32,1,1,176,0,0,0,86,175,0,1,182,4,0,1,181,0,0,134,87,0,0,24,55,6,0,178,182,181,0,25,88,87,44,1,181,4,0,1,182,0,0,134,89,0,0,24,55,6,0,88,181,182,0,41,182,86,2,3,90,89,182,1,182,4,0,1,181,0,0,134,91,0,0,24,55,6,0,90,182,181,0,0,174,91,0,0,93,175,0,2,181,0,0,72,162,0,0,1,182,4,0,1,180,0,0,134,94,0,0,24,55,6,0,181,182,180,0,25,95,94,44,1,180,4,0,1,182,0,0,134,96,0,0,24,55,6,0,95,180,182,0,41,182,93,2,3,97,96,182,1,182,4,0,1,180,0,0,134,98,0,0,24,55,6,0,97,182,180,0,0,170,98,0,0,99,169,0,41,180,99,24,42,180,180,24,33,100,180,0,121,100,12,0,1,171,0,0,2,180,0,0,80,162,0,0,1,182,4,0,1,181,0,0,134,101,0,0,24,55,6,0,180,182,181,0,26,102,101,1,0,172,102,0,119,0,41,0,0,104,175,0,1,181,4,0,1,182,0,0,134,105,0,0,24,55,6,0,178,181,182,0,25,106,105,48,1,182,4,0,1,181,0,0,134,107,0,0,24,55,6,0,106,182,181,0,41,181,104,2,3,108,107,181,1,181,4,0,1,182,0,0,134,109,0,0,24,55,6,0,108,181,182,0,0,171,109,0,0,110,175,0,1,182,4,0,1,181,0,0,134,111,0,0,24,55,6,0,178,182,181,0,25,112,111,52,1,181,4,0,1,182,0,0,134,113,0,0,24,55,6,0,112,181,182,0,41,182,110,2,3,115,113,182,1,182,4,0,1,181,0,0,134,116,0,0,24,55,6,0,115,182,181,0,0,172,116,0,0,117,171,0,0,118,172,0,17,119,117,118,120,119,2,0,119,0,146,0,1,173,0,0,0,120,169,0,41,181,120,24,42,181,181,24,33,121,181,0,121,121,7,0,0,122,172,0,0,123,171,0,4,124,122,123,25,126,124,1,0,173,126,0,119,0,74,0,0,127,171,0,0,128,173,0,3,129,127,128,0,130,172,0,17,131,129,130,120,131,2,0,119,0,67,0,0,132,171,0,0,133,173,0,3,134,132,133,0,135,174,0,41,181,134,2,3,137,135,181,1,181,4,0,1,182,0,0,134,138,0,0,24,55,6,0,137,181,182,0,0,139,171,0,0,140,173,0,3,141,139,140,0,142,170,0,41,182,141,2,3,143,142,182,1,182,4,0,1,181,0,0,134,144,0,0,24,55,6,0,143,182,181,0,14,145,138,144,120,145,39,0,0,146,173,0,33,148,146,0,120,148,2,0,119,0,39,0,0,149,171,0,0,150,173,0,3,151,149,150,0,152,172,0,15,153,151,152,120,153,2,0,119,0,32,0,0,154,171,0,0,155,173,0,3,156,154,155,25,157,156,1,0,159,174,0,41,181,157,2,3,160,159,181,1,181,4,0,1,182,0,0,134,161,0,0,24,55,6,0,160,181,182,0,0,162,171,0,0,163,173,0,3,164,162,163,25,165,164,1,0,166,170,0,41,182,165,2,3,167,166,182,1,182,4,0,1,181,0,0,134,168,0,0,24,55,6,0,167,182,181,0,14,3,161,168,120,3,2,0,119,0,5,0,0,4,173,0,25,5,4,1,0,173,5,0,119,0,184,255,0,6,173,0,33,7,6,0,121,7,28,0,0,8,175,0,0,9,171,0,0,10,173,0,0,11,174,0,0,12,171,0,41,181,12,2,3,14,11,181,134,181,0,0,180,207,2,0,8,9,10,14,0,15,170,0,0,16,171,0,41,181,16,2,3,17,15,181,0,18,174,0,0,19,171,0,41,181,19,2,3,20,18,181,0,21,173,0,41,181,21,2,0,22,181,0,135,181,26,0,17,20,22,0,0,23,173,0,0,25,171,0,3,26,25,23,0,171,26,0,0,27,171,0,0,28,172,0,17,29,27,28,120,29,2,0,119,0,132,255,0,30,171,0,0,31,174,0,41,181,30,2,3,32,31,181,1,181,4,0,1,182,0,0,134,33,0,0,24,55,6,0,32,181,182,0,0,34,171,0,0,36,170,0,41,182,34,2,3,37,36,182,1,182,4,0,1,181,0,0,134,38,0,0,24,55,6,0,37,182,181,0,13,39,33,38,120,39,2,0,119,0,111,255,0,40,171,0,25,41,40,1,0,171,41,0,119,0,227,255,0,42,175,0,1,181,4,0,1,182,0,0,134,43,0,0,24,55,6,0,178,181,182,0,25,44,43,48,1,182,4,0,1,181,0,0,134,45,0,0,24,55,6,0,44,182,181,0,41,181,42,2,3,47,45,181,1,182,255,255,1,180,4,0,134,181,0,0,116,78,6,0,47,182,180,0,0,48,175,0,1,181,4,0,1,180,0,0,134,49,0,0,24,55,6,0,178,181,180,0,25,50,49,52,1,180,4,0,1,181,0,0,134,51,0,0,24,55,6,0,50,180,181,0,41,181,48,2,3,52,51,181,1,180,255,255,1,182,4,0,134,181,0,0,116,78,6,0,52,180,182,0,0,53,175,0,25,54,53,1,0,175,54,0,119,0,173,254,1,181,4,0,1,182,0,0,134,55,0,0,24,55,6,0,178,181,182,0,25,56,55,36,42,181,56,0,1,180,0,0,1,179,1,0,134,182,0,0,116,78,6,0,181,180,179,0,2,182,0,0,60,162,0,0,1,179,4,0,1,180,0,0,134,58,0,0,24,55,6,0,182,179,180,0,25,59,58,24,1,180,4,0,1,179,0,0,134,60,0,0,24,55,6,0,59,180,179,0,33,61,60,0,121,61,25,0,1,179,4,0,1,180,0,0,134,62,0,0,24,55,6,0,178,179,180,0,1,180,4,0,1,179,0,0,134,63,0,0,24,55,6,0,62,180,179,0,1,179,4,0,1,180,0,0,134,64,0,0,24,55,6,0,178,179,180,0,25,65,64,4,1,180,4,0,1,179,0,0,134,66,0,0,24,55,6,0,65,180,179,0,134,179,0,0,112,46,3,0,63,66,0,0,1,179,4,0,1,180,0,0,134,67,0,0,24,55,6,0,178,179,180,0,1,180,4,0,1,179,0,0,134,69,0,0,24,55,6,0,67,180,179,0,2,179,0,0,60,162,0,0,1,180,4,0,1,182,0,0,134,70,0,0,24,55,6,0,179,180,182,0,25,71,70,16,1,180,4,0,134,182,0,0,116,78,6,0,71,69,180,0,1,182,4,0,1,180,0,0,134,72,0,0,24,55,6,0,178,182,180,0,25,73,72,4,1,180,4,0,1,182,0,0,134,74,0,0,24,55,6,0,73,180,182,0,2,182,0,0,60,162,0,0,1,180,4,0,1,179,0,0,134,75,0,0,24,55,6,0,182,180,179,0,25,76,75,20,1,180,4,0,134,179,0,0,116,78,6,0,76,74,180,0,1,0,0,0,0,77,0,0,137,177,0,0,139,77,0,0,140,0,168,0,0,0,0,0,2,162,0,0,80,177,0,0,2,163,0,0,76,177,0,0,2,164,0,0,136,0,0,0,1,160,0,0,136,165,0,0,0,161,165,0,136,165,0,0,25,165,165,16,137,165,0,0,130,165,0,0,136,166,0,0,49,165,165,166,168,143,2,0,135,165,0,0,1,158,0,0,2,165,0,0,80,162,0,0,1,166,4,0,1,167,0,0,134,1,0,0,24,55,6,0,165,166,167,0,2,167,0,0,68,177,0,0,1,166,4,0,1,165,0,0,134,2,0,0,24,55,6,0,167,166,165,0,6,165,1,2,38,165,165,255,0,69,165,0,1,166,4,0,134,165,0,0,116,78,6,0,162,69,166,0,1,165,4,0,1,166,0,0,134,80,0,0,24,55,6,0,162,165,166,0,1,166,31,0,15,91,166,80,1,166,31,0,125,0,91,166,69,0,0,0,1,165,4,0,134,166,0,0,116,78,6,0,162,0,165,0,2,166,0,0,72,177,0,0,1,165,4,0,1,167,0,0,134,102,0,0,24,55,6,0,166,165,167,0,1,167,0,0,1,166,4,0,138,102,167,166,120,145,2,0,112,148,2,0,124,149,2,0,88,152,2,0,1,159,0,0,0,42,159,0,34,43,42,10,120,43,2,0,119,0,47,0,0,44,158,0,0,45,159,0,1,165,4,0,1,166,0,0,134,46,0,0,24,55,6,0,163,165,166,0,1,166,140,0,5,166,45,166,3,48,46,166,3,49,48,164,1,165,4,0,134,166,0,0,116,78,6,0,49,44,165,0,1,166,4,0,1,165,0,0,134,50,0,0,24,55,6,0,162,166,165,0,0,51,158,0,3,52,51,50,0,158,52,0,0,53,159,0,32,54,53,4,121,54,17,0,2,165,0,0,80,162,0,0,1,166,4,0,1,167,0,0,134,55,0,0,24,55,6,0,165,166,167,0,1,167,4,0,1,166,0,0,134,56,0,0,24,55,6,0,162,167,166,0,27,57,56,5,4,59,55,57,25,60,59,1,0,158,60,0,0,61,159,0,25,62,61,1,0,159,62,0,119,0,207,255,1,166,4,0,1,167,0,0,134,63,0,0,24,55,6,0,162,166,167,0,26,64,63,1,1,166,4,0,134,167,0,0,116,78,6,0,162,64,166,0,134,167,0,0,172,72,6,0,137,161,0,0,139,0,0,0,119,0,186,1,1,167,4,0,1,165,0,0,134,113,0,0,24,55,6,0,162,167,165,0,26,124,113,1,1,167,4,0,134,165,0,0,116,78,6,0,162,124,167,0,0,135,158,0,1,165,4,0,1,167,0,0,134,146,0,0,24,55,6,0,163,165,167,0,3,3,146,164,1,165,4,0,134,167,0,0,116,78,6,0,3,135,165,0,1,167,4,0,1,165,0,0,134,14,0,0,24,55,6,0,162,167,165,0,0,25,158,0,3,36,25,14,0,158,36,0,1,165,4,0,1,167,0,0,134,47,0,0,24,55,6,0,163,165,167,0,1,167,140,0,3,58,47,167,3,65,58,164,1,165,4,0,134,167,0,0,116,78,6,0,65,36,165,0,1,167,4,0,1,165,0,0,134,66,0,0,24,55,6,0,162,167,165,0,0,67,158,0,3,68,67,66,0,158,68,0,1,165,4,0,1,167,0,0,134,70,0,0,24,55,6,0,163,165,167,0,1,167,24,1,3,71,70,167,3,72,71,164,1,165,4,0,134,167,0,0,116,78,6,0,72,68,165,0,2,167,0,0,80,162,0,0,1,165,4,0,1,166,0,0,134,73,0,0,24,55,6,0,167,165,166,0,28,166,73,2,38,166,166,255,0,74,166,0,0,157,74,0,0,75,157,0,1,166,4,0,1,165,0,0,134,76,0,0,24,55,6,0,162,166,165,0,4,77,75,76,25,78,77,1,1,165,4,0,1,166,0,0,134,79,0,0,24,55,6,0,163,165,166,0,1,166,164,1,3,81,79,166,3,82,81,164,1,165,4,0,134,166,0,0,116,78,6,0,82,78,165,0,0,83,157,0,25,84,83,1,1,166,4,0,1,165,0,0,134,85,0,0,24,55,6,0,163,166,165,0,1,165,48,2,3,86,85,165,3,87,86,164,1,166,4,0,134,165,0,0,116,78,6,0,87,84,166,0,2,165,0,0,80,162,0,0,1,166,4,0,1,167,0,0,134,88,0,0,24,55,6,0,165,166,167,0,1,167,4,0,1,166,0,0,134,89,0,0,24,55,6,0,162,167,166,0,27,90,89,3,4,92,88,90,25,93,92,1,0,158,93,0,0,94,158,0,1,166,4,0,1,167,0,0,134,95,0,0,24,55,6,0,163,166,167,0,1,167,188,2,3,96,95,167,3,97,96,164,1,166,4,0,134,167,0,0,116,78,6,0,97,94,166,0,1,167,4,0,1,166,0,0,134,98,0,0,24,55,6,0,162,167,166,0,0,99,158,0,3,100,99,98,0,158,100,0,1,166,4,0,1,167,0,0,134,101,0,0,24,55,6,0,163,166,167,0,1,167,72,3,3,103,101,167,3,104,103,164,1,166,4,0,134,167,0,0,116,78,6,0,104,100,166,0,1,167,4,0,1,166,0,0,134,105,0,0,24,55,6,0,162,167,166,0,0,106,158,0,3,107,106,105,0,158,107,0,1,166,4,0,1,167,0,0,134,108,0,0,24,55,6,0,163,166,167,0,1,167,212,3,3,109,108,167,3,110,109,164,1,166,4,0,134,167,0,0,116,78,6,0,110,107,166,0,1,167,4,0,1,166,0,0,134,63,0,0,24,55,6,0,162,167,166,0,26,64,63,1,1,167,4,0,134,166,0,0,116,78,6,0,162,64,167,0,134,166,0,0,172,72,6,0,137,161,0,0,139,0,0,0,119,0,252,0,1,159,0,0,0,111,159,0,34,112,111,8,120,112,2,0,119,0,48,0,0,114,158,0,0,115,159,0,1,166,4,0,1,167,0,0,134,116,0,0,24,55,6,0,163,166,167,0,1,167,140,0,5,167,115,167,3,117,116,167,3,118,117,164,1,166,4,0,134,167,0,0,116,78,6,0,118,114,166,0,1,167,4,0,1,166,0,0,134,119,0,0,24,55,6,0,162,167,166,0,0,120,158,0,3,121,120,119,0,158,121,0,0,122,159,0,32,123,122,3,121,123,18,0,2,166,0,0,80,162,0,0,1,167,4,0,1,165,0,0,134,125,0,0,24,55,6,0,166,167,165,0,1,165,4,0,1,167,0,0,134,126,0,0,24,55,6,0,162,165,167,0,41,167,126,2,0,127,167,0,4,128,125,127,25,129,128,1,0,158,129,0,0,130,159,0,25,131,130,1,0,159,131,0,119,0,206,255,1,167,4,0,1,165,0,0,134,63,0,0,24,55,6,0,162,167,165,0,26,64,63,1,1,167,4,0,134,165,0,0,116,78,6,0,162,64,167,0,134,165,0,0,172,72,6,0,137,161,0,0,139,0,0,0,119,0,185,0,1,159,0,0,0,132,159,0,34,133,132,4,120,133,2,0,119,0,28,0,0,134,158,0,0,136,159,0,1,165,4,0,1,167,0,0,134,137,0,0,24,55,6,0,163,165,167,0,1,167,140,0,5,167,136,167,3,138,137,167,3,139,138,164,1,165,4,0,134,167,0,0,116,78,6,0,139,134,165,0,1,167,4,0,1,165,0,0,134,140,0,0,24,55,6,0,162,167,165,0,0,141,158,0,3,142,141,140,0,158,142,0,0,143,159,0,25,144,143,1,0,159,144,0,119,0,226,255,2,165,0,0,80,162,0,0,1,167,4,0,1,166,0,0,134,145,0,0,24,55,6,0,165,167,166,0,28,166,145,2,38,166,166,255,0,147,166,0,0,157,147,0,0,148,157,0,1,166,4,0,1,167,0,0,134,149,0,0,24,55,6,0,162,166,167,0,41,167,149,1,0,150,167,0,4,151,148,150,25,152,151,1,1,167,4,0,1,166,0,0,134,153,0,0,24,55,6,0,163,167,166,0,1,166,48,2,3,154,153,166,3,155,154,164,1,167,4,0,134,166,0,0,116,78,6,0,155,152,167,0,0,156,157,0,1,166,4,0,1,167,0,0,134,4,0,0,24,55,6,0,162,166,167,0,4,5,156,4,26,6,5,1,1,167,4,0,1,166,0,0,134,7,0,0,24,55,6,0,163,167,166,0,1,166,188,2,3,8,7,166,3,9,8,164,1,167,4,0,134,166,0,0,116,78,6,0,9,6,167,0,0,10,157,0,25,11,10,1,1,166,4,0,1,167,0,0,134,12,0,0,24,55,6,0,163,166,167,0,1,167,72,3,3,13,12,167,3,15,13,164,1,166,4,0,134,167,0,0,116,78,6,0,15,11,166,0,0,16,157,0,1,167,4,0,1,166,0,0,134,17,0,0,24,55,6,0,162,167,166,0,3,18,16,17,25,19,18,1,1,166,4,0,1,167,0,0,134,20,0,0,24,55,6,0,163,166,167,0,1,167,212,3,3,21,20,167,3,22,21,164,1,166,4,0,134,167,0,0,116,78,6,0,22,19,166,0,2,167,0,0,80,162,0,0,1,166,4,0,1,165,0,0,134,23,0,0,24,55,6,0,167,166,165,0,1,165,4,0,1,166,0,0,134,24,0,0,24,55,6,0,162,165,166,0,41,166,24,2,0,26,166,0,4,27,23,26,25,28,27,1,0,158,28,0,1,159,8,0,0,29,159,0,34,30,29,12,120,30,2,0,119,0,28,0,0,31,158,0,0,32,159,0,1,166,4,0,1,165,0,0,134,33,0,0,24,55,6,0,163,166,165,0,1,165,140,0,5,165,32,165,3,34,33,165,3,35,34,164,1,166,4,0,134,165,0,0,116,78,6,0,35,31,166,0,1,165,4,0,1,166,0,0,134,37,0,0,24,55,6,0,162,165,166,0,0,38,158,0,3,39,38,37,0,158,39,0,0,40,159,0,25,41,40,1,0,159,41,0,119,0,226,255,1,166,4,0,1,165,0,0,134,63,0,0,24,55,6,0,162,166,165,0,26,64,63,1,1,166,4,0,134,165,0,0,116,78,6,0,162,64,166,0,134,165,0,0,172,72,6,0,137,161,0,0,139,0,0,0,119,0,2,0,119,0,73,255,139,0,0,0,140,1,190,0,0,0,0,0,2,185,0,0,64,162,0,0,1,183,0,0,136,186,0,0,0,184,186,0,136,186,0,0,25,186,186,48,137,186,0,0,130,186,0,0,136,187,0,0,49,186,186,187,156,152,2,0,135,186,0,0,0,2,0,0,0,87,2,0,1,186,0,0,14,98,87,186,121,98,180,1,0,109,2,0,25,120,109,24,1,186,4,0,1,187,0,0,134,131,0,0,24,55,6,0,120,186,187,0,38,187,131,48,0,142,187,0,33,153,142,0,120,153,169,1,0,164,2,0,25,3,164,16,1,187,4,0,1,186,0,0,134,14,0,0,24,55,6,0,3,187,186,0,0,176,14,0,0,25,2,0,25,36,25,20,1,186,4,0,1,187,0,0,134,47,0,0,24,55,6,0,36,186,187,0,0,175,47,0,1,179,0,0,0,58,176,0,0,180,58,0,0,69,179,0,0,80,2,0,25,85,80,8,1,187,4,0,1,186,0,0,134,86,0,0,24,55,6,0,85,187,186,0,15,88,69,86,120,88,2,0,119,0,67,1,0,89,179,0,0,90,2,0,25,91,90,48,1,186,4,0,1,187,0,0,134,92,0,0,24,55,6,0,91,186,187,0,41,187,89,2,3,93,92,187,1,187,4,0,1,186,0,0,134,94,0,0,24,55,6,0,93,187,186,0,33,95,94,255,121,95,28,1,0,96,179,0,0,97,2,0,25,99,97,44,1,186,4,0,1,187,0,0,134,100,0,0,24,55,6,0,99,186,187,0,41,187,96,2,3,101,100,187,1,187,4,0,1,186,0,0,134,102,0,0,24,55,6,0,101,187,186,0,0,182,102,0,0,103,180,0,1,186,4,0,1,187,0,0,134,104,0,0,24,55,6,0,185,186,187,0,25,105,104,44,1,187,4,0,1,186,0,0,134,106,0,0,24,55,6,0,105,187,186,0,41,186,103,2,3,107,106,186,1,186,4,0,1,187,0,0,134,108,0,0,24,55,6,0,107,186,187,0,0,110,175,0,41,187,110,2,3,111,108,187,0,177,111,0,0,112,179,0,0,113,2,0,25,114,113,48,1,187,4,0,1,186,0,0,134,115,0,0,24,55,6,0,114,187,186,0,41,186,112,2,3,116,115,186,1,186,4,0,1,187,0,0,134,117,0,0,24,55,6,0,116,186,187,0,0,178,117,0,0,118,179,0,0,119,2,0,25,121,119,52,1,187,4,0,1,186,0,0,134,122,0,0,24,55,6,0,121,187,186,0,41,186,118,2,3,123,122,186,1,186,4,0,1,187,0,0,134,124,0,0,24,55,6,0,123,186,187,0,0,181,124,0,0,125,178,0,0,126,181,0,17,127,125,126,120,127,2,0,119,0,26,0,0,128,178,0,0,129,182,0,41,187,128,2,3,130,129,187,1,187,4,0,1,186,0,0,134,132,0,0,24,55,6,0,130,187,186,0,0,133,178,0,0,134,177,0,41,186,133,2,3,135,134,186,1,186,4,0,1,187,0,0,134,136,0,0,24,55,6,0,135,186,187,0,13,137,132,136,120,137,2,0,119,0,5,0,0,138,178,0,25,139,138,1,0,178,139,0,119,0,227,255,0,140,181,0,0,141,178,0,17,143,141,140,120,143,2,0,119,0,26,0,0,144,181,0,0,145,182,0,41,187,144,2,3,146,145,187,1,187,4,0,1,186,0,0,134,147,0,0,24,55,6,0,146,187,186,0,0,148,181,0,0,149,177,0,41,186,148,2,3,150,149,186,1,186,4,0,1,187,0,0,134,151,0,0,24,55,6,0,150,186,187,0,13,152,147,151,120,152,2,0,119,0,5,0,0,154,181,0,26,155,154,1,0,181,155,0,119,0,227,255,0,156,178,0,0,157,181,0,17,158,156,157,121,158,134,0,0,159,177,0,0,160,178,0,41,187,160,2,3,161,159,187,0,162,182,0,0,163,178,0,41,187,163,2,3,165,162,187,0,166,181,0,0,167,178,0,4,168,166,167,25,169,168,1,41,187,169,2,0,170,187,0,135,187,26,0,161,165,170,0,0,171,175,0,0,172,178,0,3,173,172,171,0,178,173,0,0,174,175,0,0,4,181,0,3,5,4,174,0,181,5,0,0,6,178,0,0,7,180,0,1,187,4,0,1,186,0,0,134,8,0,0,24,55,6,0,185,187,186,0,25,9,8,48,1,186,4,0,1,187,0,0,134,10,0,0,24,55,6,0,9,186,187,0,41,187,7,2,3,11,10,187,1,187,4,0,1,186,0,0,134,12,0,0,24,55,6,0,11,187,186,0,15,13,6,12,121,13,3,0,1,183,17,0,119,0,23,0,0,15,180,0,1,186,4,0,1,187,0,0,134,16,0,0,24,55,6,0,185,186,187,0,25,17,16,48,1,187,4,0,1,186,0,0,134,18,0,0,24,55,6,0,17,187,186,0,41,186,15,2,3,19,18,186,1,186,4,0,1,187,0,0,134,20,0,0,24,55,6,0,19,186,187,0,32,21,20,255,121,21,2,0,1,183,17,0,32,187,183,17,121,187,21,0,1,183,0,0,0,22,178,0,0,23,180,0,1,187,4,0,1,186,0,0,134,24,0,0,24,55,6,0,185,187,186,0,25,26,24,48,1,186,4,0,1,187,0,0,134,27,0,0,24,55,6,0,26,186,187,0,41,187,23,2,3,28,27,187,1,186,4,0,134,187,0,0,116,78,6,0,28,22,186,0,0,29,181,0,0,30,180,0,1,187,4,0,1,186,0,0,134,31,0,0,24,55,6,0,185,187,186,0,25,32,31,52,1,186,4,0,1,187,0,0,134,33,0,0,24,55,6,0,32,186,187,0,41,187,30,2,3,34,33,187,1,187,4,0,1,186,0,0,134,35,0,0,24,55,6,0,34,187,186,0,15,37,35,29,121,37,20,0,0,38,181,0,0,39,180,0,1,186,4,0,1,187,0,0,134,40,0,0,24,55,6,0,185,186,187,0,25,41,40,52,1,187,4,0,1,186,0,0,134,42,0,0,24,55,6,0,41,187,186,0,41,186,39,2,3,43,42,186,1,187,4,0,134,186,0,0,116,78,6,0,43,38,187,0,0,44,179,0,0,45,2,0,25,46,45,48,1,186,4,0,1,187,0,0,134,48,0,0,24,55,6,0,46,186,187,0,41,187,44,2,3,49,48,187,1,186,255,255,1,188,4,0,134,187,0,0,116,78,6,0,49,186,188,0,0,50,179,0,0,51,2,0,25,52,51,52,1,187,4,0,1,188,0,0,134,53,0,0,24,55,6,0,52,187,188,0,41,188,50,2,3,54,53,188,1,187,255,255,1,186,4,0,134,188,0,0,116,78,6,0,54,187,186,0,0,55,179,0,25,56,55,1,0,179,56,0,0,57,180,0,25,59,57,1,0,180,59,0,119,0,180,254,0,60,2,0,25,61,60,36,42,188,61,0,1,186,1,0,1,187,0,0,134,62,0,0,24,55,6,0,188,186,187,0,41,187,62,24,42,187,187,24,33,63,187,0,121,63,9,0,0,64,2,0,25,65,64,36,42,186,65,0,1,188,0,0,1,189,1,0,134,187,0,0,116,78,6,0,186,188,189,0,0,66,2,0,25,67,66,37,42,187,67,0,1,189,1,0,1,188,0,0,134,68,0,0,24,55,6,0,187,189,188,0,41,188,68,24,42,188,188,24,33,70,188,0,120,70,37,0,0,71,2,0,1,188,4,0,1,189,0,0,134,72,0,0,24,55,6,0,71,188,189,0,0,73,176,0,3,74,72,73,1,189,4,0,1,188,0,0,134,75,0,0,24,55,6,0,185,189,188,0,1,189,4,0,134,188,0,0,116,78,6,0,75,74,189,0,0,76,2,0,25,77,76,4,1,188,4,0,1,189,0,0,134,78,0,0,24,55,6,0,77,188,189,0,0,79,175,0,3,81,78,79,1,189,4,0,1,188,0,0,134,82,0,0,24,55,6,0,185,189,188,0,25,83,82,4,1,189,4,0,134,188,0,0,116,78,6,0,83,81,189,0,1,1,0,0,0,84,1,0,137,184,0,0,139,84,0,0,1,1,255,255,0,84,1,0,137,184,0,0,139,84,0,0,140,2,158,0,0,0,0,0,2,151,0,0,32,161,0,0,2,152,0,0,120,3,0,0,2,153,0,0,28,161,0,0,1,149,0,0,136,154,0,0,0,150,154,0,136,154,0,0,25,154,154,64,137,154,0,0,130,154,0,0,136,155,0,0,49,154,154,155,216,159,2,0,135,154,0,0,25,146,150,16,25,145,150,8,0,144,150,0,0,3,0,0,0,49,1,0,2,141,0,0,115,52,1,0,1,154,4,0,1,155,0,0,134,60,0,0,24,55,6,0,153,154,155,0,32,71,60,0,121,71,23,0,1,155,4,0,1,154,0,0,134,82,0,0,24,55,6,0,152,155,154,0,134,154,0,0,164,64,6,0,82,0,0,0,1,154,196,2,1,155,4,0,1,156,0,0,134,93,0,0,24,55,6,0,154,155,156,0,32,104,93,1,121,104,7,0,1,155,204,2,1,154,0,0,1,157,4,0,134,156,0,0,116,78,6,0,155,154,157,0,1,156,196,2,1,157,4,0,1,154,0,0,134,115,0,0,24,55,6,0,156,157,154,0,32,126,115,1,121,126,39,0,0,4,3,0,42,154,4,0,1,157,1,0,1,156,0,0,134,15,0,0,24,55,6,0,154,157,156,0,41,156,15,24,42,156,156,24,0,26,156,0,33,37,26,0,121,37,16,0,0,43,3,0,0,44,49,0,1,157,4,0,134,156,0,0,116,78,6,0,144,44,157,0,134,45,0,0,144,18,6,0,43,144,0,0,32,46,45,27,121,46,5,0,1,2,27,0,0,42,2,0,137,150,0,0,139,42,0,0,1,156,4,0,1,157,0,0,134,47,0,0,24,55,6,0,153,156,157,0,25,48,47,1,1,156,4,0,134,157,0,0,116,78,6,0,153,48,156,0,119,0,230,1,1,157,4,0,1,156,0,0,134,50,0,0,24,55,6,0,151,157,156,0,34,51,50,0,121,51,8,0,0,52,141,0,135,53,22,0,52,0,0,0,1,157,4,0,134,156,0,0,116,78,6,0,151,53,157,0,1,156,4,0,1,157,0,0,134,54,0,0,24,55,6,0,153,156,157,0,2,157,0,0,76,162,0,0,1,156,4,0,1,154,0,0,134,55,0,0,24,55,6,0,157,156,154,0,26,56,55,1,17,57,56,54,0,58,3,0,1,154,0,0,13,59,58,154,20,154,57,59,0,137,154,0,121,137,102,1,1,154,196,2,1,156,4,0,1,157,0,0,134,61,0,0,24,55,6,0,154,156,157,0,32,62,61,0,0,63,3,0,1,157,0,0,13,64,63,157,19,157,62,64,0,138,157,0,40,157,138,1,0,139,157,0,2,157,0,0,143,52,1,0,42,157,157,0,1,156,1,0,1,154,0,0,134,65,0,0,24,55,6,0,157,156,154,0,41,154,65,24,42,154,154,24,33,66,154,0,20,154,139,66,0,140,154,0,121,140,69,0,1,154,4,0,1,156,0,0,134,5,0,0,24,55,6,0,152,154,156,0,2,156,0,0,76,162,0,0,1,154,4,0,1,157,0,0,134,6,0,0,24,55,6,0,156,154,157,0,26,7,6,1,1,154,0,0,134,157,0,0,164,140,5,0,5,7,154,0,1,157,4,0,1,154,0,0,134,8,0,0,24,55,6,0,152,157,154,0,0,9,141,0,134,154,0,0,144,86,6,0,8,9,0,0,1,154,4,0,1,157,0,0,134,10,0,0,24,55,6,0,152,154,157,0,134,157,0,0,124,212,4,0,10,0,0,0,1,154,32,0,134,157,0,0,112,14,6,0,154,0,0,0,2,157,0,0,64,162,0,0,1,154,4,0,1,156,0,0,134,11,0,0,24,55,6,0,157,154,156,0,1,154,1,0,134,156,0,0,0,62,6,0,11,154,0,0,1,156,4,0,1,154,0,0,134,12,0,0,24,55,6,0,152,156,154,0,134,154,0,0,164,64,6,0,12,0,0,0,2,154,0,0,68,162,0,0,1,156,4,0,1,157,0,0,134,13,0,0,24,55,6,0,154,156,157,0,134,157,0,0,164,179,5,0,13,0,0,0,119,0,242,0,2,156,0,0,166,51,1,0,134,157,0,0,144,18,6,0,156,145,0,0,134,157,0,0,224,106,6,0,1,157,4,0,1,156,0,0,134,67,0,0,24,55,6,0,153,157,156,0,25,68,67,1,1,156,4,0,1,157,0,0,134,69,0,0,24,55,6,0,151,156,157,0,25,70,69,2,2,157,0,0,80,162,0,0,1,156,4,0,1,154,0,0,134,72,0,0,24,55,6,0,157,156,154,0,1,154,4,0,1,156,0,0,134,73,0,0,24,55,6,0,151,154,156,0,4,74,72,73,26,75,74,3,1,156,0,0,134,76,0,0,148,240,4,0,68,70,156,75,0,143,76,0,0,77,143,0,1,156,4,0,1,154,0,0,134,78,0,0,24,55,6,0,153,156,154,0,25,79,78,1,1,154,4,0,1,156,0,0,134,80,0,0,24,55,6,0,151,154,156,0,25,81,80,1,2,156,0,0,80,162,0,0,1,154,4,0,1,157,0,0,134,83,0,0,24,55,6,0,156,154,157,0,1,157,4,0,1,154,0,0,134,84,0,0,24,55,6,0,151,157,154,0,4,85,83,84,26,86,85,2,1,154,0,0,134,87,0,0,144,216,2,0,77,79,81,154,86,0,0,0,0,142,87,0,1,148,0,0,0,88,148,0,1,154,4,0,1,157,0,0,134,89,0,0,24,55,6,0,153,154,157,0,17,90,88,89,120,90,2,0,119,0,39,0,0,91,142,0,0,92,148,0,1,154,0,0,134,157,0,0,164,140,5,0,91,92,154,0,1,147,0,0,0,94,147,0,1,157,4,0,1,154,0,0,134,95,0,0,24,55,6,0,151,157,154,0,17,96,94,95,120,96,2,0,119,0,19,0,0,97,142,0,1,154,4,0,1,157,0,0,134,98,0,0,24,55,6,0,152,154,157,0,0,99,148,0,0,100,147,0,134,101,0,0,184,220,5,0,98,99,100,0,134,157,0,0,64,245,1,0,97,101,0,0,0,102,147,0,25,103,102,1,0,147,103,0,119,0,230,255,0,105,148,0,25,106,105,1,0,148,106,0,119,0,210,255,0,107,143,0,1,157,4,0,1,154,0,0,134,108,0,0,24,55,6,0,153,157,154,0,1,157,1,0,134,154,0,0,164,140,5,0,107,108,157,0,0,109,143,0,0,110,141,0,134,154,0,0,144,86,6,0,109,110,0,0,2,154,0,0,76,162,0,0,1,157,4,0,1,156,0,0,134,111,0,0,24,55,6,0,154,157,156,0,1,156,24,0,15,112,156,111,121,112,55,0,1,156,4,0,1,157,0,0,134,113,0,0,24,55,6,0,153,156,157,0,25,114,113,24,2,157,0,0,76,162,0,0,1,156,4,0,1,154,0,0,134,116,0,0,24,55,6,0,157,156,154,0,15,117,116,114,0,118,143,0,121,117,33,0,2,154,0,0,76,162,0,0,1,156,4,0,1,157,0,0,134,119,0,0,24,55,6,0,154,156,157,0,1,157,4,0,1,156,0,0,134,120,0,0,24,55,6,0,153,157,156,0,25,121,120,1,4,122,119,121,2,156,0,0,80,162,0,0,1,157,4,0,1,154,0,0,134,123,0,0,24,55,6,0,156,157,154,0,1,154,4,0,1,157,0,0,134,124,0,0,24,55,6,0,151,154,157,0,4,125,123,124,26,127,125,3,134,157,0,0,44,74,5,0,118,122,127,0,119,0,7,0,1,154,24,0,1,156,0,0,134,157,0,0,44,74,5,0,118,154,156,0,119,0,1,0,0,128,143,0,134,157,0,0,164,179,5,0,128,0,0,0,0,129,143,0,134,157,0,0,124,212,4,0,129,0,0,0,1,156,32,0,134,157,0,0,112,14,6,0,156,0,0,0,134,130,0,0,164,117,6,0,33,131,130,0,121,131,14,0,0,132,143,0,134,157,0,0,56,73,6,0,132,0,0,0,0,133,143,0,1,156,1,0,134,157,0,0,40,29,6,0,133,156,0,0,0,134,143,0,134,157,0,0,124,212,4,0,134,0,0,0,0,135,143,0,134,157,0,0,96,200,4,0,135,0,0,0,2,157,0,0,68,162,0,0,1,156,4,0,1,154,0,0,134,136,0,0,24,55,6,0,157,156,154,0,134,154,0,0,164,179,5,0,136,0,0,0,2,156,0,0,143,52,1,0,42,156,156,0,1,157,1,0,1,155,1,0,134,154,0,0,116,78,6,0,156,157,155,0,1,155,0,0,1,157,4,0,134,154,0,0,116,78,6,0,153,155,157,0,0,14,141,0,135,16,22,0,14,0,0,0,1,157,4,0,134,154,0,0,116,78,6,0,151,16,157,0,0,17,3,0,1,154,0,0,14,18,17,154,121,18,91,0,1,154,4,0,1,157,0,0,134,19,0,0,24,55,6,0,153,154,157,0,32,20,19,0,121,20,13,0,0,21,3,0,42,157,21,0,1,154,1,0,1,155,0,0,134,22,0,0,24,55,6,0,157,154,155,0,41,155,22,24,42,155,155,24,0,23,155,0,32,24,23,0,120,24,72,0,1,155,4,0,1,154,0,0,134,25,0,0,24,55,6,0,152,155,154,0,1,154,4,0,1,155,0,0,134,27,0,0,24,55,6,0,153,154,155,0,25,28,27,1,1,154,4,0,134,155,0,0,116,78,6,0,153,28,154,0,0,29,3,0,0,30,49,0,1,154,4,0,134,155,0,0,116,78,6,0,146,30,154,0,1,154,0,0,134,155,0,0,48,255,5,0,25,27,154,29,146,0,0,0], eb + 163840);
  HEAPU8.set([1,155,4,0,1,154,0,0,134,31,0,0,24,55,6,0,152,155,154,0,134,32,0,0,76,79,6,0,31,0,0,0,0,148,32,0,1,154,4,0,1,155,0,0,134,33,0,0,24,55,6,0,152,154,155,0,134,34,0,0,168,75,6,0,33,0,0,0,0,147,34,0,1,155,4,0,1,154,0,0,134,35,0,0,24,55,6,0,151,155,154,0,0,36,147,0,15,38,35,36,121,38,6,0,0,39,147,0,1,155,4,0,134,154,0,0,116,78,6,0,151,39,155,0,0,40,3,0,2,155,0,0,36,161,0,0,1,157,4,0,134,154,0,0,116,78,6,0,155,40,157,0,0,41,49,0,2,157,0,0,40,161,0,0,1,155,4,0,134,154,0,0,116,78,6,0,157,41,155,0,1,2,228,255,0,42,2,0,137,150,0,0,139,42,0,0,140,0,121,0,0,0,0,0,2,116,0,0,156,117,0,0,2,117,0,0,16,107,0,0,1,114,0,0,136,118,0,0,0,115,118,0,136,118,0,0,25,118,118,112,137,118,0,0,130,118,0,0,136,119,0,0,49,118,118,119,8,169,2,0,135,118,0,0,25,91,115,48,0,90,115,0,1,118,192,106,1,119,4,0,1,120,0,0,134,0,0,0,24,55,6,0,118,119,120,0,1,120,0,0,14,1,0,120,121,1,15,0,1,120,192,106,1,119,4,0,1,118,0,0,134,12,0,0,24,55,6,0,120,119,118,0,25,23,12,64,1,118,4,0,1,119,0,0,134,34,0,0,24,55,6,0,23,118,119,0,0,56,34,0,119,0,8,0,1,119,248,106,1,118,4,0,1,120,0,0,134,45,0,0,24,55,6,0,119,118,120,0,0,56,45,0,0,89,56,0,1,120,128,117,1,118,4,0,1,119,0,0,134,67,0,0,24,55,6,0,120,118,119,0,1,119,252,106,1,118,4,0,1,120,0,0,134,78,0,0,24,55,6,0,119,118,120,0,13,85,67,78,121,85,95,0,1,120,132,117,1,118,4,0,1,119,0,0,134,2,0,0,24,55,6,0,120,118,119,0,1,119,240,106,1,118,4,0,1,120,0,0,134,3,0,0,24,55,6,0,119,118,120,0,13,4,2,3,121,4,81,0,1,120,136,117,1,118,4,0,1,119,0,0,134,5,0,0,24,55,6,0,120,118,119,0,1,119,8,3,1,118,4,0,1,120,0,0,134,6,0,0,24,55,6,0,119,118,120,0,13,7,5,6,121,7,67,0,1,120,140,117,1,118,4,0,1,119,0,0,134,8,0,0,24,55,6,0,120,118,119,0,0,9,89,0,13,10,8,9,121,10,58,0,1,119,144,117,1,118,4,0,1,120,0,0,134,11,0,0,24,55,6,0,119,118,120,0,1,120,236,106,1,118,4,0,1,119,0,0,134,13,0,0,24,55,6,0,120,118,119,0,13,14,11,13,121,14,44,0,1,119,148,117,1,118,4,0,1,120,0,0,134,15,0,0,24,55,6,0,119,118,120,0,1,120,200,2,1,118,4,0,1,119,0,0,134,16,0,0,24,55,6,0,120,118,119,0,13,17,15,16,121,17,30,0,1,119,152,117,1,118,4,0,1,120,0,0,134,18,0,0,24,55,6,0,119,118,120,0,1,120,188,2,1,118,4,0,1,119,0,0,134,19,0,0,24,55,6,0,120,118,119,0,14,20,18,19,2,119,0,0,4,209,0,0,42,119,119,0,1,118,1,0,1,120,0,0,134,21,0,0,24,55,6,0,119,118,120,0,41,120,21,24,42,120,120,24,33,22,120,0,20,120,20,22,0,86,120,0,120,86,3,0,137,115,0,0,139,0,0,0,0,24,89,0,1,118,140,117,1,119,4,0,134,120,0,0,116,78,6,0,118,24,119,0,2,120,0,0,68,162,0,0,1,119,4,0,1,118,0,0,134,25,0,0,24,55,6,0,120,119,118,0,134,26,0,0,76,79,6,0,25,0,0,0,0,88,26,0,2,118,0,0,68,162,0,0,1,119,4,0,1,120,0,0,134,27,0,0,24,55,6,0,118,119,120,0,134,28,0,0,168,75,6,0,27,0,0,0,0,87,28,0,1,120,128,117,1,119,4,0,1,118,0,0,134,29,0,0,24,55,6,0,120,119,118,0,1,118,4,0,1,119,0,0,134,30,0,0,24,55,6,0,117,118,119,0,14,31,29,30,121,31,42,0,1,119,4,0,1,118,0,0,134,32,0,0,24,55,6,0,117,119,118,0,0,89,32,0,1,118,4,0,1,119,0,0,134,33,0,0,24,55,6,0,117,118,119,0,1,118,128,117,1,120,4,0,134,119,0,0,116,78,6,0,118,33,120,0,1,120,0,0,1,118,4,0,134,119,0,0,116,78,6,0,116,120,118,0,0,35,89,0,33,36,35,0,120,36,2,0,119,0,17,0,0,37,89,0,28,119,37,10,38,119,119,255,0,38,119,0,0,89,38,0,1,119,4,0,1,118,0,0,134,39,0,0,24,55,6,0,116,119,118,0,25,40,39,1,1,119,4,0,134,118,0,0,116,78,6,0,116,40,119,0,119,0,237,255,1,118,200,2,1,119,4,0,1,120,0,0,134,41,0,0,24,55,6,0,118,119,120,0,1,119,148,117,1,118,4,0,134,120,0,0,116,78,6,0,119,41,118,0,1,120,8,3,1,118,4,0,1,119,0,0,134,42,0,0,24,55,6,0,120,118,119,0,1,118,136,117,1,120,4,0,134,119,0,0,116,78,6,0,118,42,120,0,1,119,252,106,1,120,4,0,1,118,0,0,134,43,0,0,24,55,6,0,119,120,118,0,1,120,128,117,1,119,4,0,134,118,0,0,116,78,6,0,120,43,119,0,1,118,236,106,1,119,4,0,1,120,0,0,134,44,0,0,24,55,6,0,118,119,120,0,1,119,144,117,1,118,4,0,134,120,0,0,116,78,6,0,119,44,118,0,1,120,240,106,1,118,4,0,1,119,0,0,134,46,0,0,24,55,6,0,120,118,119,0,1,118,132,117,1,120,4,0,134,119,0,0,116,78,6,0,118,46,120,0,1,119,188,2,1,120,4,0,1,118,0,0,134,47,0,0,24,55,6,0,119,120,118,0,1,120,152,117,1,119,4,0,134,118,0,0,116,78,6,0,120,47,119,0,2,118,0,0,4,209,0,0,42,118,118,0,1,119,1,0,1,120,0,0,134,48,0,0,24,55,6,0,118,119,120,0,41,120,48,24,42,120,120,24,33,49,120,0,121,49,150,0,1,119,0,0,1,118,0,0,134,120,0,0,124,108,5,0,119,118,0,0,1,120,200,2,1,118,4,0,1,119,0,0,134,50,0,0,24,55,6,0,120,118,119,0,1,119,8,3,1,118,4,0,1,120,0,0,134,51,0,0,24,55,6,0,119,118,120,0,1,120,4,0,1,118,0,0,134,52,0,0,24,55,6,0,116,120,118,0,1,118,252,106,1,120,4,0,1,119,0,0,134,53,0,0,24,55,6,0,118,120,119,0,1,119,4,0,1,120,0,0,134,54,0,0,24,55,6,0,116,119,120,0,1,120,4,0,1,119,0,0,134,55,0,0,24,55,6,0,117,120,119,0,1,119,236,106,1,120,4,0,1,118,0,0,134,57,0,0,24,55,6,0,119,120,118,0,1,118,124,3,1,120,4,0,1,119,0,0,134,58,0,0,24,55,6,0,118,120,119,0,1,119,140,117,1,120,4,0,1,118,0,0,134,59,0,0,24,55,6,0,119,120,118,0,1,118,10,0,4,60,118,59,1,118,244,106,1,120,4,0,1,119,0,0,134,61,0,0,24,55,6,0,118,120,119,0,1,119,240,106,1,120,4,0,1,118,0,0,134,62,0,0,24,55,6,0,119,120,118,0,1,118,188,2,1,120,4,0,1,119,0,0,134,63,0,0,24,55,6,0,118,120,119,0,1,119,160,117,41,120,63,2,3,64,119,120,1,120,4,0,1,119,0,0,134,65,0,0,24,55,6,0,64,120,119,0,1,120,4,0,134,119,0,0,116,78,6,0,90,50,120,0,25,99,90,4,1,120,4,0,134,119,0,0,116,78,6,0,99,51,120,0,25,107,90,8,1,120,4,0,134,119,0,0,116,78,6,0,107,52,120,0,25,108,90,12,1,120,4,0,134,119,0,0,116,78,6,0,108,53,120,0,25,109,90,16,1,120,4,0,134,119,0,0,116,78,6,0,109,54,120,0,25,110,90,20,1,120,4,0,134,119,0,0,116,78,6,0,110,55,120,0,25,111,90,24,1,120,4,0,134,119,0,0,116,78,6,0,111,57,120,0,25,112,90,28,1,120,4,0,134,119,0,0,116,78,6,0,112,58,120,0,25,113,90,32,1,120,4,0,134,119,0,0,116,78,6,0,113,60,120,0,25,92,90,36,1,120,4,0,134,119,0,0,116,78,6,0,92,61,120,0,25,93,90,40,1,120,4,0,134,119,0,0,116,78,6,0,93,62,120,0,25,94,90,44,1,120,4,0,134,119,0,0,116,78,6,0,94,65,120,0,2,120,0,0,79,11,1,0,134,119,0,0,144,18,6,0,120,90,0,0,119,0,149,0,1,120,23,0,1,118,0,0,134,119,0,0,124,108,5,0,120,118,0,0,1,119,200,2,1,118,4,0,1,120,0,0,134,66,0,0,24,55,6,0,119,118,120,0,1,120,8,3,1,118,4,0,1,119,0,0,134,68,0,0,24,55,6,0,120,118,119,0,1,119,4,0,1,118,0,0,134,69,0,0,24,55,6,0,116,119,118,0,1,118,252,106,1,119,4,0,1,120,0,0,134,70,0,0,24,55,6,0,118,119,120,0,1,120,4,0,1,119,0,0,134,71,0,0,24,55,6,0,116,120,119,0,1,119,4,0,1,120,0,0,134,72,0,0,24,55,6,0,117,119,120,0,1,120,236,106,1,119,4,0,1,118,0,0,134,73,0,0,24,55,6,0,120,119,118,0,1,118,124,3,1,119,4,0,1,120,0,0,134,74,0,0,24,55,6,0,118,119,120,0,1,120,140,117,1,119,4,0,1,118,0,0,134,75,0,0,24,55,6,0,120,119,118,0,1,118,10,0,4,76,118,75,1,118,244,106,1,119,4,0,1,120,0,0,134,77,0,0,24,55,6,0,118,119,120,0,1,120,240,106,1,119,4,0,1,118,0,0,134,79,0,0,24,55,6,0,120,119,118,0,1,118,188,2,1,119,4,0,1,120,0,0,134,80,0,0,24,55,6,0,118,119,120,0,1,120,160,117,41,119,80,2,3,81,120,119,1,119,4,0,1,120,0,0,134,82,0,0,24,55,6,0,81,119,120,0,1,119,4,0,134,120,0,0,116,78,6,0,91,66,119,0,25,95,91,4,1,119,4,0,134,120,0,0,116,78,6,0,95,68,119,0,25,96,91,8,1,119,4,0,134,120,0,0,116,78,6,0,96,69,119,0,25,97,91,12,1,119,4,0,134,120,0,0,116,78,6,0,97,70,119,0,25,98,91,16,1,119,4,0,134,120,0,0,116,78,6,0,98,71,119,0,25,100,91,20,1,119,4,0,134,120,0,0,116,78,6,0,100,72,119,0,25,101,91,24,1,119,4,0,134,120,0,0,116,78,6,0,101,73,119,0,25,102,91,28,1,119,4,0,134,120,0,0,116,78,6,0,102,74,119,0,25,103,91,32,1,119,4,0,134,120,0,0,116,78,6,0,103,76,119,0,25,104,91,36,1,119,4,0,134,120,0,0,116,78,6,0,104,77,119,0,25,105,91,40,1,119,4,0,134,120,0,0,116,78,6,0,105,79,119,0,25,106,91,44,1,119,4,0,134,120,0,0,116,78,6,0,106,82,119,0,2,119,0,0,157,11,1,0,134,120,0,0,120,61,6,0,119,91,0,0,134,120,0,0,160,106,6,0,0,83,88,0,0,84,87,0,134,120,0,0,124,108,5,0,83,84,0,0,137,115,0,0,139,0,0,0,140,0,153,0,0,0,0,0,2,146,0,0,255,255,0,0,2,147,0,0,12,191,0,0,2,148,0,0,220,189,0,0,1,144,0,0,136,149,0,0,0,145,149,0,136,149,0,0,25,149,149,16,137,149,0,0,130,149,0,0,136,150,0,0,49,149,149,150,208,178,2,0,135,149,0,0,1,140,0,0,2,150,0,0,172,164,0,0,1,151,0,0,1,152,4,0,134,149,0,0,116,78,6,0,150,151,152,0,2,149,0,0,60,162,0,0,1,152,4,0,1,151,0,0,134,2,0,0,24,55,6,0,149,152,151,0,25,51,2,82,42,152,51,0,1,149,0,0,1,150,1,0,134,151,0,0,116,78,6,0,152,149,150,0,1,151,8,0,1,150,4,0,1,149,0,0,134,62,0,0,24,55,6,0,151,150,149,0,1,149,1,3,13,73,62,149,121,73,83,0,2,149,0,0,60,162,0,0,1,150,4,0,1,151,0,0,134,84,0,0,24,55,6,0,149,150,151,0,25,95,84,81,42,151,95,0,1,150,1,0,1,149,0,0,134,106,0,0,24,55,6,0,151,150,149,0,1,149,255,0,19,149,106,149,0,117,149,0,33,128,117,0,121,128,60,0,1,149,24,0,1,150,4,0,1,151,0,0,134,3,0,0,24,55,6,0,149,150,151,0,1,151,4,0,1,150,0,0,134,14,0,0,24,55,6,0,148,151,150,0,13,25,3,14,121,25,47,0,1,150,4,0,1,151,0,0,134,36,0,0,24,55,6,0,148,150,151,0,1,151,224,4,1,150,7,0,138,36,151,150,12,180,2,0,32,180,2,0,52,180,2,0,8,180,2,0,72,180,2,0,92,180,2,0,112,180,2,0,119,0,31,0,1,1,30,2,0,44,1,0,137,145,0,0,139,44,0,0,119,0,26,0,1,1,28,2,0,44,1,0,137,145,0,0,139,44,0,0,119,0,21,0,1,1,32,2,0,44,1,0,137,145,0,0,139,44,0,0,119,0,16,0,1,1,31,2,0,44,1,0,137,145,0,0,139,44,0,0,119,0,11,0,1,1,29,2,0,44,1,0,137,145,0,0,139,44,0,0,119,0,6,0,1,1,33,2,0,44,1,0,137,145,0,0,139,44,0,0,119,0,1,0,1,1,255,255,0,44,1,0,137,145,0,0,139,44,0,0,1,151,24,0,1,150,4,0,1,149,0,0,134,45,0,0,24,55,6,0,151,150,149,0,1,150,4,0,134,149,0,0,116,78,6,0,148,45,150,0,2,149,0,0,60,162,0,0,1,150,4,0,1,151,0,0,134,46,0,0,24,55,6,0,149,150,151,0,25,47,46,80,42,151,47,0,1,150,1,0,1,149,0,0,134,48,0,0,24,55,6,0,151,150,149,0,41,149,48,24,42,149,149,24,33,49,149,0,121,49,112,0,1,149,28,0,1,150,2,0,1,151,0,0,134,50,0,0,24,55,6,0,149,150,151,0,19,151,50,146,0,52,151,0,1,151,0,16,19,151,52,151,0,53,151,0,33,54,53,0,121,54,16,0,2,151,0,0,172,164,0,0,1,150,4,0,1,149,0,0,134,55,0,0,24,55,6,0,151,150,149,0,39,149,55,8,0,56,149,0,2,150,0,0,172,164,0,0,1,151,4,0,134,149,0,0,116,78,6,0,150,56,151,0,1,149,28,0,1,151,2,0,1,150,0,0,134,57,0,0,24,55,6,0,149,151,150,0,19,150,57,146,0,58,150,0,38,150,58,3,0,59,150,0,33,60,59,0,121,60,16,0,2,150,0,0,172,164,0,0,1,151,4,0,1,149,0,0,134,61,0,0,24,55,6,0,150,151,149,0,39,149,61,1,0,63,149,0,2,151,0,0,172,164,0,0,1,150,4,0,134,149,0,0,116,78,6,0,151,63,150,0,1,149,28,0,1,150,2,0,1,151,0,0,134,64,0,0,24,55,6,0,149,150,151,0,19,151,64,146,0,65,151,0,1,151,192,0,19,151,65,151,0,66,151,0,33,67,66,0,121,67,16,0,2,151,0,0,172,164,0,0,1,150,4,0,1,149,0,0,134,68,0,0,24,55,6,0,151,150,149,0,39,149,68,2,0,69,149,0,2,150,0,0,172,164,0,0,1,151,4,0,134,149,0,0,116,78,6,0,150,69,151,0,1,149,28,0,1,151,2,0,1,150,0,0,134,70,0,0,24,55,6,0,149,151,150,0,19,150,70,146,0,71,150,0,1,150,0,3,19,150,71,150,0,72,150,0,33,74,72,0,121,74,16,0,2,150,0,0,172,164,0,0,1,151,4,0,1,149,0,0,134,75,0,0,24,55,6,0,150,151,149,0,39,149,75,4,0,76,149,0,2,151,0,0,172,164,0,0,1,150,4,0,134,149,0,0,116,78,6,0,151,76,150,0,1,139,0,0,0,77,139,0,41,149,77,4,3,78,147,149,1,149,4,0,1,150,0,0,134,79,0,0,24,55,6,0,78,149,150,0,33,80,79,0,120,80,2,0,119,0,23,0,0,81,139,0,41,150,81,4,3,82,147,150,1,150,4,0,1,149,0,0,134,83,0,0,24,55,6,0,82,150,149,0,1,149,24,0,1,150,4,0,1,151,0,0,134,85,0,0,24,55,6,0,149,150,151,0,13,86,83,85,121,86,3,0,1,144,24,0,119,0,5,0,0,137,139,0,25,138,137,1,0,139,138,0,119,0,224,255,32,151,144,24,121,151,142,0,1,151,28,0,1,150,2,0,1,149,0,0,134,87,0,0,24,55,6,0,151,150,149,0,19,149,87,146,0,88,149,0,38,149,88,3,0,89,149,0,33,90,89,0,121,90,3,0,1,144,27,0,119,0,93,0,0,91,139,0,41,149,91,4,3,92,147,149,25,93,92,4,42,149,93,0,1,150,1,0,1,151,0,0,134,94,0,0,24,55,6,0,149,150,151,0,1,151,255,0,19,151,94,151,0,96,151,0,33,97,96,0,121,97,16,0,1,151,28,0,1,150,2,0,1,149,0,0,134,98,0,0,24,55,6,0,151,150,149,0,19,149,98,146,0,99,149,0,1,149,0,16,19,149,99,149,0,100,149,0,33,101,100,0,121,101,3,0,1,144,27,0,119,0,63,0,1,149,28,0,1,150,2,0,1,151,0,0,134,108,0,0,24,55,6,0,149,150,151,0,19,151,108,146,0,109,151,0,1,151,192,0,19,151,109,151,0,110,151,0,33,111,110,0,121,111,14,0,0,112,139,0,41,151,112,4,3,113,147,151,25,114,113,10,1,151,2,0,1,150,0,0,134,115,0,0,24,55,6,0,114,151,150,0,19,150,115,146,0,116,150,0,0,140,116,0,119,0,37,0,1,150,28,0,1,151,2,0,1,149,0,0,134,118,0,0,24,55,6,0,150,151,149,0,19,149,118,146,0,119,149,0,1,149,0,3,19,149,119,149,0,120,149,0,33,121,120,0,0,122,139,0,41,149,122,4,3,123,147,149,121,121,11,0,25,124,123,12,1,149,2,0,1,151,0,0,134,125,0,0,24,55,6,0,124,149,151,0,19,151,125,146,0,126,151,0,0,140,126,0,119,0,11,0,25,127,123,6,1,151,2,0,1,149,0,0,134,129,0,0,24,55,6,0,127,151,149,0,19,149,129,146,0,130,149,0,0,140,130,0,119,0,1,0,32,149,144,27,121,149,13,0,0,102,139,0,41,149,102,4,3,103,147,149,25,104,103,8,1,149,2,0,1,151,0,0,134,105,0,0,24,55,6,0,104,149,151,0,19,151,105,146,0,107,151,0,0,140,107,0,0,131,140,0,1,151,0,1,15,132,151,131,38,151,132,1,0,133,151,0,1,151,255,0,19,151,133,151,0,134,151,0,2,151,0,0,60,162,0,0,1,149,4,0,1,150,0,0,134,135,0,0,24,55,6,0,151,149,150,0,25,136,135,82,42,149,136,0,1,151,1,0,134,150,0,0,116,78,6,0,149,134,151,0,0,4,140,0,33,5,4,0,120,5,15,0,1,150,32,0,1,151,4,0,1,149,0,0,134,6,0,0,24,55,6,0,150,151,149,0,0,140,6,0,0,7,140,0,1,149,127,0,15,8,149,7,1,149,0,0,125,0,8,149,6,0,0,0,0,140,0,0,1,149,28,0,1,151,2,0,1,150,0,0,134,9,0,0,24,55,6,0,149,151,150,0,19,150,9,146,0,10,150,0,1,150,0,3,19,150,10,150,0,11,150,0,33,12,11,0,121,12,79,0,0,13,140,0,1,150,65,0,17,15,150,13,0,16,140,0,36,17,16,90,19,150,15,17,0,141,150,0,121,141,19,0,0,18,140,0,1,150,96,1,3,19,18,150,0,140,19,0,2,150,0,0,60,162,0,0,1,151,4,0,1,149,0,0,134,20,0,0,24,55,6,0,150,151,149,0,25,21,20,82,42,151,21,0,1,150,1,0,1,152,1,0,134,149,0,0,116,78,6,0,151,150,152,0,0,22,140,0,1,149,97,0,17,23,149,22,0,24,140,0,36,26,24,122,19,149,23,26,0,142,149,0,121,142,19,0,0,27,140,0,1,149,64,1,3,28,27,149,0,140,28,0,2,149,0,0,60,162,0,0,1,152,4,0,1,150,0,0,134,29,0,0,24,55,6,0,149,152,150,0,25,30,29,82,42,152,30,0,1,149,1,0,1,151,1,0,134,150,0,0,116,78,6,0,152,149,151,0,0,31,140,0,1,150,48,0,17,32,150,31,0,33,140,0,36,34,33,57,19,150,32,34,0,143,150,0,121,143,19,0,0,35,140,0,1,150,103,1,3,37,35,150,0,140,37,0,2,150,0,0,60,162,0,0,1,151,4,0,1,149,0,0,134,38,0,0,24,55,6,0,150,151,149,0,25,39,38,82,42,151,39,0,1,150,1,0,1,152,1,0,134,149,0,0,116,78,6,0,151,150,152,0,0,40,140,0,33,41,40,0,0,42,140,0,1,149,255,255,125,43,41,42,149,0,0,0,0,1,43,0,0,44,1,0,137,145,0,0,139,44,0,0,140,0,143,0,0,0,0,0,2,134,0,0,124,162,0,0,2,135,0,0,255,255,0,0,2,136,0,0,116,162,0,0,1,132,0,0,136,137,0,0,0,133,137,0,136,137,0,0,25,137,137,80,137,137,0,0,130,137,0,0,136,138,0,0,49,137,137,138,168,187,2,0,135,137,0,0,0,130,133,0,1,131,0,0,2,138,0,0,108,162,0,0,1,139,0,0,1,140,4,0,134,137,0,0,116,78,6,0,138,139,140,0,2,140,0,0,108,162,0,0,25,140,140,4,1,139,0,0,1,138,4,0,134,137,0,0,116,78,6,0,140,139,138,0,2,138,0,0,108,162,0,0,25,138,138,8,1,139,0,0,1,140,4,0,134,137,0,0,116,78,6,0,138,139,140,0,2,140,0,0,108,162,0,0,25,140,140,12,1,139,0,0,1,138,4,0,134,137,0,0,116,78,6,0,140,139,138,0,2,138,0,0,108,162,0,0,25,138,138,16,1,139,0,0,1,140,4,0,134,137,0,0,116,78,6,0,138,139,140,0,135,1,29,0,0,129,1,0,0,38,129,0,38,137,38,3,0,49,137,0,33,60,49,0,121,60,10,0,0,71,131,0,41,137,71,16,42,137,137,16,0,82,137,0,39,137,82,8,0,93,137,0,19,137,93,135,0,104,137,0,0,131,104,0,0,115,129,0,1,137,192,0,19,137,115,137,0,2,137,0,33,13,2,0,121,13,10,0,0,24,131,0,41,137,24,16,42,137,137,16,0,31,137,0,39,137,31,16,0,32,137,0,19,137,32,135,0,33,137,0,0,131,33,0,0,34,129,0,1,137,0,3,19,137,34,137,0,35,137,0,33,36,35,0,121,36,10,0,0,37,131,0,41,137,37,16,42,137,137,16,0,39,137,0,39,137,39,32,0,40,137,0,19,137,40,135,0,41,137,0,0,131,41,0,1,137,8,0,1,140,4,0,1,139,0,0,134,42,0,0,24,55,6,0,137,140,139,0,1,139,0,4,13,43,42,139,121,43,150,0,1,139,28,0,1,140,4,0,1,137,0,0,134,44,0,0,24,55,6,0,139,140,137,0,2,137,0,0,216,164,0,0,1,140,4,0,1,139,0,0,134,45,0,0,24,55,6,0,137,140,139,0,6,139,44,45,38,139,139,255,0,46,139,0,2,140,0,0,108,162,0,0,1,137,4,0,134,139,0,0,116,78,6,0,140,46,137,0,1,139,32,0,1,137,4,0,1,140,0,0,134,47,0,0,24,55,6,0,139,137,140,0,2,140,0,0,212,164,0,0,1,137,4,0,1,139,0,0,134,48,0,0,24,55,6,0,140,137,139,0,6,139,47,48,38,139,139,255,0,50,139,0,2,137,0,0,112,162,0,0,1,140,4,0,134,139,0,0,116,78,6,0,137,50,140,0,1,139,24,0,1,140,4,0,1,137,0,0,134,51,0,0,24,55,6,0,139,140,137,0,33,52,51,0,121,52,93,0,2,137,0,0,108,162,0,0,1,140,4,0,1,139,0,0,134,53,0,0,24,55,6,0,137,140,139,0,2,139,0,0,248,190,0,0,1,140,4,0,1,137,0,0,134,54,0,0,24,55,6,0,139,140,137,0,13,55,53,54,121,55,17,0,2,137,0,0,112,162,0,0,1,140,4,0,1,139,0,0,134,56,0,0,24,55,6,0,137,140,139,0,2,139,0,0,252,190,0,0,1,140,4,0,1,137,0,0,134,57,0,0,24,55,6,0,139,140,137,0,13,58,56,57,120,58,61,0,1,140,8,0,1,139,4,0,134,137,0,0,116,78,6,0,134,140,139,0,1,128,0,0,0,59,128,0,34,61,59,3,120,61,2,0,119,0,50,1,1,137,24,0,1,139,4,0,1,140,0,0,134,62,0,0,24,55,6,0,137,139,140,0,0,63,128,0,25,64,63,1,26,65,64,1,1,140,1,0,22,140,140,65,0,66,140,0,19,140,62,66,0,67,140,0,33,68,67,0,121,68,31,0,0,69,131,0,41,140,69,16,42,140,140,16,0,70,140,0,39,140,70,5,0,72,140,0,19,140,72,135,0,73,140,0,0,74,128,0,41,140,74,1,3,75,136,140,1,139,2,0,134,140,0,0,116,78,6,0,75,73,139,0,0,76,128,0,1,140,1,0,22,140,140,76,0,77,140,0,1,140,4,0,1,139,0,0,134,78,0,0,24,55,6,0,134,140,139,0,20,139,78,77,0,79,139,0,1,140,4,0,134,139,0,0,116,78,6,0,134,79,140,0,0,80,128,0,25,81,80,1,0,128,81,0,119,0,203,255,1,0,255,255,0,30,0,0,137,133,0,0,139,30,0,0,119,0,251,0,1,139,25,0,42,139,139,0,1,140,1,0,1,137,0,0,134,83,0,0,24,55,6,0,139,140,137,0,1,137,255,0,19,137,83,137,0,84,137,0,32,85,84,1,1,137,1,0,1,140,0,0,125,86,85,137,140,0,0,0,19,140,86,135,0,87,140,0,0,126,87,0,1,140,24,0,42,140,140,0,1,137,1,0,1,139,0,0,134,88,0,0,24,55,6,0,140,137,139,0,0,127,88,0,0,89,127,0,1,139,255,0,19,139,89,139,0,90,139,0,32,91,90,4,121,91,3,0,1,132,19,0,119,0,8,0,0,92,127,0,1,139,255,0,19,139,92,139,0,94,139,0,32,95,94,5,121,95,2,0,1,132,19,0,32,139,132,19,121,139,38,0,0,96,126,0,41,139,96,16,42,139,139,16,0,97,139,0,32,98,97,0,121,98,32,0,2,137,0,0,112,162,0,0,1,140,255,255,1,138,4,0,134,139,0,0,116,78,6,0,137,140,138,0,2,138,0,0,108,162,0,0,1,140,255,255,1,137,4,0,134,139,0,0,116,78,6,0,138,140,137,0,0,99,127,0,1,139,255,0,19,139,99,139,0,100,139,0,32,101,100,5,1,139,64,0,1,137,32,0,125,102,101,139,137,0,0,0,1,139,4,0,134,137,0,0,116,78,6,0,134,102,139,0,1,0,27,2,0,30,0,0,137,133,0,0,139,30,0,0,0,103,127,0,1,137,255,0,19,137,103,137,0,105,137,0,34,106,105,1,120,106,161,0,0,107,127,0,1,137,255,0,19,137,107,137,0,108,137,0,1,137,3,0,15,109,137,108,120,109,154,0,0,110,126,0,41,137,110,16,42,137,137,16,0,111,137,0,32,112,111,1,121,112,64,0,2,137,0,0,60,162,0,0,1,139,4,0,1,140,0,0,134,113,0,0,24,55,6,0,137,139,140,0,25,114,113,48,1,140,4,0,1,139,0,0,134,116,0,0,24,55,6,0,114,140,139,0,33,117,116,0,121,117,49,0,2,139,0,0,60,162,0,0,1,140,4,0,1,137,0,0,134,118,0,0,24,55,6,0,139,140,137,0,25,119,118,48,1,137,4,0,1,140,0,0,134,120,0,0,24,55,6,0,119,137,140,0,134,140,0,0,112,90,6,0,120,0,0,0,135,121,30,0,130,0,0,0,33,122,121,0,121,122,29,0,1,140,4,0,1,137,0,0,134,123,0,0,24,55,6,0,130,140,137,0,1,137,2,4,13,124,123,137,121,124,19,0,25,125,130,16,42,137,125,0,1,140,1,0,1,139,0,0,134,3,0,0,24,55,6,0,137,140,139,0,1,139,255,0,19,139,3,139,0,4,139,0,0,5,127,0,1,139,255,0,19,139,5,139,0,6,139,0,13,7,4,6,121,7,3,0,1,126,2,0,119,0,3,0,135,139,31,0,130,0,0,0,1,139,28,0,1,140,4,0,1,137,0,0,134,8,0,0,24,55,6,0,139,140,137,0,2,137,0,0,216,164,0,0,1,140,4,0,1,139,0,0,134,9,0,0,24,55,6,0,137,140,139,0,6,139,8,9,38,139,139,255,0,10,139,0,2,140,0,0,108,162,0,0,1,137,4,0,134,139,0,0,116,78,6,0,140,10,137,0,1,139,32,0,1,137,4,0,1,140,0,0,134,11,0,0,24,55,6,0,139,137,140,0,2,140,0,0,212,164,0,0,1,137,4,0,1,139,0,0,134,12,0,0,24,55,6,0,140,137,139,0,6,139,11,12,38,139,139,255,0,14,139,0,2,137,0,0,112,162,0,0,1,140,4,0,134,139,0,0,116,78,6,0,137,14,140,0,0,15,127,0,26,139,15,1,41,139,139,24,42,139,139,24,0,16,139,0,0,127,16,0,0,17,126,0,41,139,17,16,42,139,139,16,0,18,139,0,0,19,131,0,41,139,19,16,42,139,139,16,0,20,139,0,20,139,18,20,0,21,139,0,19,139,21,135,0,22,139,0,0,23,127,0,1,139,255,0,19,139,23,139,0,25,139,0,41,139,25,1,3,26,136,139,1,140,2,0,134,139,0,0,116,78,6,0,26,22,140,0,0,27,127,0,1,139,255,0,19,139,27,139,0,28,139,0,1,139,1,0,22,139,139,28,0,29,139,0,1,140,4,0,134,139,0,0,116,78,6,0,134,29,140,0,119,0,5,0,1,0,255,255,0,30,0,0,137,133,0,0,139,30,0,0,2,140,0,0,248,190,0,0,2,138,0,0,108,162,0,0,1,141,4,0,1,142,0,0,134,137,0,0,24,55,6,0,138,141,142,0,1,142,4,0,134,139,0,0,116,78,6,0,140,137,142,0,2,142,0,0,248,190,0,0,25,142,142,4,2,140,0,0,108,162,0,0,25,140,140,4,1,141,4,0,1,138,0,0,134,137,0,0,24,55,6,0,140,141,138,0,1,138,4,0,134,139,0,0,116,78,6,0,142,137,138,0,2,138,0,0,248,190,0,0,25,138,138,8,2,142,0,0,108,162,0,0,25,142,142,8,1,141,4,0,1,140,0,0,134,137,0,0,24,55,6,0,142,141,140,0,1,140,4,0,134,139,0,0,116,78,6,0,138,137,140,0,2,140,0,0,248,190,0,0,25,140,140,12,2,138,0,0,108,162,0,0,25,138,138,12,1,141,4,0,1,142,0,0,134,137,0,0,24,55,6,0,138,141,142,0,1,142,4,0,134,139,0,0,116,78,6,0,140,137,142,0,2,142,0,0,248,190,0,0,25,142,142,16,2,140,0,0,108,162,0,0,25,140,140,16,1,141,4,0,1,138,0,0,134,137,0,0,24,55,6,0,140,141,138,0,1,138,4,0,134,139,0,0,116,78,6,0,142,137,138,0,1,0,27,2,0,30,0,0,137,133,0,0,139,30,0,0,140,1,137,0,0,0,0,0,1,132,0,0,136,134,0,0,0,133,134,0,136,134,0,0,25,134,134,16,137,134,0,0,130,134,0,0,136,135,0,0,49,134,134,135,204,196,2,0,135,134,0,0,0,130,133,0,0,2,0,0,2,134,0,0,80,159,0,0,1,135,4,0,1,136,0,0,134,42,0,0,24,55,6,0,134,135,136,0,33,53,42,0,2,136,0,0,84,159,0,0,1,135,4,0,1,134,0,0,134,64,0,0,24,55,6,0,136,135,134,0,33,75,64,0,20,134,53,75,0,131,134,0,121,131,27,0,2,134,0,0,84,159,0,0,1,135,4,0,1,136,0,0,134,86,0,0,24,55,6,0,134,135,136,0,33,97,86,0,2,136,0,0,80,159,0,0,1,135,4,0,1,134,0,0,134,108,0,0,24,55,6,0,136,135,134,0,33,119,108,0,1,134,1,0,125,3,97,134,119,0,0,0,38,134,3,1,0,14,134,0,0,1,14,0,0,34,1,0,137,133,0,0,139,34,0,0,119,0,138,2,0,25,2,0,2,135,0,0,38,217,0,0,134,134,0,0,152,89,5,0,25,135,0,0,0,35,2,0,2,135,0,0,39,217,0,0,134,134,0,0,152,89,5,0,35,135,0,0,0,36,2,0,1,135,92,25,134,134,0,0,100,182,4,0,36,135,0,0,0,37,2,0,2,135,0,0,40,217,0,0,134,134,0,0,152,89,5,0,37,135,0,0,0,38,2,0,2,135,0,0,241,208,0,0,134,134,0,0,152,89,5,0,38,135,0,0,0,39,2,0,2,135,0,0,242,208,0,0,134,134,0,0,152,89,5,0,39,135,0,0,0,40,2,0,2,135,0,0,243,208,0,0,134,134,0,0,152,89,5,0,40,135,0,0,0,41,2,0,2,135,0,0,244,208,0,0,134,134,0,0,152,89,5,0,41,135,0,0,0,43,2,0,2,135,0,0,245,208,0,0,134,134,0,0,152,89,5,0,43,135,0,0,0,44,2,0,2,135,0,0,246,208,0,0,134,134,0,0,152,89,5,0,44,135,0,0,0,45,2,0,2,135,0,0,247,208,0,0,134,134,0,0,152,89,5,0,45,135,0,0,0,46,2,0,2,135,0,0,248,208,0,0,134,134,0,0,152,89,5,0,46,135,0,0,0,47,2,0,2,135,0,0,249,208,0,0,134,134,0,0,152,89,5,0,47,135,0,0,0,48,2,0,2,135,0,0,250,208,0,0,134,134,0,0,152,89,5,0,48,135,0,0,0,49,2,0,2,135,0,0,251,208,0,0,134,134,0,0,152,89,5,0,49,135,0,0,0,50,2,0,2,135,0,0,252,208,0,0,134,134,0,0,152,89,5,0,50,135,0,0,0,51,2,0,2,135,0,0,253,208,0,0,134,134,0,0,152,89,5,0,51,135,0,0,0,52,2,0,2,135,0,0,254,208,0,0,134,134,0,0,152,89,5,0,52,135,0,0,0,54,2,0,2,135,0,0,255,208,0,0,134,134,0,0,152,89,5,0,54,135,0,0,0,55,2,0,2,135,0,0,0,209,0,0,134,134,0,0,152,89,5,0,55,135,0,0,0,56,2,0,2,135,0,0,1,209,0,0,134,134,0,0,152,89,5,0,56,135,0,0,0,57,2,0,2,135,0,0,2,209,0,0,134,134,0,0,152,89,5,0,57,135,0,0,0,58,2,0,2,135,0,0,3,209,0,0,134,134,0,0,152,89,5,0,58,135,0,0,0,59,2,0,2,135,0,0,4,209,0,0,134,134,0,0,152,89,5,0,59,135,0,0,0,60,2,0,2,135,0,0,5,209,0,0,134,134,0,0,152,89,5,0,60,135,0,0,0,61,2,0,2,135,0,0,6,209,0,0,134,134,0,0,152,89,5,0,61,135,0,0,0,62,2,0,2,135,0,0,7,209,0,0,134,134,0,0,152,89,5,0,62,135,0,0,0,63,2,0,134,134,0,0,100,182,4,0,63,130,0,0,0,65,2,0,2,135,0,0,8,209,0,0,1,136,26,0,134,134,0,0,48,0,5,0,65,135,136,0,0,66,2,0,2,136,0,0,41,217,0,0,134,134,0,0,0,195,5,0,66,136,0,0,0,67,2,0,2,136,0,0,42,217,0,0,1,135,0,4,134,134,0,0,108,81,5,0,67,136,135,0,0,68,2,0,2,135,0,0,42,221,0,0,1,136,0,4,134,134,0,0,108,81,5,0,68,135,136,0,0,69,2,0,134,134,0,0,4,102,5,0,69,0,0,0,0,70,2,0,2,136,0,0,42,225,0,0,1,135,0,8,134,134,0,0,108,81,5,0,70,136,135,0,0,71,2,0,134,134,0,0,176,103,5,0,71,0,0,0,0,72,2,0,2,135,0,0,44,161,0,0,134,134,0,0,232,22,5,0,72,135,0,0,0,73,2,0,2,135,0,0,42,233,0,0,134,134,0,0,0,195,5,0,73,135,0,0,0,74,2,0,134,134,0,0,136,120,5,0,74,0,0,0,0,76,2,0,2,135,0,0,43,233,0,0,134,134,0,0,0,195,5,0,76,135,0,0,0,77,2,0,2,135,0,0,44,233,0,0,1,136,0,4,134,134,0,0,108,81,5,0,77,135,136,0,0,78,2,0,134,134,0,0,176,214,4,0,78,0,0,0,0,79,2,0,1,136,136,26,134,134,0,0,100,182,4,0,79,136,0,0,0,80,2,0,2,136,0,0,34,209,0,0,1,135,0,4,134,134,0,0,108,81,5,0,80,136,135,0,0,81,2,0,2,135,0,0,34,213,0,0,1,136,0,4,134,134,0,0,108,81,5,0,81,135,136,0,0,82,2,0,1,136,144,2,1,135,3,0,134,134,0,0,224,247,4,0,82,136,135,0,0,83,2,0,2,135,0,0,34,217,0,0,134,134,0,0,0,195,5,0,83,135,0,0,0,84,2,0,2,135,0,0,35,217,0,0,134,134,0,0,0,195,5,0,84,135,0,0,0,85,2,0,2,135,0,0,36,217,0,0,134,134,0,0,0,195,5,0,85,135,0,0,0,87,2,0,2,135,0,0,37,217,0,0,134,134,0,0,0,195,5,0,87,135,0,0,0,88,2,0,1,135,156,2,1,136,8,0,134,134,0,0,224,247,4,0,88,135,136,0,0,89,2,0,1,136,140,26,134,134,0,0,100,182,4,0,89,136,0,0,0,90,2,0,1,136,144,26,134,134,0,0,100,182,4,0,90,136,0,0,0,91,2,0,1,136,188,2,134,134,0,0,100,182,4,0,91,136,0,0,0,92,2,0,1,136,192,2,134,134,0,0,100,182,4,0,92,136,0,0,0,93,2,0,1,136,196,2,134,134,0,0,100,182,4,0,93,136,0,0,0,94,2,0,1,136,200,2,134,134,0,0,100,182,4,0,94,136,0,0,0,95,2,0,1,136,152,26,134,134,0,0,100,182,4,0,95,136,0,0,0,96,2,0,1,136,204,2,134,134,0,0,100,182,4,0,96,136,0,0,0,98,2,0,1,136,208,2,134,134,0,0,100,182,4,0,98,136,0,0,0,99,2,0,1,136,212,2,1,135,8,0,134,134,0,0,104,17,5,0,99,136,135,0,0,100,2,0,1,135,244,2,134,134,0,0,100,182,4,0,100,135,0,0,0,101,2,0,1,135,156,26,134,134,0,0,100,182,4,0,101,135,0,0,0,102,2,0,1,135,252,2,134,134,0,0,100,182,4,0,102,135,0,0,0,103,2,0,1,135,0,3,134,134,0,0,100,182,4,0,103,135,0,0,0,104,2,0,1,135,4,3,134,134,0,0,100,182,4,0,104,135,0,0,0,105,2,0,1,135,8,3,134,134,0,0,100,182,4,0,105,135,0,0,0,106,2,0,1,135,12,3,134,134,0,0,100,182,4,0,106,135,0,0,0,107,2,0,1,135,16,3,134,134,0,0,100,182,4,0,107,135,0,0,0,109,2,0,1,135,160,26,134,134,0,0,100,182,4,0,109,135,0,0,0,110,2,0,1,135,164,26,134,134,0,0,100,182,4,0,110,135,0,0,0,111,2,0,1,135,20,3,1,136,21,0,134,134,0,0,104,17,5,0,111,135,136,0,0,112,2,0,1,136,168,26,134,134,0,0,60,15,5,0,112,136,0,0,0,113,2,0,1,136,176,26,134,134,0,0,60,15,5,0,113,136,0,0,0,114,2,0,1,136,184,26,134,134,0,0,60,15,5,0,114,136,0,0,0,115,2,0,1,136,208,106,134,134,0,0,20,95,3,0,115,136,0,0,0,116,2,0,1,134,24,107,1,136,4,0,1,135,0,0,134,117,0,0,24,55,6,0,134,136,135,0,1,136,192,106,134,135,0,0,124,93,5,0,116,117,136,0,0,118,2,0,1,135,24,107,1,136,4,0,1,134,0,0,134,120,0,0,24,55,6,0,135,136,134,0,1,136,196,106,134,134,0,0,124,93,5,0,118,120,136,0,0,121,2,0,1,134,24,107,1,136,4,0,1,135,0,0,134,122,0,0,24,55,6,0,134,136,135,0,1,136,200,106,134,135,0,0,124,93,5,0,121,122,136,0,0,123,2,0,1,135,24,107,1,136,4,0,1,134,0,0,134,124,0,0,24,55,6,0,135,136,134,0,1,136,204,106,134,134,0,0,124,93,5,0,123,124,136,0,0,125,2,0,1,134,24,107,1,136,4,0,1,135,0,0,134,126,0,0,24,55,6,0,134,136,135,0,1,136,104,3,134,135,0,0,124,93,5,0,125,126,136,0,0,127,2,0,1,135,24,107,1,136,4,0,1,134,0,0,134,128,0,0,24,55,6,0,135,136,134,0,1,136,108,3,134,134,0,0,124,93,5,0,127,128,136,0,0,129,2,0,1,136,112,3,134,134,0,0,16,115,4,0,129,136,0,0,0,4,2,0,1,136,116,3,134,134,0,0,232,172,4,0,4,136,0,0,1,136,208,106,134,134,0,0,136,252,5,0,136,0,0,0,1,134,116,3,1,136,4,0,1,135,0,0,134,5,0,0,24,55,6,0,134,136,135,0,134,135,0,0,236,60,6,0,5,0,0,0,0,6,2,0,1,136,192,26,1,134,0,10,134,135,0,0,116,234,4,0,6,136,134,0,0,7,2,0,1,134,124,3,134,135,0,0,224,243,4,0,7,134,0,0,0,8,2,0,1,134,36,107,1,136,9,0,134,135,0,0,200,8,5,0,8,134,136,0,0,9,2,0,1,136,32,107,134,135,0,0,200,112,5,0,9,136,0,0,0,10,2,0,1,136,164,3,1,134,13,0,134,135,0,0,200,8,5,0,10,136,134,0,0,11,2,0,1,134,88,10,1,136,26,0,134,135,0,0,116,238,4,0,11,134,136,0,0,12,2,0,1,136,160,15,1,134,7,0,134,135,0,0,104,159,4,0,12,136,134,0,0,13,2,0,1,134,44,16,1,136,8,0,134,135,0,0,104,159,4,0,13,134,136,0,0,15,2,0,1,136,204,16,1,134,14,0,134,135,0,0,104,159,4,0,15,136,134,0,0,16,2,0,1,134,228,17,1,136,14,0,134,135,0,0,104,159,4,0,16,134,136,0,0,17,2,0,1,136,252,18,1,134,18,0,134,135,0,0,104,159,4,0,17,136,134,0,0,18,2,0,1,134,100,20,1,136,10,0,134,135,0,0,104,159,4,0,18,134,136,0,0,19,2,0,1,136,44,21,1,134,14,0,134,135,0,0,104,159,4,0,19,136,134,0,0,20,2,0,1,134,76,1,1,136,20,0,134,135,0,0,228,64,3,0,20,134,136,0,0,21,2,0,134,135,0,0,100,182,4,0,21,130,0,0,0,22,2,0,1,136,140,2,134,135,0,0,100,182,4,0,22,136,0,0,0,23,2,0,1,136,200,117,134,135,0,0,60,15,5,0,23,136,0,0,0,24,2,0,2,136,0,0,48,161,0,0,134,135,0,0,100,182,4,0,24,136,0,0,0,26,2,0,2,135,0,0,68,162,0,0,1,136,4,0,1,134,0,0,134,27,0,0,24,55,6,0,135,136,134,0,134,134,0,0,96,41,4,0,26,27,0,0,2,134,0,0,84,159,0,0,1,136,4,0,1,135,0,0,134,28,0,0,24,55,6,0,134,136,135,0,33,29,28,0,2,135,0,0,80,159,0,0,1,136,4,0,1,134,0,0,134,30,0,0,24,55,6,0,135,136,134,0,33,31,30,0,1,134,1,0,125,32,29,134,31,0,0,0,38,134,32,1,0,33,134,0,0,1,33,0,0,34,1,0,137,133,0,0,139,34,0,0,1,134,0,0,139,134,0,0,140,4,139,0,0,0,0,0,2,130,0,0,88,177,0,0,2,131,0,0,216,164,0,0,2,132,0,0,212,164,0,0,1,128,0,0,136,133,0,0,0,129,133,0,136,133,0,0,25,133,133,80,137,133,0,0,130,133,0,0,136,134,0,0,49,133,133,134,0,208,2,0,135,133,0,0], eb + 174080);
  HEAPU8.set([25,127,129,40,25,124,129,24,25,126,129,8,0,4,0,0,0,5,1,0,0,35,2,0,0,46,3,0,1,133,4,0,1,134,0,0,134,57,0,0,24,55,6,0,130,133,134,0,1,134,200,0,13,68,57,134,121,68,3,0,134,134,0,0,216,46,6,0,1,134,4,0,1,133,0,0,134,79,0,0,24,55,6,0,132,134,133,0,25,90,127,12,1,134,4,0,134,133,0,0,116,78,6,0,90,79,134,0,1,133,4,0,1,134,0,0,134,101,0,0,24,55,6,0,131,133,134,0,25,112,127,8,1,133,4,0,134,134,0,0,116,78,6,0,112,101,133,0,1,134,4,0,1,133,0,0,134,6,0,0,24,55,6,0,132,134,133,0,0,17,4,0,5,27,6,17,2,133,0,0,204,164,0,0,1,134,4,0,1,135,0,0,134,28,0,0,24,55,6,0,133,134,135,0,3,29,27,28,25,30,124,4,1,134,4,0,134,135,0,0,116,78,6,0,30,29,134,0,1,135,4,0,1,134,0,0,134,31,0,0,24,55,6,0,131,135,134,0,0,32,5,0,5,33,31,32,2,134,0,0,208,164,0,0,1,135,4,0,1,133,0,0,134,34,0,0,24,55,6,0,134,135,133,0,3,36,33,34,1,135,4,0,134,133,0,0,116,78,6,0,124,36,135,0,1,133,4,0,1,135,0,0,134,37,0,0,24,55,6,0,132,133,135,0,25,38,124,12,1,133,4,0,134,135,0,0,116,78,6,0,38,37,133,0,1,135,4,0,1,133,0,0,134,39,0,0,24,55,6,0,131,135,133,0,0,40,35,0,5,41,39,40,25,42,124,8,1,135,4,0,134,133,0,0,116,78,6,0,42,41,135,0,1,133,4,0,1,135,0,0,134,43,0,0,24,55,6,0,130,133,135,0,33,44,43,0,121,44,53,0,1,135,4,0,1,133,0,0,134,45,0,0,24,55,6,0,130,135,133,0,26,47,45,1,2,133,0,0,92,177,0,0,41,135,47,4,3,48,133,135,1,134,4,0,1,136,0,0,134,133,0,0,24,55,6,0,48,134,136,0,1,136,4,0,134,135,0,0,116,78,6,0,126,133,136,0,25,136,126,4,25,134,48,4,1,137,4,0,1,138,0,0,134,133,0,0,24,55,6,0,134,137,138,0,1,138,4,0,134,135,0,0,116,78,6,0,136,133,138,0,25,138,126,8,25,136,48,8,1,137,4,0,1,134,0,0,134,133,0,0,24,55,6,0,136,137,134,0,1,134,4,0,134,135,0,0,116,78,6,0,138,133,134,0,25,134,126,12,25,138,48,12,1,137,4,0,1,136,0,0,134,133,0,0,24,55,6,0,138,137,136,0,1,136,4,0,134,135,0,0,116,78,6,0,134,133,136,0,1,135,4,0,1,136,0,0,134,49,0,0,24,55,6,0,130,135,136,0,33,50,49,0,121,50,151,0,1,136,4,0,1,135,0,0,134,51,0,0,24,55,6,0,126,136,135,0,1,135,4,0,1,136,0,0,134,52,0,0,24,55,6,0,124,135,136,0,13,53,51,52,121,53,137,0,25,54,126,8,1,136,4,0,1,135,0,0,134,55,0,0,24,55,6,0,54,136,135,0,25,56,124,8,1,135,4,0,1,136,0,0,134,58,0,0,24,55,6,0,56,135,136,0,13,59,55,58,121,59,121,0,25,60,126,4,1,136,4,0,1,135,0,0,134,61,0,0,24,55,6,0,60,136,135,0,25,62,126,12,1,135,4,0,1,136,0,0,134,63,0,0,24,55,6,0,62,135,136,0,3,64,61,63,25,65,124,4,1,136,4,0,1,135,0,0,134,66,0,0,24,55,6,0,65,136,135,0,13,67,64,66,121,67,29,0,25,69,126,12,1,135,4,0,1,136,0,0,134,70,0,0,24,55,6,0,69,135,136,0,1,136,4,0,1,135,0,0,134,71,0,0,24,55,6,0,132,136,135,0,3,72,70,71,1,135,4,0,1,136,0,0,134,73,0,0,24,55,6,0,130,135,136,0,26,74,73,1,2,136,0,0,92,177,0,0,41,135,74,4,3,75,136,135,25,76,75,12,1,136,4,0,134,135,0,0,116,78,6,0,76,72,136,0,119,0,77,0,25,77,126,4,1,135,4,0,1,136,0,0,134,78,0,0,24,55,6,0,77,135,136,0,25,80,124,4,1,136,4,0,1,135,0,0,134,81,0,0,24,55,6,0,80,136,135,0,14,82,78,81,121,82,63,0,1,135,4,0,1,136,0,0,134,83,0,0,24,55,6,0,130,135,136,0,25,84,83,1,1,135,4,0,134,136,0,0,116,78,6,0,130,84,135,0,2,136,0,0,92,177,0,0,41,135,83,4,3,85,136,135,1,133,4,0,1,134,0,0,134,136,0,0,24,55,6,0,124,133,134,0,1,134,4,0,134,135,0,0,116,78,6,0,85,136,134,0,25,134,85,4,25,133,124,4,1,137,4,0,1,138,0,0,134,136,0,0,24,55,6,0,133,137,138,0,1,138,4,0,134,135,0,0,116,78,6,0,134,136,138,0,25,138,85,8,25,134,124,8,1,137,4,0,1,133,0,0,134,136,0,0,24,55,6,0,134,137,133,0,1,133,4,0,134,135,0,0,116,78,6,0,138,136,133,0,25,133,85,12,25,138,124,12,1,137,4,0,1,134,0,0,134,136,0,0,24,55,6,0,138,137,134,0,1,134,4,0,134,135,0,0,116,78,6,0,133,136,134,0,119,0,6,0,1,128,12,0,119,0,4,0,1,128,12,0,119,0,2,0,1,128,12,0,32,135,128,12,121,135,57,0,1,135,4,0,1,134,0,0,134,86,0,0,24,55,6,0,130,135,134,0,25,87,86,1,1,135,4,0,134,134,0,0,116,78,6,0,130,87,135,0,2,134,0,0,92,177,0,0,41,135,86,4,3,88,134,135,1,136,4,0,1,133,0,0,134,134,0,0,24,55,6,0,124,136,133,0,1,133,4,0,134,135,0,0,116,78,6,0,88,134,133,0,25,133,88,4,25,136,124,4,1,137,4,0,1,138,0,0,134,134,0,0,24,55,6,0,136,137,138,0,1,138,4,0,134,135,0,0,116,78,6,0,133,134,138,0,25,138,88,8,25,133,124,8,1,137,4,0,1,136,0,0,134,134,0,0,24,55,6,0,133,137,136,0,1,136,4,0,134,135,0,0,116,78,6,0,138,134,136,0,25,136,88,12,25,138,124,12,1,137,4,0,1,133,0,0,134,134,0,0,24,55,6,0,138,137,133,0,1,133,4,0,134,135,0,0,116,78,6,0,136,134,133,0,1,135,4,0,1,133,0,0,134,89,0,0,24,55,6,0,131,135,133,0,25,91,124,8,1,135,4,0,134,133,0,0,116,78,6,0,91,89,135,0,1,125,0,0,0,92,125,0,0,93,35,0,15,94,92,93,120,94,2,0,119,0,158,0,0,95,125,0,0,96,46,0,41,133,95,2,3,97,96,133,1,133,4,0,1,135,0,0,134,98,0,0,24,55,6,0,97,133,135,0,0,123,98,0,0,99,123,0,134,135,0,0,216,215,3,0,99,0,0,0,0,100,123,0,2,135,0,0,0,0,1,0,19,135,100,135,0,102,135,0,33,103,102,0,121,103,28,0,0,104,123,0,2,135,0,0,128,255,0,0,19,135,104,135,0,105,135,0,33,106,105,0,120,106,21,0,0,107,123,0,2,135,0,0,0,0,254,255,19,135,107,135,0,108,135,0,0,109,123,0,38,135,109,127,0,110,135,0,2,135,0,0,168,162,0,0,41,133,110,2,3,111,135,133,1,133,4,0,1,135,0,0,134,113,0,0,24,55,6,0,111,133,135,0,20,135,108,113,0,114,135,0,0,123,114,0,2,135,0,0,28,199,0,0,1,133,2,0,1,134,0,0,134,115,0,0,24,55,6,0,135,133,134,0,41,134,115,16,42,134,134,16,0,116,134,0,32,117,116,255,121,117,17,0,2,134,0,0,192,164,0,0,1,133,4,0,1,135,0,0,134,118,0,0,24,55,6,0,134,133,135,0,2,135,0,0,176,164,0,0,1,133,4,0,1,134,0,0,134,119,0,0,24,55,6,0,135,133,134,0,135,134,32,0,118,124,119,124,0,120,123,0,1,134,255,0,19,134,120,134,0,121,134,0,31,134,121,32,38,134,134,255,0,122,134,0,1,134,4,0,1,133,0,0,134,7,0,0,24,55,6,0,131,134,133,0,5,8,122,7,1,134,4,0,134,133,0,0,116,78,6,0,127,8,134,0,0,9,123,0,1,133,255,0,19,133,9,133,0,10,133,0,29,133,10,32,38,133,133,255,0,11,133,0,1,133,4,0,1,134,0,0,134,12,0,0,24,55,6,0,132,133,134,0,5,13,11,12,25,14,127,4,1,133,4,0,134,134,0,0,116,78,6,0,14,13,133,0,2,134,0,0,180,164,0,0,1,133,4,0,1,135,0,0,134,15,0,0,24,55,6,0,134,133,135,0,2,135,0,0,176,164,0,0,1,133,4,0,1,134,0,0,134,16,0,0,24,55,6,0,135,133,134,0,135,134,32,0,15,127,16,124,0,18,123,0,2,134,0,0,0,0,22,0,19,134,18,134,0,19,134,0,33,20,19,0,121,20,5,0,0,21,123,0,134,134,0,0,252,156,3,0,127,124,21,0,1,134,4,0,1,133,0,0,134,22,0,0,24,55,6,0,131,134,133,0,1,133,4,0,1,134,0,0,134,23,0,0,24,55,6,0,124,133,134,0,3,24,23,22,1,133,4,0,134,134,0,0,116,78,6,0,124,24,133,0,0,25,125,0,25,26,25,1,0,125,26,0,119,0,95,255,137,129,0,0,139,0,0,0,140,5,161,0,0,0,0,0,1,156,0,0,136,158,0,0,0,157,158,0,136,158,0,0,25,158,158,48,137,158,0,0,130,158,0,0,136,159,0,0,49,158,158,159,196,216,2,0,135,158,0,0,0,6,0,0,0,64,1,0,0,75,2,0,0,86,3,0,0,97,4,0,0,108,86,0,0,119,6,0,25,130,119,16,1,158,4,0,1,159,0,0,134,141,0,0,24,55,6,0,130,158,159,0,4,7,108,141,0,153,7,0,0,18,97,0,0,29,6,0,25,40,29,20,1,159,4,0,1,158,0,0,134,51,0,0,24,55,6,0,40,159,158,0,4,59,18,51,0,154,59,0,0,60,6,0,1,158,0,0,14,61,60,158,121,61,48,1,0,62,86,0,0,63,6,0,25,65,63,16,1,158,4,0,1,159,0,0,134,66,0,0,24,55,6,0,65,158,159,0,15,67,62,66,120,67,38,1,0,68,97,0,0,69,6,0,25,70,69,20,1,159,4,0,1,158,0,0,134,71,0,0,24,55,6,0,70,159,158,0,15,72,68,71,120,72,28,1,0,73,86,0,0,74,64,0,3,76,73,74,0,77,6,0,25,78,77,16,1,158,4,0,1,159,0,0,134,79,0,0,24,55,6,0,78,158,159,0,0,80,6,0,25,81,80,8,1,159,4,0,1,158,0,0,134,82,0,0,24,55,6,0,81,159,158,0,3,83,79,82,15,84,83,76,120,84,8,1,0,85,97,0,0,87,75,0,3,88,85,87,0,89,6,0,25,90,89,20,1,158,4,0,1,159,0,0,134,91,0,0,24,55,6,0,90,158,159,0,0,92,6,0,25,93,92,12,1,159,4,0,1,158,0,0,134,94,0,0,24,55,6,0,93,159,158,0,3,95,91,94,15,96,95,88,120,96,244,0,0,98,64,0,33,99,98,0,120,99,12,0,0,100,6,0,25,101,100,8,1,158,4,0,1,159,0,0,134,102,0,0,24,55,6,0,101,158,159,0,26,103,102,1,0,104,153,0,4,105,103,104,0,64,105,0,0,106,75,0,33,107,106,0,120,107,12,0,0,109,6,0,25,110,109,12,1,159,4,0,1,158,0,0,134,111,0,0,24,55,6,0,110,159,158,0,26,112,111,1,0,113,154,0,4,114,112,113,0,75,114,0,0,115,64,0,0,116,75,0,0,117,86,0,0,118,97,0,134,120,0,0,140,248,3,0,115,116,117,118,0,155,120,0,1,158,0,0,14,121,120,158,120,121,5,0,1,5,0,0,0,58,5,0,137,157,0,0,139,58,0,0,0,122,6,0,25,123,122,28,1,158,4,0,1,159,0,0,134,124,0,0,24,55,6,0,123,158,159,0,0,125,155,0,25,126,125,28,1,158,4,0,134,159,0,0,116,78,6,0,126,124,158,0,0,127,6,0,25,128,127,32,1,159,4,0,1,158,0,0,134,129,0,0,24,55,6,0,128,159,158,0,0,131,155,0,25,132,131,32,1,159,4,0,134,158,0,0,116,78,6,0,132,129,159,0,0,133,6,0,25,134,133,37,42,158,134,0,1,159,1,0,1,160,0,0,134,135,0,0,24,55,6,0,158,159,160,0,0,136,155,0,25,137,136,37,42,159,137,0,1,158,1,0,134,160,0,0,116,78,6,0,159,135,158,0,0,138,6,0,25,139,138,38,42,160,139,0,1,158,1,0,1,159,0,0,134,140,0,0,24,55,6,0,160,158,159,0,0,142,155,0,25,143,142,38,42,158,143,0,1,160,1,0,134,159,0,0,116,78,6,0,158,140,160,0,0,144,6,0,25,145,144,39,42,159,145,0,1,160,1,0,1,158,0,0,134,146,0,0,24,55,6,0,159,160,158,0,0,147,155,0,25,148,147,39,42,160,148,0,1,159,1,0,134,158,0,0,116,78,6,0,160,146,159,0,0,149,6,0,25,150,149,42,42,158,150,0,1,159,1,0,1,160,0,0,134,151,0,0,24,55,6,0,158,159,160,0,0,8,155,0,25,9,8,42,42,159,9,0,1,158,1,0,134,160,0,0,116,78,6,0,159,151,158,0,0,10,6,0,25,11,10,40,42,160,11,0,1,158,1,0,1,159,0,0,134,12,0,0,24,55,6,0,160,158,159,0,0,13,155,0,25,14,13,40,42,158,14,0,1,160,1,0,134,159,0,0,116,78,6,0,158,12,160,0,0,15,6,0,25,16,15,41,42,159,16,0,1,160,1,0,1,158,0,0,134,17,0,0,24,55,6,0,159,160,158,0,0,19,155,0,25,20,19,41,42,160,20,0,1,159,1,0,134,158,0,0,116,78,6,0,160,17,159,0,0,21,153,0,0,22,155,0,25,23,22,72,1,159,4,0,134,158,0,0,116,78,6,0,23,21,159,0,0,24,154,0,0,25,155,0,25,26,25,68,1,159,4,0,134,158,0,0,116,78,6,0,26,24,159,0,0,27,6,0,0,28,155,0,25,30,28,76,1,159,4,0,134,158,0,0,116,78,6,0,30,27,159,0,1,152,0,0,0,31,152,0,0,32,64,0,15,33,31,32,120,33,2,0,119,0,40,0,0,34,153,0,0,35,6,0,25,36,35,44,1,158,4,0,1,159,0,0,134,37,0,0,24,55,6,0,36,158,159,0,41,159,34,2,3,38,37,159,1,159,4,0,1,158,0,0,134,39,0,0,24,55,6,0,38,159,158,0,0,41,154,0,41,158,41,2,3,42,39,158,0,43,152,0,0,44,155,0,25,45,44,44,1,158,4,0,1,159,0,0,134,46,0,0,24,55,6,0,45,158,159,0,41,159,43,2,3,47,46,159,1,158,4,0,134,159,0,0,116,78,6,0,47,42,158,0,0,48,152,0,25,49,48,1,0,152,49,0,0,50,153,0,25,52,50,1,0,153,52,0,119,0,213,255,0,53,155,0,25,54,53,24,1,159,4,0,1,158,0,0,134,55,0,0,24,55,6,0,54,159,158,0,39,158,55,1,0,56,158,0,1,159,4,0,134,158,0,0,116,78,6,0,54,56,159,0,0,57,155,0,0,5,57,0,0,58,5,0,137,157,0,0,139,58,0,0,1,5,0,0,0,58,5,0,137,157,0,0,139,58,0,0,140,5,149,0,0,0,0,0,1,143,0,0,136,145,0,0,0,144,145,0,136,145,0,0,25,145,145,48,137,145,0,0,130,145,0,0,136,146,0,0,49,145,145,146,56,222,2,0,135,145,0,0,0,6,0,0,0,51,1,0,0,62,2,0,0,73,3,0,0,84,4,0,0,95,73,0,0,140,95,0,0,106,84,0,0,141,106,0,0,117,6,0,1,145,0,0,14,128,117,145,121,128,79,1,0,7,6,0,25,18,7,24,1,145,4,0,1,146,0,0,134,29,0,0,24,55,6,0,18,145,146,0,38,146,29,16,0,40,146,0,33,45,40,0,121,45,68,1,0,46,73,0,0,47,6,0,25,48,47,16,1,146,4,0,1,145,0,0,134,49,0,0,24,55,6,0,48,146,145,0,15,50,46,49,120,50,54,1,0,52,84,0,0,53,6,0,25,54,53,20,1,145,4,0,1,146,0,0,134,55,0,0,24,55,6,0,54,145,146,0,15,56,52,55,120,56,44,1,0,57,73,0,0,58,51,0,3,59,57,58,0,60,6,0,25,61,60,16,1,146,4,0,1,145,0,0,134,63,0,0,24,55,6,0,61,146,145,0,0,64,6,0,25,65,64,8,1,145,4,0,1,146,0,0,134,66,0,0,24,55,6,0,65,145,146,0,3,67,63,66,15,68,67,59,120,68,24,1,0,69,84,0,0,70,62,0,3,71,69,70,0,72,6,0,25,74,72,20,1,146,4,0,1,145,0,0,134,75,0,0,24,55,6,0,74,146,145,0,0,76,6,0,25,77,76,12,1,145,4,0,1,146,0,0,134,78,0,0,24,55,6,0,77,145,146,0,3,79,75,78,15,80,79,71,120,80,4,1,0,81,51,0,33,82,81,0,120,82,12,0,0,83,6,0,25,85,83,8,1,146,4,0,1,145,0,0,134,86,0,0,24,55,6,0,85,146,145,0,26,87,86,1,0,88,140,0,4,89,87,88,0,51,89,0,0,90,62,0,33,91,90,0,120,91,12,0,0,92,6,0,25,93,92,12,1,145,4,0,1,146,0,0,134,94,0,0,24,55,6,0,93,145,146,0,26,96,94,1,0,97,141,0,4,98,96,97,0,62,98,0,0,99,51,0,0,100,62,0,0,101,73,0,0,102,84,0,134,103,0,0,140,248,3,0,99,100,101,102,0,142,103,0,1,146,0,0,14,104,103,146,120,104,5,0,1,5,0,0,0,44,5,0,137,144,0,0,139,44,0,0,0,105,6,0,25,107,105,28,1,146,4,0,1,145,0,0,134,108,0,0,24,55,6,0,107,146,145,0,0,109,142,0,25,110,109,28,1,146,4,0,134,145,0,0,116,78,6,0,110,108,146,0,0,111,6,0,25,112,111,37,42,145,112,0,1,146,1,0,1,147,0,0,134,113,0,0,24,55,6,0,145,146,147,0,0,114,142,0,25,115,114,37,42,146,115,0,1,145,1,0,134,147,0,0,116,78,6,0,146,113,145,0,0,116,6,0,25,118,116,38,42,147,118,0,1,145,1,0,1,146,0,0,134,119,0,0,24,55,6,0,147,145,146,0,0,120,142,0,25,121,120,38,42,145,121,0,1,147,1,0,134,146,0,0,116,78,6,0,145,119,147,0,0,122,6,0,25,123,122,39,42,146,123,0,1,147,1,0,1,145,0,0,134,124,0,0,24,55,6,0,146,147,145,0,0,125,142,0,25,126,125,39,42,147,126,0,1,146,1,0,134,145,0,0,116,78,6,0,147,124,146,0,0,127,6,0,25,129,127,42,42,145,129,0,1,146,1,0,1,147,0,0,134,130,0,0,24,55,6,0,145,146,147,0,0,131,142,0,25,132,131,42,42,146,132,0,1,145,1,0,134,147,0,0,116,78,6,0,146,130,145,0,0,133,6,0,0,134,142,0,25,135,134,76,1,145,4,0,134,147,0,0,116,78,6,0,135,133,145,0,1,139,0,0,0,136,139,0,0,137,51,0,15,138,136,137,120,138,2,0,119,0,39,0,0,8,140,0,25,9,8,1,0,140,9,0,0,10,6,0,25,11,10,44,1,147,4,0,1,145,0,0,134,12,0,0,24,55,6,0,11,147,145,0,41,145,8,2,3,13,12,145,1,145,4,0,1,147,0,0,134,14,0,0,24,55,6,0,13,145,147,0,0,15,141,0,41,147,15,2,3,16,14,147,0,17,139,0,0,19,142,0,25,20,19,44,1,147,4,0,1,145,0,0,134,21,0,0,24,55,6,0,20,147,145,0,41,145,17,2,3,22,21,145,1,147,4,0,134,145,0,0,116,78,6,0,22,16,147,0,0,23,139,0,25,24,23,1,0,139,24,0,119,0,214,255,0,25,142,0,25,26,25,24,1,147,32,0,1,146,4,0,134,145,0,0,116,78,6,0,26,147,146,0,2,146,0,0,44,177,0,0,1,147,0,0,1,148,4,0,134,145,0,0,116,78,6,0,146,147,148,0,2,148,0,0,48,177,0,0,1,147,0,0,1,146,4,0,134,145,0,0,116,78,6,0,148,147,146,0,2,146,0,0,52,177,0,0,1,147,0,0,1,148,4,0,134,145,0,0,116,78,6,0,146,147,148,0,2,148,0,0,56,177,0,0,1,147,0,0,1,146,4,0,134,145,0,0,116,78,6,0,148,147,146,0,2,145,0,0,76,162,0,0,1,146,4,0,1,147,0,0,134,27,0,0,24,55,6,0,145,146,147,0,0,28,51,0,15,30,27,28,2,147,0,0,76,162,0,0,1,146,4,0,1,145,0,0,134,31,0,0,24,55,6,0,147,146,145,0,0,32,51,0,125,33,30,31,32,0,0,0,26,34,33,1,2,146,0,0,60,177,0,0,1,147,4,0,134,145,0,0,116,78,6,0,146,34,147,0,2,145,0,0,80,162,0,0,1,147,4,0,1,146,0,0,134,35,0,0,24,55,6,0,145,147,146,0,0,36,62,0,15,37,35,36,2,146,0,0,80,162,0,0,1,147,4,0,1,145,0,0,134,38,0,0,24,55,6,0,146,147,145,0,0,39,62,0,125,41,37,38,39,0,0,0,26,42,41,1,2,147,0,0,64,177,0,0,1,146,4,0,134,145,0,0,116,78,6,0,147,42,146,0,0,43,142,0,0,5,43,0,0,44,5,0,137,144,0,0,139,44,0,0,1,5,0,0,0,44,5,0,137,144,0,0,139,44,0,0,1,5,0,0,0,44,5,0,137,144,0,0,139,44,0,0,140,2,100,0,0,0,0,0,1,92,0,0,136,94,0,0,0,93,94,0,136,94,0,0,1,95,144,0,3,94,94,95,137,94,0,0,130,94,0,0,136,95,0,0,49,94,94,95,236,227,2,0,135,94,0,0,1,94,128,0,3,8,93,94,25,7,93,120,25,6,93,112,25,5,93,104,25,4,93,96,25,16,93,88,25,15,93,80,25,14,93,72,25,13,93,64,25,12,93,56,25,11,93,48,25,10,93,40,25,9,93,32,25,3,93,24,25,2,93,16,0,18,0,0,0,29,1,0,2,94,0,0,76,159,0,0,1,95,4,0,1,96,0,0,134,40,0,0,24,55,6,0,94,95,96,0,33,51,40,0,121,51,13,0,2,96,0,0,76,159,0,0,1,95,4,0,1,94,0,0,134,62,0,0,24,55,6,0,96,95,94,0,0,17,62,0,0,89,17,0,137,93,0,0,139,89,0,0,119,0,189,1,0,73,18,0,0,84,29,0,1,96,4,0,1,97,0,0,134,95,0,0,24,55,6,0,84,96,97,0,1,97,4,0,134,94,0,0,116,78,6,0,2,95,97,0,25,97,2,4,25,96,84,4,1,98,4,0,1,99,0,0,134,95,0,0,24,55,6,0,96,98,99,0,1,99,4,0,134,94,0,0,116,78,6,0,97,95,99,0,134,94,0,0,44,9,6,0,73,2,0,0,0,90,18,0,0,91,29,0,25,19,91,8,1,95,4,0,1,97,0,0,134,99,0,0,24,55,6,0,19,95,97,0,1,97,4,0,134,94,0,0,116,78,6,0,3,99,97,0,25,97,3,4,25,95,19,4,1,98,4,0,1,96,0,0,134,99,0,0,24,55,6,0,95,98,96,0,1,96,4,0,134,94,0,0,116,78,6,0,97,99,96,0,134,94,0,0,44,9,6,0,90,3,0,0,0,20,18,0,0,21,29,0,25,22,21,16,1,99,4,0,1,97,0,0,134,96,0,0,24,55,6,0,22,99,97,0,1,97,4,0,134,94,0,0,116,78,6,0,9,96,97,0,25,97,9,4,25,99,22,4,1,98,4,0,1,95,0,0,134,96,0,0,24,55,6,0,99,98,95,0,1,95,4,0,134,94,0,0,116,78,6,0,97,96,95,0,134,94,0,0,44,9,6,0,20,9,0,0,0,23,18,0,0,24,29,0,25,25,24,24,1,94,4,0,1,95,0,0,134,26,0,0,24,55,6,0,25,94,95,0,134,95,0,0,156,47,5,0,23,26,0,0,0,27,18,0,0,28,29,0,25,30,28,28,1,95,2,0,1,94,0,0,134,31,0,0,24,55,6,0,30,95,94,0,134,94,0,0,184,141,5,0,27,31,0,0,0,32,18,0,0,33,29,0,25,34,33,32,1,94,4,0,1,95,0,0,134,35,0,0,24,55,6,0,34,94,95,0,134,95,0,0,156,47,5,0,32,35,0,0,0,36,18,0,0,37,29,0,25,38,37,36,1,96,4,0,1,97,0,0,134,94,0,0,24,55,6,0,38,96,97,0,1,97,4,0,134,95,0,0,116,78,6,0,10,94,97,0,25,97,10,4,25,96,38,4,1,98,4,0,1,99,0,0,134,94,0,0,24,55,6,0,96,98,99,0,1,99,4,0,134,95,0,0,116,78,6,0,97,94,99,0,134,95,0,0,44,9,6,0,36,10,0,0,0,39,18,0,0,41,29,0,25,42,41,36,25,43,42,8,1,94,4,0,1,97,0,0,134,99,0,0,24,55,6,0,43,94,97,0,1,97,4,0,134,95,0,0,116,78,6,0,11,99,97,0,25,97,11,4,25,94,43,4,1,98,4,0,1,96,0,0,134,99,0,0,24,55,6,0,94,98,96,0,1,96,4,0,134,95,0,0,116,78,6,0,97,99,96,0,134,95,0,0,44,9,6,0,39,11,0,0,0,44,18,0,0,45,29,0,25,46,45,36,25,47,46,16,1,99,4,0,1,97,0,0,134,96,0,0,24,55,6,0,47,99,97,0,1,97,4,0,134,95,0,0,116,78,6,0,12,96,97,0,25,97,12,4,25,99,47,4,1,98,4,0,1,94,0,0,134,96,0,0,24,55,6,0,99,98,94,0,1,94,4,0,134,95,0,0,116,78,6,0,97,96,94,0,134,95,0,0,44,9,6,0,44,12,0,0,0,48,18,0,0,49,29,0,25,50,49,36,25,52,50,24,1,96,4,0,1,97,0,0,134,94,0,0,24,55,6,0,52,96,97,0,1,97,4,0,134,95,0,0,116,78,6,0,13,94,97,0,25,97,13,4,25,96,52,4,1,98,4,0,1,99,0,0,134,94,0,0,24,55,6,0,96,98,99,0,1,99,4,0,134,95,0,0,116,78,6,0,97,94,99,0,134,95,0,0,44,9,6,0,48,13,0,0,0,53,18,0,0,54,29,0,25,55,54,36,25,56,55,32,1,94,4,0,1,97,0,0,134,99,0,0,24,55,6,0,56,94,97,0,1,97,4,0,134,95,0,0,116,78,6,0,14,99,97,0,25,97,14,4,25,94,56,4,1,98,4,0,1,96,0,0,134,99,0,0,24,55,6,0,94,98,96,0,1,96,4,0,134,95,0,0,116,78,6,0,97,99,96,0,134,95,0,0,44,9,6,0,53,14,0,0,0,57,18,0,0,58,29,0,25,59,58,36,25,60,59,40,1,99,4,0,1,97,0,0,134,96,0,0,24,55,6,0,60,99,97,0,1,97,4,0,134,95,0,0,116,78,6,0,15,96,97,0,25,97,15,4,25,99,60,4,1,98,4,0,1,94,0,0,134,96,0,0,24,55,6,0,99,98,94,0,1,94,4,0,134,95,0,0,116,78,6,0,97,96,94,0,134,95,0,0,44,9,6,0,57,15,0,0,0,61,18,0,0,63,29,0,25,64,63,36,25,65,64,48,1,96,4,0,1,97,0,0,134,94,0,0,24,55,6,0,65,96,97,0,1,97,4,0,134,95,0,0,116,78,6,0,16,94,97,0,25,97,16,4,25,96,65,4,1,98,4,0,1,99,0,0,134,94,0,0,24,55,6,0,96,98,99,0,1,99,4,0,134,95,0,0,116,78,6,0,97,94,99,0,134,95,0,0,44,9,6,0,61,16,0,0,0,66,18,0,0,67,29,0,25,68,67,36,25,69,68,56,1,94,4,0,1,97,0,0,134,99,0,0,24,55,6,0,69,94,97,0,1,97,4,0,134,95,0,0,116,78,6,0,4,99,97,0,25,97,4,4,25,94,69,4,1,98,4,0,1,96,0,0,134,99,0,0,24,55,6,0,94,98,96,0,1,96,4,0,134,95,0,0,116,78,6,0,97,99,96,0,134,95,0,0,44,9,6,0,66,4,0,0,0,70,18,0,0,71,29,0,25,72,71,36,25,74,72,64,1,99,4,0,1,97,0,0,134,96,0,0,24,55,6,0,74,99,97,0,1,97,4,0,134,95,0,0,116,78,6,0,5,96,97,0,25,97,5,4,25,99,74,4,1,98,4,0,1,94,0,0,134,96,0,0,24,55,6,0,99,98,94,0,1,94,4,0,134,95,0,0,116,78,6,0,97,96,94,0,134,95,0,0,44,9,6,0,70,5,0,0,0,75,18,0,0,76,29,0,25,77,76,36,25,78,77,72,1,96,4,0,1,97,0,0,134,94,0,0,24,55,6,0,78,96,97,0,1,97,4,0,134,95,0,0,116,78,6,0,6,94,97,0,25,97,6,4,25,96,78,4,1,98,4,0,1,99,0,0,134,94,0,0,24,55,6,0,96,98,99,0,1,99,4,0,134,95,0,0,116,78,6,0,97,94,99,0,134,95,0,0,44,9,6,0,75,6,0,0,0,79,18,0,0,80,29,0,25,81,80,36,25,82,81,80,1,94,4,0,1,97,0,0,134,99,0,0,24,55,6,0,82,94,97,0,1,97,4,0,134,95,0,0,116,78,6,0,7,99,97,0,25,97,7,4,25,94,82,4,1,98,4,0,1,96,0,0,134,99,0,0,24,55,6,0,94,98,96,0,1,96,4,0,134,95,0,0,116,78,6,0,97,99,96,0,134,95,0,0,44,9,6,0,79,7,0,0,0,83,18,0,0,85,29,0,25,86,85,36,25,87,86,88,1,99,4,0,1,97,0,0,134,96,0,0,24,55,6,0,87,99,97,0,1,97,4,0,134,95,0,0,116,78,6,0,8,96,97,0,25,97,8,4,25,99,87,4,1,98,4,0,1,94,0,0,134,96,0,0,24,55,6,0,99,98,94,0,1,94,4,0,134,95,0,0,116,78,6,0,97,96,94,0,134,95,0,0,44,9,6,0,83,8,0,0,2,95,0,0,76,159,0,0,1,94,4,0,1,96,0,0,134,88,0,0,24,55,6,0,95,94,96,0,0,17,88,0,0,89,17,0,137,93,0,0,139,89,0,0,1,96,0,0,139,96,0,0,140,1,150,0,0,0,0,0,2,143,0,0,152,2,0,0,2,144,0,0,144,2,0,0,2,145,0,0,34,213,0,0,1,141,0,0,136,146,0,0,0,142,146,0,136,146,0,0,25,146,146,32,137,146,0,0,130,146,0,0,136,147,0,0,49,146,146,147,204,235,2,0,135,146,0,0,0,1,0,0,0,2,1,0,42,146,2,0,1,147,1,0,1,148,0,0,134,48,0,0,24,55,6,0,146,147,148,0,41,148,48,24,42,148,148,24,33,59,148,0,120,59,2,0,119,0,101,1,0,70,1,0,0,139,70,0,0,81,139,0,42,148,81,0,1,147,1,0,1,146,0,0,134,92,0,0,24,55,6,0,148,147,146,0,41,146,92,24,42,146,146,24,0,103,146,0,134,114,0,0,196,103,6,0,103,0,0,0,33,125,114,0,0,3,139,0,120,125,2,0,119,0,4,0,25,14,3,1,0,139,14,0,119,0,237,255,0,25,1,0,0,36,3,0,0,42,25,0,4,43,36,42,0,137,43,0,1,138,224,117,0,44,138,0,1,146,148,118,18,45,44,146,120,45,2,0,119,0,56,0,0,46,1,0,0,47,138,0,1,146,4,0,1,147,0,0,134,49,0,0,24,55,6,0,47,146,147,0,0,50,137,0,134,51,0,0,132,86,5,0,46,49,50,0,32,52,51,0,0,53,138,0,25,54,53,12,1,147,4,0,1,146,0,0,134,55,0,0,24,55,6,0,54,147,146,0,1,146,1,0,13,56,55,146,121,52,3,0,1,141,9,0,119,0,32,0,121,56,27,0,0,10,1,0,2,146,0,0,234,25,1,0,1,147,2,0,134,11,0,0,132,86,5,0,10,146,147,0,32,12,11,0,121,12,18,0,0,13,1,0,25,15,13,2,0,16,138,0,1,147,4,0,1,146,0,0,134,17,0,0,24,55,6,0,16,147,146,0,0,18,137,0,26,19,18,2,134,20,0,0,132,86,5,0,15,17,19,0,32,21,20,0,121,21,3,0,1,141,34,0,119,0,5,0,0,26,138,0,25,27,26,20,0,138,27,0,119,0,197,255,32,146,141,9,121,146,212,0,1,141,0,0,121,56,15,0,0,57,138,0,25,58,57,8,1,146,4,0,1,147,0,0,134,60,0,0,24,55,6,0,58,146,147,0,42,146,60,0,1,148,1,0,1,149,1,0,134,147,0,0,116,78,6,0,146,148,149,0,119,0,212,0,0,61,139,0,25,62,61,1,0,1,62,0,0,63,1,0,42,147,63,0,1,149,1,0,1,148,0,0,134,64,0,0,24,55,6,0,147,149,148,0,41,148,64,24,42,148,148,24,0,65,148,0,32,66,65,61,0,67,1,0,120,66,2,0,119,0,4,0,25,68,67,1,0,1,68,0,119,0,240,255,42,148,67,0,1,149,1,0,1,147,0,0,134,69,0,0,24,55,6,0,148,149,147,0,41,147,69,24,42,147,147,24,0,71,147,0,32,72,71,126,0,73,138,0,25,74,73,8,1,147,4,0,1,149,0,0,134,75,0,0,24,55,6,0,74,147,149,0,121,72,29,0,135,149,24,0,75,145,0,0,0,76,138,0,25,77,76,8,1,149,4,0,1,147,0,0,134,78,0,0,24,55,6,0,77,149,147,0,135,79,22,0,145,0,0,0,3,80,78,79,0,140,80,0,0,82,1,0,25,83,82,1,0,1,83,0,42,147,83,0,1,149,1,0,1,148,0,0,134,84,0,0,24,55,6,0,147,149,148,0,41,148,84,24,42,148,148,24,0,85,148,0,32,86,85,47,120,86,243,255,119,0,2,0,0,140,75,0,0,87,1,0,25,88,87,1,0,139,88,0,0,89,139,0,42,148,89,0,1,149,1,0,1,147,0,0,134,90,0,0,24,55,6,0,148,149,147,0,41,147,90,24,42,147,147,24,0,91,147,0,33,93,91,0,120,93,2,0,119,0,18,0,0,94,139,0,42,147,94,0,1,149,1,0,1,148,0,0,134,95,0,0,24,55,6,0,147,149,148,0,41,148,95,24,42,148,148,24,0,96,148,0,33,97,96,44,120,97,2,0,119,0,5,0,0,98,139,0,25,99,98,1,0,139,99,0,119,0,227,255,0,100,138,0,25,101,100,12,1,148,4,0,1,149,0,0,134,102,0,0,24,55,6,0,101,148,149,0,1,149,4,0,13,104,102,149,120,104,12,0,0,135,140,0,0,4,1,0,0,5,139,0,0,6,1,0,0,7,5,0,0,8,6,0,4,9,7,8,134,149,0,0,208,124,5,0,135,4,9,0,119,0,91,0,0,105,1,0,42,149,105,0,1,148,1,0,1,147,0,0,134,106,0,0,24,55,6,0,149,148,147,0,41,147,106,24,42,147,147,24,0,107,147,0,134,108,0,0,12,106,6,0,107,0,0,0,33,109,108,0,121,109,23,0,0,110,1,0,42,147,110,0,1,148,1,0,1,149,0,0,134,111,0,0,24,55,6,0,147,148,149,0,41,149,111,24,42,149,149,24,0,112,149,0,134,113,0,0,36,102,6,0,112,0,0,0,1,149,255,0,19,149,113,149,0,115,149,0,0,116,1,0,42,148,116,0,1,147,1,0,134,149,0,0,116,78,6,0,148,115,147,0,1,136,144,2,0,117,136,0,18,118,117,143,120,118,2,0,119,0,49,0,0,119,1,0,0,120,136,0,1,149,4,0,1,147,0,0,134,121,0,0,24,55,6,0,120,149,147,0,0,122,139,0,0,123,1,0,0,124,122,0,0,126,123,0,4,127,124,126,134,128,0,0,132,86,5,0,119,121,127,0,32,129,128,0,0,130,136,0,120,129,4,0,25,134,130,4,0,136,134,0,119,0,232,255,0,131,130,0,4,132,131,144,28,147,132,4,38,147,147,255,0,133,147,0,1,149,196,2,1,148,4,0,134,147,0,0,116,78,6,0,149,133,148,0,119,0,17,0,32,147,141,34,121,147,15,0,1,141,0,0,0,22,138,0,25,23,22,8,1,147,4,0,1,148,0,0,134,24,0,0,24,55,6,0,23,147,148,0,42,147,24,0,1,149,0,0,1,146,1,0,134,148,0,0,116,78,6,0,147,149,146,0,0,28,139,0,42,148,28,0,1,146,1,0,1,149,0,0,134,29,0,0,24,55,6,0,148,146,149,0,41,149,29,24,42,149,149,24,0,30,149,0,33,31,30,0,121,31,19,0,0,32,139,0,42,149,32,0,1,146,1,0,1,148,0,0,134,33,0,0,24,55,6,0,149,146,148,0,41,148,33,24,42,148,148,24,0,34,148,0,134,35,0,0,196,103,6,0,34,0,0,0,33,37,35,0,40,148,37,1,0,38,148,0,0,41,38,0,119,0,2,0,1,41,0,0,0,39,139,0,120,41,2,0,119,0,4,0,25,40,39,1,0,139,40,0,119,0,220,255,0,1,39,0,119,0,145,254,137,142,0,0,139,0,0,0,140,0,138,0,0,0,0,0,2,131,0,0,192,26,0,0,2,132,0,0,255,0,0,0,2,133,0,0,156,2,0,0,1,129,0,0,136,134,0,0,0,130,134,0,136,134,0,0,25,134,134,64,137,134,0,0,130,134,0,0,136,135,0,0,49,134,134,135,228,241,2,0,135,134,0,0,25,126,130,24,25,125,130,16,25,124,130,8,0,123,130,0,1,134,220,106,1,135,4,0,1,136,0,0,134,0,0,0,24,55,6,0,134,135,136,0,25,1,0,1,0,119,1,0,1,136,216,106,1,135,4,0,1,134,0,0,134,30,0,0,24,55,6,0,136,135,134,0,25,41,30,1,0,118,41,0,1,134,232,106,1,135,2,0,1,136,0,0,134,52,0,0,24,55,6,0,134,135,136,0,41,136,52,16,42,136,136,16,0,63,136,0,1,136,0,8,19,136,63,136,0,74,136,0,33,85,74,0,38,136,85,1,0,96,136,0,19,136,96,132,0,107,136,0,19,136,107,132,0,2,136,0,33,13,2,0,1,136,3,0,1,135,0,0,125,22,13,136,135,0,0,0,0,122,22,0,1,135,232,106,1,136,2,0,1,134,0,0,134,23,0,0,24,55,6,0,135,136,134,0,41,134,23,16,42,134,134,16,0,24,134,0,38,134,24,4,0,25,134,0,33,26,25,0,38,134,26,1,0,27,134,0,19,134,27,132,0,28,134,0,19,134,28,132,0,29,134,0,33,31,29,0,1,134,2,0,1,136,0,0,125,32,31,134,136,0,0,0,0,33,122,0,3,34,33,32,0,122,34,0,1,120,0,0,1,136,220,106,1,134,4,0,1,135,0,0,134,35,0,0,24,55,6,0,136,134,135,0,26,36,35,1,0,128,36,0,0,37,128,0,0,38,119,0,17,39,37,38,120,39,2,0,119,0,122,1,1,135,216,106,1,134,4,0,1,136,0,0,134,40,0,0,24,55,6,0,135,134,136,0,26,42,40,1,0,127,42,0,0,43,127,0,0,44,118,0,17,45,43,44,0,46,128,0,120,45,2,0,119,0,105,1,1,136,220,106,1,134,4,0,1,135,0,0,134,47,0,0,24,55,6,0,136,134,135,0,13,48,46,47,121,48,12,0,0,49,127,0,1,135,216,106,1,134,4,0,1,136,0,0,134,50,0,0,24,55,6,0,135,134,136,0,13,51,49,50,120,51,4,0,1,129,7,0,119,0,2,0,1,129,7,0,32,136,129,7,121,136,79,1,1,129,0,0,0,53,127,0,41,136,53,5,0,54,136,0,0,55,128,0,3,56,54,55,41,136,56,3,3,57,131,136,25,58,57,1,0,121,58,0,0,59,121,0,42,136,59,0,1,134,1,0,1,135,0,0,134,60,0,0,24,55,6,0,136,134,135,0,41,135,60,24,42,135,135,24,0,61,135,0,38,135,61,16,0,62,135,0,33,64,62,0,120,64,55,1,0,65,127,0,41,135,65,5,0,66,135,0,0,67,128,0,3,68,66,67,41,135,68,3,3,69,131,135,42,135,69,0,1,134,1,0,1,136,0,0,134,70,0,0,24,55,6,0,135,134,136,0,41,136,70,24,42,136,136,24,0,71,136,0,1,134,32,0,1,137,93,0,138,71,134,137,236,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,64,246,2,0,68,246,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,232,245,2,0,16,248,2,0,119,0,198,0,0,7,122,0,25,8,7,3,134,9,0,0,20,36,6,0,8,0,0,0,33,10,9,0,120,10,191,0,0,11,127,0,41,134,11,5,0,12,134,0,0,14,128,0,3,15,12,14,41,134,15,3,3,16,131,134,42,136,16,0,1,135,35,0,1,137,1,0,134,134,0,0,116,78,6,0,136,135,137,0,119,0,143,0,119,0,116,0,0,88,122,0,25,89,88,2,134,90,0,0,20,36,6,0,89,0,0,0,33,91,90,0,120,91,169,0,0,92,127,0,41,136,92,5,0,93,136,0,0,94,128,0,3,95,93,94,41,136,95,3,3,97,131,136,42,137,97,0,1,135,94,0,1,134,1,0,134,136,0,0,116,78,6,0,137,135,134,0,2,136,0,0,5,209,0,0,42,136,136,0,1,134,1,0,1,135,0,0,134,98,0,0,24,55,6,0,136,134,135,0,41,135,98,24,42,135,135,24,33,99,135,0,120,99,6,0,2,134,0,0,203,31,1,0,134,135,0,0,112,85,6,0,134,124,0,0,1,135,232,106,1,134,2,0,1,136,0,0,134,100,0,0,24,55,6,0,135,134,136,0,41,136,100,16,42,136,136,16,0,101,136,0,1,136,0,8,19,136,101,136,0,102,136,0,33,103,102,0,38,136,103,1,0,104,136,0,19,136,104,132,0,105,136,0,41,136,105,24,42,136,136,24,33,106,136,0,121,106,16,0,1,136,8,0,134,108,0,0,20,36,6,0,136,0,0,0,41,136,108,2,3,109,133,136,1,136,4,0,1,134,0,0,134,110,0,0,24,55,6,0,109,136,134,0,134,134,0,0,144,18,6,0,110,125,0,0,119,0,69,0,0,111,121,0,42,134,111,0,1,136,1,0,1,135,0,0,134,112,0,0,24,55,6,0,134,136,135,0,41,135,112,24,42,135,135,24,0,113,135,0,38,135,113,7,0,114,135,0,41,135,114,2,3,115,133,135,1,135,4,0,1,136,0,0,134,116,0,0,24,55,6,0,115,135,136,0,134,136,0,0,144,18,6,0,116,126,0,0,0,117,121,0,42,136,117,0,1,135,1,0,1,134,0,0,134,3,0,0,24,55,6,0,136,135,134,0,41,134,3,24,42,134,134,24,0,4,134,0,39,134,4,64,0,5,134,0,19,134,5,132,0,6,134,0,42,135,117,0,1,136,1,0], eb + 184320);
  HEAPU8.set([134,134,0,0,116,78,6,0,135,6,136,0,119,0,27,0,0,72,122,0,25,73,72,5,134,75,0,0,20,36,6,0,73,0,0,0,33,76,75,0,120,76,54,0,0,77,127,0,41,136,77,5,0,78,136,0,0,79,128,0,3,80,78,79,41,136,80,3,3,81,131,136,42,134,81,0,1,135,43,0,1,137,1,0,134,136,0,0,116,78,6,0,134,135,137,0,2,137,0,0,13,205,0,0,134,136,0,0,144,18,6,0,137,123,0,0,119,0,1,0,1,120,1,0,0,82,121,0,42,134,82,0,1,137,1,0,1,135,0,0,134,83,0,0,24,55,6,0,134,137,135,0,41,135,83,24,42,135,135,24,0,84,135,0,39,135,84,16,0,86,135,0,19,135,86,132,0,87,135,0,42,137,82,0,1,134,1,0,134,135,0,0,116,78,6,0,137,87,134,0,1,134,244,2,1,137,0,0,1,136,4,0,134,135,0,0,116,78,6,0,134,137,136,0,2,136,0,0,1,209,0,0,42,136,136,0,1,137,0,0,1,134,1,0,134,135,0,0,116,78,6,0,136,137,134,0,0,17,127,0,25,18,17,1,0,127,18,0,119,0,147,254,25,19,46,1,0,128,19,0,119,0,131,254,0,20,120,0,41,135,20,24,42,135,135,24,33,21,135,0,120,21,3,0,137,130,0,0,139,0,0,0,1,134,0,0,134,135,0,0,204,39,1,0,134,0,0,0,137,130,0,0,139,0,0,0,140,0,128,0,0,0,0,0,1,122,0,0,136,124,0,0,0,123,124,0,136,124,0,0,25,124,124,16,137,124,0,0,130,124,0,0,136,125,0,0,49,124,124,125,132,249,2,0,135,124,0,0,134,0,0,0,56,80,6,0,0,120,0,0,0,1,120,0,25,32,1,56,1,125,0,0,1,126,4,0,134,124,0,0,116,78,6,0,32,125,126,0,0,43,120,0,25,54,43,60,1,126,0,0,1,125,4,0,134,124,0,0,116,78,6,0,54,126,125,0,0,65,120,0,25,76,65,29,2,125,0,0,252,51,1,0,1,126,8,0,135,124,9,0,76,125,126,0,0,87,120,0,25,98,87,37,2,126,0,0,252,51,1,0,1,125,8,0,135,124,9,0,98,126,125,0,0,109,120,0,25,2,109,64,1,125,11,0,1,126,4,0,134,124,0,0,116,78,6,0,2,125,126,0,0,13,120,0,25,24,13,48,1,126,1,0,1,125,4,0,134,124,0,0,116,78,6,0,24,126,125,0,0,25,120,0,25,26,25,72,1,125,0,0,1,126,4,0,134,124,0,0,116,78,6,0,26,125,126,0,0,27,120,0,25,28,27,68,1,126,0,0,1,125,4,0,134,124,0,0,116,78,6,0,28,126,125,0,1,124,208,2,1,125,4,0,1,126,0,0,134,29,0,0,24,55,6,0,124,125,126,0,1,126,3,0,15,30,126,29,121,30,3,0,1,33,2,0,119,0,7,0,1,126,160,15,1,125,7,0,134,31,0,0,224,199,5,0,126,125,0,0,0,33,31,0,1,124,0,0,1,126,7,0,138,33,124,126,224,250,2,0,44,251,2,0,120,251,2,0,252,251,2,0,12,253,2,0,148,254,2,0,8,0,3,0,119,0,98,1,0,34,120,0,25,35,34,8,1,126,33,0,1,124,4,0,134,125,0,0,116,78,6,0,35,126,124,0,1,125,204,16,1,124,14,0,134,36,0,0,224,199,5,0,125,124,0,0,0,37,120,0,25,38,37,52,1,125,4,0,134,124,0,0,116,78,6,0,38,36,125,0,119,0,79,1,0,39,120,0,25,40,39,8,1,125,63,0,1,126,4,0,134,124,0,0,116,78,6,0,40,125,126,0,1,124,252,18,1,126,18,0,134,41,0,0,224,199,5,0,124,126,0,0,0,42,120,0,25,44,42,52,1,124,4,0,134,126,0,0,116,78,6,0,44,41,124,0,119,0,60,1,0,45,120,0,25,46,45,8,1,124,58,0,1,125,4,0,134,126,0,0,116,78,6,0,46,124,125,0,1,125,208,2,1,124,0,0,1,127,4,0,134,126,0,0,116,78,6,0,125,124,127,0,1,126,10,0,134,47,0,0,20,36,6,0,126,0,0,0,33,48,47,0,0,49,120,0,25,50,49,52,121,48,7,0,1,127,0,0,1,124,4,0,134,126,0,0,116,78,6,0,50,127,124,0,119,0,33,1,1,124,1,0,1,127,4,0,134,126,0,0,116,78,6,0,50,124,127,0,119,0,27,1,0,51,120,0,1,126,100,20,1,127,9,0,134,52,0,0,224,199,5,0,126,127,0,0,134,127,0,0,240,86,4,0,51,52,0,0,1,127,100,0,134,53,0,0,20,36,6,0,127,0,0,0,0,121,53,0,34,55,53,10,121,55,32,0,0,56,120,0,25,57,56,68,1,127,4,0,1,126,0,0,134,58,0,0,24,55,6,0,57,127,126,0,39,126,58,1,0,59,126,0,1,127,4,0,134,126,0,0,116,78,6,0,57,59,127,0,1,126,3,0,134,60,0,0,20,36,6,0,126,0,0,0,25,61,60,1,0,62,120,0,25,63,62,56,1,126,4,0,1,127,0,0,134,64,0,0,24,55,6,0,63,126,127,0,4,66,64,61,1,126,4,0,134,127,0,0,116,78,6,0,63,66,126,0,119,0,236,0,0,67,121,0,34,68,67,15,121,68,233,0,1,127,3,0,134,69,0,0,20,36,6,0,127,0,0,0,25,70,69,1,0,71,120,0,25,72,71,56,1,127,4,0,1,126,0,0,134,73,0,0,24,55,6,0,72,127,126,0,3,74,73,70,1,127,4,0,134,126,0,0,116,78,6,0,72,74,127,0,119,0,215,0,0,75,120,0,25,77,75,8,1,127,93,0,1,124,4,0,134,126,0,0,116,78,6,0,77,127,124,0,1,126,44,16,1,124,8,0,134,78,0,0,224,199,5,0,126,124,0,0,0,79,120,0,25,80,79,52,1,126,4,0,134,124,0,0,116,78,6,0,80,78,126,0,0,81,120,0,25,82,81,52,1,124,4,0,1,126,0,0,134,83,0,0,24,55,6,0,82,124,126,0,1,126,212,2,41,124,83,2,3,84,126,124,1,124,4,0,1,126,0,0,134,85,0,0,24,55,6,0,84,124,126,0,0,86,120,0,25,88,86,64,1,124,4,0,134,126,0,0,116,78,6,0,88,85,124,0,1,126,100,0,134,89,0,0,20,36,6,0,126,0,0,0,0,121,89,0,34,90,89,20,121,90,32,0,0,91,120,0,25,92,91,68,1,126,4,0,1,124,0,0,134,93,0,0,24,55,6,0,92,126,124,0,39,124,93,1,0,94,124,0,1,126,4,0,134,124,0,0,116,78,6,0,92,94,126,0,1,124,3,0,134,95,0,0,20,36,6,0,124,0,0,0,25,96,95,1,0,97,120,0,25,99,97,64,1,124,4,0,1,126,0,0,134,100,0,0,24,55,6,0,99,124,126,0,3,101,100,96,1,124,4,0,134,126,0,0,116,78,6,0,99,101,124,0,119,0,138,0,0,102,121,0,34,103,102,28,121,103,135,0,1,126,3,0,134,104,0,0,20,36,6,0,126,0,0,0,25,105,104,1,0,106,120,0,25,107,106,64,1,126,4,0,1,124,0,0,134,108,0,0,24,55,6,0,107,126,124,0,4,110,108,105,1,126,4,0,134,124,0,0,116,78,6,0,107,110,126,0,119,0,117,0,0,111,120,0,25,112,111,8,1,126,61,0,1,127,4,0,134,124,0,0,116,78,6,0,112,126,127,0,1,124,228,17,1,127,14,0,134,113,0,0,224,199,5,0,124,127,0,0,0,114,120,0,25,115,114,52,1,124,4,0,134,127,0,0,116,78,6,0,115,113,124,0,0,116,120,0,25,117,116,52,1,127,4,0,1,124,0,0,134,118,0,0,24,55,6,0,117,127,124,0,1,127,0,0,1,124,12,0,138,118,127,124,56,255,2,0,60,255,2,0,52,255,2,0,52,255,2,0,52,255,2,0,52,255,2,0,64,255,2,0,120,255,2,0,124,255,2,0,52,255,2,0,52,255,2,0,128,255,2,0,119,0,76,0,119,0,19,0,119,0,18,0,0,12,120,0,25,14,12,68,1,124,4,0,1,127,0,0,134,15,0,0,24,55,6,0,14,124,127,0,39,127,15,1,0,16,127,0,1,124,4,0,134,127,0,0,116,78,6,0,14,16,124,0,119,0,60,0,119,0,3,0,119,0,2,0,119,0,240,255,1,127,3,0,134,119,0,0,20,36,6,0,127,0,0,0,0,3,120,0,25,4,3,64,1,124,4,0,134,127,0,0,116,78,6,0,4,119,124,0,32,5,119,0,121,5,45,0,0,6,120,0,25,7,6,64,1,124,255,255,1,126,4,0,134,127,0,0,116,78,6,0,7,124,126,0,0,8,120,0,25,9,8,68,1,127,4,0,1,126,0,0,134,10,0,0,24,55,6,0,9,127,126,0,39,126,10,1,0,11,126,0,1,127,4,0,134,126,0,0,116,78,6,0,9,11,127,0,119,0,24,0,0,17,120,0,25,18,17,8,1,127,47,0,1,124,4,0,134,126,0,0,116,78,6,0,18,127,124,0,1,126,44,21,1,124,14,0,134,19,0,0,224,199,5,0,126,124,0,0,0,20,120,0,25,21,20,52,1,126,4,0,134,124,0,0,116,78,6,0,21,19,126,0,0,22,120,0,134,124,0,0,236,184,5,0,22,0,0,0,119,0,1,0,0,23,120,0,137,123,0,0,139,23,0,0,140,3,143,0,0,0,0,0,2,136,0,0,232,106,0,0,2,137,0,0,255,0,0,0,2,138,0,0,5,209,0,0,1,134,0,0,136,139,0,0,0,135,139,0,136,139,0,0,25,139,139,48,137,139,0,0,130,139,0,0,136,140,0,0,49,139,139,140,188,0,3,0,135,139,0,0,25,133,135,16,25,132,135,8,0,131,135,0,0,4,0,0,0,39,1,0,0,50,2,0,1,128,1,0,0,61,4,0,1,139,4,0,1,140,0,0,134,72,0,0,24,55,6,0,61,139,140,0,41,140,72,5,0,83,140,0,0,94,4,0,25,105,94,4,1,140,4,0,1,139,0,0,134,116,0,0,24,55,6,0,105,140,139,0,3,5,83,116,1,139,192,26,41,140,5,3,3,16,139,140,25,27,16,4,1,140,4,0,1,139,0,0,134,32,0,0,24,55,6,0,27,140,139,0,0,130,32,0,1,140,244,2,1,141,0,0,1,142,4,0,134,139,0,0,116,78,6,0,140,141,142,0,1,142,12,3,1,141,0,0,1,140,4,0,134,139,0,0,116,78,6,0,142,141,140,0,0,33,4,0,134,139,0,0,36,182,5,0,33,0,0,0,1,127,0,0,0,34,130,0,25,35,34,17,42,139,35,0,1,140,1,0,1,141,0,0,134,36,0,0,24,55,6,0,139,140,141,0,41,141,36,24,42,141,141,24,0,37,141,0,32,38,37,88,121,38,110,0,0,40,130,0,25,41,40,18,42,141,41,0,1,140,1,0,1,139,0,0,134,42,0,0,24,55,6,0,141,140,139,0,41,139,42,24,42,139,139,24,0,43,139,0,33,44,43,88,121,44,97,0,1,139,2,0,1,140,0,0,134,45,0,0,24,55,6,0,136,139,140,0,41,140,45,16,42,140,140,16,0,46,140,0,38,140,46,4,0,47,140,0,33,48,47,0,38,140,48,1,0,49,140,0,19,140,49,137,0,51,140,0,41,140,51,24,42,140,140,24,33,52,140,0,120,52,78,0,0,53,130,0,25,54,53,18,42,139,54,0,1,141,88,0,1,142,1,0,134,140,0,0,116,78,6,0,139,141,142,0,1,140,2,0,1,142,0,0,134,55,0,0,24,55,6,0,136,140,142,0,41,142,55,16,42,142,142,16,0,56,142,0,1,142,0,8,19,142,56,142,0,57,142,0,33,58,57,0,38,142,58,1,0,59,142,0,19,142,59,137,0,60,142,0,41,142,60,24,42,142,142,24,33,62,142,0,121,62,31,0,1,142,26,0,134,63,0,0,20,36,6,0,142,0,0,0,25,64,63,65,19,142,64,137,0,65,142,0,0,127,65,0,0,66,130,0,25,67,66,8,25,68,67,4,1,142,4,0,1,140,0,0,134,69,0,0,24,55,6,0,68,142,140,0,0,70,130,0,25,71,70,8,1,140,4,0,1,142,0,0,134,73,0,0,24,55,6,0,71,140,142,0,0,74,127,0,41,142,74,24,42,142,142,24,0,75,142,0,134,142,0,0,208,39,6,0,69,73,75,0,2,142,0,0,229,246,0,0,2,140,0,0,5,247,0,0,134,76,0,0,224,49,6,0,142,140,0,0,134,140,0,0,144,18,6,0,76,131,0,0,0,77,50,0,41,140,77,24,42,140,140,24,33,78,140,0,120,78,5,0,1,3,0,0,0,31,3,0,137,135,0,0,139,31,0,0,0,79,130,0,134,80,0,0,148,195,4,0,79,0,0,0,0,129,80,0,1,128,0,0,42,140,138,0,1,142,1,0,1,141,0,0,134,81,0,0,24,55,6,0,140,142,141,0,19,141,81,137,0,82,141,0,33,84,82,0,121,84,16,0,2,141,0,0,6,209,0,0,42,141,141,0,1,142,1,0,1,140,0,0,134,85,0,0,24,55,6,0,141,142,140,0,41,140,85,24,42,140,140,24,33,86,140,0,40,140,86,1,0,87,140,0,0,89,87,0,119,0,2,0,1,89,0,0,38,140,89,1,0,88,140,0,19,140,88,137,0,90,140,0,2,142,0,0,246,208,0,0,42,142,142,0,1,141,1,0,134,140,0,0,116,78,6,0,142,90,141,0,0,91,130,0,0,92,39,0,0,93,50,0,1,140,208,106,134,95,0,0,232,39,2,0,140,91,92,93,41,140,95,24,42,140,140,24,33,96,140,0,121,96,165,0,1,128,0,0,0,97,50,0,41,140,97,24,42,140,140,24,33,98,140,0,121,98,13,0,0,99,39,0,0,100,129,0,42,140,138,0,1,141,1,0,1,142,0,0,134,101,0,0,24,55,6,0,140,141,142,0,134,142,0,0,92,123,5,0,99,100,101,0,119,0,12,0,0,102,129,0,42,142,138,0,1,141,1,0,1,140,0,0,134,103,0,0,24,55,6,0,142,141,140,0,1,141,0,0,134,140,0,0,104,72,5,0,141,102,103,0,1,140,2,0,1,141,0,0,134,104,0,0,24,55,6,0,136,140,141,0,41,141,104,16,42,141,141,16,0,106,141,0,38,141,106,1,0,107,141,0,33,108,107,0,38,141,108,1,0,109,141,0,19,141,109,137,0,110,141,0,41,141,110,24,42,141,141,24,33,111,141,0,121,111,65,0,1,128,1,0,0,112,130,0,25,113,112,24,1,141,2,0,1,140,0,0,134,114,0,0,24,55,6,0,113,141,140,0,41,140,114,16,42,140,140,16,0,115,140,0,1,140,0,2,20,140,115,140,0,117,140,0,2,140,0,0,255,255,0,0,19,140,117,140,0,118,140,0,1,141,2,0,134,140,0,0,116,78,6,0,113,118,141,0,1,140,2,0,1,141,0,0,134,119,0,0,24,55,6,0,136,140,141,0,41,141,119,16,42,141,141,16,0,120,141,0,38,141,120,254,0,121,141,0,2,141,0,0,255,255,0,0,19,141,121,141,0,122,141,0,1,140,2,0,134,141,0,0,116,78,6,0,136,122,140,0,134,141,0,0,120,187,4,0,2,140,0,0,246,208,0,0,42,140,140,0,1,142,0,0,1,139,1,0,134,141,0,0,116,78,6,0,140,142,139,0,2,141,0,0,91,46,1,0,134,123,0,0,24,24,6,0,141,0,0,0,1,139,4,0,134,141,0,0,116,78,6,0,132,123,139,0,2,139,0,0,28,247,0,0,134,141,0,0,144,18,6,0,139,132,0,0,0,124,130,0,25,125,124,28,25,126,125,16,1,141,4,0,1,139,0,0,134,6,0,0,24,55,6,0,126,141,139,0,36,7,6,0,121,7,7,0,0,8,130,0,1,141,1,0,134,139,0,0,0,152,3,0,8,141,0,0,119,0,35,0,0,9,128,0,19,139,9,137,0,10,139,0,33,11,10,0,121,11,30,0,1,139,2,0,1,141,0,0,134,12,0,0,24,55,6,0,136,139,141,0,41,141,12,16,42,141,141,16,0,13,141,0,38,141,13,4,0,14,141,0,33,15,14,0,38,141,15,1,0,17,141,0,19,141,17,137,0,18,141,0,41,141,18,24,42,141,141,24,33,19,141,0,120,19,11,0,0,20,129,0,1,139,4,0,134,141,0,0,116,78,6,0,133,20,139,0,2,139,0,0,55,247,0,0,134,141,0,0,144,18,6,0,139,133,0,0,1,128,1,0,119,0,30,0,0,21,50,0,41,141,21,24,42,141,141,24,33,22,141,0,121,22,13,0,0,23,39,0,0,24,129,0,42,141,138,0,1,139,1,0,1,142,0,0,134,25,0,0,24,55,6,0,141,139,142,0,134,142,0,0,8,136,5,0,23,24,25,0,119,0,13,0,0,26,129,0,42,142,138,0,1,139,1,0,1,141,0,0,134,28,0,0,24,55,6,0,142,139,141,0,1,139,0,0,134,141,0,0,152,70,5,0,139,26,28,0,119,0,1,0,0,29,128,0,19,141,29,137,0,30,141,0,0,3,30,0,0,31,3,0,137,135,0,0,139,31,0,0,140,2,121,0,0,0,0,0,2,116,0,0,255,0,0,0,2,117,0,0,20,174,71,1,1,114,0,0,136,118,0,0,0,115,118,0,25,3,0,4,1,118,4,0,1,119,0,0,134,4,0,0,24,55,6,0,3,118,119,0,25,15,0,100,1,119,4,0,1,118,0,0,134,26,0,0,24,55,6,0,15,119,118,0,16,37,4,26,121,37,16,0,25,48,4,1,1,119,4,0,134,118,0,0,116,78,6,0,3,48,119,0,42,118,4,0,1,119,1,0,1,120,0,0,134,59,0,0,24,55,6,0,118,119,120,0,19,120,59,116,0,70,120,0,0,92,70,0,119,0,5,0,134,81,0,0,220,97,4,0,0,0,0,0,0,92,81,0,32,5,92,45,1,118,43,0,1,119,3,0,138,92,118,119,52,8,3,0,40,8,3,0,56,8,3,0,0,103,92,0,1,111,0,0,119,0,69,0,119,0,1,0,38,120,5,1,0,6,120,0,1,120,4,0,1,119,0,0,134,7,0,0,24,55,6,0,3,120,119,0,1,119,4,0,1,120,0,0,134,8,0,0,24,55,6,0,15,119,120,0,16,9,7,8,121,9,16,0,25,10,7,1,1,119,4,0,134,120,0,0,116,78,6,0,3,10,119,0,42,120,7,0,1,119,1,0,1,118,0,0,134,11,0,0,24,55,6,0,120,119,118,0,19,118,11,116,0,12,118,0,0,16,12,0,119,0,5,0,134,13,0,0,220,97,4,0,0,0,0,0,0,16,13,0,26,14,16,48,1,118,9,0,16,17,118,14,33,18,1,0,19,118,18,17,0,112,118,0,121,112,25,0,1,118,4,0,1,119,0,0,134,19,0,0,24,55,6,0,15,118,119,0,1,119,0,0,13,20,19,119,121,20,4,0,0,103,16,0,0,111,6,0,119,0,17,0,1,119,4,0,1,118,0,0,134,21,0,0,24,55,6,0,3,119,118,0,26,22,21,1,1,119,4,0,134,118,0,0,116,78,6,0,3,22,119,0,0,103,16,0,0,111,6,0,119,0,4,0,0,103,16,0,0,111,6,0,119,0,1,0,26,23,103,48,1,118,9,0,16,24,118,23,121,24,27,0,1,118,4,0,1,119,0,0,134,25,0,0,24,55,6,0,15,118,119,0,1,119,0,0,13,27,25,119,121,27,5,0,2,101,0,0,0,0,0,128,1,102,0,0,119,0,224,0,1,119,4,0,1,118,0,0,134,28,0,0,24,55,6,0,3,119,118,0,26,29,28,1,1,119,4,0,134,118,0,0,116,78,6,0,3,29,119,0,2,101,0,0,0,0,0,128,1,102,0,0,119,0,210,0,0,106,103,0,1,113,0,0,27,30,113,10,26,31,106,48,3,32,31,30,1,118,4,0,1,119,0,0,134,33,0,0,24,55,6,0,3,118,119,0,1,119,4,0,1,118,0,0,134,34,0,0,24,55,6,0,15,119,118,0,16,35,33,34,121,35,16,0,25,36,33,1,1,119,4,0,134,118,0,0,116,78,6,0,3,36,119,0,42,118,33,0,1,119,1,0,1,120,0,0,134,38,0,0,24,55,6,0,118,119,120,0,19,120,38,116,0,39,120,0,0,104,39,0,119,0,5,0,134,40,0,0,220,97,4,0,0,0,0,0,0,104,40,0,26,41,104,48,35,42,41,10,2,120,0,0,204,204,204,12,15,43,32,120,19,120,42,43,0,44,120,0,121,44,4,0,0,106,104,0,0,113,32,0,119,0,212,255,0,2,32,0,0,105,104,0,119,0,1,0,34,45,2,0,41,120,45,31,42,120,120,31,0,46,120,0,26,47,105,48,35,49,47,10,121,49,80,0,0,52,2,0,0,53,46,0,0,109,105,0,1,120,10,0,1,119,0,0,134,54,0,0,200,52,6,0,52,53,120,119,128,119,0,0,0,55,119,0,34,56,109,0,41,119,56,31,42,119,119,31,0,57,119,0,1,119,208,255,1,120,255,255,134,58,0,0,84,105,6,0,109,57,119,120,128,120,0,0,0,60,120,0,134,61,0,0,84,105,6,0,58,60,54,55,128,120,0,0,0,62,120,0,1,120,4,0,1,119,0,0,134,63,0,0,24,55,6,0,3,120,119,0,1,119,4,0,1,120,0,0,134,64,0,0,24,55,6,0,15,119,120,0,16,65,63,64,121,65,16,0,25,66,63,1,1,119,4,0,134,120,0,0,116,78,6,0,3,66,119,0,42,120,63,0,1,119,1,0,1,118,0,0,134,67,0,0,24,55,6,0,120,119,118,0,19,118,67,116,0,68,118,0,0,107,68,0,119,0,5,0,134,69,0,0,220,97,4,0,0,0,0,0,0,107,69,0,26,71,107,48,35,72,71,10,15,73,62,117,2,118,0,0,174,71,225,122,16,74,61,118,13,75,62,117,19,118,75,74,0,76,118,0,20,118,73,76,0,77,118,0,19,118,72,77,0,78,118,0,121,78,5,0,0,52,61,0,0,53,62,0,0,109,107,0,119,0,185,255,0,95,61,0,0,96,62,0,0,108,107,0,119,0,4,0,0,95,2,0,0,96,46,0,0,108,105,0,26,50,108,48,35,51,50,10,121,51,36,0,1,118,4,0,1,119,0,0,134,79,0,0,24,55,6,0,3,118,119,0,1,119,4,0,1,118,0,0,134,80,0,0,24,55,6,0,15,119,118,0,16,82,79,80,121,82,16,0,25,83,79,1,1,119,4,0,134,118,0,0,116,78,6,0,3,83,119,0,42,118,79,0,1,119,1,0,1,120,0,0,134,84,0,0,24,55,6,0,118,119,120,0,19,120,84,116,0,85,120,0,0,110,85,0,119,0,5,0,134,86,0,0,220,97,4,0,0,0,0,0,0,110,86,0,26,87,110,48,35,88,87,10,120,88,223,255,119,0,1,0,1,120,4,0,1,119,0,0,134,89,0,0,24,55,6,0,15,120,119,0,1,119,0,0,13,90,89,119,120,90,11,0,1,119,4,0,1,120,0,0,134,91,0,0,24,55,6,0,3,119,120,0,26,93,91,1,1,119,4,0,134,120,0,0,116,78,6,0,3,93,119,0,33,94,111,0,1,120,0,0,1,119,0,0,134,97,0,0,240,98,6,0,120,119,95,96,128,119,0,0,0,98,119,0,125,99,94,97,95,0,0,0,125,100,94,98,96,0,0,0,0,101,100,0,0,102,99,0,129,101,0,0,139,102,0,0,140,3,149,0,0,0,0,0,1,141,0,0,136,143,0,0,0,142,143,0,136,143,0,0,25,143,143,32,137,143,0,0,130,143,0,0,136,144,0,0,49,143,143,144,60,13,3,0,135,143,0,0,0,4,0,0,0,5,1,0,0,51,2,0,1,143,200,2,1,144,4,0,1,145,0,0,134,62,0,0,24,55,6,0,143,144,145,0,26,73,62,26,0,139,73,0,34,84,73,0,1,145,0,0,125,3,84,145,73,0,0,0,0,139,3,0,0,95,4,0,1,144,116,3,134,145,0,0,124,205,5,0,144,95,0,0,0,106,5,0,0,117,4,0,25,128,117,17,42,144,128,0,1,143,1,0,134,145,0,0,116,78,6,0,144,106,143,0,0,6,5,0,0,17,4,0,25,28,17,18,42,143,28,0,1,144,1,0,134,145,0,0,116,78,6,0,143,6,144,0,0,39,4,0,25,45,39,8,0,46,51,0,1,143,4,0,1,146,0,0,134,144,0,0,24,55,6,0,46,143,146,0,1,146,4,0,134,145,0,0,116,78,6,0,45,144,146,0,25,146,45,4,25,143,46,4,1,147,4,0,1,148,0,0,134,144,0,0,24,55,6,0,143,147,148,0,1,148,4,0,134,145,0,0,116,78,6,0,146,144,148,0,0,47,51,0,25,48,47,4,1,145,4,0,1,148,0,0,134,49,0,0,24,55,6,0,48,145,148,0,0,50,51,0,1,148,4,0,1,145,0,0,134,52,0,0,24,55,6,0,50,148,145,0,134,145,0,0,124,108,5,0,49,52,0,0,134,53,0,0,96,107,6,0,2,145,0,0,255,255,0,0,19,145,53,145,0,54,145,0,1,145,255,0,19,145,54,145,0,55,145,0,0,56,4,0,25,57,56,19,42,148,57,0,1,144,1,0,134,145,0,0,116,78,6,0,148,55,144,0,0,58,51,0,134,59,0,0,248,24,4,0,58,0,0,0,0,60,4,0,25,61,60,68,1,144,4,0,134,145,0,0,116,78,6,0,61,59,144,0,0,63,4,0,0,64,51,0,1,145,4,0,1,144,0,0,134,65,0,0,24,55,6,0,64,145,144,0,41,144,65,5,0,66,144,0,0,67,51,0,25,68,67,4,1,144,4,0,1,145,0,0,134,69,0,0,24,55,6,0,68,144,145,0,3,70,66,69,1,145,192,26,41,144,70,3,3,71,145,144,25,72,71,4,1,145,4,0,134,144,0,0,116,78,6,0,72,63,145,0,0,74,4,0,25,75,74,17,42,144,75,0,1,145,1,0,1,148,0,0,134,76,0,0,24,55,6,0,144,145,148,0,41,148,76,24,42,148,148,24,0,77,148,0,26,78,77,65,1,148,88,10,27,145,78,52,3,79,148,145,0,140,79,0,0,80,140,0,25,81,80,12,25,82,81,8,1,145,4,0,1,148,0,0,134,83,0,0,24,55,6,0,82,145,148,0,0,85,139,0,3,86,83,85,0,87,4,0,25,88,87,28,25,89,88,8,1,145,4,0,134,148,0,0,116,78,6,0,89,86,145,0,0,90,4,0,25,91,90,28,25,92,91,8,1,148,4,0,1,145,0,0,134,93,0,0,24,55,6,0,92,148,145,0,1,145,8,0,134,94,0,0,212,44,6,0,93,145,0,0,0,96,4,0,25,97,96,28,25,98,97,16,1,148,4,0,134,145,0,0,116,78,6,0,98,94,148,0,0,99,4,0,25,100,99,28,25,101,100,36,1,148,4,0,134,145,0,0,116,78,6,0,101,94,148,0,0,102,140,0,25,103,102,12,25,104,103,12,1,145,4,0,1,148,0,0,134,105,0,0,24,55,6,0,104,145,148,0,0,107,139,0,4,108,105,107,0,109,4,0,25,110,109,28,25,111,110,12,1,145,4,0,134,148,0,0,116,78,6,0,111,108,145,0,0,112,4,0,25,113,112,28,25,114,113,20,0,115,140,0,25,116,115,12,25,118,116,20,135,148,24,0,114,118,0,0,0,119,140,0,25,120,119,12,1,148,4,0,1,145,0,0,134,121,0,0,24,55,6,0,120,148,145,0,0,122,4,0,25,123,122,28,1,148,4,0,134,145,0,0,116,78,6,0,123,121,148,0,0,124,140,0,25,125,124,12,25,126,125,4,1,145,4,0,1,148,0,0,134,127,0,0,24,55,6,0,126,145,148,0,0,129,139,0,27,130,129,10,3,131,127,130,0,132,4,0,134,133,0,0,104,139,5,0,132,0,0,0,3,134,131,133,0,135,4,0,25,136,135,28,25,137,136,4,1,145,4,0,134,148,0,0,116,78,6,0,137,134,145,0,0,138,140,0,25,7,138,8,1,148,2,0,1,145,0,0,134,8,0,0,24,55,6,0,7,148,145,0,0,9,4,0,25,10,9,24,1,148,2,0,134,145,0,0,116,78,6,0,10,8,148,0,1,145,200,2,1,148,4,0,1,144,0,0,134,11,0,0,24,55,6,0,145,148,144,0,1,144,29,0,15,12,144,11,121,12,21,0,0,13,4,0,25,14,13,24,1,144,2,0,1,148,0,0,134,15,0,0,24,55,6,0,14,144,148,0,41,148,15,16,42,148,148,16,0,16,148,0,39,148,16,64,0,18,148,0,2,148,0,0,255,255,0,0,19,148,18,148,0,19,148,0,1,144,2,0,134,148,0,0,116,78,6,0,14,19,144,0,0,20,4,0,25,21,20,16,42,144,21,0,1,145,1,0,1,146,1,0,134,148,0,0,116,78,6,0,144,145,146,0,0,22,4,0,25,23,22,72,1,146,0,0,1,145,4,0,134,148,0,0,116,78,6,0,23,146,145,0,1,148,196,106,1,145,4,0,1,146,0,0,134,24,0,0,24,55,6,0,148,145,146,0,1,146,0,0,14,25,24,146,121,25,19,0,1,146,196,106,1,145,4,0,1,148,0,0,134,26,0,0,24,55,6,0,146,145,148,0,25,27,26,52,1,148,4,0,1,145,0,0,134,29,0,0,24,55,6,0,27,148,145,0,32,30,29,6,121,30,3,0,1,141,7,0,119,0,4,0,1,141,5,0,119,0,2,0,1,141,5,0,32,145,141,5,121,145,25,0,1,145,200,106,1,148,4,0,1,146,0,0,134,31,0,0,24,55,6,0,145,148,146,0,1,146,0,0,14,32,31,146,121,32,16,0,1,146,200,106,1,148,4,0,1,145,0,0,134,33,0,0,24,55,6,0,146,148,145,0,25,34,33,52,1,145,4,0,1,148,0,0,134,35,0,0,24,55,6,0,34,145,148,0,32,36,35,6,121,36,2,0,1,141,7,0,32,148,141,7,121,148,5,0,0,37,51,0,134,148,0,0,36,182,5,0,37,0,0,0,0,38,5,0,41,148,38,24,42,148,148,24,0,40,148,0,32,41,40,88,120,41,3,0,137,142,0,0,139,0,0,0,134,42,0,0,12,66,6,0,0,43,4,0,25,44,43,18,42,145,44,0,1,146,1,0,134,148,0,0,116,78,6,0,145,42,146,0,137,142,0,0,139,0,0,0,140,0,113,0,0,0,0,0,2,108,0,0,120,3,0,0,1,106,0,0,136,109,0,0,0,107,109,0,136,109,0,0,25,109,109,48,137,109,0,0,130,109,0,0,136,110,0,0,49,109,109,110,116,19,3,0,135,109,0,0,25,104,107,24,25,103,107,16,25,102,107,8,0,101,107,0,2,110,0,0,27,205,0,0,134,109,0,0,144,18,6,0,110,101,0,0,134,0,0,0,24,71,6,0,0,98,0,0,1,110,204,2,1,111,0,0,1,112,4,0,134,109,0,0,116,78,6,0,110,111,112,0,0,1,98,0,41,109,1,24,42,109,109,24,0,12,109,0,33,23,12,42,121,23,116,0,1,112,0,0,1,111,0,0,134,109,0,0,124,108,5,0,112,111,0,0,1,100,68,22,0,34,100,0,25,45,34,4,1,109,4,0,1,111,0,0,134,56,0,0,24,55,6,0,45,109,111,0,1,111,0,0,14,67,56,111,120,67,3,0,1,106,7,0,119,0,23,0,0,78,100,0,42,111,78,0,1,109,1,0,1,112,0,0,134,89,0,0,24,55,6,0,111,109,112,0,41,112,89,24,42,112,112,24,0,2,112,0,0,3,98,0,41,112,3,24,42,112,112,24,0,4,112,0,13,5,2,4,121,5,3,0,1,106,5,0,119,0,5,0,0,14,100,0,25,15,14,12,0,100,15,0,119,0,223,255,32,112,106,5,121,112,54,0,2,109,0,0,251,208,0,0,42,109,109,0,1,111,1,0,1,110,1,0,134,112,0,0,116,78,6,0,109,111,110,0,0,6,100,0,42,112,6,0,1,110,1,0,1,111,0,0,134,7,0,0,24,55,6,0,112,110,111,0,41,111,7,24,42,111,111,24,0,8,111,0,134,9,0,0,160,236,5,0,8,0,0,0,0,10,100,0,25,11,10,4,1,111,4,0,1,110,0,0,134,13,0,0,24,55,6,0,11,111,110,0,1,111,4,0,134,110,0,0,116,78,6,0,102,9,111,0,25,105,102,4,1,111,4,0,134,110,0,0,116,78,6,0,105,13,111,0,2,111,0,0,69,205,0,0,134,110,0,0,144,18,6,0,111,102,0,0,2,111,0,0,251,208,0,0,42,111,111,0,1,112,0,0,1,109,1,0,134,110,0,0,116,78,6,0,111,112,109,0,137,107,0,0,139,0,0,0,119,0,21,0,32,110,106,7,121,110,19,0,0,16,98,0,41,110,16,24,42,110,110,24,0,17,110,0,134,18,0,0,160,236,5,0,17,0,0,0,1,109,4,0,134,110,0,0,116,78,6,0,103,18,109,0,2,109,0,0,74,205,0,0,134,110,0,0,144,18,6,0,109,103,0,0,137,107,0,0,139,0,0,0,1,99,0,0,1,100,68,22,0,19,100,0,25,20,19,4,1,110,4,0,1,109,0,0,134,21,0,0,24,55,6,0,20,110,109,0,1,109,0,0,14,22,21,109,120,22,2,0,119,0,20,0,0,24,100,0,25,25,24,8,42,109,25,0,1,110,1,0,1,112,0,0,134,26,0,0,24,55,6,0,109,110,112,0,41,112,26,24,42,112,112,24,33,27,112,0,121,27,4,0,0,28,99,0,25,29,28,1,0,99,29,0,0,30,100,0,25,31,30,12,0,100,31,0,119,0,227,255,0,32,99,0,38,112,32,1,0,33,112,0,33,35,33,0,121,35,4,0,0,36,99,0,25,37,36,1,0,99,37,0,0,38,99,0,28,112,38,2,38,112,112,255,0,39,112,0,0,99,39,0,0,40,99,0,2,112,0,0,76,162,0,0,1,110,4,0,1,109,0,0,134,41,0,0,24,55,6,0,112,110,109,0,26,42,41,1,15,43,42,40,121,43,10,0,2,109,0,0,76,162,0,0,1,110,4,0,1,112,0,0,134,44,0,0,24,55,6,0,109,110,112,0,26,46,44,1,0,99,46,0,1,112,4,0,1,110,0,0,134,47,0,0,24,55,6,0,108,112,110,0,134,110,0,0,164,64,6,0,47,0,0,0,1,97,0,0,1,100,68,22,0,48,100,0,25,49,48,4,1,110,4,0,1,112,0,0,134,50,0,0,24,55,6,0,49,110,112,0,1,112,0,0,14,51,50,112,120,51,2,0,119,0,101,0,0,52,100,0,25,53,52,8,42,112,53,0,1,110,1,0,1,109,0,0,134,54,0,0,24,55,6,0,112,110,109,0,41,109,54,24,42,109,109,24,33,55,109,0,121,55,85,0,1,109,4,0,1,110,0,0,134,57,0,0,24,55,6,0,108,109,110,0,0,58,97,0,0,59,99,0,8,110,58,59,38,110,110,255,0,60,110,0,0,61,97,0,0,62,99,0,17,63,62,61,2,110,0,0,80,162,0,0,1,109,4,0,1,112,0,0,134,64,0,0,24,55,6,0,110,109,112,0,28,112,64,2,38,112,112,255,0,65,112,0,1,112,0,0,125,66,63,65,112,0,0,0,134,112,0,0,164,140,5,0,57,60,66,0,0,68,100,0,42,112,68,0,1,109,1,0,1,110,0,0,134,69,0,0,24,55,6,0,112,109,110,0,41,110,69,24,42,110,110,24,33,70,110,0,121,70,22,0,1,110,4,0,1,109,0,0,134,71,0,0,24,55,6,0,108,110,109,0,0,72,100,0,42,109,72,0,1,110,1,0,1,112,0,0,134,73,0,0,24,55,6,0,109,110,112,0,41,112,73,24,42,112,112,24,0,74,112,0,134,75,0,0,160,236,5,0,74,0,0,0,134,112,0,0,144,86,6,0,71,75,0,0,1,112,4,0,1,110,0,0,134,76,0,0,24,55,6,0,108,112,110,0,0,77,100,0,25,79,77,4,1,110,4,0,1,112,0,0,134,80,0,0,24,55,6,0,79,110,112,0,134,112,0,0,144,86,6,0,76,80,0,0,0,81,97,0,25,82,81,1,0,97,82,0,0,83,99,0,41,112,83,1,0,84,112,0,17,85,84,82,120,85,5,0,0,86,100,0,25,87,86,12,0,100,87,0,119,0,146,255,1,112,4,0,1,110,0,0,134,88,0,0,24,55,6,0,108,112,110,0,2,110,0,0,76,162,0,0,1,112,4,0,1,109,0,0,134,90,0,0,24,55,6,0,110,112,109,0,26,91,90,1,1,112,0,0,134,109,0,0,164,140,5,0,88,91,112,0,1,109,4,0,1,112,0,0,134,92,0,0,24,55,6,0,108,109,112,0,2,109,0,0,115,52,1,0,134,112,0,0,144,86,6,0,92,109,0,0,1,112,4,0,1,109,0,0,134,93,0,0,24,55,6,0,108,112,109,0,134,109,0,0,124,212,4,0,93,0,0,0,1,112,32,0,134,109,0,0,112,14,6,0,112,0,0,0,2,109,0,0,68,162,0,0,1,112,4,0,1,110,0,0,134,94,0,0,24,55,6,0,109,112,110,0,1,112,1,0,134,110,0,0,0,62,6,0,94,112,0,0,2,112,0,0,166,51,1,0,134,110,0,0,144,18,6,0,112,104,0,0,2,110,0,0,68,162,0,0,1,112,4,0,1,109,0,0,134,95,0,0,24,55,6,0,110,112,109,0,134,109,0,0,164,179,5,0,95,0,0,0,2,109,0,0,68,162,0,0,1,112,4,0,1,110,0,0,134,96,0,0,24,55,6,0,109,112,110,0,134,110,0,0,124,212,4,0,96,0,0,0,137,107,0,0,139,0,0,0,140,3,137,0,0,0,0,0,2,128,0,0,192,26,0,0,2,129,0,0,255,0,0,0,2,130,0,0,5,209,0,0,1,126,0,0,136,131,0,0,0,127,131,0,136,131,0,0,25,131,131,16,137,131,0,0,130,131,0,0,136,132,0,0,49,131,131,132,8,26,3,0,135,131,0,0,0,4,0,0,0,5,1,0,0,34,2,0,0,45,4,0,25,56,45,12,1,133,216,106,1,134,4,0,1,135,0,0,134,132,0,0,24,55,6,0,133,134,135,0,1,135,4,0,134,131,0,0,116,78,6,0,56,132,135,0,25,135,56,4,1,134,216,106,25,134,134,4,1,133,4,0,1,136,0,0,134,132,0,0,24,55,6,0,134,133,136,0,1,136,4,0,134,131,0,0,116,78,6,0,135,132,136,0,0,67,4,0,25,78,67,12,1,131,4,0,1,136,0,0,134,89,0,0,24,55,6,0,78,131,136,0,1,136,216,106,1,131,4,0,1,132,0,0,134,100,0,0,24,55,6,0,136,131,132,0,13,111,89,100,121,111,19,0,0,6,4,0,25,17,6,12,25,26,17,4,1,132,4,0,1,131,0,0,134,27,0,0,24,55,6,0,26,132,131,0,1,131,220,106,1,132,4,0,1,136,0,0,134,28,0,0,24,55,6,0,131,132,136,0,13,29,27,28,120,29,4,0,1,126,4,0,119,0,2,0,1,126,4,0,32,136,126,4,121,136,94,0,1,126,0,0,0,30,4,0,25,31,30,12,25,32,31,4,1,136,4,0,1,132,0,0,134,33,0,0,24,55,6,0,32,136,132,0,0,35,4,0,25,36,35,12,1,132,4,0,1,136,0,0,134,37,0,0,24,55,6,0,36,132,136,0,134,38,0,0,228,47,4,0,33,37,0,0,19,136,38,129,0,39,136,0,32,40,39,0,42,136,130,0,1,132,1,0,1,131,0,0,134,41,0,0,24,55,6,0,136,132,131,0,41,131,41,24,42,131,131,24,33,42,131,0,20,131,40,42,0,123,131,0,120,123,60,0,0,43,4,0,25,44,43,12,1,131,4,0,1,132,0,0,134,46,0,0,24,55,6,0,44,131,132,0,41,132,46,5,0,47,132,0,0,48,4,0,25,49,48,12,25,50,49,4,1,132,4,0,1,131,0,0,134,51,0,0,24,55,6,0,50,132,131,0,3,52,47,51,41,131,52,3,3,53,128,131,42,131,53,0,1,132,1,0,1,136,0,0,134,54,0,0,24,55,6,0,131,132,136,0,41,136,54,24,42,136,136,24,0,55,136,0,0,122,55,0,0,57,122,0,32,58,57,46,121,58,8,0,134,59,0,0,72,7,6,0,41,136,59,24,42,136,136,24,33,60,136,0,120,60,2,0,1,122,32,0,0,61,4,0,25,62,61,12,25,63,62,4,1,136,4,0,1,132,0,0,134,64,0,0,24,55,6,0,63,136,132,0,0,65,4,0,25,66,65,12,1,132,4,0,1,136,0,0,134,68,0,0,24,55,6,0,66,132,136,0,0,69,122,0,134,136,0,0,208,39,6,0,64,68,69,0,0,70,5,0,0,71,4,0,25,72,71,12,25,73,72,4,1,136,4,0,1,132,0,0,134,74,0,0,24,55,6,0,73,136,132,0,3,75,74,70,1,136,4,0,134,132,0,0,116,78,6,0,73,75,136,0,0,76,34,0,0,77,4,0,25,79,77,12,1,132,4,0,1,136,0,0,134,80,0,0,24,55,6,0,79,132,136,0,3,81,80,76,1,132,4,0,134,136,0,0,116,78,6,0,79,81,132,0,0,82,4,0,25,83,82,12,1,136,4,0,1,132,0,0,134,84,0,0,24,55,6,0,83,136,132,0,41,132,84,5,0,85,132,0,0,86,4,0,25,87,86,12,25,88,87,4,1,132,4,0,1,136,0,0,134,90,0,0,24,55,6,0,88,132,136,0,3,91,85,90,41,136,91,3,3,92,128,136,25,93,92,4,1,136,4,0,1,132,0,0,134,94,0,0,24,55,6,0,93,136,132,0,1,132,0,0,14,95,94,132,0,96,4,0,25,97,96,12,1,132,4,0,1,136,0,0,134,98,0,0,24,55,6,0,97,132,136,0,41,136,98,5,0,99,136,0,0,101,4,0,25,102,101,12,25,103,102,4,1,136,4,0,1,132,0,0,134,104,0,0,24,55,6,0,103,136,132,0,3,105,99,104,41,132,105,3,3,106,128,132,121,95,16,0,25,107,106,4,1,132,4,0,1,136,0,0,134,108,0,0,24,55,6,0,107,132,136,0,25,109,108,18,42,136,109,0,1,132,1,0,1,131,0,0,134,110,0,0,24,55,6,0,136,132,131,0,0,3,110,0,119,0,8,0,42,131,106,0,1,132,1,0,1,136,0,0,134,112,0,0,24,55,6,0,131,132,136,0,0,3,112,0,41,136,3,24,42,136,136,24,0,113,136,0,0,122,113,0,134,114,0,0,232,58,6,0,113,0,0,0,33,115,114,0,0,116,122,0,33,117,116,43,19,136,115,117,0,124,136,0,120,124,2,0,119,0,62,0,0,118,4,0,25,119,118,12,25,120,119,4,1,136,4,0,1,132,0,0,134,121,0,0,24,55,6,0,120,136,132,0,0,7,4,0,25,8,7,12,1,132,4,0,1,136,0,0,134,9,0,0,24,55,6,0,8,132,136,0,134,10,0,0,228,47,4,0,121,9,0,0,19,136,10,129,0,11,136,0,32,12,11,0,42,136,130,0,1,132,1,0,1,131,0,0,134,13,0,0,24,55,6,0,136,132,131,0,41,131,13,24,42,131,131,24,33,14,131,0,20,131,12,14,0,125,131,0,120,125,239,254,0,15,4,0,25,16,15,12,25,18,16,4,1,131,4,0,1,132,0,0,134,19,0,0,24,55,6,0,18,131,132,0,0,20,4,0,25,21,20,12,1,132,4,0,1,131,0,0,134,22,0,0,24,55,6,0,21,132,131,0,0,23,4,0,25,24,23,8,1,131,4,0,1,132,0,0,134,25,0,0,24,55,6,0,24,131,132,0,134,132,0,0,208,39,6,0,19,22,25,0,134,132,0,0,224,106,6,0,119,0,211,254,137,127,0,0,139,0,0,0,140,9,144,0,0,0,0,0,2,140,0,0,255,0,0,0,2,141,0,0,255,255,0,0,1,138,0,0,136,142,0,0,0,139,142,0,136,142,0,0,25,142,142,96,137,142,0,0,130,142,0,0,136,143,0,0,49,142,142,143,120,31,3,0,135,142,0,0,0,10,0,0,0,38,1,0,0,49,2,0,0,60,3,0,0,71,4,0,0,82,5,0,0,93,6,0,0,104,7,0,0,115,8,0,1,128,0,0,0,11,82,0,0,22,60,0,4,30,11,22,0,135,30,0,0,31,71,0,0,32,49,0,4,33,31,32,0,137,33,0,0,34,10,0,1,142,0,0,14,35,34,142,0,36,38,0,1,142,0,0,14,37,36,142,19,142,35,37,0,132,142,0,120,132,5,0,1,9,255,255,0,29,9,0,137,139,0,0,139,29,0,0,0,39,38,0,25,40,39,48,1,142,4,0], eb + 194560);
  HEAPU8.set([1,143,0,0,134,41,0,0,24,55,6,0,40,142,143,0,0,131,41,0,0,42,38,0,25,43,42,52,1,143,4,0,1,142,0,0,134,44,0,0,24,55,6,0,43,143,142,0,0,130,44,0,1,136,0,0,0,45,136,0,0,46,93,0,15,47,45,46,120,47,2,0,119,0,11,0,0,48,131,0,25,50,48,4,0,131,50,0,0,51,130,0,25,52,51,4,0,130,52,0,0,53,136,0,25,54,53,1,0,136,54,0,119,0,242,255,1,129,0,0,0,55,129,0,0,56,137,0,15,57,55,56,120,57,2,0,119,0,174,0,0,58,129,0,0,59,49,0,3,61,58,59,0,62,10,0,25,63,62,44,1,142,4,0,1,143,0,0,134,64,0,0,24,55,6,0,63,142,143,0,41,143,61,2,3,65,64,143,1,143,4,0,1,142,0,0,134,66,0,0,24,55,6,0,65,143,142,0,0,67,60,0,41,142,67,2,3,68,66,142,0,133,68,0,0,69,129,0,0,70,93,0,3,72,69,70,0,73,38,0,25,74,73,44,1,142,4,0,1,143,0,0,134,75,0,0,24,55,6,0,74,142,143,0,41,143,72,2,3,76,75,143,1,143,4,0,1,142,0,0,134,77,0,0,24,55,6,0,76,143,142,0,0,78,104,0,41,142,78,2,3,79,77,142,0,134,79,0,1,127,255,255,1,126,0,0,0,80,126,0,0,81,135,0,15,83,80,81,120,83,2,0,119,0,62,0,0,84,133,0,1,142,4,0,1,143,0,0,134,85,0,0,24,55,6,0,84,142,143,0,0,86,134,0,1,143,4,0,1,142,0,0,134,87,0,0,24,55,6,0,86,143,142,0,14,88,85,87,121,88,38,0,0,89,133,0,1,142,4,0,1,143,0,0,134,90,0,0,24,55,6,0,89,142,143,0,19,143,90,141,0,91,143,0,32,92,91,32,121,92,6,0,0,94,115,0,19,143,94,140,0,95,143,0,33,96,95,0,120,96,23,0,0,97,133,0,1,143,4,0,1,142,0,0,134,98,0,0,24,55,6,0,97,143,142,0,0,99,134,0,1,143,4,0,134,142,0,0,116,78,6,0,99,98,143,0,0,100,127,0,32,101,100,255,121,101,5,0,0,102,126,0,0,103,104,0,3,105,102,103,0,127,105,0,0,106,126,0,0,107,104,0,3,108,106,107,0,128,108,0,0,109,133,0,25,110,109,4,0,133,110,0,0,111,134,0,25,112,111,4,0,134,112,0,0,113,126,0,25,114,113,1,0,126,114,0,119,0,191,255,0,116,131,0,1,142,4,0,1,143,0,0,134,117,0,0,24,55,6,0,116,142,143,0,32,118,117,255,0,119,127,0,121,118,13,0,0,120,131,0,1,142,4,0,134,143,0,0,116,78,6,0,120,119,142,0,0,121,128,0,0,122,130,0,1,142,4,0,134,143,0,0,116,78,6,0,122,121,142,0,119,0,33,0,33,123,119,255,121,123,31,0,0,124,127,0,0,125,131,0,1,143,4,0,1,142,0,0,134,12,0,0,24,55,6,0,125,143,142,0,15,13,124,12,121,13,7,0,0,14,127,0,0,15,131,0,1,143,4,0,134,142,0,0,116,78,6,0,15,14,143,0,0,16,128,0,0,17,130,0,1,142,4,0,1,143,0,0,134,18,0,0,24,55,6,0,17,142,143,0,15,19,18,16,121,19,7,0,0,20,128,0,0,21,130,0,1,142,4,0,134,143,0,0,116,78,6,0,21,20,142,0,0,23,131,0,25,24,23,4,0,131,24,0,0,25,130,0,25,26,25,4,0,130,26,0,0,27,129,0,25,28,27,1,0,129,28,0,119,0,79,255,1,9,0,0,0,29,9,0,137,139,0,0,139,29,0,0,140,0,134,0,0,0,0,0,2,128,0,0,166,32,1,0,2,129,0,0,255,0,0,0,1,126,0,0,136,130,0,0,0,127,130,0,136,130,0,0,25,130,130,32,137,130,0,0,130,130,0,0,136,131,0,0,49,130,130,131,148,35,3,0,135,130,0,0,1,124,0,0,2,123,0,0,166,32,1,0,0,0,123,0,2,130,0,0,62,33,1,0,18,1,0,130,120,1,2,0,119,0,32,0,1,122,0,0,0,33,122,0,34,44,33,9,120,44,2,0,119,0,15,0,0,55,122,0,0,66,123,0,25,77,66,9,3,88,77,55,42,131,88,0,1,132,0,0,1,133,1,0,134,130,0,0,116,78,6,0,131,132,133,0,0,99,122,0,25,110,99,1,0,122,110,0,119,0,239,255,0,2,123,0,25,13,2,18,42,133,13,0,1,132,0,0,1,131,1,0,134,130,0,0,116,78,6,0,133,132,131,0,0,24,123,0,25,26,24,19,0,123,26,0,119,0,220,255,1,125,1,0,1,130,9,0,134,27,0,0,20,36,6,0,130,0,0,0,27,130,27,19,3,28,128,130,0,123,28,0,0,29,123,0,25,30,29,18,42,131,30,0,1,132,1,0,1,133,1,0,134,130,0,0,116,78,6,0,131,132,133,0,1,122,0,0,1,121,0,0,0,31,121,0,34,32,31,9,120,32,2,0,119,0,44,0,0,34,121,0,0,35,123,0,3,36,35,34,42,130,36,0,1,133,1,0,1,132,0,0,134,37,0,0,24,55,6,0,130,133,132,0,19,132,37,129,0,38,132,0,33,39,38,0,121,39,27,0,0,40,121,0,27,132,40,19,3,41,128,132,25,42,41,18,42,132,42,0,1,133,1,0,1,130,0,0,134,43,0,0,24,55,6,0,132,133,130,0,41,130,43,24,42,130,130,24,33,45,130,0,120,45,13,0,0,46,122,0,25,47,46,1,0,122,47,0,134,48,0,0,20,36,6,0,47,0,0,0,32,49,48,0,121,49,5,0,0,50,121,0,27,130,50,19,3,51,128,130,0,124,51,0,0,52,121,0,25,53,52,1,0,121,53,0,119,0,210,255,0,54,122,0,32,56,54,0,121,56,23,0,1,130,9,0,134,57,0,0,20,36,6,0,130,0,0,0,27,130,57,19,3,58,128,130,0,123,58,0,0,59,123,0,25,60,59,18,42,130,60,0,1,133,1,0,1,132,0,0,134,61,0,0,24,55,6,0,130,133,132,0,41,132,61,24,42,132,132,24,33,62,132,0,40,132,62,1,0,63,132,0,120,63,236,255,119,0,51,0,0,64,124,0,25,65,64,18,42,133,65,0,1,130,1,0,1,131,1,0,134,132,0,0,116,78,6,0,133,130,131,0,0,67,123,0,0,68,67,0,4,69,68,128,28,132,69,19,38,132,132,255,0,70,132,0,0,121,70,0,0,71,124,0,0,72,71,0,4,73,72,128,28,132,73,19,38,132,132,255,0,74,132,0,0,122,74,0,0,75,121,0,0,76,122,0,134,132,0,0,224,110,1,0,75,76,0,0,0,78,122,0,0,79,123,0,25,80,79,9,3,81,80,78,42,131,81,0,1,130,1,0,1,133,1,0,134,132,0,0,116,78,6,0,131,130,133,0,0,82,121,0,0,83,124,0,25,84,83,9,3,85,84,82,42,133,85,0,1,130,1,0,1,131,1,0,134,132,0,0,116,78,6,0,133,130,131,0,0,86,125,0,25,87,86,1,0,125,87,0,0,89,125,0,34,90,89,9,120,90,130,255,119,0,1,0,1,132,5,0,134,91,0,0,20,36,6,0,132,0,0,0,0,125,91,0,0,92,125,0,1,132,0,0,15,93,132,92,120,93,2,0,119,0,103,0,1,132,9,0,134,94,0,0,20,36,6,0,132,0,0,0,27,132,94,19,3,95,128,132,0,123,95,0,1,122,0,0,1,121,0,0,0,96,121,0,34,97,96,9,120,97,2,0,119,0,44,0,0,98,121,0,0,100,123,0,3,101,100,98,42,132,101,0,1,131,1,0,1,130,0,0,134,102,0,0,24,55,6,0,132,131,130,0,19,130,102,129,0,103,130,0,33,104,103,0,121,104,27,0,0,105,121,0,0,106,123,0,25,107,106,9,3,108,107,105,42,130,108,0,1,131,1,0,1,132,0,0,134,109,0,0,24,55,6,0,130,131,132,0,41,132,109,24,42,132,132,24,33,111,132,0,120,111,13,0,0,112,122,0,25,113,112,1,0,122,113,0,134,114,0,0,20,36,6,0,113,0,0,0,32,115,114,0,121,115,5,0,0,116,121,0,27,132,116,19,3,117,128,132,0,124,117,0,0,118,121,0,25,119,118,1,0,121,119,0,119,0,210,255,0,120,122,0,33,3,120,0,121,3,40,0,0,4,123,0,0,5,4,0,4,6,5,128,28,132,6,19,38,132,132,255,0,7,132,0,0,121,7,0,0,8,124,0,0,9,8,0,4,10,9,128,28,132,10,19,38,132,132,255,0,11,132,0,0,122,11,0,0,12,121,0,0,14,122,0,134,132,0,0,224,110,1,0,12,14,0,0,0,15,122,0,0,16,123,0,25,17,16,9,3,18,17,15,42,131,18,0,1,130,1,0,1,133,1,0,134,132,0,0,116,78,6,0,131,130,133,0,0,19,121,0,0,20,124,0,25,21,20,9,3,22,21,19,42,133,22,0,1,130,1,0,1,131,1,0,134,132,0,0,116,78,6,0,133,130,131,0,0,23,125,0,26,25,23,1,0,125,25,0,119,0,150,255,134,132,0,0,148,49,5,0,137,127,0,0,139,0,0,0,140,0,106,0,0,0,0,0,1,101,0,0,136,103,0,0,0,102,103,0,136,103,0,0,25,103,103,64,137,103,0,0,130,103,0,0,136,104,0,0,49,103,103,104,120,40,3,0,135,103,0,0,25,100,102,40,25,99,102,32,25,98,102,24,25,97,102,16,25,96,102,8,0,95,102,0,1,94,0,0,1,90,0,0,2,103,0,0,49,206,0,0,1,104,255,255,134,0,0,0,52,196,3,0,103,104,0,0,0,93,0,0,0,1,93,0,1,104,0,0,13,12,1,104,121,12,3,0,137,102,0,0,139,0,0,0,0,23,93,0,25,34,23,8,1,104,4,0,1,103,0,0,134,45,0,0,24,55,6,0,34,104,103,0,1,104,33,0,1,103,31,0,138,45,104,103,164,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,24,42,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,112,41,3,0,140,42,3,0,112,41,3,0,112,41,3,0,172,42,3,0,112,41,3,0,32,43,3,0,0,47,93,0,25,48,47,76,0,91,48,0,1,92,0,0,0,49,93,0,25,50,49,76,1,103,4,0,1,104,0,0,134,51,0,0,24,55,6,0,50,103,104,0,0,90,51,0,119,0,125,0,0,7,93,0,25,8,7,52,1,104,4,0,1,103,0,0,134,9,0,0,24,55,6,0,8,104,103,0,1,103,204,16,27,104,9,20,3,10,103,104,0,94,10,0,0,11,93,0,25,13,11,52,1,104,4,0,1,103,0,0,134,14,0,0,24,55,6,0,13,104,103,0,1,103,96,25,41,104,14,2,3,15,103,104,1,104,4,0,1,103,0,0,134,16,0,0,24,55,6,0,15,104,103,0,0,90,16,0,1,101,7,0,119,0,96,0,0,27,93,0,25,28,27,52,1,104,4,0,1,103,0,0,134,29,0,0,24,55,6,0,28,104,103,0,1,103,44,21,27,104,29,20,3,30,103,104,0,94,30,0,0,31,93,0,25,32,31,52,1,104,4,0,1,103,0,0,134,33,0,0,24,55,6,0,32,104,103,0,1,103,24,26,41,104,33,2,3,35,103,104,1,104,4,0,1,103,0,0,134,36,0,0,24,55,6,0,35,104,103,0,0,90,36,0,1,101,7,0,119,0,67,0,2,104,0,0,54,206,0,0,134,103,0,0,144,18,6,0,104,95,0,0,137,102,0,0,139,0,0,0,119,0,59,0,0,56,93,0,25,67,56,52,1,103,4,0,1,104,0,0,134,78,0,0,24,55,6,0,67,103,104,0,1,104,228,17,27,103,78,20,3,89,104,103,0,94,89,0,0,2,93,0,25,3,2,52,1,103,4,0,1,104,0,0,134,4,0,0,24,55,6,0,3,103,104,0,1,104,152,25,41,103,4,2,3,5,104,103,1,103,4,0,1,104,0,0,134,6,0,0,24,55,6,0,5,103,104,0,0,90,6,0,1,101,7,0,119,0,30,0,0,17,93,0,25,18,17,52,1,103,4,0,1,104,0,0,134,19,0,0,24,55,6,0,18,103,104,0,1,104,252,18,27,103,19,20,3,20,104,103,0,94,20,0,0,21,93,0,25,22,21,52,1,103,4,0,1,104,0,0,134,24,0,0,24,55,6,0,22,103,104,0,1,104,208,25,41,103,24,2,3,25,104,103,1,103,4,0,1,104,0,0,134,26,0,0,24,55,6,0,25,103,104,0,0,90,26,0,1,101,7,0,119,0,1,0,32,104,101,7,121,104,23,0,0,37,94,0,25,38,37,16,0,92,38,0,0,39,94,0,25,40,39,12,0,91,40,0,0,41,91,0,1,104,4,0,1,103,0,0,134,42,0,0,24,55,6,0,41,104,103,0,1,103,0,0,14,43,42,103,121,43,8,0,0,44,91,0,1,103,4,0,1,104,0,0,134,46,0,0,24,55,6,0,44,103,104,0,0,90,46,0,0,52,92,0,1,104,0,0,14,53,52,104,121,53,20,0,0,54,92,0,42,104,54,0,1,103,1,0,1,105,0,0,134,55,0,0,24,55,6,0,104,103,105,0,1,105,255,0,19,105,55,105,0,57,105,0,33,58,57,0,121,58,8,0,2,103,0,0,83,206,0,0,134,105,0,0,144,18,6,0,103,96,0,0,137,102,0,0,139,0,0,0,0,59,90,0,1,105,0,0,14,60,59,105,121,60,37,0,0,61,90,0,0,62,91,0,1,105,4,0,1,103,0,0,134,63,0,0,24,55,6,0,62,105,103,0,13,64,61,63,121,64,28,0,2,103,0,0,5,209,0,0,42,103,103,0,1,105,1,0,1,104,0,0,134,65,0,0,24,55,6,0,103,105,104,0,41,104,65,24,42,104,104,24,33,66,104,0,120,66,6,0,2,105,0,0,116,206,0,0,134,104,0,0,112,85,6,0,105,97,0,0,0,68,90,0,1,105,4,0,134,104,0,0,116,78,6,0,98,68,105,0,2,105,0,0,121,206,0,0,134,104,0,0,144,18,6,0,105,98,0,0,2,104,0,0,5,209,0,0,42,104,104,0,1,105,1,0,1,103,0,0,134,69,0,0,24,55,6,0,104,105,103,0,41,103,69,24,42,103,103,24,33,70,103,0,121,70,7,0,2,105,0,0,224,17,1,0,134,103,0,0,144,18,6,0,105,99,0,0,119,0,6,0,2,105,0,0,234,17,1,0,134,103,0,0,144,18,6,0,105,100,0,0,0,71,90,0,1,103,0,0,13,72,71,103,121,72,8,0,2,105,0,0,42,225,0,0,2,104,0,0,166,51,1,0,135,103,24,0,105,104,0,0,119,0,6,0,0,73,90,0,2,104,0,0,42,225,0,0,135,103,24,0,104,73,0,0,2,103,0,0,68,162,0,0,1,104,4,0,1,105,0,0,134,74,0,0,24,55,6,0,103,104,105,0,2,105,0,0,42,225,0,0,134,75,0,0,12,60,3,0,105,74,0,0,32,76,75,0,120,76,3,0,137,102,0,0,139,0,0,0,0,77,91,0,1,105,4,0,1,104,0,0,134,79,0,0,24,55,6,0,77,105,104,0,1,104,0,0,14,80,79,104,121,80,9,0,0,81,91,0,1,104,4,0,1,105,0,0,134,82,0,0,24,55,6,0,81,104,105,0,135,105,6,0,82,0,0,0,2,105,0,0,42,225,0,0,135,83,22,0,105,0,0,0,25,84,83,1,135,85,5,0,84,0,0,0,0,86,91,0,1,104,4,0,134,105,0,0,116,78,6,0,86,85,104,0,0,87,91,0,1,105,4,0,1,104,0,0,134,88,0,0,24,55,6,0,87,105,104,0,2,105,0,0,42,225,0,0,135,104,24,0,88,105,0,0,137,102,0,0,139,0,0,0,140,2,116,0,0,0,0,0,1,108,0,0,136,110,0,0,0,109,110,0,136,110,0,0,25,110,110,64,137,110,0,0,130,110,0,0,136,111,0,0,49,110,110,111,164,46,3,0,135,110,0,0,25,107,109,32,25,104,109,16,0,2,0,0,0,3,1,0,2,110,0,0,60,162,0,0,1,111,4,0,1,112,0,0,134,15,0,0,24,55,6,0,110,111,112,0,25,26,15,7,42,112,26,0,1,111,1,0,1,110,0,0,134,37,0,0,24,55,6,0,112,111,110,0,41,110,37,24,42,110,110,24,33,48,110,0,121,48,3,0,137,109,0,0,139,0,0,0,2,110,0,0,60,162,0,0,1,111,4,0,1,112,0,0,134,59,0,0,24,55,6,0,110,111,112,0,25,70,59,16,1,112,4,0,1,111,0,0,134,81,0,0,24,55,6,0,70,112,111,0,0,106,81,0,2,111,0,0,60,162,0,0,1,112,4,0,1,110,0,0,134,92,0,0,24,55,6,0,111,112,110,0,25,4,92,20,1,110,4,0,1,112,0,0,134,6,0,0,24,55,6,0,4,110,112,0,0,105,6,0,0,7,106,0,0,8,105,0,0,9,106,0,2,112,0,0,64,162,0,0,1,110,4,0,1,111,0,0,134,10,0,0,24,55,6,0,112,110,111,0,25,11,10,44,1,111,4,0,1,110,0,0,134,12,0,0,24,55,6,0,11,111,110,0,41,110,9,2,3,13,12,110,1,110,4,0,1,111,0,0,134,14,0,0,24,55,6,0,13,110,111,0,0,16,105,0,41,111,16,2,3,17,14,111,1,110,1,0,134,111,0,0,180,207,2,0,7,8,110,17,2,111,0,0,60,162,0,0,1,110,4,0,1,112,0,0,134,18,0,0,24,55,6,0,111,110,112,0,25,19,18,24,1,112,4,0,1,110,0,0,134,20,0,0,24,55,6,0,19,112,110,0,33,21,20,0,120,21,3,0,137,109,0,0,139,0,0,0,0,22,3,0,0,23,2,0,2,110,0,0,64,162,0,0,1,112,4,0,1,111,0,0,134,24,0,0,24,55,6,0,110,112,111,0,25,25,24,44,1,111,4,0,1,112,0,0,134,27,0,0,24,55,6,0,25,111,112,0,41,112,23,2,3,28,27,112,1,112,4,0,1,111,0,0,134,29,0,0,24,55,6,0,28,112,111,0,41,111,22,2,3,30,29,111,1,111,4,0,1,112,0,0,134,31,0,0,24,55,6,0,30,111,112,0,2,112,0,0,0,0,32,0,21,112,31,112,0,32,112,0,0,103,32,0,0,33,103,0,134,112,0,0,216,215,3,0,33,0,0,0,0,34,103,0,2,112,0,0,0,0,1,0,19,112,34,112,0,35,112,0,33,36,35,0,121,36,21,0,0,38,103,0,2,112,0,0,128,255,0,0,19,112,38,112,0,39,112,0,33,40,39,0,120,40,14,0,0,41,103,0,38,112,41,127,0,42,112,0,2,112,0,0,168,162,0,0,41,111,42,2,3,43,112,111,1,111,4,0,1,112,0,0,134,44,0,0,24,55,6,0,43,111,112,0,0,103,44,0,2,112,0,0,60,162,0,0,1,111,4,0,1,110,0,0,134,45,0,0,24,55,6,0,112,111,110,0,25,46,45,24,1,110,4,0,1,111,0,0,134,47,0,0,24,55,6,0,46,110,111,0,32,49,47,1,2,111,0,0,212,164,0,0,1,110,4,0,1,112,0,0,134,50,0,0,24,55,6,0,111,110,112,0,42,112,50,2,0,51,112,0,125,52,49,51,50,0,0,0,25,53,107,12,1,110,4,0,134,112,0,0,116,78,6,0,53,52,110,0,2,112,0,0,216,164,0,0,1,110,4,0,1,111,0,0,134,54,0,0,24,55,6,0,112,110,111,0,25,55,107,8,1,110,4,0,134,111,0,0,116,78,6,0,55,54,110,0,0,56,2,0,25,57,56,1,2,111,0,0,212,164,0,0,1,110,4,0,1,112,0,0,134,58,0,0,24,55,6,0,111,110,112,0,5,60,57,58,25,61,107,12,1,112,4,0,1,110,0,0,134,62,0,0,24,55,6,0,61,112,110,0,4,63,60,62,2,110,0,0,204,164,0,0,1,112,4,0,1,111,0,0,134,64,0,0,24,55,6,0,110,112,111,0,3,65,63,64,25,66,104,4,1,112,4,0,134,111,0,0,116,78,6,0,66,65,112,0,0,67,3,0,2,111,0,0,216,164,0,0,1,112,4,0,1,110,0,0,134,68,0,0,24,55,6,0,111,112,110,0,5,69,67,68,2,110,0,0,208,164,0,0,1,112,4,0,1,111,0,0,134,71,0,0,24,55,6,0,110,112,111,0,3,72,69,71,1,112,4,0,134,111,0,0,116,78,6,0,104,72,112,0,0,73,103,0,1,111,255,0,19,111,73,111,0,74,111,0,31,111,74,32,38,111,111,255,0,75,111,0,2,111,0,0,216,164,0,0,1,112,4,0,1,110,0,0,134,76,0,0,24,55,6,0,111,112,110,0,5,77,75,76,1,112,4,0,134,110,0,0,116,78,6,0,107,77,112,0,0,78,103,0,1,110,255,0,19,110,78,110,0,79,110,0,29,110,79,32,38,110,110,255,0,80,110,0,2,110,0,0,212,164,0,0,1,112,4,0,1,111,0,0,134,82,0,0,24,55,6,0,110,112,111,0,5,83,80,82,2,111,0,0,212,164,0,0,1,112,4,0,1,110,0,0,134,84,0,0,24,55,6,0,111,112,110,0,25,85,107,12,1,110,4,0,1,112,0,0,134,86,0,0,24,55,6,0,85,110,112,0,4,87,84,86,3,88,83,87,25,89,107,4,1,110,4,0,134,112,0,0,116,78,6,0,89,88,110,0,2,112,0,0,180,164,0,0,1,110,4,0,1,111,0,0,134,90,0,0,24,55,6,0,112,110,111,0,2,111,0,0,176,164,0,0,1,110,4,0,1,112,0,0,134,91,0,0,24,55,6,0,111,110,112,0,135,112,33,0,90,107,91,104,0,93,106,0,0,94,2,0,14,95,93,94,120,95,7,0,0,96,105,0,0,97,3,0,14,98,96,97,120,98,3,0,137,109,0,0,139,0,0,0,2,112,0,0,88,177,0,0,1,110,4,0,1,111,0,0,134,99,0,0,24,55,6,0,112,110,111,0,1,111,200,0,13,100,99,111,121,100,3,0,134,111,0,0,216,46,6,0,2,111,0,0,88,177,0,0,1,110,4,0,1,112,0,0,134,101,0,0,24,55,6,0,111,110,112,0,25,102,101,1,2,110,0,0,88,177,0,0,1,111,4,0,134,112,0,0,116,78,6,0,110,102,111,0,2,112,0,0,92,177,0,0,41,111,101,4,3,5,112,111,1,110,4,0,1,113,0,0,134,112,0,0,24,55,6,0,104,110,113,0,1,113,4,0,134,111,0,0,116,78,6,0,5,112,113,0,25,113,5,4,25,110,104,4,1,114,4,0,1,115,0,0,134,112,0,0,24,55,6,0,110,114,115,0,1,115,4,0,134,111,0,0,116,78,6,0,113,112,115,0,25,115,5,8,25,113,104,8,1,114,4,0,1,110,0,0,134,112,0,0,24,55,6,0,113,114,110,0,1,110,4,0,134,111,0,0,116,78,6,0,115,112,110,0,25,110,5,12,25,115,104,12,1,114,4,0,1,113,0,0,134,112,0,0,24,55,6,0,115,114,113,0,1,113,4,0,134,111,0,0,116,78,6,0,110,112,113,0,137,109,0,0,139,0,0,0,140,0,113,0,0,0,0,0,2,103,0,0,184,26,0,0,2,104,0,0,192,26,0,0,2,105,0,0,188,26,0,0,2,106,0,0,255,0,0,0,2,107,0,0,144,26,0,0,1,101,0,0,136,108,0,0,0,102,108,0,136,108,0,0,25,108,108,16,137,108,0,0,130,108,0,0,136,109,0,0,49,108,108,109,108,53,3,0,135,108,0,0,1,108,232,106,1,109,2,0,1,110,0,0,134,1,0,0,24,55,6,0,108,109,110,0,41,110,1,16,42,110,110,16,0,2,110,0,1,110,255,254,19,110,2,110,0,13,110,0,2,110,0,0,255,255,0,0,19,110,13,110,0,24,110,0,1,109,232,106,1,108,2,0,134,110,0,0,116,78,6,0,109,24,108,0,1,110,200,2,1,108,4,0,1,109,0,0,134,35,0,0,24,55,6,0,110,108,109,0,1,109,152,26,1,108,4,0,1,110,0,0,134,46,0,0,24,55,6,0,109,108,110,0,15,57,46,35,121,57,12,0,1,110,200,2,1,108,4,0,1,109,0,0,134,68,0,0,24,55,6,0,110,108,109,0,1,108,152,26,1,110,4,0,134,109,0,0,116,78,6,0,108,68,110,0,1,98,192,26,0,79,98,0,1,90,192,106,16,3,79,90,120,3,2,0,119,0,27,0,0,4,98,0,42,110,4,0,1,108,32,0,1,111,1,0,134,109,0,0,116,78,6,0,110,108,111,0,0,5,98,0,25,6,5,1,42,111,6,0,1,108,16,0,1,110,1,0,134,109,0,0,116,78,6,0,111,108,110,0,0,7,98,0,25,8,7,4,1,110,0,0,1,108,4,0,134,109,0,0,116,78,6,0,8,110,108,0,0,9,98,0,25,10,9,8,0,98,10,0,119,0,226,255,134,109,0,0,32,107,6,0,1,109,116,3,1,108,4,0,1,110,0,0,134,11,0,0,24,55,6,0,109,108,110,0,0,100,11,0,0,12,100,0,1,110,0,0,14,14,12,110,120,14,2,0,119,0,14,0,0,15,100,0,25,16,15,72,134,110,0,0,60,41,6,0,16,0,0,0,0,17,100,0,1,110,4,0,1,108,0,0,134,18,0,0,24,55,6,0,17,110,108,0,0,100,18,0,119,0,239,255,1,110,116,3,134,108,0,0,60,41,6,0,110,0,0,0,1,110,112,3,134,108,0,0,60,41,6,0,110,0,0,0,134,108,0,0,20,22,2,0,134,108,0,0,80,35,3,0,1,108,208,2,1,110,4,0,1,109,0,0,134,19,0,0,24,55,6,0,108,110,109,0,25,20,19,1,1,110,208,2,1,108,4,0,134,109,0,0,116,78,6,0,110,20,108,0,134,109,0,0,208,57,4,0,1,109,10,0,134,21,0,0,20,36,6,0,109,0,0,0,1,109,200,2,1,108,4,0,1,110,0,0,134,22,0,0,24,55,6,0,109,108,110,0,15,23,21,22,121,23,137,0,1,110,200,2,1,108,4,0,1,109,0,0,134,25,0,0,24,55,6,0,110,108,109,0,28,109,25,4,38,109,109,255,0,26,109,0,134,27,0,0,20,36,6,0,26,0,0,0,25,28,27,1,1,108,4,0,134,109,0,0,116,78,6,0,107,28,108,0,1,109,4,0,1,108,0,0,134,29,0,0,24,55,6,0,107,109,108,0,1,108,10,0,15,30,108,29,1,108,10,0,125,0,30,108,28,0,0,0,1,109,4,0,134,108,0,0,116,78,6,0,107,0,109,0,1,108,4,0,1,109,0,0,134,31,0,0,24,55,6,0,107,108,109,0,0,97,31,0,0,32,97,0,26,33,32,1,0,97,33,0,33,34,32,0,120,34,2,0,119,0,94,0,1,108,0,0,1,110,0,0,1,111,0,0,134,109,0,0,12,35,4,0,108,103,110,111,1,109,4,0,1,111,0,0,134,36,0,0,24,55,6,0,103,109,111,0,41,111,36,5,0,37,111,0,1,111,4,0,1,109,0,0,134,38,0,0,24,55,6,0,105,111,109,0,3,39,37,38,41,109,39,3,3,40,104,109,42,109,40,0,1,111,1,0,1,110,0,0,134,41,0,0,24,55,6,0,109,111,110,0,41,110,41,24,42,110,110,24,0,42,110,0,33,43,42,46,120,43,225,255,119,0,1,0,1,110,4,0,1,111,0,0,134,44,0,0,24,55,6,0,103,110,111,0,41,111,44,5,0,45,111,0,1,111,4,0,1,110,0,0,134,47,0,0,24,55,6,0,105,111,110,0,3,48,45,47,41,110,48,3,3,49,104,110,25,50,49,1,0,99,50,0,0,51,99,0,42,110,51,0,1,111,1,0,1,109,0,0,134,52,0,0,24,55,6,0,110,111,109,0,41,109,52,24,42,109,109,24,0,53,109,0,38,109,53,239,0,54,109,0,19,109,54,106,0,55,109,0,42,111,51,0,1,110,1,0,134,109,0,0,116,78,6,0,111,55,110,0,1,109,8,0,134,56,0,0,20,36,6,0,109,0,0,0,0,58,99,0,42,109,58,0,1,110,1,0,1,111,0,0,134,59,0,0,24,55,6,0,109,110,111,0,41,111,59,24,42,111,111,24,0,60,111,0,20,111,60,56,0,61,111,0,19,111,61,106,0,62,111,0,42,110,58,0,1,109,1,0,134,111,0,0,116,78,6,0,110,62,109,0,119,0,158,255,1,109,0,0,1,110,0,0,1,108,0,0,134,111,0,0,12,35,4,0,109,103,110,108,1,111,4,0,1,108,0,0,134,63,0,0,24,55,6,0,103,111,108,0,41,108,63,5,0,64,108,0,1,108,4,0,1,111,0,0,134,65,0,0,24,55,6,0,105,108,111,0,3,66,64,65,41,111,66,3,3,67,104,111,42,108,67,0,1,110,37,0,1,109,1,0,134,111,0,0,116,78,6,0,108,110,109,0,2,109,0,0,40,217,0,0,42,109,109,0,1,110,0,0,1,108,1,0,134,111,0,0,116,78,6,0,109,110,108,0,1,111,116,3,1,108,4,0,1,110,0,0,134,69,0,0,24,55,6,0,111,108,110,0,0,100,69,0,0,70,100,0,1,110,0,0,14,71,70,110,120,71,2,0,119,0,20,0,0,72,100,0,25,73,72,8,134,74,0,0,248,24,4,0,73,0,0,0,0,75,100,0,25,76,75,68,1,108,4,0,134,110,0,0,116,78,6,0,76,74,108,0,0,77,100,0,1,110,4,0,1,108,0,0,134,78,0,0,24,55,6,0,77,110,108,0,0,100,78,0,119,0,233,255,1,110,0,0,1,111,216,106,1,109,0,0,1,112,1,0,134,108,0,0,12,35,4,0,110,111,109,112,1,112,216,106,134,108,0,0,204,169,3,0,112,0,0,0,1,108,220,106,1,112,4,0,1,109,0,0,134,80,0,0,24,55,6,0,108,112,109,0,1,109,216,106,1,112,4,0,1,108,0,0,134,81,0,0,24,55,6,0,109,112,108,0,1,112,64,0,134,108,0,0,208,39,6,0,80,81,112,0,1,108,232,106,1,112,2,0,1,109,0,0,134,82,0,0,24,55,6,0,108,112,109,0,41,109,82,16,42,109,109,16,0,83,109,0,1,109,0,64,19,109,83,109,0,84,109,0,33,85,84,0,38,109,85,1,0,86,109,0,19,109,86,106,0,87,109,0,41,109,87,24,42,109,109,24,33,88,109,0,121,88,5,0,1,112,0,0,134,109,0,0,212,119,4,0,112,0,0,0,1,109,232,106,1,112,2,0,1,108,0,0,134,89,0,0,24,55,6,0,109,112,108,0,41,108,89,16,42,108,108,16,0,91,108,0,1,108,0,8,19,108,91,108,0,92,108,0,33,93,92,0,38,108,93,1,0,94,108,0,19,108,94,106,0,95,108,0,41,108,95,24,42,108,108,24,33,96,108,0,120,96,3,0,137,102,0,0,139,0,0,0,134,108,0,0,132,191,3,0,137,102,0,0,139,0,0,0,140,2,124,0,0,0,0,0,2,117,0,0,222,21,1,0,2,118,0,0,34,213,0,0,2,119,0,0,68,162,0,0,1,115,0,0,136,120,0,0,0,116,120,0,136,120,0,0,25,120,120,48,137,120,0,0,130,120,0,0,136,121,0,0,49,120,120,121,88,60,3,0,135,120,0,0,0,114,116,0,0,3,0,0,0,20,1,0,0,31,3,0,0,110,31,0,0,42,20,0,134,53,0,0,76,79,6,0,42,0,0,0,0,112,53,0,0,64,20,0,134,75,0,0,168,75,6,0,64,0,0,0,0,111,75,0,0,86,20,0,134,120,0,0,124,212,4,0,86,0,0,0,2,113,0,0,222,21,1,0,134,97,0,0,24,71,6,0,0,108,97,0,41,120,97,24,42,120,120,24,0,4,120,0,33,11,4,10,120,11,2,0,119,0,178,0,0,12,108,0,41,120,12,24,42,120,120,24,0,13,120,0,33,14,13,13,120,14,2,0,119,0,171,0,0,15,108,0,41,120,15,24,42,120,120,24,0,16,120,0,33,17,16,27,120,17,2,0,119,0,164,0,0,18,108,0,41,120,18,24,42,120,120,24,0,19,120,0,32,21,19,255,120,21,149,0,0,22,108,0,41,120,22,24,42,120,120,24,0,23,120,0,134,24,0,0,220,118,6,0,41,120,24,24,42,120,120,24,0,25,120,0,13,26,23,25,121,26,37,0,0,27,113,0,16,28,117,27,120,28,2,0,119,0,134,0,0,29,113,0,26,30,29,1,0,113,30,0,0,32,113,0,42,120,32,0,1,121,1,0,1,122,0,0,134,33,0,0,24,55,6,0,120,121,122,0,41,122,33,24,42,122,122,24,0,34,122,0,134,35,0,0,160,236,5,0,34,0,0,0,135,36,22,0,35,0,0,0,0,109,36,0,0,37,109,0,33,38,37,0,120,38,2,0,119,0,111,0,0,39,20,0,1,121,8,0,134,122,0,0,64,245,1,0,39,121,0,0,0,40,109,0,26,41,40,1,0,109,41,0,119,0,244,255,0,43,108,0,41,122,43,24,42,122,122,24,0,44,122,0,134,45,0,0,192,118,6,0,41,122,45,24,42,122,122,24,0,46,122,0,13,47,44,46,121,47,10,0,2,113,0,0,222,21,1,0,0,48,20,0,0,49,112,0,0,50,111,0,134,122,0,0,164,140,5,0,48,49,50,0,119,0,82,0,0,51,113,0,13,52,51,117,121,52,33,0,0,54,108,0,41,122,54,24,42,122,122,24,0,55,122,0,32,56,55,45,121,56,9,0,0,57,20,0,1,122,4,0,1,121,0,0,134,58,0,0,24,55,6,0,119,122,121,0,14,59,57,58,120,59,74,0,0,60,108,0,41,121,60,24,42,121,121,24,0,61,121,0,32,62,61,126,121,62,13,0,135,121,24,0,117,118,0,0,0,63,20,0,134,121,0,0,144,86,6,0,63,118,0,0,135,65,22,0,118,0,0,0,0,66,113,0,3,67,66,65,0,113,67,0,119,0,47,0,0,68,113,0,2,121,0,0,16,22,1,0,18,69,121,68,120,69,38,0,0,70,108,0,41,121,70,24,42,121,121,24,0,71,121,0,134,72,0,0,228,105,6,0,71,0,0,0,33,73,72,0,120,73,8,0,0,74,108,0,41,121,74,24,42,121,121,24,0,76,121,0,32,77,76,32,120,77,2,0,119,0,22,0,0,78,108,0,0,79,113,0,25,80,79,1,0,113,80,0,42,122,79,0,1,120,1,0,134,121,0,0,116,78,6,0,122,78,120,0,0,81,20,0,0,82,108,0,41,121,82,24,42,121,121,24,0,83,121,0,134,84,0,0,160,236,5,0,83,0,0,0,134,121,0,0,144,86,6,0,81,84,0,0,119,0,5,0,1,120,7,0,134,121,0,0,20,105,6,0,120,0,0,0,0,85,20,0,134,121,0,0,156,81,4,0,85,0,0,0,0,87,20,0,134,121,0,0,124,212,4,0,87,0,0,0,119,0,71,255,0,88,113,0,42,120,88,0,1,122,0,0,1,123,1,0,134,121,0,0,116,78,6,0,120,122,123,0,0,89,113,0,16,90,117,89,121,90,7,0,0,91,110,0,135,92,22,0,117,0,0,0,134,121,0,0,208,124,5,0,91,117,92,0,0,93,20,0,0,94,112,0,0,95,111,0,0,96,110,0,1,123,4,0,134,121,0,0,116,78,6,0,114,96,123,0,2,123,0,0,218,21,1,0,134,121,0,0,48,255,5,0,93,94,95,123,114,0,0,0,0,98,20,0,134,121,0,0,124,212,4,0,98,0,0,0,0,99,20,0,1,121,4,0,1,123,0,0,134,100,0,0,24,55,6,0,119,121,123,0,13,101,99,100,121,101,16,0,0,102,113,0,0,103,102,0,4,104,103,117,1,123,204,2,1,121,4,0,1,122,0,0,134,105,0,0,24,55,6,0,123,121,122,0,3,106,105,104,1,121,204,2,1,123,4,0,134,122,0,0,116,78,6,0,121,106,123,0,0,107,108,0,41,122,107,24,42,122,122,24,0,5,122,0,32,6,5,45,121,6,5,0,1,2,2,0,0,10,2,0,137,116,0,0,139,10,0,0,0,7,108,0,41,122,7,24,42,122,122,24,0,8,122,0,32,9,8,27,121,9,6,0,1,2,1,0,0,10,2,0,137,116,0,0,139,10,0,0,119,0,5,0,1,2,0,0,0,10,2,0,137,116,0,0,139,10,0,0,1,122,0,0,139,122,0,0,140,3,117,0,0,0,0,0,1,111,0,0,136,113,0,0,0,112,113,0,136,113,0,0,25,113,113,32,137,113,0,0,130,113,0,0,136,114,0,0,49,113,113,114,24,65,3,0,135,113,0,0,25,107,112,4,0,110,112,0,0,4,0,0,0,19,1,0,0,30,2,0,1,108,0,0,1,114,0,0,1,115,4,0,134,113,0,0,116,78,6,0,107,114,115,0,1,115,0,0,1,114,4,0,134,113,0,0,116,78,6,0,110,115,114,0,2,113,0,0,80,159,0,0,1,114,4,0,1,115,0,0,134,41,0,0,24,55,6,0,113,114,115,0,33,52,41,0,2,115,0,0,84,159,0,0,1,114,4,0,1,113,0,0,134,63,0,0,24,55,6,0,115,114,113,0,33,74,63,0,20,113,52,74,0,109,113,0,121,109,26,0,2,113,0,0,84,159,0,0,1,114,4,0,1,115,0,0,134,85,0,0,24,55,6,0,113,114,115,0,33,96,85,0,2,115,0,0,80,159,0,0,1,114,4,0,1,113,0,0,134,5,0,0,24,55,6,0,115,114,113,0,33,10,5,0,1,113,1,0,125,11,96,113,10,0,0,0,38,113,11,1,0,12,113,0,0,3,12,0,0,9,3,0,137,112,0,0,139,9,0,0,0,13,4,0,2,114,0,0,14,0,205,171,134,113,0,0,4,110,5,0,13,114,0,0,0,14,4,0,134,113,0,0,100,182,4,0,14,110,0,0,1,113,4,0,1,114,0,0,134,15,0,0,24,55,6,0,110,113,114,0,0,16,30,0,15,17,16,15,121,17,8,0,2,113,0,0,84,159,0,0,1,115,1,0,1,116,4,0,134,114,0,0,116,78,6,0,113,115,116,0,1,108,0,0,0,18,108,0,0,20,30,0,15,21,18,20,120,21,2,0,119,0,167,0,1,116,0,0,1,115,4,0,134,114,0,0,116,78,6,0,107,116,115,0,0,22,4,0,0,23,108,0,0,24,19,0,41,114,23,4,3,25,24,114,134,114,0,0,100,182,4,0,22,25,0,0,0,26,4,0,134,114,0,0,100,182,4,0,26,107,0,0,0,27,4,0,0,28,108,0,0,29,19,0,41,114,28,4,3,31,29,114,25,32,31,8,134,114,0,0,100,182,4,0,27,32,0,0,0,33,4,0,0,34,108,0,0,35,19,0,41,114,34,4,3,36,35,114,25,37,36,12,134,114,0,0,100,182,4,0,33,37,0,0,1,114,4,0,1,115,0,0,134,38,0,0,24,55,6,0,107,114,115,0,1,115,1,0,1,114,9,0,138,38,115,114,128,67,3,0,172,67,3,0,216,67,3,0,4,68,3,0,48,68,3,0,92,68,3,0,136,68,3,0,180,68,3,0,224,68,3,0,0,79,108,0,0,80,19,0,41,115,79,4,3,81,80,115,25,82,81,4,1,116,0,0,1,114,4,0,134,115,0,0,116,78,6,0,82,116,114,0,119,0,100,0,0,39,108,0,0,40,19,0,41,115,39,4,3,42,40,115,25,43,42,4,1,114,19,0,1,116,4,0,134,115,0,0,116,78,6,0,43,114,116,0,119,0,89,0,0,44,108,0,0,45,19,0,41,115,44,4,3,46,45,115,25,47,46,4,1,116,23,0,1,114,4,0,134,115,0,0,116,78,6,0,47,116,114,0,119,0,78,0,0,48,108,0,0,49,19,0,41,115,48,4,3,50,49,115,25,51,50,4,1,114,24,0,1,116,4,0,134,115,0,0,116,78,6,0,51,114,116,0,119,0,67,0,0,53,108,0,0,54,19,0,41,115,53,4,3,55,54,115,25,56,55,4,1,116,22,0,1,114,4,0,134,115,0,0,116,78,6,0,56,116,114,0,119,0,56,0,0,57,108,0,0,58,19,0,41,115,57,4,3,59,58,115,25,60,59,4,1,114,20,0,1,116,4,0,134,115,0,0,116,78,6,0,60,114,116,0,119,0,45,0,0,61,108,0,0,62,19,0,41,115,61,4,3,64,62,115,25,65,64,4,1,116,26,0,1,114,4,0,134,115,0,0,116,78,6,0,65,116,114,0,119,0,34,0,0,66,108,0,0,67,19,0,41,115,66,4,3,68,67,115,25,69,68,4,1,114,8,0,1,116,4,0,134,115,0,0,116,78,6,0,69,114,116,0,119,0,23,0,0,70,108,0,0,71,19,0,41,115,70,4,3,72,71,115,25,73,72,4,1,116,10,0,1,114,4,0,134,115,0,0,116,78,6,0,73,116,114,0,119,0,12,0,0,75,108,0,0,76,19,0,41,115,75,4,3,77,76,115,25,78,77,4,1,114,11,0,1,116,4,0,134,115,0,0,116,78,6,0,78,114,116,0,119,0,1,0,0,83,108,0,25,84,83,1,0,108,84,0,119,0,86,255,0,86,108,0,0,87,19,0,41,115,86,4,3,88,87,115,25,89,88,4,1,115,4,0,1,114,0,0,134,90,0,0,24,55,6,0,89,115,114,0,1,114,0,0,13,91,90,114,121,91,30,0,0,92,108,0,0,93,19,0,41,114,92,4,3,94,93,114,1,115,0,0,1,116,4,0,134,114,0,0,116,78,6,0,94,115,116,0,0,95,108,0,0,97,19,0,41,114,95,4,3,98,97,114,25,99,98,8,1,116,0,0,1,115,4,0,134,114,0,0,116,78,6,0,99,116,115,0,0,100,108,0,0,101,19,0,41,114,100,4,3,102,101,114,25,103,102,12,1,115,0,0,1,116,4,0,134,114,0,0,116,78,6,0,103,115,116,0,2,114,0,0,84,159,0,0,1,116,4,0,1,115,0,0,134,104,0,0,24,55,6,0,114,116,115,0,33,105,104,0,2,115,0,0,80,159,0,0,1,116,4,0,1,114,0,0,134,106,0,0,24,55,6,0,115,116,114,0,33,6,106,0,1,114,1,0,125,7,105,114,6,0,0,0,38,114,7,1,0,8,114,0,0,3,8,0,0,9,3,0,137,112,0,0,139,9,0,0,140,3,81,0,0,0,0,0,2,76,0,0,160,26,0,0,1,74,0,0,136,77,0,0,0,75,77,0,136,77,0,0,25,77,77,48,137,77,0,0,130,77,0,0,136,78,0,0,49,77,77,78,100,70,3,0,135,77,0,0,25,72,75,8,0,71,75,0,1,3,0,0,0,4,0,0,0,15,1,0,0,26,2,0,134,77,0,0,64,111,6,0,134,37,0,0,84,115,6,0,2,78,0,0,34,213,0,0,1,79,0,4,135,77,9,0,78,37,79,0,2,79,0,0,42,217,0,0,2,78,0,0,34,213,0,0,135,77,24,0,79,78,0,0,2,78,0,0,42,217,0,0,2,79,0,0,1,12,1,0,135,77,23,0,78,79,0,0,2,77,0,0,12,12,1,0,135,48,14,0,77,0,0,0,0,68,48,0,1,77,0,0,14,59,48,77,121,59,5,0,0,65,68,0,134,77,0,0,128,235,2,0,65,0,0,0,0,66,68,0,1,77,0,0,13,67,66,77,121,67,3,0,1,74,5,0,119,0,15,0,2,77,0,0,44,233,0,0,42,77,77,0,1,79,1,0,1,78,0,0,134,5,0,0,24,55,6,0,77,79,78,0,41,78,5,24,42,78,78,24,0,6,78,0,32,7,6,0,121,7,2,0,1,74,5,0,32,78,74,5,121,78,12,0,134,8,0,0,24,115,6,0,134,9,0,0,24,115,6,0,135,10,22,0,9,0,0,0,2,79,0,0,44,233,0,0,134,78,0,0,208,124,5,0,79,8,10,0,1,78,0,0,135,11,34,0,78,0,0,0,0,69,11,0,0,12,69,0,134,13,0,0,128,109,6,0,3,14,12,13,1,79,4,0,134,78,0,0,116,78,6,0,76,14,79,0,1,78,4,0,1,79,0,0,134,16,0,0,24,55,6,0,76,78,79,0,1,78,164,26,1,77,4,0,134,79,0,0,116,78,6,0,78,16,77,0,134,79,0,0,80,109,6,0,134,79,0,0,68,118,6,0,134,79,0,0,68,118,6,0,0,17,4,0,32,18,17,2,121,18,97,0], eb + 204800);
  HEAPU8.set([0,19,15,0,25,20,19,4,1,79,4,0,1,77,0,0,134,21,0,0,24,55,6,0,20,79,77,0,2,77,0,0,22,12,1,0,134,22,0,0,84,226,5,0,21,77,0,0,32,23,22,0,121,23,16,0,1,79,92,25,1,78,1,0,1,80,4,0,134,77,0,0,116,78,6,0,79,78,80,0,1,80,0,0,1,78,255,255,1,79,0,0,134,77,0,0,240,255,1,0,80,78,79,0,1,79,0,0,135,77,7,0,79,0,0,0,0,24,15,0,25,25,24,4,1,77,4,0,1,79,0,0,134,27,0,0,24,55,6,0,25,77,79,0,2,79,0,0,25,12,1,0,134,28,0,0,84,226,5,0,27,79,0,0,32,29,28,0,121,29,54,0,1,79,100,0,134,30,0,0,20,36,6,0,79,0,0,0,1,77,4,0,134,79,0,0,116,78,6,0,76,30,77,0,1,79,4,0,1,77,0,0,134,31,0,0,24,55,6,0,76,79,77,0,26,32,31,1,1,79,4,0,134,77,0,0,116,78,6,0,76,32,79,0,33,33,32,0,1,77,100,0,134,34,0,0,20,36,6,0,77,0,0,0,120,33,241,255,119,0,1,0,25,35,34,1,1,79,8,3,1,78,4,0,134,77,0,0,116,78,6,0,79,35,78,0,1,77,100,0,134,36,0,0,20,36,6,0,77,0,0,0,25,38,36,1,1,78,200,2,1,79,4,0,134,77,0,0,116,78,6,0,78,38,79,0,134,77,0,0,36,109,6,0,134,77,0,0,116,96,6,0,134,39,0,0,120,103,6,0,134,77,0,0,144,122,3,0,39,0,0,0,1,79,0,0,135,77,7,0,79,0,0,0,134,77,0,0,248,118,6,0,0,40,4,0,32,41,40,2,121,41,20,0,0,42,15,0,25,43,42,4,1,77,4,0,1,79,0,0,134,44,0,0,24,55,6,0,43,77,79,0,0,45,26,0,134,46,0,0,124,83,3,0,44,45,0,0,41,79,46,24,42,79,79,24,33,47,79,0,120,47,5,0,1,77,1,0,134,79,0,0,20,99,6,0,77,0,0,0,2,77,0,0,44,233,0,0,1,78,4,0,134,79,0,0,116,78,6,0,71,77,78,0,2,78,0,0,28,12,1,0,134,79,0,0,192,79,6,0,78,71,0,0,2,79,0,0,60,195,0,0,1,78,4,0,1,77,0,0,134,49,0,0,24,55,6,0,79,78,77,0,134,77,0,0,116,193,4,0,49,0,0,0,134,77,0,0,36,109,6,0,2,78,0,0,79,12,1,0,134,77,0,0,228,91,6,0,78,0,0,0,134,77,0,0,152,99,6,0,134,77,0,0,92,61,4,0,134,77,0,0,36,185,4,0,134,77,0,0,188,176,5,0,134,77,0,0,88,51,5,0,134,77,0,0,220,128,4,0,134,77,0,0,32,101,6,0,2,77,0,0,76,162,0,0,1,78,4,0,1,79,0,0,134,50,0,0,24,55,6,0,77,78,79,0,34,51,50,24,2,79,0,0,80,162,0,0,1,78,4,0,1,77,0,0,134,52,0,0,24,55,6,0,79,78,77,0,34,53,52,80,20,77,51,53,0,70,77,0,120,70,93,0,2,77,0,0,76,162,0,0,1,78,4,0,1,79,0,0,134,54,0,0,24,55,6,0,77,78,79,0,2,79,0,0,80,162,0,0,1,78,4,0,1,77,0,0,134,55,0,0,24,55,6,0,79,78,77,0,1,77,0,0,1,78,0,0,134,56,0,0,148,240,4,0,54,55,77,78,1,77,120,3,1,79,4,0,134,78,0,0,116,78,6,0,77,56,79,0,2,78,0,0,68,162,0,0,1,79,4,0,1,77,0,0,134,57,0,0,24,55,6,0,78,79,77,0,1,79,1,0,134,77,0,0,220,96,6,0,57,79,0,0,1,77,120,3,1,79,4,0,1,78,0,0,134,58,0,0,24,55,6,0,77,79,78,0,1,79,1,0,134,78,0,0,220,96,6,0,58,79,0,0,134,78,0,0,16,53,3,0,1,78,2,0,134,60,0,0,148,77,6,0,78,0,0,0,1,79,22,0,1,77,0,0,134,78,0,0,132,19,6,0,79,77,60,0,1,78,2,0,134,61,0,0,148,77,6,0,78,0,0,0,1,77,23,0,1,79,0,0,134,78,0,0,132,19,6,0,77,79,61,0,1,78,70,0,134,62,0,0,148,77,6,0,78,0,0,0,1,78,2,0,134,63,0,0,148,77,6,0,78,0,0,0,1,79,20,0,1,77,0,0,134,78,0,0,172,13,6,0,79,77,62,63,1,78,2,0,134,64,0,0,148,77,6,0,78,0,0,0,1,77,24,0,1,79,0,0,134,78,0,0,132,19,6,0,77,79,64,0,134,78,0,0,36,215,5,0,137,75,0,0,1,78,0,0,139,78,0,0,1,79,24,0,1,77,4,0,134,78,0,0,116,78,6,0,72,79,77,0,25,73,72,4,1,77,80,0,1,79,4,0,134,78,0,0,116,78,6,0,73,77,79,0,2,79,0,0,88,12,1,0,134,78,0,0,192,79,6,0,79,72,0,0,134,78,0,0,196,101,6,0,1,79,1,0,134,78,0,0,20,99,6,0,79,0,0,0,2,78,0,0,76,162,0,0,1,79,4,0,1,77,0,0,134,54,0,0,24,55,6,0,78,79,77,0,2,77,0,0,80,162,0,0,1,79,4,0,1,78,0,0,134,55,0,0,24,55,6,0,77,79,78,0,1,78,0,0,1,79,0,0,134,56,0,0,148,240,4,0,54,55,78,79,1,78,120,3,1,77,4,0,134,79,0,0,116,78,6,0,78,56,77,0,2,79,0,0,68,162,0,0,1,77,4,0,1,78,0,0,134,57,0,0,24,55,6,0,79,77,78,0,1,77,1,0,134,78,0,0,220,96,6,0,57,77,0,0,1,78,120,3,1,77,4,0,1,79,0,0,134,58,0,0,24,55,6,0,78,77,79,0,1,77,1,0,134,79,0,0,220,96,6,0,58,77,0,0,134,79,0,0,16,53,3,0,1,79,2,0,134,60,0,0,148,77,6,0,79,0,0,0,1,77,22,0,1,78,0,0,134,79,0,0,132,19,6,0,77,78,60,0,1,79,2,0,134,61,0,0,148,77,6,0,79,0,0,0,1,78,23,0,1,77,0,0,134,79,0,0,132,19,6,0,78,77,61,0,1,79,70,0,134,62,0,0,148,77,6,0,79,0,0,0,1,79,2,0,134,63,0,0,148,77,6,0,79,0,0,0,1,77,20,0,1,78,0,0,134,79,0,0,172,13,6,0,77,78,62,63,1,79,2,0,134,64,0,0,148,77,6,0,79,0,0,0,1,78,24,0,1,77,0,0,134,79,0,0,132,19,6,0,78,77,64,0,134,79,0,0,36,215,5,0,137,75,0,0,1,79,0,0,139,79,0,0,140,0,117,0,0,0,0,0,2,112,0,0,192,26,0,0,2,113,0,0,20,107,0,0,1,110,0,0,136,114,0,0,0,111,114,0,136,114,0,0,25,114,114,32,137,114,0,0,130,114,0,0,136,115,0,0,49,114,114,115,80,78,3,0,135,114,0,0,0,109,111,0,1,104,0,0,1,114,216,106,1,115,4,0,1,116,0,0,134,0,0,0,24,55,6,0,114,115,116,0,41,116,0,5,0,1,116,0,1,116,220,106,1,115,4,0,1,114,0,0,134,16,0,0,24,55,6,0,116,115,114,0,3,27,1,16,41,114,27,3,3,38,112,114,42,114,38,0,1,115,1,0,1,116,0,0,134,49,0,0,24,55,6,0,114,115,116,0,41,116,49,24,42,116,116,24,0,60,116,0,32,71,60,43,121,71,36,0,1,116,216,106,1,115,4,0,1,114,0,0,134,82,0,0,24,55,6,0,116,115,114,0,41,114,82,5,0,93,114,0,1,114,220,106,1,115,4,0,1,116,0,0,134,2,0,0,24,55,6,0,114,115,116,0,3,7,93,2,41,116,7,3,3,8,112,116,25,9,8,1,42,116,9,0,1,115,1,0,1,114,0,0,134,10,0,0,24,55,6,0,116,115,114,0,41,114,10,24,42,114,114,24,0,11,114,0,38,114,11,15,0,12,114,0,1,114,164,3,1,115,132,0,5,115,12,115,3,13,114,115,0,105,13,0,119,0,2,0,1,105,0,0,1,115,4,0,1,114,0,0,134,14,0,0,24,55,6,0,113,115,114,0,25,15,14,28,1,114,2,0,1,115,0,0,134,17,0,0,24,55,6,0,15,114,115,0,41,115,17,16,42,115,115,16,0,18,115,0,38,115,18,2,0,19,115,0,1,115,255,0,19,115,19,115,0,20,115,0,0,107,20,0,2,106,0,0,228,159,0,0,1,115,116,3,1,114,4,0,1,116,0,0,134,21,0,0,24,55,6,0,115,114,116,0,0,108,21,0,0,22,108,0,1,116,0,0,14,23,22,116,120,23,2,0,119,0,129,0,0,24,108,0,25,25,24,68,1,116,4,0,1,114,0,0,134,26,0,0,24,55,6,0,25,116,114,0,1,114,4,0,1,116,0,0,134,28,0,0,24,55,6,0,113,114,116,0,13,29,26,28,121,29,3,0,1,110,11,0,119,0,94,0,0,30,108,0,25,31,30,68,1,116,4,0,1,114,0,0,134,32,0,0,24,55,6,0,31,116,114,0,0,33,105,0,13,34,32,33,121,34,3,0,1,110,11,0,119,0,82,0,0,35,107,0,1,114,255,0,19,114,35,114,0,36,114,0,33,37,36,0,121,37,76,0,0,39,108,0,25,40,39,8,1,114,4,0,1,116,0,0,134,41,0,0,24,55,6,0,40,114,116,0,41,116,41,5,0,42,116,0,0,43,108,0,25,44,43,8,25,45,44,4,1,116,4,0,1,114,0,0,134,46,0,0,24,55,6,0,45,116,114,0,3,47,42,46,41,114,47,3,3,48,112,114,42,114,48,0,1,116,1,0,1,115,0,0,134,50,0,0,24,55,6,0,114,116,115,0,41,115,50,24,42,115,115,24,0,51,115,0,32,52,51,43,121,52,45,0,0,53,108,0,25,54,53,8,1,115,4,0,1,116,0,0,134,55,0,0,24,55,6,0,54,115,116,0,41,116,55,5,0,56,116,0,0,57,108,0,25,58,57,8,25,59,58,4,1,116,4,0,1,115,0,0,134,61,0,0,24,55,6,0,59,116,115,0,3,62,56,61,41,115,62,3,3,63,112,115,25,64,63,1,42,115,64,0,1,116,1,0,1,114,0,0,134,65,0,0,24,55,6,0,115,116,114,0,41,114,65,24,42,114,114,24,0,66,114,0,38,114,66,15,0,67,114,0,1,114,164,3,1,116,132,0,5,116,67,116,3,68,114,116,1,116,4,0,1,114,0,0,134,69,0,0,24,55,6,0,113,116,114,0,13,70,68,69,121,70,2,0,1,110,11,0,32,114,110,11,121,114,10,0,1,110,0,0,0,72,108,0,0,73,106,0,25,74,73,4,0,106,74,0,1,116,4,0,134,114,0,0,116,78,6,0,73,72,116,0,0,75,108,0,1,114,4,0,1,116,0,0,134,76,0,0,24,55,6,0,75,114,116,0,0,108,76,0,119,0,124,255,0,77,106,0,0,78,77,0,2,116,0,0,228,159,0,0,4,79,78,116,28,116,79,4,38,116,116,255,0,80,116,0,0,104,80,0,32,81,80,0,121,81,8,0,2,114,0,0,43,50,1,0,134,116,0,0,144,18,6,0,114,109,0,0,137,111,0,0,139,0,0,0,0,83,106,0,1,114,0,0,1,115,4,0,134,116,0,0,116,78,6,0,83,114,115,0,1,116,252,106,1,115,4,0,1,114,0,0,134,84,0,0,24,55,6,0,116,115,114,0,28,114,84,2,38,114,114,255,0,85,114,0,1,115,252,106,1,116,4,0,134,114,0,0,116,78,6,0,115,85,116,0,1,114,252,106,1,116,4,0,1,115,0,0,134,86,0,0,24,55,6,0,114,116,115,0,0,87,104,0,6,115,86,87,38,115,115,255,0,88,115,0,0,104,88,0,2,106,0,0,228,159,0,0,0,89,106,0,1,115,4,0,1,116,0,0,134,90,0,0,24,55,6,0,89,115,116,0,1,116,0,0,14,91,90,116,120,91,2,0,119,0,41,0,0,92,106,0,1,116,4,0,1,115,0,0,134,94,0,0,24,55,6,0,92,116,115,0,0,108,94,0,0,95,104,0,0,96,108,0,25,97,96,28,25,98,97,16,1,115,4,0,1,116,0,0,134,99,0,0,24,55,6,0,98,115,116,0,4,100,99,95,1,115,4,0,134,116,0,0,116,78,6,0,98,100,115,0,36,101,100,0,0,102,108,0,121,101,9,0,0,103,108,0,134,3,0,0,24,227,3,0,103,0,0,0,134,116,0,0,0,152,3,0,102,3,0,0,119,0,5,0,25,4,102,8,134,116,0,0,36,182,5,0,4,0,0,0,0,5,106,0,25,6,5,4,0,106,6,0,119,0,207,255,137,111,0,0,139,0,0,0,140,2,79,0,0,0,0,0,1,73,0,0,136,75,0,0,0,74,75,0,136,75,0,0,1,76,192,4,3,75,75,76,137,75,0,0,130,75,0,0,136,76,0,0,49,75,75,76,180,83,3,0,135,75,0,0,25,69,74,72,25,68,74,64,25,66,74,56,25,65,74,48,25,64,74,40,25,63,74,32,25,71,74,24,25,70,74,16,25,67,74,8,0,62,74,0,1,75,176,0,3,55,74,75,25,60,74,84,25,58,74,80,25,56,74,76,0,3,0,0,0,14,1,0,0,25,3,0,2,75,0,0,74,44,1,0,134,36,0,0,84,226,5,0,25,75,0,0,32,47,36,0,121,47,3,0,2,3,0,0,42,217,0,0,134,75,0,0,168,118,6,0,0,51,3,0,2,75,0,0,77,44,1,0,134,52,0,0,92,105,5,0,51,75,0,0,0,57,52,0,1,75,0,0,13,53,52,75,0,54,3,0,121,53,8,0,134,75,0,0,180,246,5,0,54,0,0,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,134,75,0,0,156,54,6,0,54,60,0,0,0,4,3,0,134,5,0,0,232,33,6,0,4,0,0,0,1,75,255,0,19,75,5,75,0,6,75,0,0,61,6,0,2,75,0,0,60,195,0,0,1,76,4,0,1,77,0,0,134,7,0,0,24,55,6,0,75,76,77,0,134,77,0,0,116,193,4,0,7,0,0,0,2,77,0,0,23,53,1,0,135,8,22,0,77,0,0,0,25,9,8,1,0,10,57,0,134,77,0,0,72,110,4,0,55,9,10,0,2,77,0,0,23,53,1,0,134,11,0,0,84,226,5,0,55,77,0,0,33,12,11,0,121,12,10,0,2,76,0,0,79,44,1,0,134,77,0,0,192,79,6,0,76,62,0,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,0,13,57,0,1,76,80,0,134,77,0,0,72,110,4,0,55,76,13,0,1,76,4,0,134,77,0,0,116,78,6,0,67,58,76,0,25,72,67,4,1,76,4,0,134,77,0,0,116,78,6,0,72,56,76,0,2,76,0,0,65,44,1,0,134,77,0,0,176,83,6,0,55,76,67,0,134,77,0,0,36,109,6,0,2,77,0,0,68,162,0,0,1,76,4,0,1,75,0,0,134,15,0,0,24,55,6,0,77,76,75,0,1,76,1,0,134,75,0,0,132,62,6,0,15,76,0,0,1,75,4,0,1,76,0,0,134,16,0,0,24,55,6,0,58,75,76,0,2,76,0,0,76,162,0,0,1,75,4,0,1,77,0,0,134,17,0,0,24,55,6,0,76,75,77,0,15,18,17,16,121,18,37,0,134,77,0,0,196,101,6,0,1,77,4,0,1,75,0,0,134,19,0,0,24,55,6,0,58,77,75,0,1,77,4,0,134,75,0,0,116,78,6,0,70,19,77,0,2,77,0,0,114,44,1,0,134,75,0,0,192,79,6,0,77,70,0,0,2,75,0,0,76,162,0,0,1,77,4,0,1,76,0,0,134,20,0,0,24,55,6,0,75,77,76,0,1,77,4,0,134,76,0,0,116,78,6,0,71,20,77,0,2,77,0,0,174,44,1,0,134,76,0,0,192,79,6,0,77,71,0,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,1,76,4,0,1,77,0,0,134,21,0,0,24,55,6,0,56,76,77,0,2,77,0,0,80,162,0,0,1,76,4,0,1,75,0,0,134,22,0,0,24,55,6,0,77,76,75,0,15,23,22,21,121,23,37,0,134,75,0,0,196,101,6,0,1,75,4,0,1,76,0,0,134,24,0,0,24,55,6,0,56,75,76,0,1,75,4,0,134,76,0,0,116,78,6,0,63,24,75,0,2,75,0,0,232,44,1,0,134,76,0,0,192,79,6,0,75,63,0,0,2,76,0,0,80,162,0,0,1,75,4,0,1,77,0,0,134,26,0,0,24,55,6,0,76,75,77,0,1,75,4,0,134,77,0,0,116,78,6,0,64,26,75,0,2,75,0,0,38,45,1,0,134,77,0,0,192,79,6,0,75,64,0,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,2,77,0,0,76,162,0,0,1,75,4,0,1,76,0,0,134,27,0,0,24,55,6,0,77,75,76,0,2,76,0,0,80,162,0,0,1,75,4,0,1,77,0,0,134,28,0,0,24,55,6,0,76,75,77,0,1,77,0,0,1,75,0,0,134,29,0,0,148,240,4,0,27,28,77,75,1,77,120,3,1,76,4,0,134,75,0,0,116,78,6,0,77,29,76,0,134,75,0,0,32,101,6,0,0,30,57,0,134,75,0,0,152,196,2,0,30,0,0,0,0,31,3,0,0,32,57,0,134,33,0,0,88,88,6,0,31,32,0,0,34,34,33,0,121,34,10,0,2,76,0,0,98,45,1,0,134,75,0,0,192,79,6,0,76,65,0,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,1,76,204,2,1,77,0,0,1,78,4,0,134,75,0,0,116,78,6,0,76,77,78,0,2,75,0,0,68,162,0,0,1,78,4,0,1,77,0,0,134,35,0,0,24,55,6,0,75,78,77,0,1,78,1,0,134,77,0,0,0,62,6,0,35,78,0,0,25,37,60,16,1,77,4,0,1,78,0,0,134,38,0,0,24,55,6,0,37,77,78,0,33,39,38,1,0,40,61,0,33,41,40,0,20,78,39,41,0,59,78,0,121,59,12,0,134,78,0,0,196,101,6,0,2,77,0,0,118,45,1,0,134,78,0,0,192,79,6,0,77,66,0,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,1,78,252,106,1,77,4,0,1,75,0,0,134,42,0,0,24,55,6,0,78,77,75,0,36,43,42,0,121,43,13,0,134,75,0,0,196,101,6,0,2,77,0,0,154,45,1,0,134,75,0,0,192,79,6,0,77,68,0,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,119,0,46,0,134,75,0,0,44,118,6,0,0,44,14,0,130,77,1,0,1,78,4,0,134,75,0,0,116,78,6,0,77,44,78,0,0,45,3,0,2,78,0,0,42,217,0,0,135,75,24,0,78,45,0,0,2,75,0,0,64,162,0,0,1,78,4,0,1,77,0,0,134,46,0,0,24,55,6,0,75,78,77,0,1,78,1,0,134,77,0,0,0,62,6,0,46,78,0,0,134,48,0,0,128,109,6,0,134,77,0,0,68,94,6,0,48,0,0,0,0,49,3,0,1,78,4,0,134,77,0,0,116,78,6,0,69,49,78,0,2,78,0,0,49,44,1,0,134,77,0,0,144,18,6,0,78,69,0,0,134,77,0,0,36,215,5,0,1,2,0,0,0,50,2,0,137,74,0,0,139,50,0,0,1,77,0,0,139,77,0,0,140,0,120,0,0,0,0,0,2,113,0,0,255,0,0,0,2,114,0,0,232,106,0,0,2,115,0,0,0,4,0,0,2,116,0,0,192,26,0,0,1,111,0,0,136,117,0,0,0,112,117,0,136,117,0,0,25,117,117,16,137,117,0,0,130,117,0,0,136,118,0,0,49,117,117,118,240,89,3,0,135,117,0,0,0,110,112,0,1,117,2,0,1,118,0,0,134,0,0,0,24,55,6,0,114,117,118,0,41,118,0,16,42,118,118,16,0,1,118,0,1,118,0,8,19,118,1,118,0,20,118,0,33,31,20,0,38,118,31,1,0,42,118,0,19,118,42,113,0,53,118,0,41,118,53,24,42,118,118,24,33,64,118,0,120,64,3,0,137,112,0,0,139,0,0,0,1,117,21,0,134,118,0,0,56,74,6,0,117,0,0,0,1,118,2,0,1,117,0,0,134,75,0,0,24,55,6,0,114,118,117,0,41,117,75,16,42,117,117,16,0,86,117,0,1,117,255,247,19,117,86,117,0,97,117,0,2,117,0,0,255,255,0,0,19,117,97,117,0,2,117,0,1,118,2,0,134,117,0,0,116,78,6,0,114,2,118,0,1,117,2,0,1,118,0,0,134,11,0,0,24,55,6,0,114,117,118,0,41,118,11,16,42,118,118,16,0,12,118,0,38,118,12,4,0,13,118,0,33,14,13,0,38,118,14,1,0,15,118,0,19,118,15,113,0,16,118,0,41,118,16,24,42,118,118,24,33,17,118,0,121,17,3,0,137,112,0,0,139,0,0,0,1,118,112,3,1,117,4,0,1,119,0,0,134,18,0,0,24,55,6,0,118,117,119,0,0,109,18,0,0,19,109,0,1,119,0,0,14,21,19,119,120,21,2,0,119,0,56,0,0,22,109,0,25,23,22,12,25,24,23,4,1,119,4,0,1,117,0,0,134,25,0,0,24,55,6,0,24,119,117,0,0,26,109,0,25,27,26,12,1,117,4,0,1,119,0,0,134,28,0,0,24,55,6,0,27,117,119,0,134,29,0,0,228,47,4,0,25,28,0,0,41,119,29,24,42,119,119,24,33,30,119,0,121,30,26,0,0,32,109,0,25,33,32,12,25,34,33,4,1,119,4,0,1,117,0,0,134,35,0,0,24,55,6,0,34,119,117,0,0,36,109,0,25,37,36,12,1,117,4,0,1,119,0,0,134,38,0,0,24,55,6,0,37,117,119,0,0,39,109,0,25,40,39,8,1,119,4,0,1,117,0,0,134,41,0,0,24,55,6,0,40,119,117,0,134,117,0,0,208,39,6,0,35,38,41,0,0,43,109,0,1,117,4,0,1,119,0,0,134,44,0,0,24,55,6,0,43,117,119,0,0,109,44,0,119,0,197,255,1,119,2,0,1,117,0,0,134,45,0,0,24,55,6,0,114,119,117,0,41,117,45,16,42,117,117,16,0,46,117,0,1,117,0,64,19,117,46,117,0,47,117,0,33,48,47,0,38,117,48,1,0,49,117,0,19,117,49,113,0,50,117,0,0,108,50,0,1,117,116,3,1,119,4,0,1,118,0,0,134,51,0,0,24,55,6,0,117,119,118,0,0,109,51,0,0,52,109,0,1,118,0,0,14,54,52,118,120,54,2,0,119,0,160,0,0,55,109,0,25,56,55,8,25,57,56,4,1,118,4,0,1,119,0,0,134,58,0,0,24,55,6,0,57,118,119,0,0,59,109,0,25,60,59,8,1,119,4,0,1,118,0,0,134,61,0,0,24,55,6,0,60,119,118,0,134,118,0,0,124,108,5,0,58,61,0,0,0,62,109,0,25,63,62,8,25,65,63,4,1,118,4,0,1,119,0,0,134,66,0,0,24,55,6,0,65,118,119,0,0,67,109,0,25,68,67,8,1,119,4,0,1,118,0,0,134,69,0,0,24,55,6,0,68,119,118,0,134,70,0,0,228,47,4,0,66,69,0,0,41,118,70,24,42,118,118,24,33,71,118,0,121,71,89,0,0,72,109,0,25,73,72,24,1,118,2,0,1,119,0,0,134,74,0,0,24,55,6,0,73,118,119,0,41,119,74,16,42,119,119,16,0,76,119,0,19,119,76,115,0,77,119,0,33,78,77,0,38,119,78,1,0,79,119,0,19,119,79,113,0,80,119,0,41,119,80,24,42,119,119,24,33,81,119,0,121,81,53,0,1,119,2,0,1,118,0,0,134,82,0,0,24,55,6,0,114,119,118,0,41,118,82,16,42,118,118,16,0,83,118,0,38,118,83,2,0,84,118,0,33,85,84,0,38,118,85,1,0,87,118,0,19,118,87,113,0,88,118,0,19,118,88,113,0,89,118,0,33,90,89,0,120,90,34,0,0,95,109,0,25,96,95,8,1,118,4,0,1,119,0,0,134,98,0,0,24,55,6,0,96,118,119,0,41,119,98,5,0,99,119,0,0,100,109,0,25,101,100,8,25,102,101,4,1,119,4,0,1,118,0,0,134,103,0,0,24,55,6,0,102,119,118,0,3,104,99,103,41,118,104,3,3,105,116,118,42,118,105,0,1,119,1,0,1,117,0,0,134,106,0,0,24,55,6,0,118,119,117,0,41,117,106,24,42,117,117,24,0,107,117,0,134,117,0,0,172,88,6,0,107,0,0,0,119,0,39,0,0,91,109,0,25,92,91,18,42,117,92,0,1,119,1,0,1,118,0,0,134,93,0,0,24,55,6,0,117,119,118,0,41,118,93,24,42,118,118,24,0,94,118,0,134,118,0,0,172,88,6,0,94,0,0,0,119,0,24,0,0,3,108,0,41,118,3,24,42,118,118,24,33,4,118,0,121,4,19,0,134,118,0,0,116,105,6,0,0,5,109,0,25,6,5,17,42,118,6,0,1,119,1,0,1,117,0,0,134,7,0,0,24,55,6,0,118,119,117,0,41,117,7,24,42,117,117,24,0,8,117,0,134,117,0,0,172,88,6,0,8,0,0,0,134,117,0,0,92,106,6,0,0,9,109,0,1,117,4,0,1,119,0,0,134,10,0,0,24,55,6,0,9,117,119,0,0,109,10,0,119,0,93,255,2,117,0,0,147,208,0,0,134,119,0,0,144,18,6,0,117,110,0,0,137,112,0,0,139,0,0,0,140,2,107,0,0,0,0,0,1,102,0,0,136,104,0,0,0,103,104,0,136,104,0,0,25,104,104,32,137,104,0,0,130,104,0,0,136,105,0,0,49,104,104,105,72,95,3,0,135,104,0,0,25,99,103,12,25,97,103,8,0,3,0,0,0,14,1,0,1,105,0,0,1,106,4,0,134,104,0,0,116,78,6,0,99,105,106,0,1,106,255,255,1,105,4,0,134,104,0,0,116,78,6,0,97,106,105,0,2,104,0,0,80,159,0,0,1,105,4,0,1,106,0,0,134,25,0,0,24,55,6,0,104,105,106,0,33,36,25,0,2,106,0,0,84,159,0,0,1,105,4,0,1,104,0,0,134,47,0,0,24,55,6,0,106,105,104,0,33,58,47,0,20,104,36,58,0,101,104,0,121,101,26,0,2,104,0,0,84,159,0,0,1,105,4,0,1,106,0,0,134,69,0,0,24,55,6,0,104,105,106,0,33,80,69,0,2,106,0,0,80,159,0,0,1,105,4,0,1,104,0,0,134,91,0,0,24,55,6,0,106,105,104,0,33,4,91,0,1,104,1,0,125,5,80,104,4,0,0,0,38,104,5,1,0,6,104,0,0,2,6,0,0,96,2,0,137,103,0,0,139,96,0,0,0,7,3,0,2,105,0,0,2,0,205,171,134,104,0,0,4,110,5,0,7,105,0,0,0,8,3,0,134,104,0,0,100,182,4,0,8,97,0,0,1,104,4,0,1,105,0,0,134,9,0,0,24,55,6,0,97,104,105,0,32,10,9,0,121,10,26,0,2,105,0,0,84,159,0,0,1,104,4,0,1,106,0,0,134,11,0,0,24,55,6,0,105,104,106,0,33,12,11,0,2,106,0,0,80,159,0,0,1,104,4,0,1,105,0,0,134,13,0,0,24,55,6,0,106,104,105,0,33,15,13,0,1,105,1,0,125,16,12,105,15,0,0,0,38,105,16,1,0,17,105,0,0,2,17,0,0,96,2,0,137,103,0,0,139,96,0,0,0,18,3,0,0,19,14,0,25,20,19,8,134,105,0,0,60,15,5,0,18,20,0,0,0,21,3,0,0,22,14,0,25,23,22,16,134,105,0,0,152,89,5,0,21,23,0,0,0,24,3,0,0,26,14,0,25,27,26,17,134,105,0,0,0,195,5,0,24,27,0,0,0,28,3,0,0,29,14,0,25,30,29,18,134,105,0,0,0,195,5,0,28,30,0,0,0,31,3,0,0,32,14,0,25,33,32,19,134,105,0,0,0,195,5,0,31,33,0,0,0,34,3,0,134,105,0,0,100,182,4,0,34,99,0,0,0,35,3,0,134,105,0,0,100,182,4,0,35,97,0,0,0,37,14,0,25,38,37,76,1,104,255,255,1,106,4,0,134,105,0,0,116,78,6,0,38,104,106,0,1,105,4,0,1,106,0,0,134,39,0,0,24,55,6,0,99,105,106,0,32,40,39,0,121,40,22,0,1,106,4,0,1,105,0,0,134,41,0,0,24,55,6,0,97,106,105,0,32,42,41,1,0,43,14,0,25,44,43,20,121,42,7,0,1,106,216,106,1,104,4,0,134,105,0,0,116,78,6,0,44,106,104,0,119,0,103,0,1,104,0,0,1,106,4,0,134,105,0,0,116,78,6,0,44,104,106,0,119,0,97,0,1,105,4,0,1,106,0,0,134,45,0,0,24,55,6,0,99,105,106,0,32,46,45,1,121,46,20,0,0,48,14,0,25,49,48,20,1,105,0,0,1,104,4,0,134,106,0,0,116,78,6,0,49,105,104,0,1,106,4,0,1,104,0,0,134,50,0,0,24,55,6,0,97,106,104,0,0,51,14,0,25,52,51,76,1,106,4,0,134,104,0,0,116,78,6,0,52,50,106,0,119,0,71,0,1,104,4,0,1,106,0,0,134,53,0,0,24,55,6,0,99,104,106,0,32,54,53,2,121,54,32,0,1,106,112,3,1,104,4,0,1,105,0,0,134,55,0,0,24,55,6,0,106,104,105,0,1,105,4,0,1,104,0,0,134,56,0,0,24,55,6,0,97,105,104,0,134,57,0,0,240,255,5,0,55,56,0,0,0,98,57,0,0,59,98,0,1,104,0,0,14,60,59,104,120,60,2,0,119,0,44,0,0,61,98,0,0,100,61,0,0,62,100,0,25,63,62,12,0,64,14,0,25,65,64,20,1,105,4,0,134,104,0,0,116,78,6,0,65,63,105,0,119,0,33,0,1,104,4,0,1,105,0,0,134,66,0,0,24,55,6,0,99,104,105,0,32,67,66,3,121,67,18,0,1,105,4,0,1,104,0,0,134,68,0,0,24,55,6,0,97,105,104,0,1,104,36,107,1,105,132,0,5,105,68,105,3,70,104,105,25,71,70,16,0,72,14,0,25,73,72,20,1,104,4,0,134,105,0,0,116,78,6,0,73,71,104,0,119,0,9,0,0,74,14,0,25,75,74,20,1,104,0,0,1,106,4,0,134,105,0,0,116,78,6,0,75,104,106,0,119,0,1,0,0,76,3,0,0,77,14,0,25,78,77,24,134,105,0,0,56,2,5,0,76,78,0,0,0,79,3,0,0,81,14,0,25,82,81,28,134,105,0,0,224,243,4,0,79,82,0,0,0,83,3,0,0,84,14,0,25,85,84,68,134,105,0,0,200,112,5,0,83,85,0,0,0,86,3,0,0,87,14,0,25,88,87,72,134,105,0,0,16,115,4,0,86,88,0,0,2,105,0,0,84,159,0,0,1,106,4,0,1,104,0,0,134,89,0,0,24,55,6,0,105,106,104,0,33,90,89,0,2,104,0,0,80,159,0,0,1,106,4,0,1,105,0,0,134,92,0,0,24,55,6,0,104,106,105,0,33,93,92,0,1,105,1,0,125,94,90,105,93,0,0,0,38,105,94,1,0,95,105,0,0,2,95,0,0,96,2,0,137,103,0,0,139,96,0,0,140,3,79,0,0,0,0,0,2,75,0,0,146,0,0,0,1,73,0,0,136,76,0,0,0,74,76,0,136,76,0,0,25,76,76,48,137,76,0,0,130,76,0,0,136,77,0,0,49,76,76,77,124,100,3,0,135,76,0,0,25,68,74,16,0,67,74,0,25,65,74,32,25,6,0,28,1,76,4,0,1,77,0,0,134,7,0,0,24,55,6,0,6,76,77,0,1,76,4,0,134,77,0,0,116,78,6,0,65,7,76,0,25,18,65,4,25,29,0,20,1,77,4,0,1,76,0,0,134,40,0,0,24,55,6,0,29,77,76,0,0,51,40,0,4,53,51,7,1,77,4,0,134,76,0,0,116,78,6,0,18,53,77,0,25,54,65,8,1,77,4,0,134,76,0,0,116,78,6,0,54,1,77,0,25,55,65,12,1,77,4,0,134,76,0,0,116,78,6,0,55,2,77,0,3,56,53,2,25,8,0,60,25,9,0,44,0,59,65,0,1,62,2,0,0,66,56,0,2,76,0,0,60,194,0,0,1,77,4,0,1,78,0,0,134,10,0,0,24,55,6,0,76,77,78,0,1,78,0,0,13,11,10,78,121,11,27,0,1,78,4,0,1,77,0,0,134,15,0,0,24,55,6,0,8,78,77,0,1,78,4,0,134,77,0,0,116,78,6,0,68,15,78,0,25,71,68,4,1,78,4,0,134,77,0,0,116,78,6,0,71,59,78,0,25,72,68,8,1,78,4,0,134,77,0,0,116,78,6,0,72,62,78,0,135,16,35,0,75,68,0,0,134,17,0,0,40,91,6,0,16,0,0,0,0,57,17,0,119,0,32,0,1,78,34,0,135,77,36,0,78,0,0,0,1,77,4,0,1,78,0,0,134,12,0,0,24,55,6,0,8,77,78,0,1,77,4,0,134,78,0,0,116,78,6,0,67,12,77,0,25,69,67,4,1,77,4,0,134,78,0,0,116,78,6,0,69,59,77,0,25,70,67,8,1,77,4,0,134,78,0,0,116,78,6,0,70,62,77,0,135,13,35,0,75,67,0,0,134,14,0,0,40,91,6,0,13,0,0,0,1,77,0,0,135,78,37,0,77,0,0,0,0,57,14,0,13,19,66,57,121,19,3,0,1,73,6,0,119,0,84,0,34,26,57,0,121,26,5,0,0,60,59,0,0,63,62,0,1,73,8,0,119,0,78,0,4,35,66,57,25,36,59,4,1,78,4,0,1,77,0,0,134,37,0,0,24,55,6,0,36,78,77,0,16,38,37,57,121,38,28,0,1,77,4,0,1,78,0,0,134,39,0,0,24,55,6,0,9,77,78,0,1,77,4,0,134,78,0,0,116,78,6,0,6,39,77,0,1,77,4,0,134,78,0,0,116,78,6,0,29,39,77,0,4,41,57,37,25,42,59,8,26,43,62,1,25,4,59,12,1,78,4,0,1,77,0,0,134,5,0,0,24,55,6,0,4,78,77,0,0,52,5,0,0,58,41,0,0,61,42,0,0,64,43,0,119,0,22,0,32,44,62,2,121,44,16,0,1,77,4,0,1,78,0,0,134,45,0,0,24,55,6,0,6,77,78,0,3,46,45,57,1,77,4,0,134,78,0,0,116,78,6,0,6,46,77,0,0,52,37,0,0,58,57,0,0,61,59,0,1,64,2,0,119,0,5,0,0,52,37,0,0,58,57,0,0,61,59,0,0,64,62,0,1,78,4,0,1,77,0,0,134,47,0,0,24,55,6,0,61,78,77,0,3,48,47,58,1,78,4,0,134,77,0,0,116,78,6,0,61,48,78,0,25,49,61,4,4,50,52,58,1,78,4,0,134,77,0,0,116,78,6,0,49,50,78,0,0,59,61,0,0,62,64,0,0,66,35,0,119,0,103,255,32,77,73,6,121,77,29,0,1,77,4,0,1,78,0,0,134,20,0,0,24,55,6,0,9,77,78,0,25,21,0,48,1,78,4,0,1,77,0,0,134,22,0,0,24,55,6,0,21,78,77,0,3,23,20,22,25,24,0,16,1,78,4,0,134,77,0,0,116,78,6,0,24,23,78,0,0,25,20,0,1,78,4,0,134,77,0,0,116,78,6,0,6,25,78,0,1,78,4,0,134,77,0,0,116,78,6,0,29,25,78,0,0,3,2,0,119,0,42,0,32,77,73,8,121,77,40,0,25,27,0,16,1,78,0,0,1,76,4,0,134,77,0,0,116,78,6,0,27,78,76,0,1,76,0,0,1,78,4,0,134,77,0,0,116,78,6,0,6,76,78,0,1,78,0,0,1,76,4,0,134,77,0,0,116,78,6,0,29,78,76,0,1,77,4,0,1,76,0,0,134,28,0,0,24,55,6,0,0,77,76,0,39,76,28,32,0,30,76,0,1,77,4,0,134,76,0,0,116,78,6,0,0,30,77,0,32,31,63,2,121,31,3,0,1,3,0,0,119,0,9,0,25,32,60,4,1,76,4,0,1,77,0,0,134,33,0,0,24,55,6,0,32,76,77,0,4,34,2,33,0,3,34,0,137,74,0,0,139,3,0,0,140,1,123,0,0,0,0,0,2,115,0,0,255,0,0,0,2,116,0,0,232,106,0,0,2,117,0,0,192,26,0,0,2,118,0,0,0,64,0,0,2,119,0,0,255,255,0,0,1,113,0,0,136,120,0,0,0,114,120,0,136,120,0,0,25,120,120,32,137,120,0,0,130,120,0,0,136,121,0,0,49,120,120,121,12,105,3,0,135,120,0,0,0,1,0,0,1,120,20,107,1,121,4,0,1,122,0,0,134,2,0,0,24,55,6,0,120,121,122,0,0,110,2,0,0,18,110,0,25,29,18,28,1,122,2,0,1,121,0,0,134,40,0,0,24,55,6,0,29,122,121,0,41,121,40,16,42,121,121,16,0,51,121,0,38,121,51,4,0,62,121,0,33,73,62,0,121,73,3,0,137,114,0,0,139,0,0,0,0,84,110,0,25,95,84,28,1,121,2,0,1,122,0,0,134,3,0,0,24,55,6,0,95,121,122,0,41,122,3,16,42,122,122,16,0,9,122,0,38,122,9,2,0,10,122,0,33,11,10,0,121,11,3,0,1,108,35,0,119,0,37,0,0,12,110,0,25,13,12,28,1,122,2,0,1,121,0,0,134,14,0,0,24,55,6,0,13,122,121,0,41,121,14,16,42,121,121,16,0,15,121,0,38,121,15,1,0,16,121,0,33,17,16,0,121,17,22,0,1,121,2,0,1,122,0,0,134,19,0,0,24,55,6,0,116,121,122,0,41,122,19,16,42,122,122,16,0,20,122,0,38,122,20,4,0,21,122,0,33,22,21,0,38,122,22,1,0,23,122,0,19,122,23,115,0,24,122,0,19,122,24,115,0,25,122,0,33,26,25,0,120,26,3,0,1,108,32,0,119,0,2,0,1,108,46,0,0,27,1,0,1,122,4,0,1,121,0,0,134,28,0,0,24,55,6,0,27,122,121,0,41,121,28,5,0,30,121,0,0,31,1,0,25,32,31,4,1,121,4,0,1,122,0,0,134,33,0,0,24,55,6,0,32,121,122,0,3,34,30,33,41,122,34,3,3,35,117,122,25,36,35,1,42,122,36,0,1,121,1,0,1,120,0,0,134,37,0,0,24,55,6,0,122,121,120,0,41,120,37,24,42,120,120,24,0,38,120,0,38,120,38,15,0,39,120,0,1,120,164,3,1,121,132,0,5,121,39,121,3,41,120,121,1,120,20,107,1,122,4,0,134,121,0,0,116,78,6,0,120,41,122,0,0,42,110,0,25,43,42,4,1,121,4,0,1,122,0,0,134,44,0,0,24,55,6,0,43,121,122,0,0,112,44,0,0,45,112,0,0,46,110,0,25,47,46,8,25,48,47,4,1,122,4,0,1,121,0,0,134,49,0,0,24,55,6,0,48,122,121,0,0,50,110,0,25,52,50,4,1,121,4,0,1,122,0,0,134,53,0,0,24,55,6,0,52,121,122,0,3,54,49,53,15,55,45,54,0,56,110,0,120,55,2,0,119,0,139,0,1,122,4,0,1,121,0,0,134,57,0,0,24,55,6,0,56,122,121,0,0,111,57,0,0,58,111,0,0,59,110,0,25,60,59,8,1,121,4,0,1,122,0,0,134,61,0,0,24,55,6,0,60,121,122,0,0,63,110,0,1,122,4,0,1,121,0,0,134,64,0,0,24,55,6,0,63,122,121,0,3,65,61,64,15,66,58,65,0,67,112,0,120,66,2,0,119,0,111,0,0,68,111,0,134,121,0,0,124,108,5,0,67,68,0,0,134,69,0,0,96,107,6,0,19,121,69,119,0,70,121,0,19,121,70,115,0,71,121,0,0,106,71,0,41,121,71,24,42,121,121,24,0,72,121,0,32,107,72,46,121,107,18,0,0,74,108,0,41,121,74,24,42,121,121,24,0,75,121,0,32,76,75,32,121,76,85,0,0,77,106,0,41,121,77,24,42,121,121,24,0,78,121,0,33,79,78,32,121,79,79,0,1,122,32,0,134,121,0,0,172,88,6,0,122,0,0,0,119,0,74,0,0,80,106,0,41,121,80,24,42,121,121,24,0,81,121,0,134,82,0,0,4,109,6,0,81,0,0,0,134,83,0,0,188,105,6,0,82,0,0,0,33,85,83,0,121,85,62,0,1,121,2,0,1,122,0,0,134,86,0,0,24,55,6,0,116,121,122,0,41,122,86,16,42,122,122,16,0,87,122,0,19,122,87,118,0,88,122,0,33,89,88,0,38,122,89,1,0,90,122,0,19,122,90,115,0,91,122,0,41,122,91,24,42,122,122,24,33,92,122,0,121,92,13,0,134,122,0,0,116,105,6,0,0,93,106,0,41,122,93,24,42,122,122,24,0,94,122,0,134,122,0,0,172,88,6,0,94,0,0,0,134,122,0,0,92,106,6,0,119,0,31,0,0,96,111,0,41,122,96,5,0,97,122,0,0,98,112,0,3,99,97,98,41,122,99,3,3,100,117,122,0,109,100,0,0,101,109,0,42,122,101,0,1,121,1,0,1,120,0,0,134,102,0,0,24,55,6,0,122,121,120,0,41,120,102,24,42,120,120,24,0,103,120,0,32,104,103,43,0,105,108,0,41,120,105,24,42,120,120,24,0,4,120,0,1,120,43,0,125,5,104,120,4,0,0,0,134,120,0,0,172,88,6,0,5,0,0,0,119,0,1,0,0,6,111,0,25,7,6,1,0,111,7,0,119,0,128,255,25,8,67,1,0,112,8,0,119,0,98,255,134,120,0,0,112,146,4,0,56,0,0,0,137,114,0,0,139,0,0,0,140,2,83,0,0,0,0,0,2,78,0,0,60,162,0,0,1,76,0,0,136,79,0,0,0,77,79,0,136,79,0,0,25,79,79,16,137,79,0,0,130,79,0,0,136,80,0,0,49,79,79,80,196,109,3,0,135,79,0,0,0,3,0,0,0,14,1,0,2,79,0,0,68,162,0,0,1,80,4,0,1,81,0,0,134,25,0,0,24,55,6,0,79,80,81,0,1,81,0,0,14,36,25,81,121,36,56,1,0,47,3,0,0,58,14,0,134,69,0,0,196,12,5,0,47,58,0,0,32,74,69,255,120,74,49,1,134,75,0,0,148,98,6,0,1,81,4,0,1,80,0,0,134,4,0,0,24,55,6,0,78,81,80,0,25,5,4,32,1,81,4,0,134,80,0,0,116,78,6,0,5,75,81,0,1,80,4,0,1,81,0,0,134,6,0,0,24,55,6,0,78,80,81,0,25,7,6,32,1,81,4,0,1,80,0,0,134,8,0,0,24,55,6,0,7,81,80,0,1,80,4,0,1,81,0,0,134,9,0,0,24,55,6,0,78,80,81,0,25,10,9,60,1,81,4,0,1,80,0,0,134,11,0,0,24,55,6,0,10,81,80,0,4,12,8,11,1,80,4,0,1,81,0,0,134,13,0,0,24,55,6,0,78,80,81,0,25,15,13,52,1,81,4,0,1,80,0,0,134,16,0,0,24,55,6,0,15,81,80,0,4,17,12,16,2,81,0,0,76,162,0,0,1,79,4,0,134,80,0,0,116,78,6,0,81,17,79,0,134,18,0,0,176,97,6,0,2,79,0,0,80,162,0,0,1,81,4,0,134,80,0,0,116,78,6,0,79,18,81,0,1,80,4,0,1,81,0,0,134,19,0,0,24,55,6,0,78,80,81,0,25,20,19,36,1,80,4,0,134,81,0,0,116,78,6,0,20,18,80,0,2,81,0,0,64,162,0,0,1,80,4,0,1,79,0,0,134,21,0,0,24,55,6,0,81,80,79,0,1,79,4,0,1,80,0,0,134,22,0,0,24,55,6,0,78,79,80,0,25,23,22,32,1,80,4,0,1,79,0,0,134,24,0,0,24,55,6,0,23,80,79,0,1,79,4,0,1,80,0,0,134,26,0,0,24,55,6,0,78,79,80,0,25,27,26,36,1,80,4,0,1,79,0,0,134,28,0,0,24,55,6,0,27,80,79,0,134,29,0,0,168,63,6,0,21,24,28,0,32,30,29,255,120,30,196,0,2,79,0,0,68,162,0,0,1,80,4,0,1,81,0,0,134,31,0,0,24,55,6,0,79,80,81,0,2,81,0,0,76,162,0,0,1,80,4,0,1,79,0,0,134,32,0,0,24,55,6,0,81,80,79,0,2,79,0,0,80,162,0,0,1,80,4,0,1,81,0,0,134,33,0,0], eb + 215040);
  HEAPU8.set([24,55,6,0,79,80,81,0,134,34,0,0,168,63,6,0,31,32,33,0,32,35,34,255,120,35,170,0,2,81,0,0,72,162,0,0,1,80,4,0,1,79,0,0,134,37,0,0,24,55,6,0,81,80,79,0,1,79,4,0,1,80,0,0,134,38,0,0,24,55,6,0,78,79,80,0,25,39,38,32,1,80,4,0,1,79,0,0,134,40,0,0,24,55,6,0,39,80,79,0,1,79,4,0,1,80,0,0,134,41,0,0,24,55,6,0,78,79,80,0,25,42,41,36,1,80,4,0,1,79,0,0,134,43,0,0,24,55,6,0,42,80,79,0,134,44,0,0,168,63,6,0,37,40,43,0,32,45,44,255,120,45,136,0,2,79,0,0,72,162,0,0,1,80,4,0,1,81,0,0,134,46,0,0,24,55,6,0,79,80,81,0,134,81,0,0,56,73,6,0,46,0,0,0,2,81,0,0,64,162,0,0,1,80,4,0,1,79,0,0,134,48,0,0,24,55,6,0,81,80,79,0,25,49,48,36,42,80,49,0,1,81,1,0,1,82,1,0,134,79,0,0,116,78,6,0,80,81,82,0,1,79,4,0,1,82,0,0,134,50,0,0,24,55,6,0,78,79,82,0,25,51,50,56,1,82,4,0,1,79,0,0,134,52,0,0,24,55,6,0,51,82,79,0,1,79,0,0,14,53,52,79,121,53,74,0,1,79,4,0,1,82,0,0,134,54,0,0,24,55,6,0,78,79,82,0,25,55,54,56,1,82,4,0,1,79,0,0,134,56,0,0,24,55,6,0,55,82,79,0,1,79,4,0,1,82,0,0,134,57,0,0,24,55,6,0,78,79,82,0,25,59,57,52,1,82,4,0,1,79,0,0,134,60,0,0,24,55,6,0,59,82,79,0,2,79,0,0,80,162,0,0,1,82,4,0,1,81,0,0,134,61,0,0,24,55,6,0,79,82,81,0,134,62,0,0,168,63,6,0,56,60,61,0,32,63,62,255,120,63,36,0,1,81,4,0,1,82,0,0,134,64,0,0,24,55,6,0,78,81,82,0,25,65,64,56,1,82,4,0,1,81,0,0,134,66,0,0,24,55,6,0,65,82,81,0,1,82,0,0,1,79,0,0,134,81,0,0,164,140,5,0,66,82,79,0,1,81,4,0,1,79,0,0,134,67,0,0,24,55,6,0,78,81,79,0,25,68,67,56,1,79,4,0,1,81,0,0,134,70,0,0,24,55,6,0,68,79,81,0,134,81,0,0,116,236,4,0,70,0,0,0,134,81,0,0,128,186,3,0,134,81,0,0,188,95,6,0,119,0,5,0,1,2,255,255,0,73,2,0,137,77,0,0,139,73,0,0,2,81,0,0,68,162,0,0,1,79,4,0,1,82,0,0,134,71,0,0,24,55,6,0,81,79,82,0,134,82,0,0,164,179,5,0,71,0,0,0,2,82,0,0,68,162,0,0,1,79,4,0,1,81,0,0,134,72,0,0,24,55,6,0,82,79,81,0,134,81,0,0,96,152,2,0,72,0,0,0,1,2,0,0,0,73,2,0,137,77,0,0,139,73,0,0,1,2,255,255,0,73,2,0,137,77,0,0,139,73,0,0,1,2,255,255,0,73,2,0,137,77,0,0,139,73,0,0,140,0,62,0,0,0,0,0,2,55,0,0,172,26,0,0,2,56,0,0,168,26,0,0,2,57,0,0,41,217,0,0,1,53,0,0,136,58,0,0,0,54,58,0,136,58,0,0,25,58,58,32,137,58,0,0,130,58,0,0,136,59,0,0,49,58,58,59,44,115,3,0,135,58,0,0,25,52,54,8,0,51,54,0,2,58,0,0,39,217,0,0,42,58,58,0,1,59,1,0,1,60,0,0,134,1,0,0,24,55,6,0,58,59,60,0,1,60,255,0,19,60,1,60,0,12,60,0,33,23,12,0,121,23,50,0,2,60,0,0,37,217,0,0,42,60,60,0,1,59,1,0,1,58,0,0,134,34,0,0,24,55,6,0,60,59,58,0,41,58,34,24,42,58,58,24,0,44,58,0,33,45,44,0,121,45,35,0,1,58,188,117,1,59,4,0,1,60,0,0,134,46,0,0,24,55,6,0,58,59,60,0,1,59,4,0,134,60,0,0,116,78,6,0,55,46,59,0,1,60,184,117,1,59,4,0,1,58,0,0,134,47,0,0,24,55,6,0,60,59,58,0,1,59,4,0,134,58,0,0,116,78,6,0,56,47,59,0,2,58,0,0,37,217,0,0,42,58,58,0,1,59,1,0,1,60,0,0,134,48,0,0,24,55,6,0,58,59,60,0,42,59,57,0,1,58,1,0,134,60,0,0,116,78,6,0,59,48,58,0,119,0,4,0,1,53,4,0,119,0,2,0,1,53,4,0,32,60,53,4,121,60,77,1,2,60,0,0,5,209,0,0,42,60,60,0,1,58,1,0,1,59,0,0,134,2,0,0,24,55,6,0,60,58,59,0,41,59,2,24,42,59,59,24,33,3,59,0,121,3,4,0,2,50,0,0,212,17,1,0,119,0,8,0,2,50,0,0,194,17,1,0,2,58,0,0,194,17,1,0,134,59,0,0,144,18,6,0,58,51,0,0,1,49,1,0,134,4,0,0,24,71,6,0,42,58,57,0,1,60,1,0,134,59,0,0,116,78,6,0,58,4,60,0,41,59,4,24,42,59,59,24,0,5,59,0,1,59,27,0,1,61,95,0,138,5,59,61,116,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,124,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,128,118,3,0,68,118,3,0,132,118,3,0,136,118,3,0,140,118,3,0,68,118,3,0,144,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,148,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,152,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,156,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,200,118,3,0,68,118,3,0,244,118,3,0,32,119,3,0,76,119,3,0,68,118,3,0,120,119,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,68,118,3,0,164,119,3,0,68,118,3,0,68,118,3,0,68,118,3,0,208,119,3,0,1,60,204,2,1,58,0,0,1,61,4,0,134,59,0,0,116,78,6,0,60,58,61,0,0,6,50,0,134,59,0,0,144,18,6,0,6,52,0,0,1,49,0,0,119,0,99,0,1,53,16,0,119,0,105,0,119,0,8,0,119,0,18,0,119,0,28,0,119,0,38,0,119,0,48,0,119,0,58,0,119,0,68,0,119,0,78,0,1,60,1,0,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,255,255,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,78,0,1,60,0,0,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,255,255,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,67,0,1,60,1,0,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,0,0,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,56,0,1,60,255,255,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,0,0,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,45,0,1,60,0,0,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,1,0,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,34,0,1,60,1,0,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,1,0,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,23,0,1,60,255,255,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,1,0,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,12,0,1,60,255,255,1,58,4,0,134,59,0,0,116,78,6,0,55,60,58,0,1,58,255,255,1,60,4,0,134,59,0,0,116,78,6,0,56,58,60,0,119,0,1,0,0,7,49,0,41,59,7,24,42,59,59,24,33,8,59,0,40,59,8,1,0,9,59,0,120,9,31,255,119,0,1,0,32,59,53,16,121,59,15,0,2,61,0,0,37,217,0,0,42,61,61,0,1,58,0,0,1,60,1,0,134,59,0,0,116,78,6,0,61,58,60,0,134,59,0,0,44,81,6,0,1,0,0,0,0,43,0,0,137,54,0,0,139,43,0,0,42,59,57,0,1,60,1,0,1,58,0,0,134,10,0,0,24,55,6,0,59,60,58,0,41,58,10,24,42,58,58,24,0,11,58,0,134,13,0,0,188,105,6,0,11,0,0,0,33,14,13,0,121,14,21,0,42,58,57,0,1,60,1,0,1,59,0,0,134,15,0,0,24,55,6,0,58,60,59,0,41,59,15,24,42,59,59,24,0,16,59,0,134,17,0,0,92,102,6,0,16,0,0,0,1,59,255,0,19,59,17,59,0,18,59,0,42,60,57,0,1,58,1,0,134,59,0,0,116,78,6,0,60,18,58,0,42,59,57,0,1,58,1,0,1,60,0,0,134,19,0,0,24,55,6,0,59,58,60,0,2,58,0,0,37,217,0,0,42,58,58,0,1,59,1,0,134,60,0,0,116,78,6,0,58,19,59,0,1,60,4,0,1,59,0,0,134,20,0,0,24,55,6,0,55,60,59,0,1,60,188,117,1,58,4,0,134,59,0,0,116,78,6,0,60,20,58,0,1,59,4,0,1,58,0,0,134,21,0,0,24,55,6,0,56,59,58,0,1,59,184,117,1,60,4,0,134,58,0,0,116,78,6,0,59,21,60,0,1,58,232,106,1,60,2,0,1,59,0,0,134,22,0,0,24,55,6,0,58,60,59,0,41,59,22,16,42,59,59,16,0,24,59,0,1,59,0,2,19,59,24,59,0,25,59,0,33,26,25,0,38,59,26,1,0,27,59,0,1,59,255,0,19,59,27,59,0,28,59,0,1,59,255,0,19,59,28,59,0,29,59,0,33,30,29,0,121,30,42,0,1,59,5,0,134,31,0,0,20,36,6,0,59,0,0,0,32,32,31,0,121,32,36,0,1,59,3,0,134,33,0,0,20,36,6,0,59,0,0,0,26,35,33,1,1,60,4,0,134,59,0,0,116,78,6,0,55,35,60,0,1,59,3,0,134,36,0,0,20,36,6,0,59,0,0,0,26,37,36,1,1,60,4,0,134,59,0,0,116,78,6,0,56,37,60,0,1,59,4,0,1,60,0,0,134,38,0,0,24,55,6,0,55,59,60,0,32,39,38,0,1,60,4,0,1,59,0,0,134,40,0,0,24,55,6,0,56,60,59,0,32,41,40,0,1,59,0,0,125,42,39,41,59,0,0,0,120,42,223,255,119,0,1,0,1,60,204,2,1,58,0,0,1,61,4,0,134,59,0,0,116,78,6,0,60,58,61,0,1,0,1,0,0,43,0,0,137,54,0,0,139,43,0,0,140,1,75,0,0,0,0,0,1,69,0,0,136,71,0,0,0,70,71,0,136,71,0,0,25,71,71,64,137,71,0,0,130,71,0,0,136,72,0,0,49,71,71,72,196,122,3,0,135,71,0,0,25,65,70,40,25,64,70,32,25,67,70,24,25,66,70,16,25,63,70,8,0,62,70,0,0,1,0,0,1,72,2,0,1,73,1,0,135,71,25,0,72,73,0,0,1,71,8,3,1,73,4,0,1,72,0,0,134,2,0,0,24,55,6,0,71,73,72,0,28,72,2,10,38,72,72,255,0,13,72,0,1,72,8,3,1,73,4,0,1,71,0,0,134,24,0,0,24,55,6,0,72,73,71,0,4,35,24,13,1,73,8,3,1,72,4,0,134,71,0,0,116,78,6,0,73,35,72,0,1,72,2,0,1,73,25,0,135,71,25,0,72,73,0,0,134,71,0,0,32,107,6,0,0,46,1,0,1,71,0,0,134,55,0,0,196,207,4,0,46,71,0,0,0,60,55,0,2,71,0,0,7,209,0,0,42,71,71,0,1,73,1,0,1,72,0,0,134,56,0,0,24,55,6,0,71,73,72,0,41,72,56,24,42,72,72,24,33,57,72,0,120,57,141,0,2,72,0,0,76,162,0,0,1,73,4,0,1,71,0,0,134,58,0,0,24,55,6,0,72,73,71,0,26,3,58,2,1,73,0,0,2,72,0,0,47,38,1,0,134,71,0,0,92,8,6,0,3,73,72,62,0,4,1,0,1,71,0,0,134,5,0,0,196,207,4,0,4,71,0,0,0,60,5,0,0,6,1,0,41,71,6,24,42,71,71,24,0,7,71,0,33,8,7,115,121,8,20,0,0,9,1,0,41,71,9,24,42,71,71,24,0,10,71,0,33,11,10,104,121,11,14,0,0,12,60,0,134,14,0,0,64,51,6,0,12,0,0,0,1,72,4,0,134,71,0,0,116,78,6,0,63,14,72,0,2,72,0,0,42,38,1,0,134,71,0,0,120,61,6,0,72,63,0,0,0,15,60,0,1,71,8,3,1,72,4,0,1,73,0,0,134,16,0,0,24,55,6,0,71,72,73,0,1,72,4,0,134,73,0,0,116,78,6,0,66,15,72,0,25,68,66,4,1,72,4,0,134,73,0,0,116,78,6,0,68,16,72,0,2,72,0,0,58,38,1,0,134,73,0,0,120,61,6,0,72,66,0,0,2,73,0,0,76,162,0,0,1,72,4,0,1,71,0,0,134,44,0,0,24,55,6,0,73,72,71,0,26,45,44,1,1,72,0,0,134,71,0,0,124,108,5,0,45,72,0,0,134,71,0,0,224,106,6,0,1,71,8,3,1,72,4,0,1,73,0,0,134,47,0,0,24,55,6,0,71,72,73,0,2,73,0,0,241,208,0,0,42,73,73,0,1,72,1,0,1,71,0,0,134,48,0,0,24,55,6,0,73,72,71,0,1,71,255,0,19,71,48,71,0,49,71,0,33,50,49,0,1,71,3,0,1,72,0,0,125,51,50,71,72,0,0,0,0,52,1,0,134,72,0,0,240,255,1,0,47,51,52,0,2,71,0,0,167,37,1,0,134,72,0,0,192,79,6,0,71,65,0,0,2,72,0,0,60,195,0,0,1,71,4,0,1,73,0,0,134,53,0,0,24,55,6,0,72,71,73,0,134,73,0,0,116,193,4,0,53,0,0,0,2,73,0,0,56,195,0,0,1,71,4,0,1,72,0,0,134,54,0,0,24,55,6,0,73,71,72,0,2,71,0,0,42,225,0,0,1,73,10,0,134,72,0,0,72,204,3,0,71,73,54,0,1,73,0,0,134,72,0,0,20,99,6,0,73,0,0,0,137,70,0,0,139,0,0,0,1,73,124,120,135,72,34,0,73,0,0,0,1,72,124,120,135,17,38,0,72,0,0,0,0,61,17,0,1,73,8,0,1,71,0,0,134,72,0,0,124,108,5,0,73,71,0,0,1,59,128,120,0,18,59,0,1,72,4,0,1,71,0,0,134,19,0,0,24,55,6,0,18,72,71,0,1,71,0,0,14,20,19,71,120,20,2,0,119,0,13,0,0,21,59,0,25,22,21,4,0,59,22,0,1,71,4,0,1,72,0,0,134,23,0,0,24,55,6,0,21,71,72,0,134,72,0,0,236,86,6,0,23,0,0,0,119,0,235,255,0,25,60,0,134,26,0,0,212,85,6,0,25,0,0,0,0,27,60,0,1,71,17,0,134,72,0,0,220,36,6,0,71,26,27,0,0,28,1,0,41,72,28,24,42,72,72,24,0,29,72,0,32,30,29,115,121,30,3,0,1,69,11,0,119,0,18,0,0,31,1,0,41,72,31,24,42,72,72,24,0,32,72,0,32,33,32,104,121,33,3,0,1,69,11,0,119,0,10,0,0,34,60,0,134,36,0,0,64,51,6,0,34,0,0,0,1,71,16,0,1,73,33,0,134,72,0,0,220,36,6,0,71,73,36,0,32,72,69,11,121,72,7,0,1,73,16,0,1,71,32,0,1,74,32,0,134,72,0,0,208,39,6,0,73,71,74,0,2,72,0,0,44,233,0,0,134,37,0,0,212,85,6,0,72,0,0,0,1,74,14,0,2,71,0,0,44,233,0,0,134,72,0,0,220,36,6,0,74,37,71,0,1,72,8,3,1,71,4,0,1,74,0,0,134,38,0,0,24,55,6,0,72,71,74,0,1,71,4,0,134,74,0,0,116,78,6,0,67,38,71,0,2,71,0,0,42,225,0,0,2,72,0,0,74,38,1,0,134,74,0,0,248,82,6,0,71,72,67,0,2,74,0,0,42,225,0,0,134,39,0,0,212,85,6,0,74,0,0,0,1,72,15,0,134,74,0,0,124,108,5,0,72,39,0,0,2,72,0,0,42,225,0,0,134,74,0,0,236,86,6,0,72,0,0,0,0,40,61,0,25,41,40,20,1,74,4,0,1,72,0,0,134,42,0,0,24,55,6,0,41,74,72,0,1,72,108,7,3,43,72,42,1,74,4,0,134,72,0,0,116,78,6,0,64,43,74,0,2,74,0,0,42,225,0,0,2,71,0,0,80,38,1,0,134,72,0,0,248,82,6,0,74,71,64,0,1,71,18,0,1,74,26,0,2,73,0,0,42,225,0,0,134,72,0,0,220,36,6,0,71,74,73,0,2,72,0,0,76,162,0,0,1,73,4,0,1,74,0,0,134,44,0,0,24,55,6,0,72,73,74,0,26,45,44,1,1,73,0,0,134,74,0,0,124,108,5,0,45,73,0,0,134,74,0,0,224,106,6,0,1,74,8,3,1,73,4,0,1,72,0,0,134,47,0,0,24,55,6,0,74,73,72,0,2,72,0,0,241,208,0,0,42,72,72,0,1,73,1,0,1,74,0,0,134,48,0,0,24,55,6,0,72,73,74,0,1,74,255,0,19,74,48,74,0,49,74,0,33,50,49,0,1,74,3,0,1,73,0,0,125,51,50,74,73,0,0,0,0,52,1,0,134,73,0,0,240,255,1,0,47,51,52,0,2,74,0,0,167,37,1,0,134,73,0,0,192,79,6,0,74,65,0,0,2,73,0,0,60,195,0,0,1,74,4,0,1,72,0,0,134,53,0,0,24,55,6,0,73,74,72,0,134,72,0,0,116,193,4,0,53,0,0,0,2,72,0,0,56,195,0,0,1,74,4,0,1,73,0,0,134,54,0,0,24,55,6,0,72,74,73,0,2,74,0,0,42,225,0,0,1,72,10,0,134,73,0,0,72,204,3,0,74,72,54,0,1,72,0,0,134,73,0,0,20,99,6,0,72,0,0,0,137,70,0,0,139,0,0,0,140,2,68,0,0,0,0,0,1,61,0,0,136,64,0,0,0,62,64,0,136,64,0,0,25,64,64,112,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,120,129,3,0,135,64,0,0,25,50,62,40,25,52,62,24,25,51,62,16,0,49,62,0,25,48,62,52,42,64,1,0,1,65,1,0,1,66,0,0,134,5,0,0,24,55,6,0,64,65,66,0,41,66,5,24,42,66,66,24,0,6,66,0,2,66,0,0,109,82,1,0,1,65,4,0,134,47,0,0,232,220,3,0,66,6,65,0,1,65,0,0,13,17,47,65,121,17,10,0,134,28,0,0,4,85,6,0,1,66,22,0,1,64,4,0,134,65,0,0,116,78,6,0,28,66,64,0,1,2,0,0,119,0,7,1,1,65,120,4,135,39,5,0,65,0,0,0,1,65,0,0,13,42,39,65,121,42,3,0,1,2,0,0,119,0,255,0,0,60,39,0,25,63,60,112,1,64,0,0,1,66,4,0,134,65,0,0,116,78,6,0,60,64,66,0,25,60,60,4,54,65,60,63,32,130,3,0,1,65,43,0,134,43,0,0,160,89,6,0,1,65,0,0,1,65,0,0,13,44,43,65,121,44,12,0,41,65,5,24,42,65,65,24,32,45,65,114,1,65,8,0,1,66,4,0,125,46,45,65,66,0,0,0,1,65,4,0,134,66,0,0,116,78,6,0,39,46,65,0,1,66,101,0,134,7,0,0,160,89,6,0,1,66,0,0,1,66,0,0,13,8,7,66,121,8,3,0,0,9,5,0,119,0,27,0,1,65,4,0,134,66,0,0,116,78,6,0,49,0,65,0,25,53,49,4,1,65,2,0,1,64,4,0,134,66,0,0,116,78,6,0,53,65,64,0,25,58,49,8,1,64,1,0,1,65,4,0,134,66,0,0,116,78,6,0,58,64,65,0,1,65,221,0,135,66,39,0,65,49,0,0,42,66,1,0,1,65,1,0,1,64,0,0,134,3,0,0,24,55,6,0,66,65,64,0,0,9,3,0,41,64,9,24,42,64,64,24,32,10,64,97,121,10,54,0,1,65,4,0,134,64,0,0,116,78,6,0,51,0,65,0,25,59,51,4,1,65,3,0,1,66,4,0,134,64,0,0,116,78,6,0,59,65,66,0,1,64,221,0,135,11,39,0,64,51,0,0,1,64,0,4,19,64,11,64,0,12,64,0,32,13,12,0,121,13,22,0,1,64,0,4,20,64,11,64,0,14,64,0,1,66,4,0,134,64,0,0,116,78,6,0,52,0,66,0,25,54,52,4,1,66,4,0,1,65,4,0,134,64,0,0,116,78,6,0,54,66,65,0,25,55,52,8,1,65,4,0,134,64,0,0,116,78,6,0,55,14,65,0,1,65,221,0,135,64,39,0,65,52,0,0,1,64,4,0,1,65,0,0,134,15,0,0,24,55,6,0,39,64,65,0,1,65,128,0,20,65,15,65,0,16,65,0,1,64,4,0,134,65,0,0,116,78,6,0,39,16,64,0,0,24,16,0,119,0,7,0,1,65,4,0,1,64,0,0,134,4,0,0,24,55,6,0,39,65,64,0,0,24,4,0,25,18,39,60,1,65,4,0,134,64,0,0,116,78,6,0,18,0,65,0,25,19,39,120,25,20,39,44,1,65,4,0,134,64,0,0,116,78,6,0,20,19,65,0,25,21,39,48,1,65,0,4,1,66,4,0,134,64,0,0,116,78,6,0,21,65,66,0,25,22,39,75,42,66,22,0,1,65,255,255,1,67,1,0,134,64,0,0,116,78,6,0,66,65,67,0,38,64,24,8,0,23,64,0,32,25,23,0,121,25,27,0,1,67,4,0,134,64,0,0,116,78,6,0,50,0,67,0,25,56,50,4,1,67,1,84,1,65,4,0,134,64,0,0,116,78,6,0,56,67,65,0,25,57,50,8,1,65,4,0,134,64,0,0,116,78,6,0,57,48,65,0,1,64,54,0,135,26,40,0,64,50,0,0,32,27,26,0,121,27,7,0,42,65,22,0,1,67,10,0,1,66,1,0,134,64,0,0,116,78,6,0,65,67,66,0,25,29,39,32,1,66,17,0,1,67,4,0,134,64,0,0,116,78,6,0,29,66,67,0,25,30,39,36,1,67,15,0,1,66,4,0,134,64,0,0,116,78,6,0,30,67,66,0,25,31,39,40,1,66,16,0,1,67,4,0,134,64,0,0,116,78,6,0,31,66,67,0,25,32,39,12,1,67,14,0,1,66,4,0,134,64,0,0,116,78,6,0,32,67,66,0,2,64,0,0,64,194,0,0,1,66,4,0,1,67,0,0,134,33,0,0,24,55,6,0,64,66,67,0,32,34,33,0,121,34,7,0,25,35,39,76,1,66,255,255,1,64,4,0,134,67,0,0,116,78,6,0,35,66,64,0,2,64,0,0,88,194,0,0,135,67,41,0,64,0,0,0,2,67,0,0,84,194,0,0,1,64,4,0,1,66,0,0,134,36,0,0,24,55,6,0,67,64,66,0,25,37,39,56,1,64,4,0,134,66,0,0,116,78,6,0,37,36,64,0,32,38,36,0,120,38,7,0,0,40,36,0,25,41,40,52,1,64,4,0,134,66,0,0,116,78,6,0,41,39,64,0,2,64,0,0,84,194,0,0,1,67,4,0,134,66,0,0,116,78,6,0,64,39,67,0,2,67,0,0,88,194,0,0,135,66,42,0,67,0,0,0,0,2,39,0,137,62,0,0,139,2,0,0,140,1,110,0,0,0,0,0,2,104,0,0,124,162,0,0,2,105,0,0,116,162,0,0,2,106,0,0,255,255,0,0,1,102,0,0,136,107,0,0,0,103,107,0,136,107,0,0,25,107,107,32,137,107,0,0,130,107,0,0,136,108,0,0,49,107,107,108,100,134,3,0,135,107,0,0,0,2,0,0,1,99,27,2,2,107,0,0,60,162,0,0,1,108,4,0,1,109,0,0,134,13,0,0,24,55,6,0,107,108,109,0,25,24,13,40,1,109,4,0,1,108,0,0,134,35,0,0,24,55,6,0,24,109,108,0,0,100,35,0,1,98,0,0,0,46,98,0,34,57,46,3,1,108,4,0,1,109,0,0,134,68,0,0,24,55,6,0,104,108,109,0,120,57,2,0,119,0,129,0,0,79,98,0,1,109,1,0,22,109,109,79,0,90,109,0,19,109,68,90,0,3,109,0,33,4,3,0,121,4,117,0,0,5,98,0,27,6,5,5,0,101,6,0,0,7,98,0,41,109,7,1,3,8,105,109,1,109,2,0,1,108,0,0,134,9,0,0,24,55,6,0,8,109,108,0,41,108,9,16,42,108,108,16,0,10,108,0,38,108,10,7,0,11,108,0,19,108,11,106,0,12,108,0,0,97,12,0,0,14,100,0,0,15,101,0,1,108,2,0,22,108,108,15,0,16,108,0,19,108,14,16,0,17,108,0,33,18,17,0,121,18,3,0,1,102,6,0,119,0,8,0,0,19,97,0,41,108,19,16,42,108,108,16,0,20,108,0,32,21,20,1,120,21,2,0,1,102,6,0,32,108,102,6,121,108,63,0,1,102,0,0,0,22,100,0,0,23,101,0,1,108,4,0,22,108,108,23,0,25,108,0,19,108,22,25,0,26,108,0,33,27,26,0,120,27,7,0,0,28,97,0,41,108,28,16,42,108,108,16,0,29,108,0,32,30,29,2,120,30,47,0,0,31,100,0,0,32,101,0,1,108,8,0,22,108,108,32,0,33,108,0,19,108,31,33,0,34,108,0,33,36,34,0,120,36,7,0,0,37,97,0,41,108,37,16,42,108,108,16,0,38,108,0,32,39,38,3,120,39,32,0,0,40,100,0,0,41,101,0,1,108,16,0,22,108,108,41,0,42,108,0,19,108,40,42,0,43,108,0,33,44,43,0,120,44,7,0,0,45,97,0,41,108,45,16,42,108,108,16,0,47,108,0,32,48,47,5,120,48,17,0,0,49,100,0,0,50,101,0,1,108,1,0,22,108,108,50,0,51,108,0,19,108,49,51,0,52,108,0,33,53,52,0,120,53,23,0,0,54,97,0,41,108,54,16,42,108,108,16,0,55,108,0,32,56,55,0,120,56,2,0,119,0,16,0,0,58,98,0,1,108,1,0,22,108,108,58,0,59,108,0,1,108,4,0,1,109,0,0,134,60,0,0,24,55,6,0,104,108,109,0,21,109,60,59,0,61,109,0,1,108,4,0,134,109,0,0,116,78,6,0,104,61,108,0,0,62,98,0,25,63,62,1,0,98,63,0,119,0,120,255,38,109,68,8,0,64,109,0,33,65,64,0,121,65,18,0,0,66,100,0,1,109,16,66,19,109,66,109,0,67,109,0,33,69,67,0,120,69,12,0,1,109,4,0,1,108,0,0,134,70,0,0,24,55,6,0,104,109,108,0,40,108,70,8,0,71,108,0,1,109,4,0,134,108,0,0,116,78,6,0,104,71,109,0,1,108,4,0,1,109,0,0,134,72,0,0,24,55,6,0,104,108,109,0,38,109,72,96,0,73,109,0,33,74,73,0,121,74,19,0,0,75,100,0,2,109,0,0,0,0,0,2,19,109,75,109,0,76,109,0,33,77,76,0,120,77,12,0,1,109,4,0,1,108,0,0,134,78,0,0,24,55,6,0,104,109,108,0,38,108,78,159,0,80,108,0,1,109,4,0,134,108,0,0,116,78,6,0,104,80,109,0,1,108,4,0,1,109,0,0,134,81,0,0,24,55,6,0,104,108,109,0,33,82,81,0,120,82,5,0,1,1,255,255,0,96,1,0,137,103,0,0,139,96,0,0,2,109,0,0,112,162,0,0,1,108,4,0,1,107,0,0,134,83,0,0,24,55,6,0,109,108,107,0,2,107,0,0,108,162,0,0,1,108,4,0,1,109,0,0,134,84,0,0,24,55,6,0,107,108,109,0,134,85,0,0,124,170,4,0,83,84,0,0,0,98,85,0,0,86,98,0,33,87,86,0,121,87,20,0,1,109,2,0,1,108,0,0,134,88,0,0,24,55,6,0,105,109,108,0,41,108,88,16,42,108,108,16,0,89,108,0,38,108,89,3,0,91,108,0,33,92,91,0,121,92,6,0,0,93,98,0,1,108,8,1,3,94,108,93,0,99,94,0,119,0,3,0,1,99,255,255,119,0,1,0,0,95,99,0,0,1,95,0,0,96,1,0,137,103,0,0,139,96,0,0,140,2,102,0,0,0,0,0,1,94,0,0,136,96,0,0,0,95,96,0,136,96,0,0,25,96,96,32,137,96,0,0,130,96,0,0,136,97,0,0,49,96,96,97,160,138,3,0,135,96,0,0,25,2,95,16,0,4,0,0,0,15,1,0,1,93,255,255,2,96,0,0,76,159,0,0,1,97,4,0,1,98,0,0,134,26,0,0,24,55,6,0,96,97,98,0,33,37,26,0,121,37,12,0,2,98,0,0,76,159,0,0,1,97,4,0,1,96,0,0,134,48,0,0,24,55,6,0,98,97,96,0,0,3,48,0,0,91,3,0,137,95,0,0,139,91,0,0,0,59,4,0,2,97,0,0,2,0,205,171,134,96,0,0,72,32,6,0,59,97,0,0,0,70,15,0,1,96,0,0,13,81,70,96,0,92,4,0,121,81,16,0,1,97,0,0,134,96,0,0,156,47,5,0,92,97,0,0,2,96,0,0,76,159,0,0,1,97,4,0,1,98,0,0,134,5,0,0,24,55,6,0,96,97,98,0,0,3,5,0,0,91,3,0,137,95,0,0,139,91,0,0,1,97,1,0,134,98,0,0,156,47,5,0,92,97,0,0,0,6,4,0,0,7,15,0,25,8,7,8,1,96,4,0,1,99,0,0,134,97,0,0,24,55,6,0,8,96,99,0,1,99,4,0,134,98,0,0,116,78,6,0,2,97,99,0,25,99,2,4,25,96,8,4,1,100,4,0,1,101,0,0,134,97,0,0,24,55,6,0,96,100,101,0,1,101,4,0,134,98,0,0,116,78,6,0,99,97,101,0,134,98,0,0,44,9,6,0,6,2,0,0,0,9,4,0,0,10,15,0,25,11,10,16,42,98,11,0,1,101,1,0,1,97,0,0,134,12,0,0,24,55,6,0,98,101,97,0,1,97,255,0,19,97,12,97,0,13,97,0,134,97,0,0,68,5,6,0,9,13,0,0,0,14,4,0,0,16,15,0,25,17,16,17,42,97,17,0,1,101,1,0,1,98,0,0,134,18,0,0,24,55,6,0,97,101,98,0,134,98,0,0,120,27,6,0,14,18,0,0,0,19,4,0,0,20,15,0,25,21,20,18,42,98,21,0,1,101,1,0,1,97,0,0,134,22,0,0,24,55,6,0,98,101,97,0,134,97,0,0,120,27,6,0,19,22,0,0,0,23,4,0,0,24,15,0,25,25,24,19,42,97,25,0,1,101,1,0,1,98,0,0,134,27,0,0,24,55,6,0,97,101,98,0,134,98,0,0,120,27,6,0,23,27,0,0,0,28,15,0,25,29,28,20,1,98,4,0,1,101,0,0,134,30,0,0,24,55,6,0,29,98,101,0,1,101,216,106,13,31,30,101,121,31,12,0,0,32,4,0,1,98,0,0,134,101,0,0,156,47,5,0,32,98,0,0,0,33,4,0,1,98,1,0,134,101,0,0,156,47,5,0,33,98,0,0,119,0,124,0,0,34,15,0,25,35,34,20,1,101,4,0,1,98,0,0,134,36,0,0,24,55,6,0,35,101,98,0,1,98,0,0,14,38,36,98,120,38,12,0,0,72,4,0,1,101,0,0,134,98,0,0,156,47,5,0,72,101,0,0,0,73,4,0,1,101,0,0,134,98,0,0,156,47,5,0,73,101,0,0,119,0,103,0,1,98,116,3,1,101,4,0,1,97,0,0,134,39,0,0,24,55,6,0,98,101,97,0,0,40,15,0,25,41,40,20,1,97,4,0,1,101,0,0,134,42,0,0,24,55,6,0,41,97,101,0,134,43,0,0,172,233,5,0,39,42,0,0,0,93,43,0,0,44,93,0,1,101,0,0,17,45,101,44,121,45,12,0,0,46,4,0,1,97,1,0,134,101,0,0,156,47,5,0,46,97,0,0,0,47,4,0,0,49,93,0,134,101,0,0,156,47,5,0,47,49,0,0,119,0,71,0,1,101,112,3,1,97,4,0,1,98,0,0,134,50,0,0,24,55,6,0,101,97,98,0,0,51,15,0,25,52,51,20,1,98,4,0,1,97,0,0,134,53,0,0,24,55,6,0,52,98,97,0,134,54,0,0,156,231,5,0,50,53,0,0,0,93,54,0,0,55,93,0,1,97,0,0,17,56,97,55,121,56,12,0,0,57,4,0,1,98,2,0,134,97,0,0,156,47,5,0,57,98,0,0,0,58,4,0,0,60,93,0,134,97,0,0,156,47,5,0,58,60,0,0,119,0,39,0,0,61,15,0,25,62,61,20,1,97,4,0,1,98,0,0,134,63,0,0,24,55,6,0,62,97,98,0,1,98,36,107,1,97,9,0,134,64,0,0,220,245,5,0,98,63,97,0,0,93,64,0,0,65,93,0,1,97,0,0,17,66,97,65,0,67,4,0,121,66,11,0,1,98,3,0,134,97,0,0,156,47,5,0,67,98,0,0,0,68,4,0,0,69,93,0,134,97,0,0,156,47,5,0,68,69,0,0,119,0,11,0,1,98,0,0,134,97,0,0,156,47,5,0,67,98,0,0,0,71,4,0,1,98,1,0,134,97,0,0,156,47,5,0,71,98,0,0,119,0,1,0,0,74,4,0,0,75,15,0,25,76,75,24,1,97,2,0,1,98,0,0,134,77,0,0,24,55,6,0,76,97,98,0,134,98,0,0,184,141,5,0,74,77,0,0,0,78,4,0,0,79,15,0,25,80,79,28,134,98,0,0,104,31,5,0,78,80,0,0,0,82,4,0,0,83,15,0,25,84,83,68,1,98,4,0,1,97,0,0,134,85,0,0,24,55,6,0,84,98,97,0,134,97,0,0,156,219,5,0,82,85,0,0,0,86,4,0,0,87,15,0,25,88,87,72,1,97,4,0,1,98,0,0,134,89,0,0,24,55,6,0,88,97,98,0,134,98,0,0,244,228,5,0,86,89,0,0,2,98,0,0,76,159,0,0,1,97,4,0,1,101,0,0,134,90,0,0,24,55,6,0,98,97,101,0,0,3,90,0,0,91,3,0,137,95,0,0,139,91,0,0,140,3,106,0,0,0,0,0,1,101,0,0,136,103,0,0,0,102,103,0,136,103,0,0,25,103,103,32,137,103,0,0,130,103,0,0,136,104,0,0,49,103,103,104,232,143,3,0,135,103,0,0,0,4,0,0,0,15,1,0,0,26,2,0,1,100,0,0,1,99,0,0,2,103,0,0,76,159,0,0,1,104,4,0,1,105,0,0,134,37,0,0,24,55,6,0,103,104,105,0,33,48,37,0,121,48,12,0,2,105,0,0,76,159,0,0,1,104,4,0,1,103,0,0,134,59,0,0,24,55,6,0,105,104,103,0,0,3,59,0,0,98,3,0,137,102,0,0,139,98,0,0,0,70,4,0,2,104,0,0,14,0,205,171,134,103,0,0,72,32,6,0,70,104,0,0,0,81,4,0,0,92,26,0,134,103,0,0,156,47,5,0,81,92,0,0,1,100,0,0,0,5,100,0,0,6,26,0,15,7,5,6,120,7,2,0,119,0,203,0,0,8,100,0,0,9,15,0,41,103,8,4,3,10,9,103,25,11,10,4,1,103,4,0,1,104,0,0,134,12,0,0,24,55,6,0,11,103,104,0,1,104,19,0,13,13,12,104,121,13,3,0,1,99,1,0,119,0,138,0,0,14,100,0,0,16,15,0,41,104,14,4,3,17,16,104,25,18,17,4,1,104,4,0,1,103,0,0,134,19,0,0,24,55,6,0,18,104,103,0,1,103,23,0,13,20,19,103,121,20,3,0,1,99,2,0,119,0,123,0,0,21,100,0,0,22,15,0,41,103,21,4,3,23,22,103,25,24,23,4,1,103,4,0,1,104,0,0,134,25,0,0,24,55,6,0,24,103,104,0,1,104,24,0,13,27,25,104,121,27,3,0,1,99,3,0,119,0,108,0,0,28,100,0,0,29,15,0,41,104,28,4,3,30,29,104,25,31,30,4,1,104,4,0,1,103,0,0,134,32,0,0,24,55,6,0,31,104,103,0,1,103,22,0,13,33,32,103,121,33,3,0,1,99,4,0,119,0,93,0,0,34,100,0,0,35,15,0,41,103,34,4,3,36,35,103,25,38,36,4,1,103,4,0,1,104,0,0,134,39,0,0,24,55,6,0,38,103,104,0,1,104,20,0,13,40,39,104,121,40,3,0,1,99,5,0,119,0,78,0,0,41,100,0,0,42,15,0,41,104,41,4,3,43,42,104,25,44,43,4,1,104,4,0,1,103,0,0,134,45,0,0,24,55,6,0,44,104,103,0,1,103,26,0,13,46,45,103,121,46,3,0,1,99,6,0,119,0,63,0,0,47,100,0,0,49,15,0,41,103,47,4,3,50,49,103,25,51,50,4,1,103,4,0,1,104,0,0,134,52,0,0,24,55,6,0,51,103,104,0,1,104,8,0,13,53,52,104,121,53,3,0,1,99,7,0,119,0,48,0,0,54,100,0,0,55,15,0,41,104,54,4,3,56,55,104,25,57,56,4,1,104,4,0,1,103,0,0,134,58,0,0,24,55,6,0,57,104,103,0,1,103,10,0,13,60,58,103,121,60,3,0,1,99,8,0,119,0,33,0,0,61,100,0,0,62,15,0,41,103,61,4,3,63,62,103,25,64,63,4,1,103,4,0,1,104,0,0,134,65,0,0,24,55,6,0,64,103,104,0,1,104,11,0,13,66,65,104,121,66,3,0,1,99,9,0,119,0,18,0,0,67,100,0,0,68,15,0,41,104,67,4,3,69,68,104,25,71,69,4,1,104,4,0,1,103,0,0,134,72,0,0,24,55,6,0,71,104,103,0,1,103,0,0,13,73,72,103,121,73,3,0,1,99,0,0,119,0,3,0,1,99,255,255,119,0,1,0,0,74,4,0,0,75,100,0,0,76,15,0,41,103,75,4,3,77,76,103,1,103,4,0,1,104,0,0,134,78,0,0,24,55,6,0,77,103,104,0,134,104,0,0,156,47,5,0,74,78,0,0,0,79,4,0,0,80,99,0,134,104,0,0,156,47,5,0,79,80,0,0,0,82,4,0,0,83,100,0,0,84,15,0,41,104,83,4,3,85,84,104,25,86,85,8,1,104,4,0,1,103,0,0,134,87,0,0,24,55,6,0,86,104,103,0,134,103,0,0,156,47,5,0,82,87,0,0,0,88,4,0,0,89,100,0,0,90,15,0,41,103,89,4,3,91,90,103,25,93,91,12,1,103,4,0,1,104,0,0,134,94,0,0,24,55,6,0,93,103,104,0,134,104,0,0,156,47,5,0,88,94,0,0,0,95,100,0,25,96,95,1,0,100,96,0,119,0,50,255,2,104,0,0,76,159,0,0,1,103,4,0,1,105,0,0,134,97,0,0,24,55,6,0,104,103,105,0,0,3,97,0,0,98,3,0,137,102,0,0,139,98,0,0,140,5,87,0,0,0,0,0,1,82,0,0,136,84,0,0,0,83,84,0,136,84,0,0,25,84,84,112,137,84,0,0,130,84,0,0,136,85,0,0,49,84,84,85,24,148,3,0,135,84,0,0,25,71,83,64,25,70,83,48,25,69,83,32,25,72,83,16,25,68,83,8,0,67,83,0,0,5,0,0,0,6,1,0,0,17,2,0,0,28,3,0,0,39,4,0,0,50,28,0,25,61,50,16,42,84,61,0,1,85,1,0,1,86,0,0,134,63,0,0,24,55,6,0,84,85,86,0,1,86,255,0,19,86,63,86,0,64,86,0,33,65,64,0,120,65,82,0,0,7,28,0,25,8,7,12,1,86,4,0,1,85,0,0,134,9,0,0,24,55,6,0,8,86,85,0,1,85,0,0,14,10,9,85,120,10,72,0,0,48,5,0,25,49,48,48,1,85,4,0,1,86,0,0,134,51,0,0,24,55,6,0,49,85,86,0,32,52,51,1,121,52,31,0,0,53,17,0,134,54,0,0,64,51,6,0,53,0,0,0,0,55,17,0,0,56,6,0,1,85,4,0,134,86,0,0,116,78,6,0,70,54,85,0,25,75,70,4,1,85,4,0,134,86,0,0,116,78,6,0,75,55,85,0,25,76,70,8,1,85,4,0,134,86,0,0,116,78,6,0,76,56,85,0,2,85,0,0,42,225,0,0,2,84,0,0,146,51,1,0,134,86,0,0,248,82,6,0,85,84,70,0,137,83,0,0,139,0,0,0,119,0,33,0,0,57,5,0,25,58,57,48,1,86,4,0,1,84,0,0,134,59,0,0,24,55,6,0,58,86,84,0,0,60,17,0,0,62,6,0,1,86,4,0,134,84,0,0,116,78,6,0,71,59,86,0,25,77,71,4,1,86,4,0,134,84,0,0,116,78,6,0,77,60,86,0,25,78,71,8,1,86,4,0,134,84,0,0,116,78,6,0,78,62,86,0,2,86,0,0,42,225,0,0,2,85,0,0,156,51,1,0,134,84,0,0,248,82,6,0,86,85,71,0,137,83,0,0,139,0,0,0,0,11,5,0,25,12,11,48,1,84,4,0,1,85,0,0,134,13,0,0,24,55,6,0,12,84,85,0,32,14,13,1,121,14,14,0,0,15,6,0,1,84,4,0,134,85,0,0,116,78,6,0,67,15,84,0,2,84,0,0,42,225,0,0,2,86,0,0,104,51,1,0,134,85,0,0,248,82,6,0,84,86,67,0,119,0,25,0,0,16,5,0,25,18,16,48,1,85,4,0,1,86,0,0,134,19,0,0,24,55,6,0,18,85,86,0,0,20,6,0,1,85,4,0,134,86,0,0,116,78,6,0,68,19,85,0,25,79,68,4,1,85,4,0,134,86,0,0,116,78,6,0,79,20,85,0,2,85,0,0,42,225,0,0,2,84,0,0,110,51,1,0,134,86,0,0,248,82,6,0,85,84,68,0,2,86,0,0,42,225,0,0,135,21,22,0,86,0,0,0,2,86,0,0,42,225,0,0,3,22,86,21,0,66,22,0,0,23,28,0,25,24,23,16,42,86,24,0,1,84,1,0,1,85,0,0,134,25,0,0,24,55,6,0,86,84,85,0,41,85,25,24,42,85,85,24,33,26,85,0,121,26,34,0,0,27,66,0,0,29,28,0,1,85,4,0,1,84,0,0,134,30,0,0,24,55,6,0,29,85,84,0,0,31,39,0,0,32,5,0,135,33,43,0,31,32,0,0,0,34,17,0,1,85,4,0,134,84,0,0,116,78,6,0,72,30,85,0,25,80,72,4,1,85,4,0,134,84,0,0,116,78,6,0,80,33,85,0,25,81,72,8,1,85,4,0,134,84,0,0,116,78,6,0,81,34,85,0,2,85,0,0,118,51,1,0,134,84,0,0,248,82,6,0,27,85,72,0,137,83,0,0,139,0,0,0,0,35,28,0,25,36,35,12,1,84,4,0,1,85,0,0,134,37,0,0,24,55,6,0,36,84,85,0,1,85,0,0,14,38,37,85,120,38,3,0,137,83,0,0,139,0,0,0,0,40,66,0,0,41,28,0,25,42,41,12,1,85,4,0,1,84,0,0,134,43,0,0,24,55,6,0,42,85,84,0,0,44,39,0,0,45,5,0,135,46,43,0,44,45,0,0,0,47,17,0,1,85,4,0,134,84,0,0,116,78,6,0,69,43,85,0,25,73,69,4,1,85,4,0,134,84,0,0,116,78,6,0,73,46,85,0,25,74,69,8,1,85,4,0,134,84,0,0,116,78,6,0,74,47,85,0,2,85,0,0,130,51,1,0,134,84,0,0,248,82,6,0,40,85,69,0,137,83,0,0,139,0,0,0], eb + 225280);
  HEAPU8.set([140,2,98,0,0,0,0,0,1,92,0,0,136,94,0,0,0,93,94,0,136,94,0,0,25,94,94,48,137,94,0,0,130,94,0,0,136,95,0,0,49,94,94,95,52,152,3,0,135,94,0,0,25,91,93,24,25,90,93,16,25,89,93,8,0,88,93,0,0,2,0,0,0,3,1,0,0,14,2,0,25,25,14,28,25,36,25,4,1,94,4,0,1,95,0,0,134,47,0,0,24,55,6,0,36,94,95,0,1,95,240,106,1,94,4,0,1,96,0,0,134,58,0,0,24,55,6,0,95,94,96,0,3,69,58,47,1,94,240,106,1,95,4,0,134,96,0,0,116,78,6,0,94,69,95,0,0,80,2,0,25,85,80,17,42,96,85,0,1,95,1,0,1,94,0,0,134,4,0,0,24,55,6,0,96,95,94,0,41,94,4,24,42,94,94,24,0,5,94,0,1,97,70,0,1,96,7,0,138,5,97,96,244,152,3,0,240,152,3,0,240,152,3,0,240,152,3,0,240,152,3,0,240,152,3,0,120,153,3,0,119,0,170,0,1,94,232,106,1,95,2,0,1,96,0,0,134,6,0,0,24,55,6,0,94,95,96,0,41,96,6,16,42,96,96,16,0,7,96,0,1,96,255,254,19,96,7,96,0,8,96,0,2,96,0,0,255,255,0,0,19,96,8,96,0,9,96,0,1,95,232,106,1,94,2,0,134,96,0,0,116,78,6,0,95,9,94,0,1,94,16,3,1,95,0,0,1,97,4,0,134,96,0,0,116,78,6,0,94,95,97,0,1,97,124,11,2,95,0,0,74,54,1,0,135,96,24,0,97,95,0,0,119,0,137,0,0,10,2,0,25,11,10,8,0,12,2,0,25,13,12,68,1,96,4,0,1,95,0,0,134,15,0,0,24,55,6,0,13,96,95,0,25,16,15,16,134,17,0,0,48,144,4,0,11,16,0,0,1,95,255,0,19,95,17,95,0,18,95,0,33,19,18,0,121,19,119,0,1,95,200,2,1,96,4,0,1,97,0,0,134,20,0,0,24,55,6,0,95,96,97,0,1,97,152,26,1,96,4,0,1,95,0,0,134,21,0,0,24,55,6,0,97,96,95,0,17,22,21,20,121,22,105,0,134,23,0,0,56,80,6,0,0,86,23,0,0,24,86,0,25,26,24,8,1,96,42,0,1,97,4,0,134,95,0,0,116,78,6,0,26,96,97,0,1,95,200,2,1,97,4,0,1,96,0,0,134,27,0,0,24,55,6,0,95,97,96,0,27,28,27,10,25,29,28,50,134,30,0,0,20,36,6,0,29,0,0,0,25,31,30,2,0,32,86,0,25,33,32,64,1,97,4,0,134,96,0,0,116,78,6,0,33,31,97,0,1,96,3,0,134,34,0,0,40,95,5,0,96,0,0,0,33,35,34,0,121,35,64,0,1,96,200,2,1,97,4,0,1,95,0,0,134,37,0,0,24,55,6,0,96,97,95,0,27,38,37,10,25,39,38,50,134,40,0,0,20,36,6,0,39,0,0,0,25,41,40,2,1,95,200,2,1,97,4,0,1,96,0,0,134,42,0,0,24,55,6,0,95,97,96,0,27,43,42,10,25,44,43,50,134,45,0,0,20,36,6,0,44,0,0,0,25,46,45,2,3,48,41,46,1,96,200,2,1,97,4,0,1,95,0,0,134,49,0,0,24,55,6,0,96,97,95,0,27,50,49,10,25,51,50,50,134,52,0,0,20,36,6,0,51,0,0,0,25,53,52,2,3,54,48,53,1,95,200,2,1,97,4,0,1,96,0,0,134,55,0,0,24,55,6,0,95,97,96,0,27,56,55,10,25,57,56,50,134,59,0,0,20,36,6,0,57,0,0,0,25,60,59,2,3,61,54,60,0,62,86,0,25,63,62,64,1,96,4,0,1,97,0,0,134,64,0,0,24,55,6,0,63,96,97,0,3,65,64,61,1,96,4,0,134,97,0,0,116,78,6,0,63,65,96,0,0,66,2,0,25,67,66,72,0,68,86,0,134,97,0,0,124,205,5,0,67,68,0,0,119,0,1,0,0,70,2,0,134,71,0,0,148,195,4,0,70,0,0,0,0,87,71,0,0,72,2,0,25,73,72,8,0,74,2,0,1,96,1,0,134,97,0,0,64,100,4,0,73,74,96,0,0,75,3,0,41,97,75,24,42,97,97,24,33,76,97,0,121,76,53,0,2,97,0,0,246,208,0,0,42,97,97,0,1,96,1,0,1,95,0,0,134,77,0,0,24,55,6,0,97,96,95,0,41,95,77,24,42,95,95,24,33,78,95,0,121,78,15,0,2,96,0,0,112,251,0,0,134,95,0,0,112,85,6,0,96,88,0,0,2,96,0,0,246,208,0,0,42,96,96,0,1,97,0,0,1,94,1,0,134,95,0,0,116,78,6,0,96,97,94,0,119,0,23,0,2,95,0,0,5,209,0,0,42,95,95,0,1,94,1,0,1,97,0,0,134,79,0,0,24,55,6,0,95,94,97,0,41,97,79,24,42,97,97,24,33,81,97,0,120,81,6,0,2,94,0,0,125,251,0,0,134,97,0,0,112,85,6,0,94,89,0,0,2,94,0,0,135,251,0,0,134,97,0,0,112,85,6,0,94,90,0,0,0,82,87,0,134,97,0,0,144,18,6,0,82,91,0,0,134,97,0,0,0,55,5,0,2,97,0,0,243,208,0,0,42,97,97,0,1,94,1,0,1,95,0,0,134,83,0,0,24,55,6,0,97,94,95,0,41,95,83,24,42,95,95,24,33,84,95,0,120,84,3,0,137,93,0,0,139,0,0,0,134,95,0,0,96,111,6,0,137,93,0,0,139,0,0,0,140,3,97,0,0,0,0,0,1,92,0,0,136,94,0,0,0,93,94,0,136,94,0,0,25,94,94,16,137,94,0,0,130,94,0,0,136,95,0,0,49,94,94,95,48,157,3,0,135,94,0,0,0,3,0,0,0,4,1,0,0,15,2,0,2,94,0,0,60,162,0,0,1,95,4,0,1,96,0,0,134,26,0,0,24,55,6,0,94,95,96,0,25,37,26,84,1,96,2,0,1,95,0,0,134,48,0,0,24,55,6,0,37,96,95,0,0,91,48,0,2,95,0,0,60,162,0,0,1,96,4,0,1,94,0,0,134,59,0,0,24,55,6,0,95,96,94,0,25,70,59,7,42,94,70,0,1,96,1,0,1,95,0,0,134,81,0,0,24,55,6,0,94,96,95,0,41,95,81,24,42,95,95,24,33,90,95,0,121,90,3,0,137,93,0,0,139,0,0,0,0,5,15,0,2,95,0,0,0,0,16,0,19,95,5,95,0,6,95,0,33,7,6,0,121,7,166,0,0,8,91,0,41,95,8,16,42,95,95,16,0,9,95,0,33,10,9,255,121,10,28,0,2,95,0,0,180,164,0,0,1,96,4,0,1,94,0,0,134,11,0,0,24,55,6,0,95,96,94,0,0,12,91,0,41,94,12,16,42,94,94,16,0,13,94,0,2,94,0,0,30,72,1,0,41,96,13,2,3,14,94,96,2,96,0,0,220,164,0,0,1,94,4,0,1,95,0,0,134,16,0,0,24,55,6,0,96,94,95,0,1,94,1,0,1,96,1,0,135,95,44,0,11,94,14,16,96,0,0,0,2,95,0,0,216,164,0,0,1,96,4,0,1,94,0,0,134,17,0,0,24,55,6,0,95,96,94,0,27,18,17,31,0,19,3,0,1,96,4,0,134,94,0,0,116,78,6,0,19,18,96,0,2,94,0,0,212,164,0,0,1,96,4,0,1,95,0,0,134,20,0,0,24,55,6,0,94,96,95,0,41,95,20,1,0,21,95,0,0,22,3,0,25,23,22,4,1,96,4,0,134,95,0,0,116,78,6,0,23,21,96,0,2,95,0,0,28,199,0,0,1,96,2,0,1,94,0,0,134,24,0,0,24,55,6,0,95,96,94,0,41,94,24,16,42,94,94,16,0,25,94,0,33,27,25,255,121,27,13,0,2,94,0,0,180,164,0,0,1,96,4,0,1,95,0,0,134,28,0,0,24,55,6,0,94,96,95,0,2,96,0,0,0,0,2,0,1,94,0,0,135,95,45,0,28,96,94,0,2,95,0,0,180,164,0,0,1,94,4,0,1,96,0,0,134,29,0,0,24,55,6,0,95,94,96,0,0,30,3,0,2,96,0,0,176,164,0,0,1,94,4,0,1,95,0,0,134,31,0,0,24,55,6,0,96,94,95,0,0,32,4,0,135,95,33,0,29,30,31,32,2,95,0,0,28,199,0,0,1,94,2,0,1,96,0,0,134,33,0,0,24,55,6,0,95,94,96,0,41,96,33,16,42,96,96,16,0,34,96,0,33,35,34,255,121,35,12,0,2,96,0,0,180,164,0,0,1,94,4,0,1,95,0,0,134,36,0,0,24,55,6,0,96,94,95,0,1,94,0,0,1,96,0,0,135,95,45,0,36,94,96,0,0,38,91,0,41,95,38,16,42,95,95,16,0,39,95,0,33,40,39,255,121,40,34,0,2,95,0,0,180,164,0,0,1,96,4,0,1,94,0,0,134,41,0,0,24,55,6,0,95,96,94,0,2,94,0,0,30,203,0,0,1,96,2,0,1,95,0,0,134,42,0,0,24,55,6,0,94,96,95,0,41,95,42,16,42,95,95,16,0,43,95,0,2,95,0,0,30,72,1,0,41,96,43,2,3,44,95,96,2,96,0,0,220,164,0,0,1,95,4,0,1,94,0,0,134,45,0,0,24,55,6,0,96,95,94,0,1,95,1,0,1,96,1,0,135,94,44,0,41,95,44,45,96,0,0,0,0,46,15,0,2,94,0,0,0,0,6,0,19,94,46,94,0,47,94,0,33,49,47,0,120,49,3,0,137,93,0,0,139,0,0,0,0,50,91,0,41,94,50,16,42,94,94,16,0,51,94,0,32,52,51,255,121,52,9,0,2,94,0,0,30,203,0,0,1,96,2,0,1,95,0,0,134,53,0,0,24,55,6,0,94,96,95,0,0,91,53,0,0,54,4,0,25,55,54,8,1,96,1,0,1,94,4,0,134,95,0,0,116,78,6,0,55,96,94,0,0,56,15,0,2,95,0,0,0,0,4,0,19,95,56,95,0,57,95,0,33,58,57,0,121,58,24,0,2,95,0,0,176,164,0,0,1,94,4,0,1,96,0,0,134,60,0,0,24,55,6,0,95,94,96,0,0,61,4,0,0,62,91,0,41,96,62,16,42,96,96,16,0,63,96,0,2,96,0,0,224,164,0,0,41,94,63,2,3,64,96,94,1,94,4,0,1,96,0,0,134,65,0,0,24,55,6,0,64,94,96,0,135,96,46,0,60,61,65,0,0,66,15,0,2,96,0,0,0,0,2,0,19,96,66,96,0,67,96,0,33,68,67,0,121,68,62,0,2,96,0,0,216,164,0,0,1,94,4,0,1,95,0,0,134,69,0,0,24,55,6,0,96,94,95,0,26,71,69,1,0,72,4,0,1,95,4,0,1,94,0,0,134,73,0,0,24,55,6,0,72,95,94,0,3,74,73,71,1,95,4,0,134,94,0,0,116,78,6,0,72,74,95,0,2,94,0,0,176,164,0,0,1,95,4,0,1,96,0,0,134,75,0,0,24,55,6,0,94,95,96,0,0,76,4,0,0,77,91,0,41,96,77,16,42,96,96,16,0,78,96,0,2,96,0,0,224,164,0,0,41,95,78,2,3,79,96,95,1,95,4,0,1,96,0,0,134,80,0,0,24,55,6,0,79,95,96,0,135,96,46,0,75,76,80,0,2,96,0,0,216,164,0,0,1,95,4,0,1,94,0,0,134,82,0,0,24,55,6,0,96,95,94,0,26,83,82,1,0,84,4,0,1,94,4,0,1,95,0,0,134,85,0,0,24,55,6,0,84,94,95,0,4,86,85,83,1,94,4,0,134,95,0,0,116,78,6,0,84,86,94,0,2,95,0,0,216,164,0,0,1,94,4,0,1,96,0,0,134,87,0,0,24,55,6,0,95,94,96,0,0,88,4,0,25,89,88,8,1,94,4,0,134,96,0,0,116,78,6,0,89,87,94,0,137,93,0,0,139,0,0,0,140,2,113,0,0,0,0,0,2,101,0,0,240,158,0,0,2,102,0,0,196,158,0,0,2,103,0,0,192,158,0,0,2,104,0,0,244,158,0,0,2,105,0,0,192,26,0,0,2,106,0,0,184,158,0,0,2,107,0,0,188,158,0,0,2,108,0,0,128,0,0,0,2,109,0,0,232,158,0,0,1,99,0,0,136,110,0,0,0,100,110,0,136,110,0,0,25,110,110,32,137,110,0,0,130,110,0,0,136,111,0,0,49,110,110,111,44,163,3,0,135,110,0,0,0,2,0,0,0,3,1,0,1,97,0,0,1,96,0,0,1,92,0,0,2,93,0,0,208,158,0,0,0,14,93,0,18,25,14,109,120,25,2,0,119,0,92,0,0,36,2,0,0,47,93,0,25,58,47,4,1,110,4,0,1,111,0,0,134,69,0,0,24,55,6,0,58,110,111,0,3,80,36,69,0,95,80,0,0,91,3,0,0,4,93,0,1,111,4,0,1,110,0,0,134,5,0,0,24,55,6,0,4,111,110,0,3,6,91,5,0,94,6,0,0,7,95,0,34,8,7,0,120,8,66,0,0,9,95,0,1,110,4,0,1,111,0,0,134,10,0,0,24,55,6,0,106,110,111,0,15,11,10,9,0,12,94,0,34,13,12,0,20,111,11,13,0,98,111,0,120,98,54,0,0,15,94,0,1,111,4,0,1,110,0,0,134,16,0,0,24,55,6,0,107,111,110,0,15,17,16,15,120,17,46,0,0,18,94,0,1,110,4,0,1,111,0,0,134,19,0,0,24,55,6,0,102,110,111,0,3,20,18,19,41,111,20,5,0,21,111,0,0,22,95,0,1,111,4,0,1,110,0,0,134,23,0,0,24,55,6,0,103,111,110,0,3,24,22,23,3,26,21,24,41,110,26,3,3,27,105,110,25,28,27,1,42,110,28,0,1,111,1,0,1,112,0,0,134,29,0,0,24,55,6,0,110,111,112,0,41,112,29,24,42,112,112,24,0,30,112,0,19,112,30,108,0,31,112,0,33,32,31,0,120,32,13,0,0,33,92,0,25,34,33,1,0,92,34,0,134,35,0,0,20,36,6,0,34,0,0,0,32,37,35,0,121,37,5,0,0,38,95,0,0,97,38,0,0,39,94,0,0,96,39,0,0,40,93,0,25,41,40,8,0,93,41,0,119,0,162,255,0,42,92,0,32,43,42,0,120,43,123,0,0,44,2,0,0,45,3,0,0,46,97,0,0,48,96,0,134,112,0,0,16,80,5,0,44,45,46,48,0,49,97,0,0,50,96,0,0,51,2,0,0,52,3,0,134,112,0,0,16,80,5,0,49,50,51,52,0,53,97,0,0,54,2,0,13,55,53,54,121,55,36,0,0,56,2,0,1,112,4,0,1,111,0,0,134,57,0,0,24,55,6,0,103,112,111,0,3,59,56,57,1,112,4,0,134,111,0,0,116,78,6,0,104,59,112,0,0,60,96,0,0,61,3,0,4,62,60,61,34,63,62,0,0,64,96,0,1,111,4,0,1,112,0,0,134,65,0,0,24,55,6,0,102,111,112,0,3,66,64,65,121,63,7,0,25,67,66,1,1,111,4,0,134,112,0,0,116,78,6,0,101,67,111,0,119,0,42,0,26,68,66,1,1,111,4,0,134,112,0,0,116,78,6,0,101,68,111,0,119,0,36,0,0,70,3,0,1,112,4,0,1,111,0,0,134,71,0,0,24,55,6,0,102,112,111,0,3,72,70,71,1,112,4,0,134,111,0,0,116,78,6,0,101,72,112,0,0,73,97,0,0,74,2,0,4,75,73,74,34,76,75,0,0,77,97,0,1,111,4,0,1,112,0,0,134,78,0,0,24,55,6,0,103,111,112,0,3,79,77,78,121,76,7,0,25,81,79,1,1,111,4,0,134,112,0,0,116,78,6,0,104,81,111,0,119,0,7,0,26,82,79,1,1,111,4,0,134,112,0,0,116,78,6,0,104,82,111,0,119,0,1,0,134,112,0,0,84,117,5,0,101,0,0,0,0,83,97,0,1,112,4,0,1,111,0,0,134,84,0,0,24,55,6,0,103,112,111,0,3,85,83,84,1,112,4,0,134,111,0,0,116,78,6,0,104,85,112,0,0,86,96,0,1,111,4,0,1,112,0,0,134,87,0,0,24,55,6,0,102,111,112,0,3,88,86,87,1,111,4,0,134,112,0,0,116,78,6,0,101,88,111,0,134,112,0,0,84,117,5,0,101,0,0,0,0,89,97,0,0,90,96,0,134,112,0,0,176,162,3,0,89,90,0,0,119,0,34,255,137,100,0,0,139,0,0,0,140,3,73,0,0,0,0,0,2,68,0,0,128,128,128,128,2,69,0,0,255,254,254,254,1,66,0,0,136,70,0,0,0,67,70,0,0,23,1,0,0,24,0,0,21,70,23,24,0,35,70,0,38,70,35,3,0,46,70,0,32,54,46,0,121,54,131,0,38,70,23,3,0,55,70,0,33,56,55,0,33,57,2,0,19,70,57,56,0,61,70,0,121,61,44,0,0,5,2,0,0,8,1,0,0,11,0,0,42,70,8,0,1,71,1,0,1,72,0,0,134,58,0,0,24,55,6,0,70,71,72,0,42,71,11,0,1,70,1,0,134,72,0,0,116,78,6,0,71,58,70,0,41,72,58,24,42,72,72,24,32,59,72,0,121,59,5,0,0,4,5,0,0,7,8,0,0,10,11,0,119,0,27,0,26,25,5,1,25,26,8,1,25,27,11,1,0,28,26,0,38,72,28,3,0,29,72,0,33,30,29,0,33,31,25,0,19,72,31,30,0,60,72,0,121,60,5,0,0,5,25,0,0,8,26,0,0,11,27,0,119,0,223,255,0,3,25,0,0,6,26,0,0,9,27,0,0,22,31,0,1,66,5,0,119,0,6,0,0,3,2,0,0,6,1,0,0,9,0,0,0,22,57,0,1,66,5,0,32,72,66,5,121,72,9,0,121,22,5,0,0,4,3,0,0,7,6,0,0,10,9,0,119,0,4,0,0,20,9,0,1,21,0,0,119,0,70,0,42,72,7,0,1,70,1,0,1,71,0,0,134,32,0,0,24,55,6,0,72,70,71,0,41,71,32,24,42,71,71,24,32,33,71,0,121,33,4,0,0,20,10,0,0,21,4,0,119,0,57,0,1,71,3,0,16,34,71,4,121,34,42,0,0,13,4,0,0,63,10,0,0,65,7,0,1,71,4,0,1,70,0,0,134,36,0,0,24,55,6,0,65,71,70,0,2,70,0,0,1,1,1,1,4,37,36,70,19,70,36,68,0,38,70,0,21,70,38,68,0,39,70,0,19,70,39,37,0,40,70,0,32,41,40,0,120,41,5,0,0,12,13,0,0,62,63,0,0,64,65,0,119,0,22,0,1,71,4,0,134,70,0,0,116,78,6,0,63,36,71,0,26,42,13,4,25,43,65,4,25,44,63,4,1,70,3,0,16,45,70,42,121,45,5,0,0,13,42,0,0,63,44,0,0,65,43,0,119,0,223,255,0,12,42,0,0,62,44,0,0,64,43,0,119,0,4,0,0,12,4,0,0,62,10,0,0,64,7,0,0,14,64,0,0,16,62,0,0,18,12,0,1,66,11,0,119,0,5,0,0,14,1,0,0,16,0,0,0,18,2,0,1,66,11,0,32,70,66,11,121,70,39,0,32,47,18,0,121,47,4,0,0,20,16,0,1,21,0,0,119,0,34,0,0,15,14,0,0,17,16,0,0,19,18,0,42,70,15,0,1,71,1,0,1,72,0,0,134,48,0,0,24,55,6,0,70,71,72,0,42,71,17,0,1,70,1,0,134,72,0,0,116,78,6,0,71,48,70,0,41,72,48,24,42,72,72,24,32,49,72,0,121,49,4,0,0,20,17,0,0,21,19,0,119,0,13,0,26,50,19,1,25,51,15,1,25,52,17,1,32,53,50,0,121,53,4,0,0,20,52,0,1,21,0,0,119,0,5,0,0,15,51,0,0,17,52,0,0,19,50,0,119,0,227,255,1,70,0,0,135,72,4,0,20,70,21,0,139,20,0,0,140,1,113,0,0,0,0,0,2,105,0,0,255,0,0,0,2,106,0,0,232,106,0,0,2,107,0,0,0,64,0,0,2,108,0,0,255,255,0,0,2,109,0,0,192,26,0,0,1,103,0,0,136,110,0,0,0,104,110,0,136,110,0,0,25,110,110,32,137,110,0,0,130,110,0,0,136,111,0,0,49,110,110,111,40,170,3,0,135,110,0,0,0,1,0,0,0,2,1,0,134,13,0,0,248,24,4,0,2,0,0,0,1,111,20,107,1,112,4,0,134,110,0,0,116,78,6,0,111,13,112,0,0,99,13,0,0,24,99,0,134,110,0,0,112,146,4,0,24,0,0,0,0,35,99,0,25,46,35,28,1,110,2,0,1,112,0,0,134,57,0,0,24,55,6,0,46,110,112,0,41,112,57,16,42,112,112,16,0,68,112,0,38,112,68,1,0,79,112,0,33,90,79,0,121,90,3,0,137,104,0,0,139,0,0,0,1,112,2,0,1,110,0,0,134,3,0,0,24,55,6,0,106,112,110,0,41,110,3,16,42,110,110,16,0,4,110,0,38,110,4,4,0,5,110,0,33,6,5,0,38,110,6,1,0,7,110,0,19,110,7,105,0,8,110,0,41,110,8,24,42,110,110,24,33,9,110,0,121,9,3,0,137,104,0,0,139,0,0,0,0,10,99,0,25,11,10,4,1,110,4,0,1,112,0,0,134,12,0,0,24,55,6,0,11,110,112,0,0,102,12,0,0,14,102,0,0,15,99,0,25,16,15,8,25,17,16,4,1,112,4,0,1,110,0,0,134,18,0,0,24,55,6,0,17,112,110,0,0,19,99,0,25,20,19,4,1,110,4,0,1,112,0,0,134,21,0,0,24,55,6,0,20,110,112,0,3,22,18,21,15,23,14,22,120,23,2,0,119,0,183,0,0,25,102,0,0,26,99,0,1,112,4,0,1,110,0,0,134,27,0,0,24,55,6,0,26,112,110,0,134,110,0,0,124,108,5,0,25,27,0,0,0,28,99,0,1,110,4,0,1,112,0,0,134,29,0,0,24,55,6,0,28,110,112,0,0,101,29,0,0,30,101,0,0,31,99,0,25,32,31,8,1,112,4,0,1,110,0,0,134,33,0,0,24,55,6,0,32,112,110,0,0,34,99,0,1,110,4,0,1,112,0,0,134,36,0,0,24,55,6,0,34,110,112,0,3,37,33,36,15,38,30,37,120,38,2,0,119,0,144,0,0,39,101,0,41,112,39,5,0,40,112,0,0,41,102,0,3,42,40,41,41,112,42,3,3,43,109,112,25,44,43,4,1,112,4,0,1,110,0,0,134,45,0,0,24,55,6,0,44,112,110,0,0,100,45,0,0,47,101,0,41,110,47,5,0,48,110,0,0,49,102,0,3,50,48,49,41,110,50,3,3,51,109,110,42,110,51,0,1,112,1,0,1,111,0,0,134,52,0,0,24,55,6,0,110,112,111,0,0,98,52,0,0,53,100,0,1,111,0,0,13,54,53,111,121,54,31,0,134,55,0,0,96,107,6,0,19,111,55,108,0,56,111,0,19,111,56,105,0,58,111,0,41,111,58,24,42,111,111,24,0,59,111,0,0,60,98,0,41,111,60,24,42,111,111,24,0,61,111,0,14,62,59,61,121,62,9,0,0,63,98,0,41,111,63,24,42,111,111,24,0,64,111,0,134,111,0,0,172,88,6,0,64,0,0,0,119,0,85,0,0,65,102,0,0,66,101,0,25,67,66,1,134,111,0,0,124,108,5,0,65,67,0,0,119,0,78,0,0,69,98,0,0,70,100,0,25,71,70,19,42,112,71,0,1,110,1,0,134,111,0,0,116,78,6,0,112,69,110,0,0,72,100,0,134,73,0,0,24,227,3,0,72,0,0,0,41,111,73,24,42,111,111,24,33,74,111,0,121,74,16,0,0,89,100,0,25,91,89,18,42,111,91,0,1,110,1,0,1,112,0,0,134,92,0,0,24,55,6,0,111,110,112,0,41,112,92,24,42,112,112,24,0,93,112,0,134,112,0,0,172,88,6,0,93,0,0,0,119,0,47,0,1,112,2,0,1,110,0,0,134,75,0,0,24,55,6,0,106,112,110,0,41,110,75,16,42,110,110,16,0,76,110,0,19,110,76,107,0,77,110,0,33,78,77,0,38,110,78,1,0,80,110,0,19,110,80,105,0,81,110,0,41,110,81,24,42,110,110,24,33,82,110,0,121,82,20,0,134,110,0,0,116,105,6,0,0,83,100,0,25,84,83,18,42,110,84,0,1,112,1,0,1,111,0,0,134,85,0,0,24,55,6,0,110,112,111,0,41,111,85,24,42,111,111,24,0,86,111,0,134,111,0,0,172,88,6,0,86,0,0,0,134,111,0,0,92,106,6,0,119,0,9,0,0,87,98,0,41,111,87,24,42,111,111,24,0,88,111,0,134,111,0,0,172,88,6,0,88,0,0,0,119,0,1,0,0,94,101,0,25,95,94,1,0,101,95,0,119,0,96,255,0,96,102,0,25,97,96,1,0,102,97,0,119,0,55,255,137,104,0,0,139,0,0,0,140,0,74,0,0,0,0,0,2,63,0,0,204,2,0,0,2,64,0,0,28,44,1,0,2,65,0,0,241,43,1,0,2,66,0,0,42,217,0,0,2,67,0,0,229,43,1,0,2,68,0,0,49,44,1,0,2,69,0,0,63,44,1,0,1,61,0,0,136,70,0,0,0,62,70,0,136,70,0,0,1,71,80,4,3,70,70,71,137,70,0,0,130,70,0,0,136,71,0,0,49,70,70,71,184,174,3,0,135,70,0,0,25,60,62,64,25,59,62,56,25,58,62,48,25,57,62,40,25,56,62,32,25,55,62,24,25,54,62,16,25,53,62,8,0,52,62,0,25,43,62,80,1,71,0,0,1,72,4,0,134,70,0,0,116,78,6,0,63,71,72,0,42,70,66,0,1,72,1,0,1,71,0,0,134,0,0,0,24,55,6,0,70,72,71,0,41,71,0,24,42,71,71,24,0,1,71,0,33,12,1,0,121,12,66,0,1,72,4,0,134,71,0,0,116,78,6,0,52,66,72,0,2,72,0,0,186,43,1,0,134,71,0,0,144,18,6,0,72,52,0,0,134,23,0,0,24,71,6,0,41,71,23,24,42,71,71,24,0,34,71,0,0,44,34,0,1,72,0,0,1,70,4,0,134,71,0,0,116,78,6,0,63,72,70,0,0,38,44,0,32,39,38,27,121,39,3,0,1,61,4,0,119,0,162,0,0,40,44,0,32,41,40,110,0,42,44,0,32,2,42,78,20,71,41,2,0,45,71,0,0,3,44,0,32,4,3,121,20,71,45,4,0,47,71,0,0,5,44,0,32,6,5,89,20,71,47,6,0,48,71,0,120,48,7,0,2,70,0,0,203,43,1,0,134,71,0,0,144,18,6,0,70,54,0,0,119,0,211,255,0,7,44,0,32,8,7,121,0,9,44,0,32,10,9,89,20,71,8,10,0,49,71,0,121,49,11,0,2,70,0,0,224,43,1,0,134,71,0,0,236,86,6,0,70,0,0,0,134,71,0,0,224,106,6,0,135,71,24,0,43,66,0,0,119,0,4,0,1,61,9,0,119,0,2,0,1,61,9,0,32,71,61,9,121,71,35,0,1,61,0,0,1,70,0,0,1,72,4,0,134,71,0,0,116,78,6,0,63,70,72,0,134,71,0,0,144,18,6,0,67,55,0,0,42,72,43,0,1,70,0,0,1,73,1,0,134,71,0,0,116,78,6,0,72,70,73,0,2,71,0,0,68,162,0,0,1,73,4,0,1,70,0,0,134,11,0,0,24,55,6,0,71,73,70,0,134,13,0,0,12,60,3,0,43,11,0,0,32,14,13,1,121,14,3,0,1,61,10,0,119,0,90,0,1,73,0,0,1,71,4,0,134,70,0,0,116,78,6,0,63,73,71,0,2,70,0,0,248,158,0,0,134,15,0,0,156,54,6,0,43,70,0,0,1,70,0,0,17,16,70,15,121,16,47,0,134,70,0,0,144,18,6,0,65,57,0,0,1,71,0,0,1,73,4,0,134,70,0,0,116,78,6,0,63,71,73,0,134,17,0,0,24,71,6,0,41,70,17,24,42,70,70,24,0,18,70,0,0,44,18,0,32,19,18,27,121,19,3,0,1,61,10,0,119,0,59,0,0,20,44,0,32,21,20,121,0,22,44,0,32,24,22,89,20,70,21,24,0,50,70,0,120,50,12,0,0,25,44,0,32,26,25,110,0,27,44,0,32,28,27,78,20,70,26,28,0,46,70,0,120,46,104,255,134,70,0,0,144,18,6,0,64,58,0,0,119,0,221,255,1,73,4,0,134,70,0,0,116,78,6,0,59,43,73,0,134,70,0,0,144,18,6,0,68,59,0,0,134,70,0,0,168,93,6,0,66,0,0,0,135,70,24,0,66,43,0,0,134,29,0,0,92,105,5,0,66,69,0,0,0,51,29,0,1,70,0,0,13,30,29,70,121,30,14,0,134,31,0,0,4,85,6,0,1,70,4,0,1,73,0,0,134,32,0,0,24,55,6,0,31,70,73,0,134,33,0,0,104,133,5,0,32,0,0,0,134,73,0,0,144,18,6,0,33,60,0,0,0,35,51,0,1,73,0,0,13,36,35,73,121,36,3,0,1,61,9,0,119,0,139,255,1,61,21,0,119,0,1,0,32,73,61,4,121,73,9,0,2,70,0,0,166,51,1,0,134,73,0,0,144,18,6,0,70,53,0,0,137,62,0,0,139,0,0,0,119,0,19,0,32,73,61,10,121,73,9,0,2,70,0,0,166,51,1,0,134,73,0,0,144,18,6,0,70,56,0,0,137,62,0,0,139,0,0,0,119,0,9,0,32,73,61,21,121,73,7,0,0,37,51,0,134,73,0,0,36,198,5,0,37,0,0,0,137,62,0,0,139,0,0,0,139,0,0,0,140,2,105,0,0,0,0,0,1,100,0,0,136,102,0,0,0,101,102,0,136,102,0,0,25,102,102,48,137,102,0,0,130,102,0,0,136,103,0,0,49,102,102,103,176,178,3,0,135,102,0,0,0,3,0,0,0,14,1,0,0,25,3,0,1,102,0,0,14,36,25,102,121,36,208,0,0,47,3,0,25,58,47,38,42,102,58,0,1,103,1,0,1,104,0,0,134,69,0,0,24,55,6,0,102,103,104,0,41,104,69,24,42,104,104,24,33,80,104,0,0,91,14,0,33,4,91,0,19,104,80,4,0,97,104,0,121,97,192,0,0,5,3,0,25,6,5,32,1,104,4,0,1,103,0,0,134,7,0,0,24,55,6,0,6,104,103,0,0,92,7,0,0,8,14,0,1,103,0,0,15,9,103,8,0,10,3,0,121,9,18,0,25,11,10,56,1,103,4,0,1,104,0,0,134,12,0,0,24,55,6,0,11,103,104,0,0,98,12,0,0,13,3,0,25,15,13,60,1,104,4,0,1,103,0,0,134,16,0,0,24,55,6,0,15,104,103,0,0,94,16,0,1,93,1,0,119,0,17,0,25,17,10,60,1,103,4,0,1,104,0,0,134,18,0,0,24,55,6,0,17,103,104,0,0,98,18,0,0,19,3,0,25,20,19,56,1,104,4,0,1,103,0,0,134,21,0,0,24,55,6,0,20,104,103,0,0,94,21,0,1,93,255,255,1,96,0,0,0,22,96,0,0,23,14,0,0,24,93,0,5,26,23,24,15,27,22,26,120,27,2,0,119,0,103,0,0,28,98,0,0,29,3,0,25,30,29,44,1,103,4,0,1,104,0,0,134,31,0,0,24,55,6,0,30,103,104,0,41,104,28,2,3,32,31,104,1,104,4,0,1,103,0,0,134,33,0,0,24,55,6,0,32,104,103,0,0,99,33,0,0,34,98,0,0,95,34,0,0,35,95,0,0,37,94,0,14,38,35,37,120,38,2,0,119,0,37,0,0,39,95,0,0,40,93,0,3,41,39,40,0,42,3,0,25,43,42,44,1,103,4,0,1,104,0,0,134,44,0,0,24,55,6,0,43,103,104,0,41,104,41,2,3,45,44,104,1,104,4,0,1,103,0,0,134,46,0,0,24,55,6,0,45,104,103,0,0,48,95,0,0,49,3,0,25,50,49,44,1,103,4,0,1,104,0,0,134,51,0,0,24,55,6,0,50,103,104,0,41,104,48,2,3,52,51,104,1,103,4,0,134,104,0,0,116,78,6,0,52,46,103,0,0,53,93,0,0,54,95,0,3,55,54,53,0,95,55,0,119,0,216,255,0,56,99,0,0,57,94,0,0,59,3,0,25,60,59,44,1,104,4,0,1,103,0,0,134,61,0,0,24,55,6,0,60,104,103,0,41,103,57,2,3,62,61,103,1,104,4,0,134,103,0,0,116,78,6,0,62,56,104,0,1,95,0,0,0,63,95,0,0,64,3,0,25,65,64,12,1,103,4,0,1,104,0,0,134,66,0,0,24,55,6,0,65,103,104,0,15,67,63,66,120,67,2,0,119,0,13,0,0,68,92,0,0,70,99,0,25,71,70,4,0,99,71,0,1,103,4,0,134,104,0,0,116,78,6,0,70,68,103,0,0,72,95,0,25,73,72,1,0,95,73,0,119,0,234,255,0,74,96,0,25,75,74,1,0,96,75,0,119,0,148,255,0,76,3,0,0,77,3,0,25,78,77,56,1,104,4,0,1,103,0,0,134,79,0,0,24,55,6,0,78,104,103,0,0,81,3,0,25,82,81,60,1,103,4,0,1,104,0,0,134,83,0,0,24,55,6,0,82,103,104,0,0,84,3,0,25,85,84,56,1,104,4,0,1,103,0,0,134,86,0,0,24,55,6,0,85,104,103,0,4,87,83,86,25,88,87,1,134,103,0,0,80,242,4,0,76,79,88,0,0,89,3,0,134,103,0,0,0,42,6,0,89,0,0,0,1,2,0,0,0,90,2,0,137,101,0,0,139,90,0,0,1,2,255,255,0,90,2,0,137,101,0,0,139,90,0,0,140,2,103,0,0,0,0,0,1,95,0,0,136,97,0,0,0,96,97,0,136,97,0,0,25,97,97,16,137,97,0,0,130,97,0,0,136,98,0,0,49,97,97,98,72,182,3,0,135,97,0,0,0,2,0,0,0,3,1,0,0,14,3,0,1,97,4,0,1,98,0,0,134,25,0,0,24,55,6,0,14,97,98,0,0,36,2,0,25,47,36,8,1,98,4,0,1,97,0,0,134,58,0,0,24,55,6,0,47,98,97,0,13,69,25,58,121,69,20,0,0,80,3,0,25,91,80,4,1,97,4,0,1,98,0,0,134,4,0,0,24,55,6,0,91,97,98,0,0,5,2,0,25,6,5,8,25,7,6,4,1,98,4,0,1,97,0,0,134,8,0,0,24,55,6,0,7,98,97,0,13,9,4,8,120,9,4,0,1,95,3,0,119,0,2,0,1,95,3,0,32,97,95,3,121,97,148,0,0,10,2,0,25,11,10,8,25,12,11,4,1,97,4,0,1,98,0,0,134,13,0,0,24,55,6,0,12,97,98,0,0,15,2,0,25,16,15,8,1,98,4,0,1,97,0,0,134,17,0,0,24,55,6,0,16,98,97,0,0,18,2,0,25,19,18,19,42,97,19,0,1,98,1,0,1,99,0,0,134,20,0,0,24,55,6,0,97,98,99,0,41,99,20,24,42,99,99,24,0,21,99,0,134,99,0,0,208,39,6,0,13,17,21,0,0,22,3,0,134,23,0,0,248,24,4,0,22,0,0,0,0,24,2,0,25,26,24,68,1,98,4,0,134,99,0,0,116,78,6,0,26,23,98,0,0,27,2,0,0,28,3,0,134,99,0,0,144,31,4,0,27,28,0,0,0,29,2,0,25,30,29,68,1,99,4,0,1,98,0,0,134,31,0,0,24,55,6,0,30,99,98,0,0,94,31,0,0,32,2,0,25,33,32,8,1,98,4,0,1,99,0,0,134,34,0,0,24,55,6,0,33,98,99,0,41,99,34,5,0,35,99,0,0,37,2,0,25,38,37,8,25,39,38,4,1,99,4,0,1,98,0,0,134,40,0,0,24,55,6,0,39,99,98,0,3,41,35,40,1,98,192,26,41,99,41,3,3,42,98,99,25,43,42,4,1,98,0,0,1,97,4,0,134,99,0,0,116,78,6,0,43,98,97,0,0,44,94,0,0,45,2,0,25,46,45,68,1,99,4,0,1,97,0,0,134,48,0,0,24,55,6,0,46,99,97,0,14,49,44,48,121,49,11,0,0,50,2,0,134,51,0,0,52,255,3,0,50,0,0,0,0,52,2,0,25,53,52,20,1,99,4,0,134,97,0,0,116,78,6,0,53,51,99,0,0,54,2,0,25,55,54,8,0,56,3,0,1,98,4,0,1,100,0,0,134,99,0,0,24,55,6,0,56,98,100,0,1,100,4,0,134,97,0,0,116,78,6,0,55,99,100,0,25,100,55,4,25,98,56,4,1,101,4,0,1,102,0,0,134,99,0,0,24,55,6,0,98,101,102,0,1,102,4,0,134,97,0,0,116,78,6,0,100,99,102,0,0,57,2,0,0,59,3,0,1,97,4,0,1,102,0,0,134,60,0,0,24,55,6,0,59,97,102,0,41,102,60,5,0,61,102,0,0,62,3,0,25,63,62,4,1,102,4,0,1,97,0,0,134,64,0,0,24,55,6,0,63,102,97,0,3,65,61,64,1,97,192,26,41,102,65,3,3,66,97,102,25,67,66,4,1,97,4,0,134,102,0,0,116,78,6,0,67,57,97,0,0,68,3,0,25,70,68,4,1,102,4,0,1,97,0,0,134,71,0,0,24,55,6,0,70,102,97,0,0,72,3,0,1,97,4,0,1,102,0,0,134,73,0,0,24,55,6,0,72,97,102,0,134,102,0,0,124,108,5,0,71,73,0,0,0,74,2,0,134,75,0,0,24,227,3,0,74,0,0,0,41,102,75,24,42,102,102,24,33,76,102,0,121,76,17,0,0,77,2,0,25,78,77,18,42,102,78,0,1,97,1,0,1,99,0,0,134,79,0,0,24,55,6,0,102,97,99,0,41,99,79,24,42,99,99,24,0,81,99,0,134,99,0,0,172,88,6,0,81,0,0,0,137,96,0,0,139,0,0,0,1,99,232,106,1,97,2,0,1,102,0,0,134,82,0,0,24,55,6,0,99,97,102,0,41,102,82,16,42,102,102,16,0,83,102,0,1,102,0,64,19,102,83,102,0,84,102,0,33,85,84,0,38,102,85,1,0,86,102,0,1,102,255,0,19,102,86,102,0,87,102,0,41,102,87,24,42,102,102,24,33,88,102,0,120,88,3,0,137,96,0,0,139,0,0,0,134,102,0,0,116,105,6,0,0,89,2,0,25,90,89,17,42,102,90,0,1,97,1,0,1,99,0,0,134,92,0,0,24,55,6,0,102,97,99,0,41,99,92,24,42,99,99,24,0,93,99,0,134,99,0,0,172,88,6,0,93,0,0,0,134,99,0,0,92,106,6,0,137,96,0,0,139,0,0,0,140,0,76,0,0,0,0,0,2,71,0,0,60,162,0,0,1,69,0,0,136,72,0,0,0,70,72,0,136,72,0,0,25,72,72,16,137,72,0,0,130,72,0,0,136,73,0,0,49,72,72,73,188,186,3,0,135,72,0,0,0,68,70,0,2,72,0,0,76,177,0,0,1,73,4,0,1,74,0,0,134,0,0,0,24,55,6,0,72,73,74,0,1,74,0,0,14,1,0,74,120,1,3,0,137,70,0,0,139,0,0,0,2,74,0,0,72,177,0,0,1,73,4,0,1,72,0,0,134,12,0,0,24,55,6,0,74,73,72,0,32,23,12,3,1,72,4,0,1,73,0,0,134,34,0,0,24,55,6,0,71,72,73,0,25,45,34,52,121,23,14,0,1,72,2,0,1,74,4,0,134,73,0,0,116,78,6,0,45,72,74,0,2,74,0,0,84,177,0,0,1,72,1,0,1,75,4,0,134,73,0,0,116,78,6,0,74,72,75,0,119,0,6,0,1,75,1,0,1,72,4,0,134,73,0,0,116,78,6,0,45,75,72,0,1,73,4,0,1,72,0,0,134,56,0,0,24,55,6,0,71,73,72,0,25,63,56,56,1,72,4,0,1,73,0,0,134,64,0,0,24,55,6,0,63,72,73,0,1,73,0,0,14,65,64,73,120,65,74,0,1,73,4,0,1,72,0,0,134,2,0,0,24,55,6,0,71,73,72,0,25,3,2,52,1,72,4,0,1,73,0,0,134,4,0,0,24,55,6,0,3,72,73,0,2,73,0,0,80,162,0,0,1,72,4,0,1,75,0,0,134,5,0,0,24,55,6,0,73,72,75,0,2,75,0,0,76,162,0,0,1,72,4,0,1,73,0,0,134,6,0,0,24,55,6,0,75,72,73,0,1,73,4,0,1,72,0,0,134,7,0,0,24,55,6,0,71,73,72,0,25,8,7,52,1,72,4,0,1,73,0,0,134,9,0,0,24,55,6,0,8,72,73,0,4,10,6,9,1,73,0,0,134,11,0,0,148,240,4,0,4,5,10,73,1,73,4,0,1,72,0,0,134,13,0,0,24,55,6,0,71,73,72,0,25,14,13,56,1,73,4,0,134,72,0,0,116,78,6,0,14,11,73,0,1,72,0,0,14,15,11,72,121,15,18,0,1,72,4,0,1,73,0,0,134,16,0,0,24,55,6,0,71,72,73,0,25,17,16,56,1,73,4,0,1,72,0,0,134,18,0,0,24,55,6,0,17,73,72,0,2,73,0,0,0,0,32,0,134,72,0,0,20,53,6,0,18,73,0,0,119,0,3,0,137,70,0,0,139,0,0,0,134,72,0,0,92,143,2,0,2,72,0,0,72,177,0,0,1,73,4,0,1,75,0,0,134,19,0,0,24,55,6,0,72,73,75,0,32,20,19,3,121,20,147,0,1,75,4,0,1,73,0,0,134,21,0,0,24,55,6,0,71,75,73,0,25,22,21,56,1,73,4,0,1,75,0,0,134,24,0,0,24,55,6,0,22,73,75,0,25,25,24,28,1,75,4,0,1,73,0,0,134,26,0,0,24,55,6,0,25,75,73,0,0,67,26,0,1,73,4,0,1,75,0,0,134,27,0,0,24,55,6,0,71,73,75,0,25,28,27,56,1,75,4,0,1,73,0,0,134,29,0,0,24,55,6,0,28,75,73,0,1,75,0,0,134,73,0,0,20,53,6,0,29,75,0,0,1,73,4,0,1,75,0,0,134,30,0,0,24,55,6,0,71,73,75,0,25,31,30,56,1,75,4,0,1,73,0,0,134,32,0,0,24,55,6,0,31,75,73,0,1,75,0,0,1,72,0,0,134,73,0,0,164,140,5,0,32,75,72,0,1,73,4,0,1,72,0,0,134,33,0,0,24,55,6,0,71,73,72,0,25,35,33,56,1,72,4,0,1,73,0,0,134,36,0,0,24,55,6,0,35,72,73,0,2,73,0,0,80,162,0,0,1,72,4,0,1,75,0,0,134,37,0,0,24,55,6,0,73,72,75,0,1,72,0,0,134,75,0,0,172,223,3,0,36,72,37,0,1,66,0,0,0,38,66,0,2,75,0,0,68,177,0,0,1,72,4,0,1,73,0,0,134,39,0,0,24,55,6,0,75,72,73,0,15,40,38,39,120,40,2,0,119,0,47,0,1,73,4,0,1,72,0,0,134,41,0,0,24,55,6,0,71,73,72,0,25,42,41,56,1,72,4,0,1,73,0,0,134,43,0,0,24,55,6,0,42,72,73,0,0,44,66,0,2,73,0,0,76,177,0,0,1,72,4,0,1,75,0,0,134,46,0,0,24,55,6,0,73,72,75,0,1,75,140,0,5,75,44,75,3,47,46,75,1,75,136,0,3,48,47,75,1,75,4,0,1,72,0,0,134,49,0,0,24,55,6,0,48,75,72,0,0,50,66,0,25,51,50,1,1,75,4,0,134,72,0,0,116,78,6,0,68,51,75,0,1,75,0,0,2,73,0,0,58,73,1,0,134,72,0,0,48,255,5,0,43,75,49,73,68,0,0,0,0,52,66,0,25,53,52,1,0,66,53,0,119,0,200,255,0,54,67,0,1,72,4,0,1,73,0,0,134,55,0,0,24,55,6,0,71,72,73,0,25,57,55,56,1,73,4,0,1,72,0,0,134,58,0,0,24,55,6,0,57,73,72,0,25,59,58,28,1,73,4,0,134,72,0,0,116,78,6,0,59,54,73,0,1,72,4,0,1,73,0,0,134,60,0,0,24,55,6,0,71,72,73,0,25,61,60,56,1,73,4,0,1,72,0,0,134,62,0,0,24,55,6,0,61,73,72,0,134,72,0,0,164,179,5,0,62,0,0,0,137,70,0,0,139,0,0,0,140,0,88,0,0,0,0,0,1,83,0,0,136,85,0,0,0,84,85,0,136,85,0,0,25,85,85,16,137,85,0,0,130,85,0,0,136,86,0,0,49,85,85,86,184,191,3,0,135,85,0,0,2,85,0,0,38,217,0,0,42,85,85,0,1,86,1,0,1,87,0,0,134,0,0,0,24,55,6,0,85,86,87,0,41,87,0,24,42,87,87,24,33,1,87,0,120,1,3,0,137,84,0,0,139,0,0,0,2,87,0,0,1,209,0,0,42,87,87,0,1,86,1,0], eb + 235520);
  HEAPU8.set([1,85,0,0,134,12,0,0,24,55,6,0,87,86,85,0,1,85,255,0,19,85,12,85,0,23,85,0,33,34,23,0,121,34,16,0,2,85,0,0,249,208,0,0,42,85,85,0,1,86,1,0,1,87,0,0,134,45,0,0,24,55,6,0,85,86,87,0,1,87,255,0,19,87,45,87,0,56,87,0,33,67,56,0,121,67,3,0,137,84,0,0,139,0,0,0,1,87,112,3,1,86,4,0,1,85,0,0,134,78,0,0,24,55,6,0,87,86,85,0,0,82,78,0,0,80,82,0,1,85,0,0,14,2,80,85,120,2,2,0,119,0,54,0,0,3,82,0,25,4,3,12,25,5,4,4,1,85,4,0,1,86,0,0,134,6,0,0,24,55,6,0,5,85,86,0,0,7,82,0,25,8,7,12,1,86,4,0,1,85,0,0,134,9,0,0,24,55,6,0,8,86,85,0,134,10,0,0,228,47,4,0,6,9,0,0,41,85,10,24,42,85,85,24,33,11,85,0,121,11,24,0,0,13,82,0,25,14,13,12,25,15,14,4,1,85,4,0,1,86,0,0,134,16,0,0,24,55,6,0,15,85,86,0,0,17,82,0,25,18,17,12,1,86,4,0,1,85,0,0,134,19,0,0,24,55,6,0,18,86,85,0,134,20,0,0,12,66,6,0,41,85,20,24,42,85,85,24,0,21,85,0,134,85,0,0,208,39,6,0,16,19,21,0,0,22,82,0,1,85,4,0,1,86,0,0,134,24,0,0,24,55,6,0,22,85,86,0,0,82,24,0,119,0,199,255,2,86,0,0,40,217,0,0,42,86,86,0,1,85,1,0,1,87,0,0,134,25,0,0,24,55,6,0,86,85,87,0,41,87,25,24,42,87,87,24,33,26,87,0,120,26,41,0,1,87,188,26,1,85,4,0,1,86,0,0,134,27,0,0,24,55,6,0,87,85,86,0,1,86,184,26,1,85,4,0,1,87,0,0,134,28,0,0,24,55,6,0,86,85,87,0,134,29,0,0,228,47,4,0,27,28,0,0,1,87,255,0,19,87,29,87,0,30,87,0,33,31,30,0,121,31,21,0,1,87,188,26,1,85,4,0,1,86,0,0,134,32,0,0,24,55,6,0,87,85,86,0,1,86,184,26,1,85,4,0,1,87,0,0,134,33,0,0,24,55,6,0,86,85,87,0,134,35,0,0,12,66,6,0,41,87,35,24,42,87,87,24,0,36,87,0,134,87,0,0,208,39,6,0,32,33,36,0,1,87,232,106,1,85,2,0,1,86,0,0,134,37,0,0,24,55,6,0,87,85,86,0,41,86,37,16,42,86,86,16,0,38,86,0,1,86,0,64,19,86,38,86,0,39,86,0,33,40,39,0,38,86,40,1,0,41,86,0,1,86,255,0,19,86,41,86,0,42,86,0,0,81,42,0,1,86,116,3,1,85,4,0,1,87,0,0,134,43,0,0,24,55,6,0,86,85,87,0,0,82,43,0,0,44,82,0,1,87,0,0,14,46,44,87,120,46,2,0,119,0,96,0,0,47,82,0,25,48,47,8,25,49,48,4,1,87,4,0,1,85,0,0,134,50,0,0,24,55,6,0,49,87,85,0,0,51,82,0,25,52,51,8,1,85,4,0,1,87,0,0,134,53,0,0,24,55,6,0,52,85,87,0,134,87,0,0,124,108,5,0,50,53,0,0,0,54,82,0,134,55,0,0,24,227,3,0,54,0,0,0,41,87,55,24,42,87,87,24,33,57,87,0,121,57,45,0,0,58,82,0,25,59,58,17,42,87,59,0,1,85,1,0,1,86,0,0,134,60,0,0,24,55,6,0,87,85,86,0,41,86,60,24,42,86,86,24,0,61,86,0,32,62,61,88,121,62,23,0,0,63,82,0,25,64,63,18,42,86,64,0,1,85,1,0,1,87,0,0,134,65,0,0,24,55,6,0,86,85,87,0,41,87,65,24,42,87,87,24,0,66,87,0,33,68,66,88,121,68,10,0,134,69,0,0,12,66,6,0,41,87,69,24,42,87,87,24,0,70,87,0,134,87,0,0,172,88,6,0,70,0,0,0,119,0,27,0,1,87,26,0,134,71,0,0,20,36,6,0,87,0,0,0,25,72,71,65,134,87,0,0,172,88,6,0,72,0,0,0,119,0,18,0,0,73,81,0,41,87,73,24,42,87,87,24,33,74,87,0,121,74,13,0,134,87,0,0,116,105,6,0,1,87,26,0,134,75,0,0,20,36,6,0,87,0,0,0,25,76,75,65,134,87,0,0,172,88,6,0,76,0,0,0,134,87,0,0,92,106,6,0,0,77,82,0,1,87,4,0,1,85,0,0,134,79,0,0,24,55,6,0,77,87,85,0,0,82,79,0,119,0,157,255,137,84,0,0,139,0,0,0,140,2,70,0,0,0,0,0,2,60,0,0,24,107,0,0,2,61,0,0,204,2,0,0,2,62,0,0,5,209,0,0,2,63,0,0,89,32,1,0,2,64,0,0,141,32,1,0,2,65,0,0,255,0,0,0,1,58,0,0,136,66,0,0,0,59,66,0,136,66,0,0,25,66,66,80,137,66,0,0,130,66,0,0,136,67,0,0,49,66,66,67,152,196,3,0,135,66,0,0,25,53,59,56,25,52,59,48,25,57,59,40,25,56,59,32,25,55,59,24,25,54,59,16,25,51,59,8,0,50,59,0,0,3,0,0,0,14,1,0,1,66,4,0,1,67,0,0,134,25,0,0,24,55,6,0,60,66,67,0,1,67,0,0,13,36,25,67,121,36,7,0,2,66,0,0,229,31,1,0,134,67,0,0,144,18,6,0,66,50,0,0,119,0,224,0,2,67,0,0,39,217,0,0,42,67,67,0,1,66,1,0,1,68,0,0,134,43,0,0,24,55,6,0,67,66,68,0,41,68,43,24,42,68,68,24,33,44,68,0,121,44,26,0,1,68,108,3,1,66,4,0,1,67,0,0,134,45,0,0,24,55,6,0,68,66,67,0,1,67,0,0,14,46,45,67,120,46,7,0,2,66,0,0,77,32,1,0,134,67,0,0,144,18,6,0,66,51,0,0,119,0,197,0,1,67,108,3,1,66,4,0,1,68,0,0,134,47,0,0,24,55,6,0,67,66,68,0,0,2,47,0,0,42,2,0,137,59,0,0,139,42,0,0,42,68,62,0,1,66,1,0,1,67,0,0,134,4,0,0,24,55,6,0,68,66,67,0,41,67,4,24,42,67,67,24,33,5,67,0,120,5,4,0,134,67,0,0,112,85,6,0,63,54,0,0,0,6,3,0,134,67,0,0,112,85,6,0,6,55,0,0,42,67,62,0,1,66,1,0,1,68,0,0,134,7,0,0,24,55,6,0,67,66,68,0,41,68,7,24,42,68,68,24,33,8,68,0,121,8,6,0,2,66,0,0,118,32,1,0,134,68,0,0,112,85,6,0,66,56,0,0,2,66,0,0,124,32,1,0,134,68,0,0,144,18,6,0,66,57,0,0,134,9,0,0,24,71,6,0,0,48,9,0,1,66,0,0,1,67,4,0,134,68,0,0,116,78,6,0,61,66,67,0,0,10,48,0,41,68,10,24,42,68,68,24,0,11,68,0,32,12,11,27,121,12,3,0,1,58,12,0,119,0,90,0,1,67,140,26,1,66,1,0,1,69,4,0,134,68,0,0,116,78,6,0,67,66,69,0,0,13,48,0,41,68,13,24,42,68,68,24,0,15,68,0,32,16,15,42,121,16,21,0,1,69,0,0,1,66,4,0,134,68,0,0,116,78,6,0,61,69,66,0,1,68,4,0,1,66,0,0,134,17,0,0,24,55,6,0,60,68,66,0,0,18,14,0,134,19,0,0,252,244,3,0,17,18,0,0,19,66,19,65,0,20,66,0,32,21,20,0,121,21,174,255,1,58,15,0,119,0,58,0,1,66,4,0,1,68,0,0,134,22,0,0,24,55,6,0,60,66,68,0,0,49,22,0,0,23,49,0,1,68,0,0,14,24,23,68,120,24,2,0,119,0,26,0,0,26,49,0,25,27,26,28,42,68,27,0,1,66,1,0,1,69,0,0,134,28,0,0,24,55,6,0,68,66,69,0,41,69,28,24,42,69,69,24,0,29,69,0,0,30,48,0,41,69,30,24,42,69,69,24,0,31,69,0,13,32,29,31,120,32,9,0,0,33,49,0,1,69,4,0,1,66,0,0,134,34,0,0,24,55,6,0,33,69,66,0,0,49,34,0,119,0,227,255,0,35,49,0,1,66,0,0,13,37,35,66,120,37,3,0,1,58,22,0,119,0,16,0,0,38,48,0,41,66,38,24,42,66,66,24,0,39,66,0,134,40,0,0,160,236,5,0,39,0,0,0,1,69,4,0,134,66,0,0,116,78,6,0,53,40,69,0,134,66,0,0,144,18,6,0,64,53,0,0,119,0,115,255,32,66,58,12,121,66,21,0,134,66,0,0,44,81,6,0,2,69,0,0,38,217,0,0,42,69,69,0,1,68,0,0,1,67,1,0,134,66,0,0,116,78,6,0,69,68,67,0,2,67,0,0,166,51,1,0,134,66,0,0,144,18,6,0,67,52,0,0,1,2,0,0,0,42,2,0,137,59,0,0,139,42,0,0,119,0,23,0,32,66,58,15,121,66,14,0,2,67,0,0,38,217,0,0,42,67,67,0,1,68,0,0,1,69,1,0,134,66,0,0,116,78,6,0,67,68,69,0,1,2,0,0,0,42,2,0,137,59,0,0,139,42,0,0,119,0,8,0,32,66,58,22,121,66,6,0,0,41,49,0,0,2,41,0,0,42,2,0,137,59,0,0,139,42,0,0,1,2,0,0,0,42,2,0,137,59,0,0,139,42,0,0,140,1,98,0,0,0,0,0,2,90,0,0,208,117,0,0,2,91,0,0,192,26,0,0,1,88,0,0,136,92,0,0,0,89,92,0,136,92,0,0,25,92,92,32,137,92,0,0,130,92,0,0,136,93,0,0,49,92,92,93,200,200,3,0,135,92,0,0,0,3,0,0,0,14,3,0,25,25,14,8,25,36,25,4,1,92,4,0,1,93,0,0,134,47,0,0,24,55,6,0,36,92,93,0,1,93,3,0,134,58,0,0,20,36,6,0,93,0,0,0,3,69,47,58,26,80,69,1,1,92,212,117,1,94,4,0,134,93,0,0,116,78,6,0,92,80,94,0,0,87,80,0,0,83,3,0,25,4,83,8,1,93,4,0,1,94,0,0,134,5,0,0,24,55,6,0,4,93,94,0,1,94,3,0,134,6,0,0,20,36,6,0,94,0,0,0,3,7,5,6,26,8,7,1,1,93,4,0,134,94,0,0,116,78,6,0,90,8,93,0,0,86,8,0,0,9,87,0,0,10,3,0,25,11,10,8,25,12,11,4,1,94,4,0,1,93,0,0,134,13,0,0,24,55,6,0,12,94,93,0,13,15,9,13,121,15,15,0,0,16,86,0,0,17,3,0,25,18,17,8,1,93,4,0,1,94,0,0,134,19,0,0,24,55,6,0,18,93,94,0,13,20,16,19,121,20,5,0,1,2,208,117,0,82,2,0,137,89,0,0,139,82,0,0,0,21,3,0,25,22,21,8,134,23,0,0,88,84,4,0,22,90,0,0,41,94,23,24,42,94,94,24,33,24,94,0,121,24,126,0,0,26,86,0,41,94,26,5,0,27,94,0,0,28,87,0,3,29,27,28,41,94,29,3,3,30,91,94,25,31,30,4,1,94,4,0,1,93,0,0,134,32,0,0,24,55,6,0,31,94,93,0,1,93,0,0,14,33,32,93,0,34,86,0,41,93,34,5,0,35,93,0,0,37,87,0,3,38,35,37,41,93,38,3,3,39,91,93,121,33,16,0,25,40,39,4,1,93,4,0,1,94,0,0,134,41,0,0,24,55,6,0,40,93,94,0,25,42,41,18,42,94,42,0,1,93,1,0,1,92,0,0,134,43,0,0,24,55,6,0,94,93,92,0,0,1,43,0,119,0,8,0,42,92,39,0,1,93,1,0,1,94,0,0,134,44,0,0,24,55,6,0,92,93,94,0,0,1,44,0,41,94,1,24,42,94,94,24,0,45,94,0,1,94,255,0,19,94,45,94,0,46,94,0,0,84,46,0,0,48,84,0,41,94,48,24,42,94,94,24,0,49,94,0,134,50,0,0,232,58,6,0,49,0,0,0,33,51,50,0,121,51,65,0,0,52,84,0,41,94,52,24,42,94,94,24,0,53,94,0,32,54,53,63,121,54,55,0,1,94,112,3,1,93,4,0,1,92,0,0,134,55,0,0,24,55,6,0,94,93,92,0,0,85,55,0,0,56,85,0,1,92,0,0,14,57,56,92,120,57,2,0,119,0,30,0,0,59,87,0,0,60,85,0,25,61,60,12,25,62,61,4,1,92,4,0,1,93,0,0,134,63,0,0,24,55,6,0,62,92,93,0,13,64,59,63,121,64,11,0,0,65,86,0,0,66,85,0,25,67,66,12,1,93,4,0,1,92,0,0,134,68,0,0,24,55,6,0,67,93,92,0,13,70,65,68,120,70,9,0,0,71,85,0,1,92,4,0,1,93,0,0,134,72,0,0,24,55,6,0,71,92,93,0,0,85,72,0,119,0,223,255,0,73,85,0,1,93,0,0,14,74,73,93,121,74,10,0,0,75,85,0,25,76,75,52,1,93,4,0,1,92,0,0,134,77,0,0,24,55,6,0,76,93,92,0,32,78,77,10,120,78,5,0,1,2,208,117,0,82,2,0,137,89,0,0,139,82,0,0,0,79,3,0,25,81,79,8,1,94,4,0,1,95,0,0,134,93,0,0,24,55,6,0,81,94,95,0,1,95,4,0,134,92,0,0,116,78,6,0,90,93,95,0,25,95,90,4,25,94,81,4,1,96,4,0,1,97,0,0,134,93,0,0,24,55,6,0,94,96,97,0,1,97,4,0,134,92,0,0,116,78,6,0,95,93,97,0,1,2,208,117,0,82,2,0,137,89,0,0,139,82,0,0,140,3,76,0,0,0,0,0,2,71,0,0,255,0,0,0,1,69,0,0,136,72,0,0,0,70,72,0,25,11,2,76,1,72,4,0,1,73,0,0,134,12,0,0,24,55,6,0,11,72,73,0,1,73,255,255,15,23,73,12,121,23,6,0,134,34,0,0,152,111,6,0,2,0,0,0,0,15,34,0,119,0,2,0,1,15,0,0,26,45,1,1,34,56,1,2,121,56,38,0,25,60,2,74,42,73,60,0,1,72,1,0,1,74,0,0,134,61,0,0,24,55,6,0,73,72,74,0,41,74,61,24,42,74,74,24,0,62,74,0,3,63,62,71,20,74,63,62,0,13,74,0,19,74,13,71,0,14,74,0,42,72,60,0,1,73,1,0,134,74,0,0,116,78,6,0,72,14,73,0,32,16,15,0,120,16,4,0,134,74,0,0,128,111,6,0,2,0,0,0,32,17,45,0,121,17,9,0,42,73,0,0,1,72,0,0,1,75,1,0,134,74,0,0,116,78,6,0,73,72,75,0,0,3,0,0,119,0,155,0,1,3,0,0,119,0,153,0,32,7,45,0,121,7,4,0,0,67,0,0,1,69,18,0,119,0,126,0,25,18,2,4,25,19,2,8,0,5,45,0,0,66,0,0,1,74,4,0,1,75,0,0,134,20,0,0,24,55,6,0,18,74,75,0,1,75,4,0,1,74,0,0,134,21,0,0,24,55,6,0,19,75,74,0,0,22,21,0,0,24,20,0,4,25,22,24,1,74,10,0,134,26,0,0,232,220,3,0,20,74,25,0,1,74,0,0,13,27,26,74,0,28,26,0,1,74,1,0,4,29,74,24,3,30,29,28,125,31,27,25,30,0,0,0,16,32,31,5,125,33,32,31,5,0,0,0,135,74,26,0,66,20,33,0,1,74,4,0,1,75,0,0,134,35,0,0,24,55,6,0,18,74,75,0,3,36,35,33,1,74,4,0,134,75,0,0,116,78,6,0,18,36,74,0,3,37,66,33,4,38,5,33,19,75,27,32,0,64,75,0,120,64,4,0,0,67,37,0,1,69,18,0,119,0,74,0,1,75,4,0,1,74,0,0,134,39,0,0,24,55,6,0,19,75,74,0,16,40,36,39,121,40,18,0,25,10,33,1,3,41,35,10,1,75,4,0,134,74,0,0,116,78,6,0,18,41,75,0,42,74,36,0,1,75,1,0,1,72,0,0,134,42,0,0,24,55,6,0,74,75,72,0,19,72,42,71,0,43,72,0,0,9,10,0,0,53,43,0,119,0,11,0,134,44,0,0,88,6,6,0,2,0,0,0,34,46,44,0,121,46,3,0,0,6,37,0,119,0,26,0,25,8,33,1,0,9,8,0,0,53,44,0,26,51,38,1,19,72,53,71,0,52,72,0,3,54,66,9,42,75,37,0,1,74,1,0,134,72,0,0,116,78,6,0,75,52,74,0,19,72,53,71,0,68,72,0,33,55,68,10,33,57,51,0,19,72,57,55,0,65,72,0,121,65,4,0,0,5,51,0,0,66,54,0,119,0,156,255,0,67,54,0,1,69,18,0,119,0,18,0,13,47,6,0,121,47,3,0,1,4,0,0,119,0,14,0,1,72,4,0,1,74,0,0,134,48,0,0,24,55,6,0,2,72,74,0,38,74,48,16,0,49,74,0,32,50,49,0,121,50,3,0,1,4,0,0,119,0,3,0,0,67,6,0,1,69,18,0,32,74,69,18,121,74,13,0,1,74,0,0,13,58,0,74,121,58,3,0,1,4,0,0,119,0,8,0,42,72,67,0,1,75,0,0,1,73,1,0,134,74,0,0,116,78,6,0,72,75,73,0,0,4,0,0,32,59,15,0,121,59,3,0,0,3,4,0,119,0,5,0,134,74,0,0,128,111,6,0,2,0,0,0,0,3,4,0,139,3,0,0,140,2,99,0,0,0,0,0,1,93,0,0,136,95,0,0,0,94,95,0,136,95,0,0,25,95,95,32,137,95,0,0,130,95,0,0,136,96,0,0,49,95,95,96,216,207,3,0,135,95,0,0,0,2,0,0,0,3,1,0,0,14,3,0,1,95,80,0,17,25,95,14,0,36,3,0,34,47,36,0,20,95,25,47,0,89,95,0,0,58,2,0,1,95,24,0,17,69,95,58,20,95,89,69,0,90,95,0,0,80,2,0,36,86,80,0,20,95,90,86,0,91,95,0,121,91,3,0,137,94,0,0,139,0,0,0,0,4,3,0,41,95,4,5,0,5,95,0,0,6,2,0,3,7,5,6,1,95,192,26,41,96,7,3,3,8,95,96,25,9,8,1,0,88,9,0,0,10,88,0,42,96,10,0,1,95,1,0,1,97,0,0,134,11,0,0,24,55,6,0,96,95,97,0,41,97,11,24,42,97,97,24,0,12,97,0,38,97,12,15,0,13,97,0,33,15,13,0,121,15,3,0,137,94,0,0,139,0,0,0,2,97,0,0,125,33,1,0,42,97,97,0,1,95,1,0,1,96,0,0,134,16,0,0,24,55,6,0,97,95,96,0,41,96,16,24,42,96,96,24,33,17,96,0,121,17,21,0,1,96,208,118,1,95,4,0,1,97,0,0,134,18,0,0,24,55,6,0,96,95,97,0,25,19,18,1,1,95,208,118,1,96,4,0,134,97,0,0,116,78,6,0,95,19,96,0,2,96,0,0,125,33,1,0,42,96,96,0,1,95,0,0,1,98,1,0,134,97,0,0,116,78,6,0,96,95,98,0,0,20,3,0,41,97,20,5,0,21,97,0,0,22,2,0,3,23,21,22,1,97,192,26,41,98,23,3,3,24,97,98,42,98,24,0,1,97,1,0,1,95,0,0,134,26,0,0,24,55,6,0,98,97,95,0,0,87,26,0,41,95,26,24,42,95,95,24,0,27,95,0,32,28,27,43,121,28,3,0,1,93,9,0,119,0,48,0,0,29,88,0,42,95,29,0,1,97,1,0,1,98,0,0,134,30,0,0,24,55,6,0,95,97,98,0,41,98,30,24,42,98,98,24,0,31,98,0,38,98,31,16,0,32,98,0,33,33,32,0,120,33,17,0,0,34,87,0,41,98,34,24,42,98,98,24,0,35,98,0,32,37,35,124,121,37,3,0,1,93,9,0,119,0,26,0,0,38,87,0,41,98,38,24,42,98,98,24,0,39,98,0,32,40,39,45,121,40,3,0,1,93,9,0,119,0,18,0,0,61,88,0,42,98,61,0,1,97,1,0,1,95,0,0,134,62,0,0,24,55,6,0,98,97,95,0,41,95,62,24,42,95,95,24,0,63,95,0,1,95,128,0,19,95,63,95,0,64,95,0,33,65,64,0,120,65,3,0,137,94,0,0,139,0,0,0,32,95,93,9,121,95,50,0,1,95,208,118,1,97,4,0,1,98,0,0,134,41,0,0,24,55,6,0,95,97,98,0,1,98,164,3,1,97,132,0,5,97,41,97,3,42,98,97,0,92,42,0,0,43,2,0,0,44,92,0,25,45,44,32,1,97,4,0,1,98,0,0,134,46,0,0,24,55,6,0,45,97,98,0,0,48,92,0,25,49,48,36,41,98,46,3,3,50,49,98,25,51,50,4,1,97,4,0,134,98,0,0,116,78,6,0,51,43,97,0,0,52,3,0,0,53,92,0,25,54,53,32,1,98,4,0,1,97,0,0,134,55,0,0,24,55,6,0,54,98,97,0,25,56,55,1,1,98,4,0,134,97,0,0,116,78,6,0,54,56,98,0,0,57,92,0,25,59,57,36,41,97,55,3,3,60,59,97,1,98,4,0,134,97,0,0,116,78,6,0,60,52,98,0,1,97,208,118,1,98,4,0,1,95,0,0,134,66,0,0,24,55,6,0,97,98,95,0,0,67,88,0,42,95,67,0,1,98,1,0,1,97,0,0,134,68,0,0,24,55,6,0,95,98,97,0,41,97,68,24,42,97,97,24,0,70,97,0,20,97,70,66,0,71,97,0,1,97,255,0,19,97,71,97,0,72,97,0,42,98,67,0,1,95,1,0,134,97,0,0,116,78,6,0,98,72,95,0,0,73,2,0,25,74,73,1,0,75,3,0,134,97,0,0,164,207,3,0,74,75,0,0,0,76,2,0,26,77,76,1,0,78,3,0,134,97,0,0,164,207,3,0,77,78,0,0,0,79,2,0,0,81,3,0,25,82,81,1,134,97,0,0,164,207,3,0,79,82,0,0,0,83,2,0,0,84,3,0,26,85,84,1,134,97,0,0,164,207,3,0,83,85,0,0,137,94,0,0,139,0,0,0,140,0,94,0,0,0,0,0,2,80,0,0,255,0,0,0,2,81,0,0,128,0,0,0,2,82,0,0,127,255,255,255,2,83,0,0,0,32,0,0,2,84,0,0,0,64,0,0,2,85,0,0,216,106,0,0,2,86,0,0,255,255,0,0,2,87,0,0,6,209,0,0,1,78,0,0,136,88,0,0,0,79,88,0,136,88,0,0,25,88,88,16,137,88,0,0,130,88,0,0,136,89,0,0,49,88,88,89,56,212,3,0,135,88,0,0,1,88,116,3,1,89,4,0,1,90,0,0,134,0,0,0,24,55,6,0,88,89,90,0,0,76,0,0,0,1,76,0,1,90,0,0,14,12,1,90,120,12,2,0,119,0,195,0,0,23,76,0,1,90,4,0,1,89,0,0,134,34,0,0,24,55,6,0,23,90,89,0,0,75,34,0,0,45,76,0,25,56,45,24,1,89,2,0,1,90,0,0,134,67,0,0,24,55,6,0,56,89,90,0,41,90,67,16,42,90,90,16,0,73,90,0,1,90,0,1,19,90,73,90,0,74,90,0,33,2,74,0,38,90,2,1,0,3,90,0,19,90,3,80,0,4,90,0,41,90,4,24,42,90,90,24,33,5,90,0,120,5,163,0,0,6,76,0,25,7,6,24,1,90,2,0,1,89,0,0,134,8,0,0,24,55,6,0,7,90,89,0,41,89,8,16,42,89,89,16,0,9,89,0,19,89,9,83,0,10,89,0,33,11,10,0,38,89,11,1,0,13,89,0,19,89,13,80,0,14,89,0,19,89,14,80,0,15,89,0,33,16,15,0,121,16,142,0,0,17,76,0,25,18,17,8,1,90,64,0,1,91,4,0,1,92,0,0,134,88,0,0,24,55,6,0,18,91,92,0,1,92,4,0,134,89,0,0,116,78,6,0,90,88,92,0,1,92,64,0,25,92,92,4,25,90,18,4,1,91,4,0,1,93,0,0,134,88,0,0,24,55,6,0,90,91,93,0,1,93,4,0,134,89,0,0,116,78,6,0,92,88,93,0,0,19,76,0,25,20,19,24,1,89,2,0,1,93,0,0,134,21,0,0,24,55,6,0,20,89,93,0,41,93,21,16,42,93,93,16,0,22,93,0,19,93,22,81,0,24,93,0,33,25,24,0,38,93,25,1,0,26,93,0,19,93,26,80,0,27,93,0,0,77,27,0,0,28,76,0,134,29,0,0,232,34,5,0,28,0,0,0,32,30,29,255,120,30,94,0,0,31,76,0,25,32,31,24,1,93,2,0,1,89,0,0,134,33,0,0,24,55,6,0,32,93,89,0,41,89,33,16,42,89,89,16,0,35,89,0,19,89,35,84,0,36,89,0,33,37,36,0,38,89,37,1,0,38,89,0,19,89,38,80,0,39,89,0,19,89,39,80,0,40,89,0,33,41,40,0,121,41,13,0,0,42,76,0,25,43,42,8,134,44,0,0,132,40,6,0,85,43,0,0,1,89,3,0,17,46,89,44,121,46,5,0,0,47,76,0,134,89,0,0,232,34,5,0,47,0,0,0,0,48,77,0,19,89,48,80,0,49,89,0,33,50,49,0,121,50,56,0,1,89,64,0,1,93,4,0,1,88,0,0,134,51,0,0,24,55,6,0,89,93,88,0,0,52,76,0,25,53,52,8,1,88,4,0,1,93,0,0,134,54,0,0,24,55,6,0,53,88,93,0,13,55,51,54,121,55,17,0,1,93,68,0,1,88,4,0,1,89,0,0,134,57,0,0,24,55,6,0,93,88,89,0,0,58,76,0,25,59,58,8,25,60,59,4,1,89,4,0,1,88,0,0,134,61,0,0,24,55,6,0,60,89,88,0,13,62,57,61,120,62,25,0,0,63,76,0,25,64,63,24,1,88,2,0,1,89,0,0,134,65,0,0,24,55,6,0,64,88,89,0,41,89,65,16,42,89,89,16,0,66,89,0,19,89,66,82,0,68,89,0,19,89,68,86,0,69,89,0,1,88,2,0,134,89,0,0,116,78,6,0,64,69,88,0,42,88,87,0,1,93,0,0,1,92,1,0,134,89,0,0,116,78,6,0,88,93,92,0,0,70,75,0,0,76,70,0,119,0,58,255,2,89,0,0,246,208,0,0,42,89,89,0,1,92,1,0,1,93,0,0,134,71,0,0,24,55,6,0,89,92,93,0,41,93,71,24,42,93,93,24,33,72,93,0,120,72,3,0,137,79,0,0,139,0,0,0,134,93,0,0,120,187,4,0,2,92,0,0,246,208,0,0,42,92,92,0,1,89,0,0,1,88,1,0,134,93,0,0,116,78,6,0,92,89,88,0,137,79,0,0,139,0,0,0,140,1,76,0,0,0,0,0,1,70,0,0,136,72,0,0,0,71,72,0,136,72,0,0,25,72,72,16,137,72,0,0,130,72,0,0,136,73,0,0,49,72,72,73,12,216,3,0,135,72,0,0,25,68,71,8,25,67,71,6,0,1,0,0,0,2,1,0,2,72,0,0,0,0,224,255,19,72,2,72,0,13,72,0,0,1,13,0,2,72,0,0,244,190,0,0,1,73,4,0,1,74,0,0,134,24,0,0,24,55,6,0,72,73,74,0,0,35,1,0,14,46,24,35,120,46,3,0,137,71,0,0,139,0,0,0,2,74,0,0,60,162,0,0,1,73,4,0,1,72,0,0,134,57,0,0,24,55,6,0,74,73,72,0,25,64,57,7,42,72,64,0,1,73,1,0,1,74,0,0,134,65,0,0,24,55,6,0,72,73,74,0,41,74,65,24,42,74,74,24,33,66,74,0,121,66,3,0,137,71,0,0,139,0,0,0,0,3,1,0,2,74,0,0,0,0,0,255,19,74,3,74,0,4,74,0,43,74,4,24,0,5,74,0,2,74,0,0,255,255,0,0,19,74,5,74,0,6,74,0,134,74,0,0,52,21,6,0,6,68,67,0,0,7,1,0,2,74,0,0,0,0,128,0,19,74,7,74,0,8,74,0,33,9,8,0,1,74,8,0,1,73,0,0,125,10,9,74,73,0,0,0,1,73,2,0,1,74,0,0,134,11,0,0,24,55,6,0,68,73,74,0,41,74,11,16,42,74,74,16,0,12,74,0,20,74,12,10,0,14,74,0,2,74,0,0,255,255,0,0,19,74,14,74,0,15,74,0,1,73,2,0,134,74,0,0,116,78,6,0,68,15,73,0,0,16,1,0,2,74,0,0,0,0,64,0,19,74,16,74,0,17,74,0,33,18,17,0,1,74,8,0,1,73,0,0,125,19,18,74,73,0,0,0,1,73,2,0,1,74,0,0,134,20,0,0,24,55,6,0,67,73,74,0,41,74,20,16,42,74,74,16,0,21,74,0,20,74,21,19,0,22,74,0,2,74,0,0,255,255,0,0,19,74,22,74,0,23,74,0,1,73,2,0,134,74,0,0,116,78,6,0,67,23,73,0,0,25,1,0,2,74,0,0,0,0,32,0,19,74,25,74,0,26,74,0,33,27,26,0,121,27,21,0,1,74,2,0,1,73,0,0,134,28,0,0,24,55,6,0,68,74,73,0,0,69,28,0,1,73,2,0,1,74,0,0,134,29,0,0,24,55,6,0,67,73,74,0,1,73,2,0,134,74,0,0,116,78,6,0,68,29,73,0,0,30,69,0,1,73,2,0,134,74,0,0,116,78,6,0,67,30,73,0,1,74,2,0,1,73,0,0,134,31,0,0,24,55,6,0,68,74,73,0,41,73,31,16,42,73,73,16,0,32,73,0,2,73,0,0,30,203,0,0,1,74,2,0,1,72,0,0,134,33,0,0,24,55,6,0,73,74,72,0,41,72,33,16,42,72,72,16,0,34,72,0,14,36,32,34,121,36,43,0,2,72,0,0,180,164,0,0,1,74,4,0,1,73,0,0,134,37,0,0,24,55,6,0,72,74,73,0,1,73,2,0,1,74,0,0,134,38,0,0,24,55,6,0,68,73,74,0,41,74,38,16,42,74,74,16,0,39,74,0,2,74,0,0,30,72,1,0,41,73,39,2,3,40,74,73,2,73,0,0,220,164,0,0,1,74,4,0,1,72,0,0,134,41,0,0,24,55,6,0,73,74,72,0,1,74,1,0,1,73,1,0,135,72,44,0,37,74,40,41,73,0,0,0,1,72,2,0,1,73,0,0,134,42,0,0,24,55,6,0,68,72,73,0,2,72,0,0,30,203,0,0,1,74,2,0,134,73,0,0,116,78,6,0,72,42,74,0,1,73,2,0,1,74,0,0,134,43,0,0,24,55,6,0,67,73,74,0,41,74,43,16,42,74,74,16,0,44,74,0,2,74,0,0,28,199,0,0,1,73,2,0,1,72,0,0,134,45,0,0,24,55,6,0,74,73,72,0,41,72,45,16,42,72,72,16,0,47,72,0,14,48,44,47,121,48,83,0,1,72,2,0,1,73,0,0,134,49,0,0,24,55,6,0,67,72,73,0,41,73,49,16,42,73,73,16,0,50,73,0,32,51,50,255,121,51,14,0,2,73,0,0,180,164,0,0,1,72,4,0,1,74,0,0,134,52,0,0,24,55,6,0,73,72,74,0,2,72,0,0,0,0,2,0,1,73,0,0,135,74,45,0,52,72,73,0,119,0,49,0,2,74,0,0,28,199,0,0,1,73,2,0,1,72,0,0,134,53,0,0,24,55,6,0,74,73,72,0,41,72,53,16,42,72,72,16,0,54,72,0,32,55,54,255,121,55,12,0,2,72,0,0,180,164,0,0,1,73,4,0,1,74,0,0,134,56,0,0,24,55,6,0,72,73,74,0,1,73,0,0,1,72,0,0,135,74,45,0,56,73,72,0,2,74,0,0,180,164,0,0,1,72,4,0,1,73,0,0,134,58,0,0,24,55,6,0,74,72,73,0,1,73,2,0,1,72,0,0,134,59,0,0,24,55,6,0,67,73,72,0,41,72,59,16,42,72,72,16,0,60,72,0,2,72,0,0,30,72,1,0,41,73,60,2,3,61,72,73,1,72,1,0,1,74,0,0,1,75,1,0,135,73,44,0,58,72,61,74,75,0,0,0,1,73,2,0,1,75,0,0,134,62,0,0,24,55,6,0,67,73,75,0,2,73,0,0,28,199,0,0,1,74,2,0,134,75,0,0,116,78,6,0,73,62,74,0,0,63,1,0,2,74,0,0,244,190,0,0,1,73,4,0,134,75,0,0,116,78,6,0,74,63,73,0,137,71,0,0,139,0,0,0,140,3,67,0,0,0,0,0,2,61,0,0,128,128,128,128,2,62,0,0,255,254,254,254,2,63,0,0,255,0,0,0,1,59,0,0,136,64,0,0,0,60,64,0,19,64,1,63,0,12,64,0,0,13,0,0,38,64,13,3,0,24,64,0,33,35,24,0,33,43,2,0,19,64,43,35,0,50,64,0,121,50,39,0,19,64,1,63,0,44,64,0,0,5,2,0,0,53,0,0,42,64,53,0,1,65,1,0,1,66,0,0,134,45,0,0,24,55,6,0,64,65,66,0,41,66,45,24,42,66,66,24,41,65,44,24,42,65,65,24,13,46,66,65,121,46,5,0,0,4,5,0,0,52,53,0,1,59,6,0,119,0,23,0,25,47,53,1,26,48,5,1,0,14,47,0,38,65,14,3,0,15,65,0,33,16,15,0,33,17,48,0,19,65,17,16,0,49,65,0,121,49,4,0,0,5,48,0,0,53,47,0,119,0,228,255,0,3,48,0,0,11,17,0,0,51,47,0,1,59,5,0,119,0,5,0,0,3,2,0,0,11,43,0,0,51,0,0,1,59,5,0,32,65,59,5,121,65,8,0,121,11,5,0,0,4,3,0,0,52,51,0,1,59,6,0,119,0,3,0,1,10,0,0,0,55,51,0,32,65,59,6,121,65,99,0,42,65,52,0,1,66,1,0,1,64,0,0,134,18,0,0,24,55,6,0,65,66,64,0,19,64,1,63,0,19,64,0,41,64,18,24,42,64,64,24,41,66,19,24,42,66,66,24,13,20,64,66,121,20,4,0,0,10,4,0,0,55,52,0,119,0,82,0,2,66,0,0,1,1,1,1,5,21,12,66,1,66,3,0,16,22,66,4,121,22,39,0,0,7,4,0,0,57,52,0,1,66,4,0,1,64,0,0,134,23,0,0,24,55,6,0,57,66,64,0,21,64,23,21,0,25,64,0,2,64,0,0,1,1,1,1,4,26,25,64,19,64,25,61,0,27,64,0,21,64,27,61,0,28,64,0,19,64,28,26,0,29,64,0,32,30,29,0,120,30,4,0,0,8,7,0,0,58,57,0,119,0,13,0,25,31,57,4,26,32,7,4,1,64,3,0,16,33,64,32,121,33,4,0,0,7,32,0,0,57,31,0,119,0,228,255,0,6,32,0,0,56,31,0,1,59,11,0,119,0,7,0,0,9,8,0,0,54,58,0,119,0,4,0,0,6,4,0,0,56,52,0,1,59,11,0,32,64,59,11,121,64,8,0,32,34,6,0,121,34,4,0,1,10,0,0,0,55,56,0,119,0,28,0,0,9,6,0,0,54,56,0,42,64,54,0,1,66,1,0,1,65,0,0,134,36,0,0,24,55,6,0,64,66,65,0,41,65,36,24,42,65,65,24,41,66,19,24,42,66,66,24,13,37,65,66,121,37,4,0,0,10,9,0,0,55,54,0,119,0,11,0,25,38,54,1,26,39,9,1,32,40,39,0,121,40,4,0,1,10,0,0,0,55,38,0,119,0,4,0,0,9,39,0,0,54,38,0,119,0,232,255,33,41,10,0,1,66,0,0,125,42,41,55,66,0,0,0,139,42,0,0,140,3,99,0,0,0,0,0,1,95,0,0,136,97,0,0,0,96,97,0,136,97,0,0,25,97,97,32,137,97,0,0,130,97,0,0,136,98,0,0,49,97,97,98,224,223,3,0,135,97,0,0,0,4,0,0,0,15,1,0,0,26,2,0,0,37,4,0,1,97,0,0,13,48,37,97,0,59,26,0,34,70,59,1,20,97,48,70,0,93,97,0,121,93,5,0,1,3,255,255,0,89,3,0,137,96,0,0,139,89,0,0,0,81,4,0,25,90,81,4,1,97,4,0,1,98,0,0,134,5,0,0,24,55,6,0,90,97,98,0,0,94,5,0,0,6,94,0,0,7,26,0,3,8,6,7,0,9,4,0,25,10,9,12,1,98,4,0,1,97,0,0,134,11,0,0,24,55,6,0,10,98,97,0,15,12,8,11,121,12,6,0,0,13,94,0,0,14,26,0,3,16,13,14,0,21,16,0,119,0,9,0,0,17,4,0,25,18,17,12,1,97,4,0,1,98,0,0,134,19,0,0,24,55,6,0,18,97,98,0,0,21,19,0,26,20,21,1,0,92,20,0,0,22,4,0,1,98,4,0,1,97,0,0,134,23,0,0,24,55,6,0,22,98,97,0,0,24,4,0,25,25,24,44,1,97,4,0,1,98,0,0,134,27,0,0,24,55,6,0,25,97,98,0,41,98,23,2,3,28,27,98,1,98,4,0,1,97,0,0,134,29,0,0,24,55,6,0,28,98,97,0,0,91,29,0,0,30,4,0,0,31,15,0,33,32,31,0,0,33,15,0,2,97,0,0,113,0,1,0,125,34,32,33,97,0,0,0,134,35,0,0,56,126,5,0,30,34,0,0,0,15,35,0,0,36,94,0,0,26,36,0,0,38,26,0,0,39,92,0,17,40,38,39,120,40,2,0,119,0,14,0,0,41,15,0,0,42,26,0,0,43,91,0,41,97,42,2,3,44,43,97,1,98,4,0,134,97,0,0,116,78,6,0,44,41,98,0,0,45,26,0,25,46,45,1,0,26,46,0,119,0,239,255,0,47,4,0,1,97,4,0,1,98,0,0,134,49,0,0,24,55,6,0,47,97,98,0,0,26,49,0,0,50,94,0,0,51,26,0,0,52,4,0,25,53,52,48,1,98,4,0,1,97,0,0,134,54,0,0,24,55,6,0,53,98,97,0,41,97,51,2,3,55,54,97,1,97,4,0,1,98,0,0,134,56,0,0,24,55,6,0,55,97,98,0,15,57,50,56,121,57,3,0,1,95,11,0,119,0,19,0,0,58,26,0,0,60,4,0,25,61,60,48,1,98,4,0,1,97,0,0,134,62,0,0,24,55,6,0,61,98,97,0,41,97,58,2,3,63,62,97,1,97,4,0,1,98,0,0,134,64,0,0,24,55,6,0,63,97,98,0,32,65,64,255,121,65,2,0,1,95,11,0,32,98,95,11,121,98,16,0,0,66,94,0,0,67,26,0,0,68,4,0,25,69,68,48,1,98,4,0,1,97,0,0,134,71,0,0,24,55,6,0,69,98,97,0,41,97,67,2,3,72,71,97,1,98,4,0,134,97,0,0,116,78,6,0,72,66,98,0,0,73,92,0,0,74,26,0,0,75,4,0,25,76,75,52,1,97,4,0,1,98,0,0,134,77,0,0,24,55,6,0,76,97,98,0,41,98,74,2,3,78,77,98,1,98,4,0,1,97,0,0,134,79,0,0,24,55,6,0,78,98,97,0,15,80,79,73,121,80,16,0,0,82,92,0,0,83,26,0,0,84,4,0,25,85,84,52,1,97,4,0,1,98,0,0,134,86,0,0,24,55,6,0,85,97,98,0,41,98,83,2,3,87,86,98,1,97,4,0,134,98,0,0,116,78,6,0,87,82,97,0,0,88,4,0,134,98,0,0,0,42,6,0,88,0,0,0,1,3,0,0,0,89,3,0,137,96,0,0,139,89,0,0,140,1,88,0,0,0,0,0,1,83,0,0,136,85,0,0,0,84,85,0,136,85,0,0,25,85,85,16,137,85,0,0,130,85,0,0,136,86,0,0,49,85,85,86,76,227,3,0,135,85,0,0,0,2,0,0,1,85,232,106,1,86,2,0,1,87,0,0,134,13,0,0,24,55,6,0,85,86,87,0,41,87,13,16,42,87,87,16,0,24,87,0,38,87,24,4,0,35,87,0,33,46,35,0,38,87,46,1,0,57,87,0,1,87,255,0,19,87,57,87,0,68,87,0,41,87,68,24,42,87,87,24,33,79,87,0,121,79,5,0,1,1,0,0,0,78,1,0,137,84,0,0,139,78,0,0,0,80,2,0,25,3,80,24,1,87,2,0,1,86,0,0,134,4,0,0,24,55,6,0,3,87,86,0,41,86,4,16,42,86,86,16,0,5,86,0,1,86,0,4,19,86,5,86,0,6,86,0,33,7,6,0,38,86,7,1,0,8,86,0,1,86,255,0,19,86,8,86,0,9,86,0,1,86,255,0,19,86,9,86,0,10,86,0,33,11,10,0,121,11,26,0,1,86,232,106,1,87,2,0,1,85,0,0,134,12,0,0,24,55,6,0,86,87,85,0,41,85,12,16,42,85,85,16,0,14,85,0,38,85,14,2,0,15,85,0,33,16,15,0,38,85,16,1,0,17,85,0,1,85,255,0,19,85,17,85,0,18,85,0,41,85,18,24,42,85,85,24,33,19,85,0,120,19,5,0,1,1,0,0,0,78,1,0,137,84,0,0,139,78,0,0,0,20,2,0,25,21,20,8,25,22,21,4,1,85,4,0,1,87,0,0,134,23,0,0,24,55,6,0,22,85,87,0,0,82,23,0,0,25,2,0,25,26,25,8,1,87,4,0,1,85,0,0,134,27,0,0,24,55,6,0,26,87,85,0,0,81,27,0,0,28,82,0,0,29,81,0,1,85,220,106,1,87,4,0,1,86,0,0,134,30,0,0,24,55,6,0,85,87,86,0,1,86,216,106,1,87,4,0,1,85,0,0,134,31,0,0,24,55,6,0,86,87,85,0,134,32,0,0,4,25,6,0,28,29,30,31,34,33,32,3,120,33,51,0,0,61,2,0,25,62,61,68,1,85,4,0,1,87,0,0,134,63,0,0,24,55,6,0,62,85,87,0,1,87,20,107,1,85,4,0,1,86,0,0,134,64,0,0,24,55,6,0,87,85,86,0,14,65,63,64,121,65,6,0,1,1,0,0,0,78,1,0,137,84,0,0,139,78,0,0,119,0,31,0,0,66,2,0,25,67,66,68,1,86,4,0,1,85,0,0,134,69,0,0,24,55,6,0,67,86,85,0,25,70,69,28,1,85,2,0,1,86,0,0,134,71,0,0,24,55,6,0,70,85,86,0,41,86,71,16,42,86,86,16,0,72,86,0,38,86,72,1,0,73,86,0,33,74,73,0,40,86,74,1,0,75,86,0,38,86,75,1,0,76,86,0,1,86,255,0,19,86,76,86,0,77,86,0,0,1,77,0,0,78,1,0,137,84,0,0,139,78,0,0,0,34,82,0,1,86,220,106,1,85,4,0,1,87,0,0,134,36,0,0,24,55,6,0,86,85,87,0,14,37,34,36,121,37,68,0,0,38,81,0,1,87,216,106,1,85,4,0,1,86,0,0,134,39,0,0,24,55,6,0,87,85,86,0,14,40,38,39,121,40,59,0,1,86,216,106,1,85,4,0,1,87,0,0,134,41,0,0,24,55,6,0,86,85,87,0,41,87,41,5,0,42,87,0,0,43,82,0,3,44,42,43,1,87,192,26,41,85,44,3,3,45,87,85,42,85,45,0,1,87,1,0,1,86,0,0,134,47,0,0,24,55,6,0,85,87,86,0,41,86,47,24,42,86,86,24,0,48,86,0,134,49,0,0,232,58,6,0,48,0,0,0,33,50,49,0,120,50,32,0,0,51,81,0,41,86,51,5,0,52,86,0,1,86,220,106,1,87,4,0,1,85,0,0,134,53,0,0,24,55,6,0,86,87,85,0,3,54,52,53,1,85,192,26,41,87,54,3,3,55,85,87,42,87,55,0,1,85,1,0,1,86,0,0,134,56,0,0,24,55,6,0,87,85,86,0,41,86,56,24,42,86,86,24,0,58,86,0,134,59,0,0,232,58,6,0,58,0,0,0,33,60,59,0,120,60,5,0,1,1,0,0,0,78,1,0,137,84,0,0,139,78,0,0,1,1,1,0,0,78,1,0,137,84,0,0,139,78,0,0,140,0,92,0,0,0,0,0,2,85,0,0,216,117,0,0,1,83,0,0,136,86,0,0,0,84,86,0,136,86,0,0,25,86,86,32,137,86,0,0,130,86,0,0,136,87,0,0,49,86,86,87,76,231,3,0,135,86,0,0,134,1,0,0,116,56,6,0,1,86,36,107,1,87,132,0,5,87,1,87,3,2,86,87,0,80,2,0,0,13,80,0,25,24,13,8,25,35,24,4,1,87,4,0,1,86,0,0,134,46,0,0,24,55,6,0,35,87,86,0,26,57,46,2,0,68,80,0,25,76,68,8,1,86,4,0,1,87,0,0,134,77,0,0,24,55,6,0,76,86,87,0,26,3,77,2,5,4,57,3,26,5,4,2,0,81,5,0,0,6,81,0,1,87,8,0,15,7,87,6,1,87,8,0,125,0,7,87,5,0,0,0,0,81,0,0,0,8,81,0,134,9,0,0,20,36,6,0,8,0,0,0,25,10,9,2,0,78,10,0,0,79,10,0,0,11,78,0,26,12,11,1,0,78,12,0,33,14,11,0], eb + 245760);
  HEAPU8.set([120,14,2,0,119,0,70,0,0,15,80,0,1,86,20,0,1,88,0,0,134,87,0,0,12,35,4,0,15,85,86,88,134,16,0,0,80,249,2,0,0,82,16,0,0,17,82,0,25,18,17,12,1,86,4,0,1,89,0,0,134,88,0,0,24,55,6,0,85,86,89,0,1,89,4,0,134,87,0,0,116,78,6,0,18,88,89,0,25,89,18,4,25,86,85,4,1,90,4,0,1,91,0,0,134,88,0,0,24,55,6,0,86,90,91,0,1,91,4,0,134,87,0,0,116,78,6,0,89,88,91,0,0,19,82,0,1,91,112,3,134,87,0,0,124,205,5,0,91,19,0,0,0,20,82,0,25,21,20,8,1,87,4,0,1,91,0,0,134,22,0,0,24,55,6,0,21,87,91,0,1,91,255,0,19,91,22,91,0,23,91,0,1,91,4,0,1,87,0,0,134,25,0,0,24,55,6,0,85,91,87,0,41,87,25,5,0,26,87,0,1,87,220,117,1,91,4,0,1,88,0,0,134,27,0,0,24,55,6,0,87,91,88,0,3,28,26,27,1,88,192,26,41,91,28,3,3,29,88,91,42,88,29,0,1,87,1,0,134,91,0,0,116,78,6,0,88,23,87,0,119,0,182,255,0,30,81,0,134,31,0,0,20,36,6,0,30,0,0,0,25,32,31,2,0,78,32,0,0,33,79,0,25,34,33,2,15,36,32,34,121,36,4,0,0,37,79,0,25,38,37,2,0,78,38,0,0,39,80,0,25,40,39,8,25,41,40,4,1,91,4,0,1,87,0,0,134,42,0,0,24,55,6,0,41,91,87,0,26,43,42,2,0,44,80,0,25,45,44,8,1,87,4,0,1,91,0,0,134,47,0,0,24,55,6,0,45,87,91,0,26,48,47,2,5,49,43,48,0,81,49,0,0,50,78,0,0,51,81,0,15,52,51,50,121,52,3,0,0,53,81,0,0,78,53,0,1,91,200,2,1,87,4,0,1,88,0,0,134,54,0,0,24,55,6,0,91,87,88,0,25,55,54,1,1,87,200,2,1,91,4,0,134,88,0,0,116,78,6,0,87,55,91,0,0,56,78,0,26,58,56,1,0,78,58,0,33,59,56,0,120,59,2,0,119,0,50,0,1,81,0,0,0,60,80,0,1,88,10,0,1,91,1,0,134,61,0,0,12,35,4,0,60,85,88,91,41,91,61,24,42,91,91,24,33,62,91,0,120,62,2,0,119,0,239,255,134,63,0,0,56,80,6,0,0,82,63,0,0,64,82,0,1,91,0,0,134,65,0,0,24,191,5,0,91,0,0,0,134,91,0,0,8,13,3,0,64,65,85,0,0,66,82,0,25,67,66,24,1,91,2,0,1,88,0,0,134,69,0,0,24,55,6,0,67,91,88,0,41,88,69,16,42,88,88,16,0,70,88,0,1,88,0,8,20,88,70,88,0,71,88,0,2,88,0,0,255,255,0,0,19,88,71,88,0,72,88,0,1,91,2,0,134,88,0,0,116,78,6,0,67,72,91,0,0,73,82,0,134,88,0,0,84,250,5,0,73,0,0,0,119,0,202,255,1,88,200,2,1,91,4,0,1,87,0,0,134,74,0,0,24,55,6,0,88,91,87,0,26,75,74,1,1,91,200,2,1,88,4,0,134,87,0,0,116,78,6,0,91,75,88,0,137,84,0,0,139,0,0,0,140,9,104,0,0,0,0,0,1,99,0,0,136,101,0,0,0,100,101,0,136,101,0,0,25,101,101,80,137,101,0,0,130,101,0,0,136,102,0,0,49,101,101,102,44,235,3,0,135,101,0,0,0,10,0,0,0,21,1,0,0,32,2,0,0,43,3,0,0,54,4,0,0,65,5,0,0,76,6,0,0,86,7,0,0,87,8,0,0,11,10,0,1,101,0,0,14,12,11,101,0,13,21,0,1,101,0,0,14,14,13,101,19,101,12,14,0,92,101,0,121,92,114,0,0,15,21,0,2,101,0,0,64,162,0,0,1,102,4,0,1,103,0,0,134,16,0,0,24,55,6,0,101,102,103,0,13,17,15,16,120,17,104,0,0,18,76,0,0,19,21,0,25,20,19,8,1,103,4,0,1,102,0,0,134,22,0,0,24,55,6,0,20,103,102,0,15,23,22,18,120,23,94,0,0,24,86,0,0,25,21,0,25,26,25,12,1,102,4,0,1,103,0,0,134,27,0,0,24,55,6,0,26,102,103,0,15,28,27,24,0,29,54,0,34,30,29,0,20,103,28,30,0,93,103,0,0,31,65,0,34,33,31,0,20,103,93,33,0,94,103,0,120,94,76,0,0,34,10,0,25,35,34,8,1,103,4,0,1,102,0,0,134,36,0,0,24,55,6,0,35,103,102,0,0,37,32,0,4,38,36,37,0,98,38,0,0,39,10,0,25,40,39,12,1,102,4,0,1,103,0,0,134,41,0,0,24,55,6,0,40,102,103,0,0,42,43,0,4,44,41,42,0,95,44,0,0,45,76,0,0,46,54,0,4,47,45,46,25,48,47,1,0,89,48,0,0,49,86,0,0,50,65,0,4,51,49,50,25,52,51,1,0,88,52,0,0,53,98,0,0,55,89,0,15,56,53,55,0,57,98,0,0,58,89,0,125,59,56,57,58,0,0,0,0,91,59,0,0,60,95,0,0,61,88,0,15,62,60,61,0,63,95,0,0,64,88,0,125,66,62,63,64,0,0,0,0,90,66,0,0,67,32,0,0,68,91,0,3,69,67,68,0,97,69,0,0,70,43,0,0,71,90,0,3,72,70,71,0,96,72,0,0,73,10,0,0,74,21,0,0,75,32,0,0,77,43,0,0,78,97,0,0,79,96,0,0,80,54,0,0,81,65,0,0,82,87,0,1,103,255,0,19,103,82,103,0,83,103,0,134,84,0,0,52,31,3,0,73,74,75,77,78,79,80,81,83,0,0,0,0,9,84,0,0,85,9,0,137,100,0,0,139,85,0,0,1,9,255,255,0,85,9,0,137,100,0,0,139,85,0,0,140,0,68,0,0,0,0,0,2,58,0,0,156,26,0,0,2,59,0,0,188,2,0,0,2,60,0,0,0,3,0,0,2,61,0,0,5,209,0,0,2,62,0,0,44,1,0,0,2,63,0,0,150,0,0,0,1,56,0,0,136,64,0,0,0,57,64,0,136,64,0,0,25,64,64,48,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,172,237,3,0,135,64,0,0,25,52,57,32,25,55,57,24,25,54,57,16,25,53,57,8,0,51,57,0,1,64,4,0,1,65,0,0,134,0,0,0,24,55,6,0,59,64,65,0,0,50,0,0,1,65,4,0,1,64,0,0,134,1,0,0,24,55,6,0,58,65,64,0,36,12,1,0,1,64,4,0,1,65,0,0,134,23,0,0,24,55,6,0,58,64,65,0,121,12,81,0,26,34,23,1,1,64,4,0,134,65,0,0,116,78,6,0,58,34,64,0,1,65,174,252,15,42,23,65,121,42,5,0,1,64,115,0,134,65,0,0,144,122,3,0,64,0,0,0,1,65,4,0,1,64,0,0,134,43,0,0,24,55,6,0,60,65,64,0,33,44,43,0,121,44,3,0,137,57,0,0,139,0,0,0,1,64,5,0,134,45,0,0,20,36,6,0,64,0,0,0,33,46,45,0,121,46,3,0,137,57,0,0,139,0,0,0,1,64,8,0,134,2,0,0,20,36,6,0,64,0,0,0,25,3,2,4,1,64,4,0,1,65,0,0,134,4,0,0,24,55,6,0,60,64,65,0,3,5,4,3,1,64,4,0,134,65,0,0,116,78,6,0,60,5,64,0,1,64,3,0,1,66,4,0,134,65,0,0,116,78,6,0,59,64,66,0,42,65,61,0,1,66,1,0,1,64,0,0,134,6,0,0,24,55,6,0,65,66,64,0,41,64,6,24,42,64,64,24,33,7,64,0,120,7,11,0,2,64,0,0,107,207,0,0,2,66,0,0,157,207,0,0,134,8,0,0,224,49,6,0,64,66,0,0,134,66,0,0,112,85,6,0,8,51,0,0,2,66,0,0,196,207,0,0,2,64,0,0,210,207,0,0,134,9,0,0,224,49,6,0,66,64,0,0,134,64,0,0,144,18,6,0,9,53,0,0,119,0,109,0,0,47,23,0,1,64,0,0,134,10,0,0,228,189,5,0,64,0,0,0,1,64,1,0,134,11,0,0,228,189,5,0,64,0,0,0,3,13,10,11,25,14,13,1,2,64,0,0,241,208,0,0,42,64,64,0,1,66,1,0,1,65,0,0,134,15,0,0,24,55,6,0,64,66,65,0,1,65,255,0,19,65,15,65,0,16,65,0,4,17,14,16,1,65,4,0,1,66,0,0,134,18,0,0,24,55,6,0,58,65,66,0,4,19,18,17,1,65,4,0,134,66,0,0,116,78,6,0,58,19,65,0,1,66,4,0,1,65,0,0,134,20,0,0,24,55,6,0,58,66,65,0,15,21,20,63,0,22,47,0,17,24,63,22,19,65,21,24,0,48,65,0,121,48,17,0,1,66,2,0,1,64,4,0,134,65,0,0,116,78,6,0,59,66,64,0,2,65,0,0,220,207,0,0,2,64,0,0,21,208,0,0,134,25,0,0,224,49,6,0,65,64,0,0,134,64,0,0,144,18,6,0,25,54,0,0,119,0,49,0,1,64,4,0,1,65,0,0,134,26,0,0,24,55,6,0,58,64,65,0,15,27,26,62,0,28,47,0,17,29,62,28,19,65,27,29,0,49,65,0,121,49,38,0,1,64,1,0,1,66,4,0,134,65,0,0,116,78,6,0,59,64,66,0,42,65,61,0,1,66,1,0,1,64,0,0,134,30,0,0,24,55,6,0,65,66,64,0,41,64,30,24,42,64,64,24,33,31,64,0,121,31,12,0,2,64,0,0,51,208,0,0,2,66,0,0,72,208,0,0,134,32,0,0,224,49,6,0,64,66,0,0,134,66,0,0,144,18,6,0,32,55,0,0,119,0,12,0,2,66,0,0,87,208,0,0,2,64,0,0,116,208,0,0,134,33,0,0,224,49,6,0,66,64,0,0,134,64,0,0,144,18,6,0,33,52,0,0,119,0,1,0,1,64,4,0,1,66,0,0,134,35,0,0,24,55,6,0,59,64,66,0,0,36,50,0,14,37,35,36,120,37,3,0,137,57,0,0,139,0,0,0,1,66,232,106,1,64,2,0,1,65,0,0,134,38,0,0,24,55,6,0,66,64,65,0,41,65,38,16,42,65,65,16,0,39,65,0,1,65,255,223,19,65,39,65,0,40,65,0,2,65,0,0,255,255,0,0,19,65,40,65,0,41,65,0,1,64,232,106,1,66,2,0,134,65,0,0,116,78,6,0,64,41,66,0,2,66,0,0,1,209,0,0,42,66,66,0,1,64,0,0,1,67,1,0,134,65,0,0,116,78,6,0,66,64,67,0,2,67,0,0,6,209,0,0,42,67,67,0,1,64,0,0,1,66,1,0,134,65,0,0,116,78,6,0,67,64,66,0,1,66,244,2,1,64,0,0,1,67,4,0,134,65,0,0,116,78,6,0,66,64,67,0,137,57,0,0,139,0,0,0,140,4,65,0,0,0,0,0,2,60,0,0,128,255,255,255,2,61,0,0,255,0,0,0,1,58,0,0,136,62,0,0,0,59,62,0,136,62,0,0,25,62,62,16,137,62,0,0,130,62,0,0,136,63,0,0,49,62,62,63,24,242,3,0,135,62,0,0,0,54,59,0,1,62,0,0,13,10,3,62,2,62,0,0,104,195,0,0,125,9,10,62,3,0,0,0,1,62,4,0,1,63,0,0,134,11,0,0,24,55,6,0,9,62,63,0,1,63,0,0,13,22,1,63,121,22,7,0,32,33,11,0,121,33,3,0,1,4,0,0,119,0,150,0,1,58,15,0,119,0,148,0,1,63,0,0,13,44,0,63,125,55,44,54,0,0,0,0,32,46,2,0,121,46,3,0,1,4,254,255,119,0,140,0,32,47,11,0,121,47,52,0,42,63,1,0,1,62,1,0,1,64,0,0,134,48,0,0,24,55,6,0,63,62,64,0,19,64,48,61,0,49,64,0,1,64,255,255,41,62,48,24,42,62,62,24,15,50,64,62,121,50,12,0,1,64,4,0,134,62,0,0,116,78,6,0,55,49,64,0,41,62,48,24,42,62,62,24,33,12,62,0,38,62,12,1,0,13,62,0,0,4,13,0,119,0,114,0,1,62,194,0,4,14,49,62,1,62,50,0,16,15,62,14,121,15,3,0,1,58,15,0,119,0,107,0,25,16,1,1,2,62,0,0,104,194,0,0,41,64,14,2,3,17,62,64,1,64,4,0,1,62,0,0,134,18,0,0,24,55,6,0,17,64,62,0,26,19,2,1,32,20,19,0,121,20,3,0,0,53,18,0,119,0,10,0,0,5,19,0,0,51,18,0,0,56,16,0,1,58,9,0,119,0,5,0,0,5,2,0,0,51,11,0,0,56,1,0,1,58,9,0,32,62,58,9,121,62,76,0,42,62,56,0,1,64,1,0,1,63,0,0,134,21,0,0,24,55,6,0,62,64,63,0,19,63,21,61,0,23,63,0,43,63,23,3,0,24,63,0,26,25,24,16,42,63,51,26,0,26,63,0,3,27,24,26,20,63,25,27,0,28,63,0,1,63,7,0,16,29,63,28,121,29,3,0,1,58,15,0,119,0,60,0,0,6,5,0,0,34,21,0,0,52,51,0,0,57,56,0,41,63,52,6,0,30,63,0,25,31,57,1,19,63,34,61,0,32,63,0,1,63,128,0,4,35,32,63,20,63,35,30,0,36,63,0,26,37,6,1,34,38,36,0,120,38,4,0,0,7,36,0,0,8,37,0,119,0,24,0,32,40,37,0,121,40,3,0,0,53,36,0,119,0,32,0,42,63,31,0,1,64,1,0,1,62,0,0,134,41,0,0,24,55,6,0,63,64,62,0,38,62,41,192,0,42,62,0,41,62,42,24,42,62,62,24,32,43,62,128,121,43,6,0,0,6,37,0,0,34,41,0,0,52,36,0,0,57,31,0,119,0,221,255,1,58,15,0,119,0,18,0,1,64,0,0,1,63,4,0,134,62,0,0,116,78,6,0,9,64,63,0,1,63,4,0,134,62,0,0,116,78,6,0,55,7,63,0,4,39,2,8,0,4,39,0,119,0,6,0,1,63,4,0,134,62,0,0,116,78,6,0,9,53,63,0,1,4,254,255,32,62,58,15,121,62,14,0,1,63,0,0,1,64,4,0,134,62,0,0,116,78,6,0,9,63,64,0,134,45,0,0,4,85,6,0,1,64,84,0,1,63,4,0,134,62,0,0,116,78,6,0,45,64,63,0,1,4,255,255,137,59,0,0,139,4,0,0,140,2,69,0,0,0,0,0,2,62,0,0,140,26,0,0,2,63,0,0,105,27,1,0,2,64,0,0,253,208,0,0,1,60,0,0,136,65,0,0,0,61,65,0,136,65,0,0,25,65,65,48,137,65,0,0,130,65,0,0,136,66,0,0,49,65,65,66,72,245,3,0,135,65,0,0,25,59,61,24,25,58,61,16,25,57,61,8,0,56,61,0,0,3,0,0,0,14,1,0,1,66,0,0,1,67,4,0,134,65,0,0,116,78,6,0,62,66,67,0,0,25,3,0,1,65,0,0,14,36,25,65,120,36,2,0,119,0,133,0,0,47,14,0,33,52,47,0,121,52,61,0,0,53,14,0,0,54,3,0,25,55,54,8,1,65,4,0,1,67,0,0,134,4,0,0,24,55,6,0,55,65,67,0,14,5,53,4,121,5,49,0,0,6,14,0,32,7,6,255,121,7,21,0,0,8,3,0,25,9,8,8,1,67,4,0,1,65,0,0,134,10,0,0,24,55,6,0,9,67,65,0,33,11,10,58,121,11,12,0,0,12,3,0,25,13,12,8,1,65,4,0,1,67,0,0,134,15,0,0,24,55,6,0,13,65,67,0,33,16,15,44,121,16,3,0,1,60,11,0,119,0,29,0,0,17,14,0,32,18,17,254,121,18,26,0,0,19,3,0,25,20,19,8,1,67,4,0,1,65,0,0,134,21,0,0,24,55,6,0,20,67,65,0,32,22,21,61,121,22,3,0,1,60,11,0,119,0,15,0,0,23,3,0,25,24,23,8,1,65,4,0,1,67,0,0,134,26,0,0,24,55,6,0,24,65,67,0,32,27,26,47,121,27,6,0,1,60,11,0,119,0,4,0,1,60,11,0,119,0,2,0,1,60,11,0,32,67,60,11,121,67,59,0,1,60,0,0,1,67,4,0,1,65,0,0,134,28,0,0,24,55,6,0,62,67,65,0,25,29,28,1,1,67,4,0,134,65,0,0,116,78,6,0,62,29,67,0,0,30,3,0,25,31,30,28,42,65,31,0,1,67,1,0,1,66,0,0,134,32,0,0,24,55,6,0,65,67,66,0,41,66,32,24,42,66,66,24,0,33,66,0,1,67,4,0,134,66,0,0,116,78,6,0,56,33,67,0,2,67,0,0,105,31,1,0,134,66,0,0,248,82,6,0,63,67,56,0,42,67,64,0,1,65,1,0,1,68,1,0,134,66,0,0,116,78,6,0,67,65,68,0,0,34,3,0,1,66,0,0,134,35,0,0,208,181,1,0,34,66,0,0,134,37,0,0,140,159,2,0,63,35,0,0,41,66,37,24,42,66,66,24,0,38,66,0,32,39,38,27,42,68,64,0,1,65,0,0,1,67,1,0,134,66,0,0,116,78,6,0,68,65,67,0,121,39,3,0,1,60,12,0,119,0,9,0,0,40,3,0,1,66,4,0,1,67,0,0,134,41,0,0,24,55,6,0,40,66,67,0,0,3,41,0,119,0,120,255,32,67,60,12,121,67,10,0,2,66,0,0,166,51,1,0,134,67,0,0,144,18,6,0,66,57,0,0,1,2,1,0,0,51,2,0,137,61,0,0,139,51,0,0,1,67,4,0,1,66,0,0,134,42,0,0,24,55,6,0,62,67,66,0,32,43,42,0,120,43,7,0,134,66,0,0,248,238,5,0,1,2,1,0,0,51,2,0,137,61,0,0,139,51,0,0,2,66,0,0,5,209,0,0,42,66,66,0,1,67,1,0,1,65,0,0,134,44,0,0,24,55,6,0,66,67,65,0,41,65,44,24,42,65,65,24,33,45,65,0,0,46,14,0,32,48,46,0,121,45,11,0,2,65,0,0,113,31,1,0,2,67,0,0,126,31,1,0,125,49,48,65,67,0,0,0,134,67,0,0,144,18,6,0,49,58,0,0,119,0,10,0,2,67,0,0,146,31,1,0,2,65,0,0,167,31,1,0,125,50,48,67,65,0,0,0,134,65,0,0,144,18,6,0,50,59,0,0,1,2,0,0,0,51,2,0,137,61,0,0,139,51,0,0,140,4,84,0,0,0,0,0,1,79,0,0,136,81,0,0,0,80,81,0,136,81,0,0,25,81,81,32,137,81,0,0,130,81,0,0,136,82,0,0,49,81,81,82,192,248,3,0,135,81,0,0,0,5,0,0,0,16,1,0,0,27,2,0,0,38,3,0,1,81,1,0,1,82,80,0,134,49,0,0,120,253,5,0,81,82,0,0,0,78,49,0,1,82,0,0,13,60,49,82,121,60,6,0,0,71,78,0,0,4,71,0,0,75,4,0,137,80,0,0,139,75,0,0,0,76,5,0,41,82,76,2,0,77,82,0,135,6,5,0,77,0,0,0,0,7,78,0,25,8,7,44,1,81,4,0,134,82,0,0,116,78,6,0,8,6,81,0,1,82,0,0,13,9,6,82,121,9,8,0,0,10,78,0,135,82,6,0,10,0,0,0,1,4,0,0,0,75,4,0,137,80,0,0,139,75,0,0,0,11,5,0,41,82,11,2,0,12,82,0,135,13,5,0,12,0,0,0,0,14,78,0,25,15,14,48,1,81,4,0,134,82,0,0,116,78,6,0,15,13,81,0,1,82,0,0,13,17,13,82,121,17,17,0,0,18,78,0,25,19,18,44,1,82,4,0,1,81,0,0,134,20,0,0,24,55,6,0,19,82,81,0,135,81,6,0,20,0,0,0,0,21,78,0,135,81,6,0,21,0,0,0,1,4,0,0,0,75,4,0,137,80,0,0,139,75,0,0,0,22,5,0,41,81,22,2,0,23,81,0,135,24,5,0,23,0,0,0,0,25,78,0,25,26,25,52,1,82,4,0,134,81,0,0,116,78,6,0,26,24,82,0,1,81,0,0,13,28,24,81,121,28,26,0,0,29,78,0,25,30,29,48,1,81,4,0,1,82,0,0,134,31,0,0,24,55,6,0,30,81,82,0,135,82,6,0,31,0,0,0,0,32,78,0,25,33,32,44,1,82,4,0,1,81,0,0,134,34,0,0,24,55,6,0,33,82,81,0,135,81,6,0,34,0,0,0,0,35,78,0,135,81,6,0,35,0,0,0,1,4,0,0,0,75,4,0,137,80,0,0,139,75,0,0,0,36,5,0,0,37,78,0,25,39,37,8,1,82,4,0,134,81,0,0,116,78,6,0,39,36,82,0,0,40,16,0,0,41,78,0,25,42,41,12,1,82,4,0,134,81,0,0,116,78,6,0,42,40,82,0,0,43,27,0,0,44,78,0,25,45,44,16,1,82,4,0,134,81,0,0,116,78,6,0,45,43,82,0,0,46,38,0,0,47,78,0,25,48,47,20,1,82,4,0,134,81,0,0,116,78,6,0,48,46,82,0,0,50,78,0,25,51,50,32,1,82,32,0,1,83,4,0,134,81,0,0,116,78,6,0,51,82,83,0,0,52,5,0,2,81,0,0,76,162,0,0,1,83,4,0,1,82,0,0,134,53,0,0,24,55,6,0,81,83,82,0,13,54,52,53,121,54,12,0,0,55,16,0,2,82,0,0,80,162,0,0,1,83,4,0,1,81,0,0,134,56,0,0,24,55,6,0,82,83,81,0,13,57,55,56,0,59,57,0,119,0,2,0,1,59,0,0,38,81,59,1,0,58,81,0,1,81,255,0,19,81,58,81,0,61,81,0,0,62,78,0,25,63,62,36,42,83,63,0,1,82,1,0,134,81,0,0,116,78,6,0,83,61,82,0,0,64,5,0,26,65,64,1,0,66,78,0,25,67,66,60,1,82,4,0,134,81,0,0,116,78,6,0,67,65,82,0,0,68,78,0,25,69,68,72,1,82,255,255,1,83,4,0,134,81,0,0,116,78,6,0,69,82,83,0,0,70,78,0,25,72,70,68,1,83,255,255,1,82,4,0,134,81,0,0,116,78,6,0,72,83,82,0,0,73,78,0,134,81,0,0,164,179,5,0,73,0,0,0,0,74,78,0,0,4,74,0,0,75,4,0,137,80,0,0,139,75,0,0,140,2,92,0,0,0,0,0,1,87,0,0,136,89,0,0,0,88,89,0,136,89,0,0,25,89,89,16,137,89,0,0,130,89,0,0,136,90,0,0,49,89,89,90,52,252,3,0,135,89,0,0,0,3,0,0,0,14,1,0,2,89,0,0,80,159,0,0,1,90,4,0,1,91,0,0,134,25,0,0,24,55,6,0,89,90,91,0,33,36,25,0,2,91,0,0,84,159,0,0,1,90,4,0,1,89,0,0,134,47,0,0,24,55,6,0,91,90,89,0,33,58,47,0,20,89,36,58,0,86,89,0,121,86,27,0,2,89,0,0,84,159,0,0,1,90,4,0,1,91,0,0,134,69,0,0,24,55,6,0,89,90,91,0,33,80,69,0,2,91,0,0,80,159,0,0,1,90,4,0,1,89,0,0,134,85,0,0,24,55,6,0,91,90,89,0,33,4,85,0,1,89,1,0,125,5,80,89,4,0,0,0,38,89,5,1,0,6,89,0,0,2,6,0,0,84,2,0,137,88,0,0,139,84,0,0,119,0,144,0,0,7,3,0,0,8,14,0,134,89,0,0,60,15,5,0,7,8,0,0,0,9,3,0,0,10,14,0,25,11,10,8,134,89,0,0,60,15,5,0,9,11,0,0,0,12,3,0,0,13,14,0,25,15,13,16,134,89,0,0,60,15,5,0,12,15,0,0,0,16,3,0,0,17,14,0,25,18,17,24,134,89,0,0,100,182,4,0,16,18,0,0,0,19,3,0,0,20,14,0,25,21,20,28,134,89,0,0,56,2,5,0,19,21,0,0,0,22,3,0,0,23,14,0,25,24,23,32,134,89,0,0,100,182,4,0,22,24,0,0,0,26,3,0,0,27,14,0,25,28,27,36,134,89,0,0,60,15,5,0,26,28,0,0,0,29,3,0,0,30,14,0,25,31,30,36,25,32,31,8,134,89,0,0,60,15,5,0,29,32,0,0,0,33,3,0,0,34,14,0,25,35,34,36,25,37,35,16,134,89,0,0,60,15,5,0,33,37,0,0,0,38,3,0,0,39,14,0,25,40,39,36,25,41,40,24,134,89,0,0,60,15,5,0,38,41,0,0,0,42,3,0,0,43,14,0,25,44,43,36,25,45,44,32,134,89,0,0,60,15,5,0,42,45,0,0,0,46,3,0,0,48,14,0,25,49,48,36,25,50,49,40,134,89,0,0,60,15,5,0,46,50,0,0,0,51,3,0,0,52,14,0,25,53,52,36,25,54,53,48,134,89,0,0,60,15,5,0,51,54,0,0,0,55,3,0,0,56,14,0,25,57,56,36,25,59,57,56,134,89,0,0,60,15,5,0,55,59,0,0,0,60,3,0,0,61,14,0,25,62,61,36,25,63,62,64,134,89,0,0,60,15,5,0,60,63,0,0,0,64,3,0,0,65,14,0,25,66,65,36,25,67,66,72,134,89,0,0,60,15,5,0,64,67,0,0,0,68,3,0,0,70,14,0,25,71,70,36,25,72,71,80,134,89,0,0,60,15,5,0,68,72,0,0,0,73,3,0,0,74,14,0,25,75,74,36,25,76,75,88,134,89,0,0,60,15,5,0,73,76,0,0,2,89,0,0,84,159,0,0,1,90,4,0,1,91,0,0,134,77,0,0,24,55,6,0,89,90,91,0,33,78,77,0,2,91,0,0,80,159,0,0,1,90,4,0,1,89,0,0,134,79,0,0,24,55,6,0,91,90,89,0,33,81,79,0,1,89,1,0,125,82,78,89,81,0,0,0,38,89,82,1,0,83,89,0,0,2,83,0,0,84,2,0,137,88,0,0,139,84,0,0,1,89,0,0,139,89,0,0,140,1,67,0,0,0,0,0,1,62,0,0,136,64,0,0,0,63,64,0,136,64,0,0,25,64,64,16,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,104,255,3,0,135,64,0,0,0,2,0,0,0,13,2,0,25,24,13,17,42,64,24,0,1,65,1,0,1,66,0,0,134,35,0,0,24,55,6,0,64,65,66,0,41,66,35,24,42,66,66,24,0,46,66,0,26,56,46,65,1,66,88,10,27,65,56,52,3,57,66,65,25,58,57,4,1,65,4,0,1,66,0,0,134,59,0,0,24,55,6,0,58,65,66,0,0,61,59,0,36,3,59,0,120,3,143,0,0,4,2,0,25,5,4,68,1,66,4,0,1,65,0,0,134,6,0,0,24,55,6,0,5,66,65,0,1,65,20,107,1,66,4,0,1,64,0,0,134,7,0,0,24,55,6,0,65,66,64,0,13,8,6,7,120,8,128,0,0,9,2,0,134,10,0,0,24,227,3,0,9,0,0,0,1,64,255,0,19,64,10,64,0,11,64,0,33,12,11,0,120,12,119,0,1,64,112,3,1,66,4,0,1,65,0,0,134,14,0,0,24,55,6,0,64,66,65,0,0,60,14,0,0,15,60,0,1,65,0,0,14,16,15,65,120,16,3,0,1,62,18,0,119,0,91,0,0,17,60,0,25,18,17,8,1,65,4,0,1,66,0,0,134,19,0,0,24,55,6,0,18,65,66,0,32,20,19,63,121,20,12,0,0,21,60,0,25,22,21,52,1,66,4,0,1,65,0,0,134,23,0,0,24,55,6,0,22,66,65,0,32,25,23,10,120,25,4,0,1,62,9,0,119,0,2,0,1,62,9,0,32,65,62,9,121,65,60,0,1,62,0,0,0,26,60,0,25,27,26,12,134,28,0,0,248,24,4,0,27,0,0,0,0,29,2,0,25,30,29,68,1,65,4,0,1,66,0,0,134,31,0,0,24,55,6,0,30,65,66,0,13,32,28,31,121,32,45,0,1,66,100,0,134,33,0,0,20,36,6,0,66,0,0,0,0,34,61,0,15,36,33,34,121,36,38,0,1,66,116,3,1,65,4,0,1,64,0,0,134,37,0,0,24,55,6,0,66,65,64,0,0,2,37,0,0,38,2,0,1,64,0,0,14,39,38,64,120,39,2,0,119,0,20,0,0,40,2,0,25,41,40,20,1,64,4,0,1,65,0,0,134,42,0,0,24,55,6,0,41,64,65,0,0,43,60,0,25,44,43,12,13,45,42,44,120,45,9,0,0,47,2,0,1,65,4,0,1,64,0,0,134,48,0,0,24,55,6,0,47,65,64,0,0,2,48,0,119,0,233,255,0,49,2,0,1,64,0,0,13,50,49,64,121,50,3,0,1,62,16,0,119,0,9,0,0,53,60,0,1,64,4,0,1,65,0,0,134,54,0,0,24,55,6,0,53,64,65,0,0,60,54,0,119,0,161,255,32,65,62,16,121,65,8,0,0,51,60,0,25,52,51,12,0,1,52,0,0,55,1,0,137,63,0,0,139,55,0,0,119,0,7,0,32,65,62,18,121,65,5,0,1,1,216,106,0,55,1,0,137,63,0,0,139,55,0,0,1,1,216,106,0,55,1,0,137,63,0,0,139,55,0,0,140,3,58,0,0,0,0,0,1,53,0,0,136,55,0,0,0,54,55,0,136,55,0,0,25,55,55,48,137,55,0,0,130,55,0,0,136,56,0,0,49,55,55,56,72,2,4,0,135,55,0,0,25,48,54,16,0,47,54,0,25,46,54,32,1,56,4,0,134,55,0,0,116,78,6,0,46,1,56,0,25,4,46,4,25,5,0,48,1,55,4,0,1,56,0,0,134,16,0,0,24,55,6,0,5,55,56,0,33,27,16,0,38,56,27,1,0,38,56,0,4,40,2,38,1,55,4,0,134,56,0,0,116,78,6,0,4,40,55,0,25,41,46,8,25,42,0,44,1,56,4,0,1,55,0,0,134,43,0,0,24,55,6,0,42,56,55,0,1,56,4,0,134,55,0,0,116,78,6,0,41,43,56,0,25,44,46,12,1,56,4,0,134,55,0,0,116,78,6,0,44,16,56,0,2,55,0,0,60,194,0,0,1,56,4,0,1,57,0,0,134,6,0,0,24,55,6,0,55,56,57,0,1,57,0,0,13,7,6,57,121,7,30,0,25,12,0,60,1,57,4,0,1,56,0,0,134,13,0,0,24,55,6,0,12,57,56,0,1,57,4,0,134,56,0,0,116,78,6,0,48,13,57,0,25,51,48,4,1,57,4,0,134,56,0,0,116,78,6,0,51,46,57,0,25,52,48,8,1,57,2,0,1,55,4,0,134,56,0,0,116,78,6,0,52,57,55,0,1,56,145,0,135,14,47,0,56,48,0,0,134,15,0,0,40,91,6,0,14,0,0,0,0,45,15,0,119,0,35,0,1,55,33,0,135,56,36,0,55,0,0,0,25,8,0,60,1,56,4,0,1,55,0,0,134,9,0,0,24,55,6,0,8,56,55,0,1,56,4,0,134,55,0,0,116,78,6,0,47,9,56,0,25,49,47,4,1,56,4,0,134,55,0,0,116,78,6,0,49,46,56,0,25,50,47,8,1,56,2,0,1,57,4,0,134,55,0,0,116,78,6,0,50,56,57,0,1,55,145,0,135,10,47,0,55,47,0,0,134,11,0,0,40,91,6,0,10,0,0,0,1,57,0,0,135,55,37,0,57,0,0,0,0,45,11,0,34,17,45,1,121,17,30,0,38,55,45,48,0,18,55,0,40,55,18,16,0,19,55,0,1,55,4,0,1,57,0,0,134,20,0,0,24,55,6,0,0,55,57,0,20,57,20,19,0,21,57,0,1,55,4,0,134,57,0,0,116,78,6,0,0,21,55,0,25,22,0,8,1,55,0,0,1,56,4,0,134,57,0,0,116,78,6,0,22,55,56,0,25,23,0,4,1,56,0,0,1,55,4,0,134,57,0,0,116,78,6,0,23,56,55,0,0,3,45,0,119,0,56,0,1,57,4,0,1,55,0,0,134,24,0,0,24,55,6,0,4,57,55,0,16,25,24,45,121,25,48,0,4,26,45,24,1,55,4,0,1,57,0,0,134,28,0,0,24,55,6,0,42,55,57,0,25,29,0,4,1,55,4,0,134,57,0,0,116,78,6,0,29,28,55,0,0,30,28,0,3,31,30,26,25,32,0,8,1,55,4,0,134,57,0,0,116,78,6,0,32,31,55,0,1,57,4,0,1,55,0,0,134,33,0,0,24,55,6,0,5,57,55,0,32,34,33,0,121,34,3,0,0,3,2,0,119,0,22,0,25,35,30,1,1,57,4,0,134,55,0,0,116,78,6,0,29,35,57,0,42,55,30,0,1,57,1,0,1,56,0,0,134,36,0,0,24,55,6,0,55,57,56,0,26,37,2,1,3,39,1,37,42,57,39,0,1,55,1,0,134,56,0,0,116,78,6,0,57,36,55,0,0,3,2,0,119,0,2,0,0,3,45,0,137,54,0,0,139,3,0,0,140,0,75,0,0,0,0,0,1,67,0,0,136,69,0,0,0,68,69,0,136,69,0,0,25,69,69,32,137,69,0,0,130,69,0,0,136,70,0,0,49,69,69,70,152,5,4,0,135,69,0,0,25,66,68,8,0,65,68,0,1,69,216,106,1,70,4,0,1,71,0,0,134,0,0,0,24,55,6,0,69,70,71,0,41,71,0,5,0,1,71,0,1,71,220,106,1,70,4,0,1,69,0,0,134,12,0,0,24,55,6,0,71,70,69,0,3,23,1,12,1,69,192,26,41,70,23,3,3,34,69,70,42,70,34,0,1,69,1,0,1,71,0,0,134,45,0,0,24,55,6,0,70,69,71,0,0,63,45,0,0,56,63,0,41,71,56,24,42,71,71,24,0,60,71,0,33,61,60,46,121,61,22,0,0,62,63,0,41,71,62,24,42,71,71,24,0,2,71,0,33,3,2,35,121,3,16,0,2,69,0,0,38,217,0,0,42,69,69,0,1,70,0,0,1,72,1,0,134,71,0,0,116,78,6,0,69,70,72,0,2,72,0,0,167,51,1,0,134,71,0,0,144,18,6,0,72,65,0,0,137,68,0,0,139,0,0,0,2,71,0,0,200,51,1,0,1,72,0,0,134,4,0,0,52,196,3,0,71,72,0,0,0,64,4,0,1,72,0,0,13,5,4,72,121,5,3,0,137,68,0,0,139,0,0,0,0,6,64,0,134,7,0,0,120,141,4,0,6,0,0,0,41,72,7,24,42,72,72,24,33,8,72,0,120,8,3,0,137,68,0,0,139,0,0,0,0,9,64,0,0,10,64,0,25,11,10,8,1,72,4,0,1,71,0,0,134,13,0,0,24,55,6,0,11,72,71,0,32,14,13,33,121,14,3,0,1,25,1,0,119,0,21,0,0,15,64,0,25,16,15,8,1,71,4,0,1,72,0,0,134,17,0,0,24,55,6,0,16,71,72,0,32,18,17,63,121,18,3,0,1,25,1,0,119,0,10,0,0,19,64,0,25,20,19,8,1,72,4,0,1,71,0,0,134,21,0,0,24,55,6,0,20,72,71,0,32,22,21,58,0,25,22,0,40,71,25,1,0,24,71,0,38,71,24,1,0,26,71,0,1,71,255,0,19,71,26,71,0,27,71,0,1,71,1,0,134,28,0,0,176,164,4,0,9,71,27,0,0,64,28,0,0,29,64,0,1,72,112,3,134,71,0,0,124,205,5,0,72,29,0,0,0,30,64,0,25,31,30,8,1,71,4,0,1,72,0,0,134,32,0,0,24,55,6,0,31,71,72,0,1,72,255,0,19,72,32,72,0,33,72,0,1,72,216,106,1,71,4,0,1,70,0,0,134,35,0,0,24,55,6,0,72,71,70,0,41,70,35,5,0,36,70,0,1,70,220,106,1,71,4,0,1,72,0,0,134,37,0,0,24,55,6,0,70,71,72,0,3,38,36,37,1,72,192,26,41,71,38,3,3,39,72,71,42,72,39,0,1,70,1,0,134,71,0,0,116,78,6,0,72,33,70,0,1,71,216,106,1,70,4,0,1,72,0,0,134,40,0,0,24,55,6,0,71,70,72,0,41,72,40,5,0,41,72,0,1,72,220,106,1,70,4,0,1,71,0,0,134,42,0,0,24,55,6,0,72,70,71,0,3,43,41,42,1,71,192,26,41,70,43,3,3,44,71,70,25,46,44,1,42,70,46,0,1,71,1,0,1,72,0,0,134,47,0,0,24,55,6,0,70,71,72,0,41,72,47,24,42,72,72,24,0,48,72,0,39,72,48,32,0,49,72,0,1,72,255,0,19,72,49,72,0,50,72,0,42,71,46,0,1,70,1,0,134,72,0,0,116,78,6,0,71,50,70,0,0,51,64,0,25,52,51,12,1,71,216,106,1,69,4,0,1,73,0,0,134,70,0,0,24,55,6,0,71,69,73,0,1,73,4,0,134,72,0,0,116,78,6,0,52,70,73,0,25,73,52,4,1,69,216,106,25,69,69,4,1,71,4,0,1,74,0,0,134,70,0,0,24,55,6,0,69,71,74,0,1,74,4,0,134,72,0,0,116,78,6,0,73,70,74,0,0,53,64,0,25,54,53,8,1,72,4,0,1,74,0,0,134,55,0,0,24,55,6,0,54,72,74,0,32,57,55,44,121,57,9,0,2,72,0,0,241,208,0,0,42,72,72,0,1,70,0,0,1,73,1,0,134,74,0,0,116,78,6,0,72,70,73,0,0,58,64,0,1,74,1,0,134,59,0,0,208,181,1,0,58,74,0,0,1,73,4,0,134,74,0,0,116,78,6,0,66,59,73,0,2,73,0,0,205,51,1,0,134,74,0,0,144,18,6,0,73,66,0,0,137,68,0,0,139,0,0,0,140,0,56,0,0,0,0,0,1,51,0,0,136,53,0,0,0,52,53,0,136,53,0,0,25,53,53,64,137,53,0,0,130,53,0,0,136,54,0,0,49,53,53,54,192,9,4,0,135,53,0,0,25,45,52,40,25,49,52,32,25,48,52,24,25,47,52,16,25,46,52,8,0,44,52,0,2,53,0,0,106,36,1,0,1,54,61,0,134,0,0,0,52,196,3,0,53,54,0,0,0,41,0,0,0,1,41,0,1,54,0,0,13,12,1,54,121,12,3,0,137,52,0,0,139,0,0,0,0,23,41,0,25,34,23,8,1,54,4,0,1,53,0,0,134,36,0,0,24,55,6,0,34,54,53,0,33,37,36,61,121,37,28,0,2,53,0,0,5,209,0,0,42,53,53,0,1,54,1,0,1,55,0,0,134,38,0,0,24,55,6,0,53,54,55,0,41,55,38,24,42,55,55,24,33,39,55,0,121,39,9,0,2,54,0,0,164,36,1,0,134,55,0,0,144,18,6,0,54,46,0,0,137,52,0,0,139,0,0,0,119,0,8,0,2,54,0,0,113,36,1,0,134,55,0,0,144,18,6,0,54,44,0,0,137,52,0,0,139,0,0,0,0,40,41,0,134,2,0,0,148,130,5,0,40,0,0,0,41,55,2,24,42,55,55,24,33,3,55,0,121,3,3,0,137,52,0,0,139,0,0,0,1,55,196,106,1,54,4,0,1,53,0,0,134,4,0,0,24,55,6,0,55,54,53,0,1,53,0,0,13,5,4,53,1,53,200,106,1,54,4,0,1,55,0,0,134,6,0,0,24,55,6,0,53,54,55,0,1,55,0,0,13,7,6,55,19,55,5,7,0,42,55,0,121,42,9,0,134,8,0,0,132,39,5,0,0,43,8,0,34,9,8,0,121,9,53,0,137,52,0,0,139,0,0,0,119,0,50,0,1,55,196,106,1,54,4,0,1,53,0,0,134,10,0,0,24,55,6,0,55,54,53,0,1,53,0,0,13,11,10,53,121,11,3,0,1,43,0,0,119,0,39,0,1,53,200,106,1,54,4,0,1,55,0,0,134,13,0,0,24,55,6,0,53,54,55,0,1,55,0,0,13,14,13,55,121,14,3,0,1,43,1,0,119,0,28,0,2,55,0,0,5,209,0,0,42,55,55,0,1,54,1,0,1,53,0,0,134,15,0,0,24,55,6,0,55,54,53,0,41,53,15,24,42,53,53,24,33,16,53,0,121,16,9,0,2,54,0,0,212,36,1,0,134,53,0,0,144,18,6,0,54,48,0,0,137,52,0,0,139,0,0,0,119,0,8,0,2,54,0,0,175,36,1,0,134,53,0,0,144,18,6,0,54,47,0,0,137,52,0,0,139,0,0,0,0,17,41,0,0,18,43,0,1,53,196,106,41,54,18,2,3,19,53,54,1,53,4,0,134,54,0,0,116,78,6,0,19,17,53,0,0,20,41,0,25,21,20,52,1,54,4,0,1,53,0,0,134,22,0,0,24,55,6,0,21,54,53,0,1,54,1,0,1,53,6,0,138,22,54,53,92,12,4,0,88,12,4,0,88,12,4,0,136,12,4,0,88,12,4,0,148,12,4,0,119,0,18,0,0,24,41,0,25,25,24,64,1,53,4,0,1,54,0,0,134,26,0,0,24,55,6,0,25,53,54,0,134,54,0,0,20,25,5,0,26,0,0,0,119,0,7,0,134,54,0,0,12,254,4,0,119,0,4,0,134,54,0,0,8,63,6,0,119,0,1,0,2,54,0,0,5,209,0,0,42,54,54,0,1,53,1,0,1,55,0,0,134,27,0,0,24,55,6,0,54,53,55,0,41,55,27,24,42,55,55,24,33,28,55,0,120,28,6,0,2,53,0,0,224,36,1,0,134,55,0,0,112,85,6,0,53,49,0,0,0,29,41,0,1,55,1,0,134,30,0,0,208,181,1,0,29,55,0,0,0,31,41,0,25,32,31,28,42,55,32,0,1,53,1,0,1,54,0,0,134,33,0,0,24,55,6,0,55,53,54,0,41,54,33,24,42,54,54,24,0,35,54,0,1,53,4,0,134,54,0,0,116,78,6,0,45,30,53,0,25,50,45,4,1,53,4,0,134,54,0,0,116,78,6,0,50,35,53,0,2,53,0,0,245,36,1,0,134,54,0,0,144,18,6,0,53,45,0,0,137,52,0,0,139,0,0,0,140,0,43,0,0,0,0,0,2,35,0,0,60,162,0,0,2,36,0,0,1,112,0,0,2,37,0,0,2,4,0,0,2,38,0,0,0,4,0,0,1,33,0,0,136,39,0,0,0,34,39,0,136,39,0,0,25,39,39,16,137,39,0,0,130,39,0,0,136,40,0,0,49,39,39,40,184,13,4,0,135,39,0,0,1,39,8,0,1,40,4,0,1,41,0,0,134,1,0,0,24,55,6,0,39,40,41,0,15,31,1,38,121,31,22,2,1,41,0,1,1,40,2,2,138,1,41,40,240,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0], eb + 256000);
  HEAPU8.set([236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,236,21,4,0,0,22,4,0,4,22,4,0,119,0,191,0,1,40,1,0,135,41,7,0,40,0,0,0,119,0,3,0,119,0,2,0,119,0,1,0,134,41,0,0,120,91,6,0,134,21,0,0,132,178,2,0,0,0,21,0,0,22,0,0,137,34,0,0,139,22,0,0,119,0,176,0,15,30,1,37,121,30,13,0,1,41,0,4,1,40,2,0,138,1,41,40,76,22,4,0,80,22,4,0,119,0,168,0,119,0,2,0,119,0,140,0,1,40,1,0,135,41,48,0,40,0,0,0,119,0,136,0,15,32,1,36,121,32,7,0,1,41,2,4,1,40,1,0,138,1,41,40,128,22,4,0,119,0,155,0,119,0,128,0,1,41,1,112,1,40,1,0,138,1,41,40,152,22,4,0,119,0,149,0,119,0,1,0,2,41,0,0,29,72,1,0,42,41,41,0,1,40,1,0,1,39,0,0,134,12,0,0,24,55,6,0,41,40,39,0,1,39,255,0,19,39,12,39,0,23,39,0,33,24,23,0,120,24,2,0,119,0,134,0,1,39,16,0,1,40,4,0,1,41,0,0,134,25,0,0,24,55,6,0,39,40,41,0,2,41,0,0,212,164,0,0,1,40,4,0,1,39,0,0,134,26,0,0,24,55,6,0,41,40,39,0,6,39,25,26,38,39,39,255,0,27,39,0,2,39,0,0,76,162,0,0,1,40,4,0,1,41,0,0,134,28,0,0,24,55,6,0,39,40,41,0,14,29,27,28,120,29,27,0,1,41,12,0,1,40,4,0,1,39,0,0,134,2,0,0,24,55,6,0,41,40,39,0,2,39,0,0,216,164,0,0,1,40,4,0,1,41,0,0,134,3,0,0,24,55,6,0,39,40,41,0,6,41,2,3,38,41,41,255,0,4,41,0,2,41,0,0,80,162,0,0,1,40,4,0,1,39,0,0,134,5,0,0,24,55,6,0,41,40,39,0,14,6,4,5,120,6,2,0,119,0,83,0,1,39,16,0,1,40,4,0,1,41,0,0,134,7,0,0,24,55,6,0,39,40,41,0,2,40,0,0,196,164,0,0,1,39,4,0,134,41,0,0,116,78,6,0,40,7,39,0,1,41,12,0,1,39,4,0,1,40,0,0,134,8,0,0,24,55,6,0,41,39,40,0,2,39,0,0,200,164,0,0,1,41,4,0,134,40,0,0,116,78,6,0,39,8,41,0,1,40,4,0,1,41,0,0,134,9,0,0,24,55,6,0,35,40,41,0,25,10,9,8,42,41,10,0,1,40,1,0,1,39,0,0,134,11,0,0,24,55,6,0,41,40,39,0,41,39,11,24,42,39,39,24,33,13,39,0,120,13,43,0,1,39,4,0,1,40,0,0,134,14,0,0,24,55,6,0,35,39,40,0,25,15,14,8,42,39,15,0,1,41,1,0,1,42,1,0,134,40,0,0,116,78,6,0,39,41,42,0,1,0,34,2,0,22,0,0,137,34,0,0,139,22,0,0,2,42,0,0,220,189,0,0,1,41,32,0,1,39,4,0,134,40,0,0,116,78,6,0,42,41,39,0,1,40,4,0,1,39,0,0,134,16,0,0,24,55,6,0,35,40,39,0,25,17,16,40,1,39,4,0,1,40,0,0,134,18,0,0,24,55,6,0,17,39,40,0,33,19,18,0,121,19,7,0,134,20,0,0,92,187,2,0,0,0,20,0,0,22,0,0,137,34,0,0,139,22,0,0,1,0,255,255,0,22,0,0,137,34,0,0,139,22,0,0,140,1,75,0,0,0,0,0,1,70,0,0,136,72,0,0,0,71,72,0,136,72,0,0,25,72,72,32,137,72,0,0,130,72,0,0,136,73,0,0,49,72,72,73,44,25,4,0,135,72,0,0,0,68,71,0,0,2,0,0,0,13,2,0,1,72,4,0,1,73,0,0,134,24,0,0,24,55,6,0,13,72,73,0,41,73,24,5,0,35,73,0,0,46,2,0,25,57,46,4,1,73,4,0,1,72,0,0,134,63,0,0,24,55,6,0,57,73,72,0,3,64,35,63,1,72,192,26,41,73,64,3,3,65,72,73,25,3,65,1,0,66,3,0,0,4,66,0,42,73,4,0,1,72,1,0,1,74,0,0,134,5,0,0,24,55,6,0,73,72,74,0,41,74,5,24,42,74,74,24,0,6,74,0,1,74,128,0,19,74,6,74,0,7,74,0,33,8,7,0,121,8,21,0,0,9,66,0,42,74,9,0,1,72,1,0,1,73,0,0,134,10,0,0,24,55,6,0,74,72,73,0,41,73,10,24,42,73,73,24,0,11,73,0,38,73,11,15,0,12,73,0,1,73,164,3,1,72,132,0,5,72,12,72,3,14,73,72,0,1,14,0,0,62,1,0,137,71,0,0,139,62,0,0,1,67,36,107,0,15,67,0,1,16,200,111,16,17,15,16,0,18,2,0,120,17,3,0,1,70,11,0,119,0,84,0,1,72,4,0,1,73,0,0,134,19,0,0,24,55,6,0,18,72,73,0,0,20,67,0,1,73,4,0,1,72,0,0,134,21,0,0,24,55,6,0,20,73,72,0,0,22,67,0,25,23,22,8,1,72,4,0,1,73,0,0,134,25,0,0,24,55,6,0,23,72,73,0,3,26,21,25,17,27,19,26,121,27,58,0,0,28,67,0,1,73,4,0,1,72,0,0,134,29,0,0,24,55,6,0,28,73,72,0,0,30,2,0,1,72,4,0,1,73,0,0,134,31,0,0,24,55,6,0,30,72,73,0,17,32,29,31,121,32,44,0,0,33,2,0,25,34,33,4,1,73,4,0,1,72,0,0,134,36,0,0,24,55,6,0,34,73,72,0,0,37,67,0,25,38,37,4,1,72,4,0,1,73,0,0,134,39,0,0,24,55,6,0,38,72,73,0,0,40,67,0,25,41,40,8,25,42,41,4,1,73,4,0,1,72,0,0,134,43,0,0,24,55,6,0,42,73,72,0,3,44,39,43,17,45,36,44,121,45,19,0,0,47,67,0,25,48,47,4,1,72,4,0,1,73,0,0,134,49,0,0,24,55,6,0,48,72,73,0,0,50,2,0,25,51,50,4,1,73,4,0,1,72,0,0,134,52,0,0,24,55,6,0,51,73,72,0,17,53,49,52,121,53,3,0,1,70,9,0,119,0,6,0,0,55,67,0,1,72,132,0,3,56,55,72,0,67,56,0,119,0,167,255,32,72,70,9,121,72,7,0,0,54,67,0,0,1,54,0,0,62,1,0,137,71,0,0,139,62,0,0,119,0,33,0,32,72,70,11,121,72,31,0,25,58,18,4,1,72,4,0,1,73,0,0,134,59,0,0,24,55,6,0,58,72,73,0,0,60,2,0,1,73,4,0,1,72,0,0,134,61,0,0,24,55,6,0,60,73,72,0,1,73,4,0,134,72,0,0,116,78,6,0,68,59,73,0,25,69,68,4,1,73,4,0,134,72,0,0,116,78,6,0,69,61,73,0,2,73,0,0,215,203,0,0,134,72,0,0,144,18,6,0,73,68,0,0,1,1,0,0,0,62,1,0,137,71,0,0,139,62,0,0,1,72,0,0,139,72,0,0,140,1,73,0,0,0,0,0,2,68,0,0,224,189,0,0,1,64,0,0,136,69,0,0,0,65,69,0,136,69,0,0,25,69,69,16,137,69,0,0,130,69,0,0,136,70,0,0,49,69,69,70,100,28,4,0,135,69,0,0,0,1,0,0,0,2,1,0,27,69,2,92,3,13,68,69,42,69,13,0,1,70,1,0,1,71,0,0,134,24,0,0,24,55,6,0,69,70,71,0,1,71,255,0,19,71,24,71,0,35,71,0,32,46,35,1,120,46,20,0,0,53,1,0,27,71,53,92,3,54,68,71,42,71,54,0,1,70,1,0,1,69,0,0,134,55,0,0,24,55,6,0,71,70,69,0,1,69,255,0,19,69,55,69,0,56,69,0,33,58,56,0,1,69,0,0,1,70,255,255,125,59,58,69,70,0,0,0,137,65,0,0,139,59,0,0,2,70,0,0,60,162,0,0,1,69,4,0,1,71,0,0,134,57,0,0,24,55,6,0,70,69,71,0,0,60,1,0,27,71,60,92,3,61,68,71,25,62,61,4,0,63,57,0,0,66,62,0,25,67,63,88,1,70,4,0,1,72,0,0,134,69,0,0,24,55,6,0,66,70,72,0,1,72,4,0,134,71,0,0,116,78,6,0,63,69,72,0,25,63,63,4,25,66,66,4,54,71,63,67,36,29,4,0,0,3,1,0,27,71,3,92,3,4,68,71,25,5,4,4,25,6,5,5,42,71,6,0,1,72,1,0,1,69,0,0,134,7,0,0,24,55,6,0,71,72,69,0,41,69,7,24,42,69,69,24,33,8,69,0,121,8,3,0,134,69,0,0,60,100,6,0,0,9,1,0,134,69,0,0,224,100,6,0,9,0,0,0,2,69,0,0,76,162,0,0,1,72,4,0,1,71,0,0,134,10,0,0,24,55,6,0,69,72,71,0,0,11,1,0,27,71,11,92,3,12,68,71,25,14,12,4,25,15,14,32,1,71,4,0,1,72,0,0,134,16,0,0,24,55,6,0,15,71,72,0,14,17,10,16,121,17,3,0,1,64,6,0,119,0,21,0,2,72,0,0,80,162,0,0,1,71,4,0,1,69,0,0,134,18,0,0,24,55,6,0,72,71,69,0,0,19,1,0,27,69,19,92,3,20,68,69,25,21,20,4,25,22,21,36,1,69,4,0,1,71,0,0,134,23,0,0,24,55,6,0,22,69,71,0,14,25,18,23,121,25,2,0,1,64,6,0,32,71,64,6,121,71,24,0,0,26,1,0,27,71,26,92,3,27,68,71,25,28,27,4,25,29,28,32,1,71,4,0,1,69,0,0,134,30,0,0,24,55,6,0,29,71,69,0,0,31,1,0,27,69,31,92,3,32,68,69,25,33,32,4,25,34,33,36,1,69,4,0,1,71,0,0,134,36,0,0,24,55,6,0,34,69,71,0,134,71,0,0,136,109,3,0,30,36,0,0,0,37,1,0,27,71,37,92,3,38,68,71,25,39,38,4,25,40,39,24,1,71,4,0,1,69,0,0,134,41,0,0,24,55,6,0,40,71,69,0,134,69,0,0,100,251,5,0,41,0,0,0,0,42,1,0,27,69,42,92,3,43,68,69,25,44,43,4,25,45,44,16,1,69,4,0,1,71,0,0,134,47,0,0,24,55,6,0,45,69,71,0,0,48,1,0,27,71,48,92,3,49,68,71,25,50,49,4,25,51,50,20,1,71,4,0,1,69,0,0,134,52,0,0,24,55,6,0,51,71,69,0,134,69,0,0,112,46,3,0,47,52,0,0,0,53,1,0,27,69,53,92,3,54,68,69,42,69,54,0,1,71,1,0,1,72,0,0,134,55,0,0,24,55,6,0,69,71,72,0,1,72,255,0,19,72,55,72,0,56,72,0,33,58,56,0,1,72,0,0,1,71,255,255,125,59,58,72,71,0,0,0,137,65,0,0,139,59,0,0,140,2,80,0,0,0,0,0,1,74,0,0,136,76,0,0,0,75,76,0,136,76,0,0,25,76,76,16,137,76,0,0,130,76,0,0,136,77,0,0,49,76,76,77,196,31,4,0,135,76,0,0,0,2,0,0,0,3,1,0,0,14,2,0,25,25,14,8,1,76,4,0,1,77,0,0,134,36,0,0,24,55,6,0,25,76,77,0,0,47,3,0,1,77,4,0,1,76,0,0,134,58,0,0,24,55,6,0,47,77,76,0,13,69,36,58,121,69,20,0,0,71,2,0,25,72,71,8,25,4,72,4,1,76,4,0,1,77,0,0,134,5,0,0,24,55,6,0,4,76,77,0,0,6,3,0,25,7,6,4,1,77,4,0,1,76,0,0,134,8,0,0,24,55,6,0,7,77,76,0,13,9,5,8,121,9,3,0,137,75,0,0,139,0,0,0,0,10,2,0,25,11,10,19,42,76,11,0,1,77,1,0,1,78,0,0,134,12,0,0,24,55,6,0,76,77,78,0,0,73,12,0,0,13,3,0,25,15,13,4,1,78,4,0,1,77,0,0,134,16,0,0,24,55,6,0,15,78,77,0,0,17,3,0,1,77,4,0,1,78,0,0,134,18,0,0,24,55,6,0,17,77,78,0,134,19,0,0,32,210,5,0,16,18,0,0,2,78,0,0,255,255,0,0,19,78,19,78,0,20,78,0,1,78,255,0,19,78,20,78,0,21,78,0,0,22,2,0,25,23,22,19,42,77,23,0,1,76,1,0,134,78,0,0,116,78,6,0,77,21,76,0,1,78,232,106,1,76,2,0,1,77,0,0,134,24,0,0,24,55,6,0,78,76,77,0,41,77,24,16,42,77,77,16,0,26,77,0,38,77,26,4,0,27,77,0,33,28,27,0,38,77,28,1,0,29,77,0,1,77,255,0,19,77,29,77,0,30,77,0,41,77,30,24,42,77,77,24,33,31,77,0,121,31,3,0,137,75,0,0,139,0,0,0,0,32,73,0,41,77,32,24,42,77,77,24,0,33,77,0,32,34,33,46,121,34,3,0,1,74,6,0,119,0,15,0,0,35,2,0,25,37,35,19,42,77,37,0,1,76,1,0,1,78,0,0,134,38,0,0,24,55,6,0,77,76,78,0,41,78,38,24,42,78,78,24,0,39,78,0,32,40,39,46,121,40,2,0,1,74,6,0,32,78,74,6,121,78,31,0,0,41,2,0,25,42,41,68,1,78,4,0,1,76,0,0,134,43,0,0,24,55,6,0,42,78,76,0,25,44,43,28,1,76,2,0,1,78,0,0,134,45,0,0,24,55,6,0,44,76,78,0,41,78,45,16,42,78,78,16,0,46,78,0,38,78,46,1,0,48,78,0,33,49,48,0,121,49,11,0,0,50,2,0,25,51,50,19,42,76,51,0,1,77,32,0,1,79,1,0,134,78,0,0,116,78,6,0,76,77,79,0,137,75,0,0,139,0,0,0,0,52,3,0,1,78,216,106,134,53,0,0,132,40,6,0,52,78,0,0,36,54,53,3,120,54,3,0,137,75,0,0,139,0,0,0,2,78,0,0,3,209,0,0,42,78,78,0,1,79,1,0,1,77,0,0,134,55,0,0,24,55,6,0,78,79,77,0,1,77,255,0,19,77,55,77,0,56,77,0,33,57,56,0,120,57,3,0,137,75,0,0,139,0,0,0,0,59,3,0,1,77,4,0,1,79,0,0,134,60,0,0,24,55,6,0,59,77,79,0,41,79,60,5,0,61,79,0,0,62,3,0,25,63,62,4,1,79,4,0,1,77,0,0,134,64,0,0,24,55,6,0,63,79,77,0,3,65,61,64,1,77,192,26,41,79,65,3,3,66,77,79,42,79,66,0,1,77,1,0,1,78,0,0,134,67,0,0,24,55,6,0,79,77,78,0,0,68,2,0,25,70,68,19,42,77,70,0,1,79,1,0,134,78,0,0,116,78,6,0,77,67,79,0,137,75,0,0,139,0,0,0,140,4,77,0,0,0,0,0,1,72,0,0,136,74,0,0,0,73,74,0,136,74,0,0,25,74,74,32,137,74,0,0,130,74,0,0,136,75,0,0,49,74,74,75,64,35,4,0,135,74,0,0,0,5,0,0,0,16,1,0,0,27,2,0,0,38,3,0,1,69,0,0,0,49,5,0,1,74,0,0,13,60,49,74,38,74,60,1,0,65,74,0,1,74,255,0,19,74,65,74,0,66,74,0,0,70,66,0,0,67,70,0,41,74,67,24,42,74,74,24,33,6,74,0,120,6,22,0,0,7,5,0,25,8,7,28,1,74,2,0,1,75,0,0,134,9,0,0,24,55,6,0,8,74,75,0,41,75,9,16,42,75,75,16,0,10,75,0,38,75,10,4,0,11,75,0,33,12,11,0,1,75,35,0,1,74,46,0,125,13,12,75,74,0,0,0,1,74,255,0,19,74,13,74,0,14,74,0,0,69,14,0,0,15,27,0,0,68,15,0,0,17,27,0,33,18,17,0,121,18,8,0,0,19,68,0,26,20,19,1,0,68,20,0,32,21,19,0,121,21,3,0,1,72,6,0,119,0,109,0,0,22,70,0,41,74,22,24,42,74,74,24,33,23,74,0,121,23,29,0,134,24,0,0,116,56,6,0,1,74,36,107,1,75,132,0,5,75,24,75,3,25,74,75,0,5,25,0,0,26,5,0,25,28,26,28,1,75,2,0,1,74,0,0,134,29,0,0,24,55,6,0,28,75,74,0,41,74,29,16,42,74,74,16,0,30,74,0,38,74,30,4,0,31,74,0,33,32,31,0,1,74,35,0,1,75,46,0,125,33,32,74,75,0,0,0,1,75,255,0,19,75,33,75,0,34,75,0,0,69,34,0,0,35,5,0,0,36,16,0,134,75,0,0,36,224,5,0,35,36,0,0,0,37,16,0,1,75,4,0,1,74,0,0,134,39,0,0,24,55,6,0,37,75,74,0,41,74,39,5,0,40,74,0,0,41,16,0,25,42,41,4,1,74,4,0,1,75,0,0,134,43,0,0,24,55,6,0,42,74,75,0,3,44,40,43,1,75,192,26,41,74,44,3,3,45,75,74,0,71,45,0,0,46,38,0,41,74,46,24,42,74,74,24,33,47,74,0,0,48,71,0,120,47,18,0,42,74,48,0,1,75,1,0,1,76,0,0,134,58,0,0,24,55,6,0,74,75,76,0,41,76,58,24,42,76,76,24,0,59,76,0,0,61,69,0,41,76,61,24,42,76,76,24,0,62,76,0,13,63,59,62,121,63,168,255,1,72,14,0,119,0,28,0,25,50,48,4,1,76,4,0,1,75,0,0,134,51,0,0,24,55,6,0,50,76,75,0,1,75,0,0,13,52,51,75,120,52,2,0,119,0,156,255,0,53,71,0,42,75,53,0,1,76,1,0,1,74,0,0,134,54,0,0,24,55,6,0,75,76,74,0,41,74,54,24,42,74,74,24,0,55,74,0,134,56,0,0,232,58,6,0,55,0,0,0,33,57,56,0,121,57,141,255,1,72,12,0,119,0,1,0,32,74,72,6,121,74,6,0,1,4,0,0,0,64,4,0,137,73,0,0,139,64,0,0,119,0,14,0,32,74,72,12,121,74,6,0,1,4,1,0,0,64,4,0,137,73,0,0,139,64,0,0,119,0,7,0,32,74,72,14,121,74,5,0,1,4,1,0,0,64,4,0,137,73,0,0,139,64,0,0,1,74,0,0,139,74,0,0,140,3,53,0,0,0,0,0,1,47,0,0,136,50,0,0,0,48,50,0,136,50,0,0,1,51,224,0,3,50,50,51,137,50,0,0,130,50,0,0,136,51,0,0,49,50,50,51,80,38,4,0,135,50,0,0,25,39,48,120,25,42,48,80,0,41,48,0,1,50,136,0,3,40,48,50,0,46,42,0,25,49,46,40,1,51,0,0,1,52,4,0,134,50,0,0,116,78,6,0,46,51,52,0,25,46,46,4,54,50,46,49,108,38,4,0,1,50,4,0,1,52,0,0,134,45,0,0,24,55,6,0,2,50,52,0,1,50,4,0,134,52,0,0,116,78,6,0,39,45,50,0,1,52,0,0,134,5,0,0,132,69,0,0,52,1,39,41,42,0,0,0,34,6,5,0,121,6,3,0,1,4,255,255,119,0,162,0,25,17,0,76,1,52,4,0,1,50,0,0,134,28,0,0,24,55,6,0,17,52,50,0,1,50,255,255,15,33,50,28,121,33,6,0,134,34,0,0,152,111,6,0,0,0,0,0,0,31,34,0,119,0,2,0,1,31,0,0,1,50,4,0,1,52,0,0,134,35,0,0,24,55,6,0,0,50,52,0,38,52,35,32,0,36,52,0,25,37,0,74,42,52,37,0,1,50,1,0,1,51,0,0,134,38,0,0,24,55,6,0,52,50,51,0,41,51,38,24,42,51,51,24,34,7,51,1,121,7,7,0,38,51,35,223,0,8,51,0,1,50,4,0,134,51,0,0,116,78,6,0,0,8,50,0,25,9,0,48,1,51,4,0,1,50,0,0,134,10,0,0,24,55,6,0,9,51,50,0,32,11,10,0,121,11,87,0,25,13,0,44,1,50,4,0,1,51,0,0,134,14,0,0,24,55,6,0,13,50,51,0,1,50,4,0,134,51,0,0,116,78,6,0,13,40,50,0,25,15,0,28,1,50,4,0,134,51,0,0,116,78,6,0,15,40,50,0,25,16,0,20,1,50,4,0,134,51,0,0,116,78,6,0,16,40,50,0,1,50,80,0,1,52,4,0,134,51,0,0,116,78,6,0,9,50,52,0,25,18,40,80,25,19,0,16,1,52,4,0,134,51,0,0,116,78,6,0,19,18,52,0,134,20,0,0,132,69,0,0,0,1,39,41,42,0,0,0,1,51,0,0,13,21,14,51,121,21,3,0,0,43,20,0,119,0,52,0,25,22,0,36,1,51,4,0,1,52,0,0,134,23,0,0,24,55,6,0,22,51,52,0,1,51,0,0,1,50,0,0,135,52,49,0,23,0,51,50,1,52,4,0,1,50,0,0,134,24,0,0,24,55,6,0,16,52,50,0,1,50,0,0,13,25,24,50,1,50,255,255,125,3,25,50,20,0,0,0,1,52,4,0,134,50,0,0,116,78,6,0,13,14,52,0,1,52,0,0,1,51,4,0,134,50,0,0,116,78,6,0,9,52,51,0,1,51,0,0,1,52,4,0,134,50,0,0,116,78,6,0,19,51,52,0,1,52,0,0,1,51,4,0,134,50,0,0,116,78,6,0,15,52,51,0,1,51,0,0,1,52,4,0,134,50,0,0,116,78,6,0,16,51,52,0,0,43,3,0,119,0,6,0,134,12,0,0,132,69,0,0,0,1,39,41,42,0,0,0,0,43,12,0,1,50,4,0,1,52,0,0,134,26,0,0,24,55,6,0,0,50,52,0,38,52,26,32,0,27,52,0,32,29,27,0,1,52,255,255,125,44,29,43,52,0,0,0,20,52,26,36,0,30,52,0,1,50,4,0,134,52,0,0,116,78,6,0,0,30,50,0,32,32,31,0,120,32,4,0,134,52,0,0,128,111,6,0,0,0,0,0,0,4,44,0,137,48,0,0,139,4,0,0,140,2,71,0,0,0,0,0,1,66,0,0,136,68,0,0,0,67,68,0,136,68,0,0,25,68,68,48,137,68,0,0,130,68,0,0,136,69,0,0,49,68,68,69,148,41,4,0,135,68,0,0,25,61,67,16,25,60,67,12,25,64,67,8,0,3,0,0,0,14,1,0,2,68,0,0,80,159,0,0,1,69,4,0,1,70,0,0,134,25,0,0,24,55,6,0,68,69,70,0,33,36,25,0,2,70,0,0,84,159,0,0,1,69,4,0,1,68,0,0,134,47,0,0,24,55,6,0,70,69,68,0,33,54,47,0,20,68,36,54,0,62,68,0,121,62,26,0,2,68,0,0,84,159,0,0,1,69,4,0,1,70,0,0,134,55,0,0,24,55,6,0,68,69,70,0,33,56,55,0,2,70,0,0,80,159,0,0,1,69,4,0,1,68,0,0,134,57,0,0,24,55,6,0,70,69,68,0,33,4,57,0,1,68,1,0,125,5,56,68,4,0,0,0,38,68,5,1,0,6,68,0,0,2,6,0,0,53,2,0,137,67,0,0,139,53,0,0,0,7,14,0,134,8,0,0,184,74,6,0,7,0,0,0,0,65,8,0,0,9,14,0,134,10,0,0,48,75,6,0,9,0,0,0,0,59,10,0,0,11,3,0,2,69,0,0,13,0,205,171,134,68,0,0,4,110,5,0,11,69,0,0,0,12,3,0,134,68,0,0,100,182,4,0,12,61,0,0,0,13,3,0,134,68,0,0,100,182,4,0,13,60,0,0,1,63,0,0,0,15,63,0,1,68,4,0,1,69,0,0,134,16,0,0,24,55,6,0,61,68,69,0,15,17,15,16,120,17,3,0,1,66,14,0,119,0,46,0,1,58,0,0,0,18,58,0,1,69,4,0,1,68,0,0,134,19,0,0,24,55,6,0,60,69,68,0,15,20,18,19,120,20,2,0,119,0,32,0,0,21,3,0,134,22,0,0,100,182,4,0,21,64,0,0,33,23,22,0,121,23,3,0,1,66,8,0,119,0,28,0,0,31,63,0,0,32,59,0,15,33,31,32,121,33,16,0,0,34,58,0,0,35,65,0,15,37,34,35,121,37,12,0,0,38,14,0,0,39,63,0,0,40,58,0,1,68,4,0,1,69,0,0,134,41,0,0,24,55,6,0,64,68,69,0,134,69,0,0,204,30,6,0,38,39,40,41,0,42,58,0,25,43,42,1,0,58,43,0,119,0,217,255,0,44,63,0,25,45,44,1,0,63,45,0,119,0,202,255,32,69,66,8,121,69,27,0,2,69,0,0,84,159,0,0,1,68,4,0,1,70,0,0,134,24,0,0,24,55,6,0,69,68,70,0,33,26,24,0,2,70,0,0,80,159,0,0,1,68,4,0,1,69,0,0,134,27,0,0,24,55,6,0,70,68,69,0,33,28,27,0,1,69,1,0,125,29,26,69,28,0,0,0,38,69,29,1,0,30,69,0,0,2,30,0,0,53,2,0,137,67,0,0,139,53,0,0,119,0,28,0,32,69,66,14,121,69,26,0,2,69,0,0,84,159,0,0,1,68,4,0,1,70,0,0,134,46,0,0,24,55,6,0,69,68,70,0,33,48,46,0,2,70,0,0,80,159,0,0,1,68,4,0,1,69,0,0,134,49,0,0,24,55,6,0,70,68,69,0,33,50,49,0,1,69,1,0,125,51,48,69,50,0,0,0,38,69,51,1,0,52,69,0,0,2,52,0,0,53,2,0,137,67,0,0,139,53,0,0,1,69,0,0,139,69,0,0,140,2,73,0,0,0,0,0,1,65,0,0,136,67,0,0,0,66,67,0,136,67,0,0,25,67,67,32,137,67,0,0,130,67,0,0,136,68,0,0,49,67,67,68,176,44,4,0,135,67,0,0,25,2,66,16,0,4,0,0,0,15,1,0,2,67,0,0,76,159,0,0,1,68,4,0,1,69,0,0,134,26,0,0,24,55,6,0,67,68,69,0,33,37,26,0,121,37,13,0,2,69,0,0,76,159,0,0,1,68,4,0,1,67,0,0,134,48,0,0,24,55,6,0,69,68,67,0,0,3,48,0,0,61,3,0,137,66,0,0,139,61,0,0,119,0,180,0,0,59,4,0,2,68,0,0,3,0,205,171,134,67,0,0,72,32,6,0,59,68,0,0,0,62,4,0,0,63,15,0,25,64,63,8,1,67,4,0,1,68,0,0,134,5,0,0,24,55,6,0,64,67,68,0,134,68,0,0,156,47,5,0,62,5,0,0,0,6,4,0,0,7,15,0,25,8,7,12,1,69,4,0,1,70,0,0,134,67,0,0,24,55,6,0,8,69,70,0,1,70,4,0,134,68,0,0,116,78,6,0,2,67,70,0,25,70,2,4,25,69,8,4,1,71,4,0,1,72,0,0,134,67,0,0,24,55,6,0,69,71,72,0,1,72,4,0,134,68,0,0,116,78,6,0,70,67,72,0,134,68,0,0,44,9,6,0,6,2,0,0,0,9,4,0,0,10,15,0,25,11,10,24,1,68,4,0,1,72,0,0,134,12,0,0,24,55,6,0,11,68,72,0,134,72,0,0,156,47,5,0,9,12,0,0,0,13,4,0,0,14,15,0,25,16,14,28,42,72,16,0,1,68,1,0,1,67,0,0,134,17,0,0,24,55,6,0,72,68,67,0,134,67,0,0,120,27,6,0,13,17,0,0,0,18,4,0,0,19,15,0,25,20,19,29,1,68,8,0,134,67,0,0,56,10,6,0,18,20,68,0,0,21,4,0,0,22,15,0,25,23,22,37,1,68,8,0,134,67,0,0,56,10,6,0,21,23,68,0,0,24,4,0,0,25,15,0,25,27,25,48,1,67,4,0,1,68,0,0,134,28,0,0,24,55,6,0,27,67,68,0,134,68,0,0,156,47,5,0,24,28,0,0,0,29,4,0,0,30,15,0,25,31,30,52,1,68,4,0,1,67,0,0,134,32,0,0,24,55,6,0,31,68,67,0,134,67,0,0,156,47,5,0,29,32,0,0,0,33,4,0,0,34,15,0,25,35,34,56,1,67,4,0,1,68,0,0,134,36,0,0,24,55,6,0,35,67,68,0,134,68,0,0,156,47,5,0,33,36,0,0,0,38,4,0,0,39,15,0,25,40,39,60,1,68,4,0,1,67,0,0,134,41,0,0,24,55,6,0,40,68,67,0,134,67,0,0,156,47,5,0,38,41,0,0,0,42,4,0,0,43,15,0,25,44,43,64,1,67,4,0,1,68,0,0,134,45,0,0,24,55,6,0,44,67,68,0,134,68,0,0,156,47,5,0,42,45,0,0,0,46,4,0,0,47,15,0,25,49,47,68,1,68,4,0,1,67,0,0,134,50,0,0,24,55,6,0,49,68,67,0,134,67,0,0,156,47,5,0,46,50,0,0,0,51,4,0,0,52,15,0,25,53,52,72,1,67,4,0,1,68,0,0,134,54,0,0,24,55,6,0,53,67,68,0,134,68,0,0,156,47,5,0,51,54,0,0,0,55,4,0,0,56,15,0,25,57,56,76,1,68,4,0,1,67,0,0,134,58,0,0,24,55,6,0,57,68,67,0,134,67,0,0,136,235,5,0,55,58,0,0,2,67,0,0,76,159,0,0,1,68,4,0,1,72,0,0,134,60,0,0,24,55,6,0,67,68,72,0,0,3,60,0,0,61,3,0,137,66,0,0,139,61,0,0,1,72,0,0,139,72,0,0,140,2,74,0,0,0,0,0,1,69,0,0,136,71,0,0,0,70,71,0,136,71,0,0,25,71,71,16,137,71,0,0,130,71,0,0,136,72,0,0,49,71,71,72,24,48,4,0,135,71,0,0,0,3,0,0,0,14,1,0,1,71,232,106,1,72,2,0,1,73,0,0,134,25,0,0,24,55,6,0,71,72,73,0,41,73,25,16,42,73,73,16,0,36,73,0,38,73,36,4,0,47,73,0,33,58,47,0,38,73,58,1,0,65,73,0,1,73,255,0,19,73,65,73,0,66,73,0,41,73,66,24,42,73,73,24,33,67,73,0,121,67,5,0,1,2,0,0,0,64,2,0,137,70,0,0,139,64,0,0,0,4,3,0,0,5,14,0,1,73,220,106,1,72,4,0,1,71,0,0,134,6,0,0,24,55,6,0,73,72,71,0,1,71,216,106,1,72,4,0,1,73,0,0,134,7,0,0,24,55,6,0,71,72,73,0,134,8,0,0,4,25,6,0,4,5,6,7,34,9,8,3,120,9,53,0,0,48,3,0,1,72,100,0,1,71,4,0,134,73,0,0,116,78,6,0,72,48,71,0,0,49,14,0,1,71,96,0,1,72,4,0,134,73,0,0,116,78,6,0,71,49,72,0,1,73,96,0,134,50,0,0,248,24,4,0,73,0,0,0,0,68,50,0,1,73,20,107,1,72,4,0,1,71,0,0,134,51,0,0,24,55,6,0,73,72,71,0,13,52,50,51,121,52,18,0,0,53,68,0,25,54,53,28,1,71,2,0,1,72,0,0,134,55,0,0,24,55,6,0,54,71,72,0,41,72,55,16,42,72,72,16,0,56,72,0,38,72,56,1,0,57,72,0,33,59,57,0,40,72,59,1,0,60,72,0,0,62,60,0,119,0,2,0,1,62,0,0,38,72,62,1,0,61,72,0,1,72,255,0,19,72,61,72,0,63,72,0,0,2,63,0,0,64,2,0,137,70,0,0,139,64,0,0,0,10,14,0,41,72,10,5,0,11,72,0,0,12,3,0,3,13,11,12,1,72,192,26,41,71,13,3,3,15,72,71,25,16,15,1,42,71,16,0,1,72,1,0,1,73,0,0,134,17,0,0,24,55,6,0,71,72,73,0,41,73,17,24,42,73,73,24,0,18,73,0,1,73,128,0,19,73,18,73,0,19,73,0,33,20,19,0,121,20,77,0,0,21,3,0,1,73,220,106,1,72,4,0,1,71,0,0,134,22,0,0,24,55,6,0,73,72,71,0,14,23,21,22,121,23,68,0,0,24,14,0,1,71,216,106,1,72,4,0,1,73,0,0,134,26,0,0,24,55,6,0,71,72,73,0,14,27,24,26,121,27,59,0,1,73,216,106,1,72,4,0,1,71,0,0,134,28,0,0,24,55,6,0,73,72,71,0,41,71,28,5,0,29,71,0,0,30,3,0,3,31,29,30,1,71,192,26,41,72,31,3,3,32,71,72,42,72,32,0,1,71,1,0,1,73,0,0,134,33,0,0,24,55,6,0,72,71,73,0,41,73,33,24,42,73,73,24,0,34,73,0,134,35,0,0,232,58,6,0,34,0,0,0,33,37,35,0,120,37,32,0,0,38,14,0,41,73,38,5,0,39,73,0,1,73,220,106,1,71,4,0,1,72,0,0,134,40,0,0,24,55,6,0,73,71,72,0,3,41,39,40,1,72,192,26,41,71,41,3,3,42,72,71,42,71,42,0,1,72,1,0,1,73,0,0,134,43,0,0,24,55,6,0,71,72,73,0,41,73,43,24,42,73,73,24,0,44,73,0,134,45,0,0,232,58,6,0,44,0,0,0,33,46,45,0,120,46,5,0,1,2,0,0,0,64,2,0,137,70,0,0,139,64,0,0,1,2,1,0,0,64,2,0,137,70,0,0,139,64,0,0,140,1,70,0,0,0,0,0,1,65,0,0,136,67,0,0,0,66,67,0,136,67,0,0,25,67,67,16,137,67,0,0,130,67,0,0,136,68,0,0,49,67,67,68,112,51,4,0,135,67,0,0,0,1,0,0,2,67,0,0,57,73,1,0,42,67,67,0,1,68,1,0,1,69,0,0,134,2,0,0,24,55,6,0,67,68,69,0,41,69,2,24,42,69,69,24,33,13,69,0,121,13,3,0,137,66,0,0,139,0,0,0,0,24,1,0,2,69,0,0,76,177,0,0,1,68,4,0,1,67,0,0,134,35,0,0,24,55,6,0,69,68,67,0,1,67,140,0,5,67,24,67,3,46,35,67,1,67,128,0,3,57,46,67,1,67,4,0,1,68,0,0,134,59,0,0,24,55,6,0,57,67,68,0,0,64,59,0,0,60,1,0,2,68,0,0,76,177,0,0,1,67,4,0,1,69,0,0,134,61,0,0,24,55,6,0,68,67,69,0,1,69,140,0,5,69,60,69,3,3,61,69,1,69,132,0,3,4,3,69,1,69,4,0,1,67,0,0,134,5,0,0,24,55,6,0,4,69,67,0,1,68,0,0,1,69,2,0,138,5,68,69,128,52,4,0,136,52,4,0,2,67,0,0,80,177,0,0,1,69,4,0,1,68,0,0,134,18,0,0,24,55,6,0,67,69,68,0,0,19,64,0,4,20,18,19,0,62,20,0,119,0,32,0,1,62,0,0,119,0,30,0,2,67,0,0,80,177,0,0,1,69,4,0,1,68,0,0,134,6,0,0,24,55,6,0,67,69,68,0,0,7,64,0,4,8,6,7,28,68,8,2,38,68,68,255,0,9,68,0,0,62,9,0,0,10,62,0,0,11,64,0,3,12,10,11,2,68,0,0,80,177,0,0,1,69,4,0,1,67,0,0,134,14,0,0,24,55,6,0,68,69,67,0,15,15,14,12,121,15,5,0,0,16,62,0,26,17,16,1,0,62,17,0,119,0,1,0,2,68,0,0,60,162,0,0,1,69,4,0,1,67,0,0,134,21,0,0,24,55,6,0,68,69,67,0,25,22,21,56,1,67,4,0,1,69,0,0,134,23,0,0,24,55,6,0,22,67,69,0,2,69,0,0,84,177,0,0,1,67,4,0,1,68,0,0,134,25,0,0,24,55,6,0,69,67,68,0,0,26,1,0,2,68,0,0,76,177,0,0,1,67,4,0,1,69,0,0,134,27,0,0,24,55,6,0,68,67,69,0,1,69,140,0,5,69,26,69,3,28,27,69,1,69,136,0,3,29,28,69,1,69,4,0,1,67,0,0,134,30,0,0,24,55,6,0,29,69,67,0,134,67,0,0,164,140,5,0,23,25,30,0,1,63,0,0,0,31,63,0,2,67,0,0,80,177,0,0,1,69,4,0,1,68,0,0,134,32,0,0,24,55,6,0,67,69,68,0,15,33,31,32,120,33,2,0,119,0,57,0,2,68,0,0,60,162,0,0,1,69,4,0,1,67,0,0,134,34,0,0,24,55,6,0,68,69,67,0,25,36,34,56,1,67,4,0,1,69,0,0,134,37,0,0,24,55,6,0,36,67,69,0,0,38,63,0,0,39,62,0,17,40,39,38,121,40,32,0,0,41,63,0,0,42,62,0,0,43,64,0,3,44,42,43,15,45,41,44,121,45,24,0,0,47,63,0,0,48,62,0,4,49,47,48,0,50,1,0,2,69,0,0,76,177,0,0,1,67,4,0,1,68,0,0,134,51,0,0,24,55,6,0,69,67,68,0,1,68,140,0,5,68,50,68,3,52,51,68,41,68,49,2,3,53,52,68,1,68,4,0,1,67,0,0,134,54,0,0,24,55,6,0,53,68,67,0,0,55,54,0,119,0,4,0,1,55,32,0,119,0,2,0,1,55,32,0,134,67,0,0,64,245,1,0,37,55,0,0,0,56,63,0,25,58,56,1,0,63,58,0,119,0,190,255,137,66,0,0,139,0,0,0,140,1,65,0,0,0,0,0,2,58,0,0,24,4,0,0,2,59,0,0,173,45,1,0,2,60,0,0,248,2,0,0,1,55,0,0,136,61,0,0,0,56,61,0,136,61,0,0,25,61,61,32,137,61,0,0,130,61,0,0,136,62,0,0,49,61,61,62,4,55,4,0,135,61,0,0,0,48,56,0,0,1,0,0,1,61,4,0,1,62,0,0,134,2,0,0,24,55,6,0,60,61,62,0,1,62,0,0,13,13,2,62,121,13,3,0,137,56,0,0,139,0,0,0,1,62,4,0,1,61,0,0,134,24,0,0,24,55,6,0,60,62,61,0,134,61,0,0,56,38,6,0,24,0,0,0,1,47,0,0,0,35,47,0,1,61,176,117,1,62,4,0,1,63,0,0,134,42,0,0,24,55,6,0,61,62,63,0,16,43,35,42,120,43,2,0,119,0,139,0,2,54,0,0,173,45,1,0,25,57,54,100,42,62,54,0,1,61,0,0,1,64,1,0,134,63,0,0,116,78,6,0,62,61,64,0,25,54,54,1,54,63,54,57,140,55,4,0,0,44,47,0,0,45,1,0,5,63,44,58,3,46,45,63,25,3,46,14,1,63,4,0,1,64,0,0,134,4,0,0,24,55,6,0,60,63,64,0,1,63,0,4,134,64,0,0,228,156,4,0,3,63,4,0,0,5,47,0,0,6,1,0,5,64,5,58,3,7,6,64,1,64,4,0,1,63,0,0], eb + 266240);
  HEAPU8.set([134,8,0,0,24,55,6,0,7,64,63,0,0,9,47,0,0,10,1,0,5,63,9,58,3,11,10,63,25,12,11,4,1,63,4,0,1,64,0,0,134,14,0,0,24,55,6,0,12,63,64,0,0,15,47,0,0,16,1,0,5,64,15,58,3,17,16,64,25,18,17,8,1,64,4,0,1,63,0,0,134,19,0,0,24,55,6,0,18,64,63,0,0,20,47,0,0,21,1,0,5,63,20,58,3,22,21,63,25,23,22,12,1,63,2,0,1,64,0,0,134,25,0,0,24,55,6,0,23,63,64,0,2,64,0,0,255,255,0,0,19,64,25,64,0,26,64,0,0,27,47,0,0,28,1,0,5,64,27,58,3,29,28,64,1,64,16,4,3,30,29,64,1,64,4,0,1,63,0,0,134,31,0,0,24,55,6,0,30,64,63,0,0,32,47,0,0,33,1,0,5,63,32,58,3,34,33,63,1,63,20,4,3,36,34,63,1,63,4,0,1,64,0,0,134,37,0,0,24,55,6,0,36,63,64,0,1,63,4,0,134,64,0,0,116,78,6,0,48,8,63,0,25,49,48,4,1,63,4,0,134,64,0,0,116,78,6,0,49,14,63,0,25,50,48,8,1,63,4,0,134,64,0,0,116,78,6,0,50,19,63,0,25,51,48,12,1,63,4,0,134,64,0,0,116,78,6,0,51,26,63,0,25,52,48,16,1,63,4,0,134,64,0,0,116,78,6,0,52,31,63,0,25,53,48,20,1,63,4,0,134,64,0,0,116,78,6,0,53,37,63,0,2,63,0,0,17,46,1,0,134,64,0,0,248,82,6,0,59,63,48,0,1,64,4,0,1,63,0,0,134,38,0,0,24,55,6,0,60,64,63,0,1,64,100,0,134,63,0,0,228,156,4,0,59,64,38,0,0,39,47,0,25,40,39,1,0,47,40,0,119,0,109,255,1,63,4,0,1,64,0,0,134,41,0,0,24,55,6,0,60,63,64,0,134,64,0,0,56,38,6,0,41,0,0,0,137,56,0,0,139,0,0,0,140,0,71,0,0,0,0,0,1,65,0,0,136,67,0,0,0,66,67,0,136,67,0,0,25,67,67,16,137,67,0,0,130,67,0,0,136,68,0,0,49,67,67,68,4,58,4,0,135,67,0,0,2,67,0,0,241,208,0,0,42,67,67,0,1,68,1,0,1,69,0,0,134,0,0,0,24,55,6,0,67,68,69,0,1,69,255,0,19,69,0,69,0,1,69,0,33,12,1,0,121,12,17,0,1,69,200,2,1,68,4,0,1,67,0,0,134,23,0,0,24,55,6,0,69,68,67,0,1,67,152,26,1,68,4,0,1,69,0,0,134,34,0,0,24,55,6,0,67,68,69,0,15,45,23,34,121,45,3,0,137,66,0,0,139,0,0,0,1,69,20,0,134,56,0,0,20,36,6,0,69,0,0,0,32,59,56,0,121,59,3,0,134,69,0,0,16,231,3,0,1,62,0,0,0,60,62,0,34,61,60,9,120,61,2,0,119,0,63,0,1,69,100,0,134,2,0,0,20,36,6,0,69,0,0,0,34,3,2,36,121,3,53,0,134,4,0,0,80,249,2,0,0,63,4,0,0,5,63,0,1,68,112,3,134,69,0,0,124,205,5,0,68,5,0,0,0,6,63,0,25,7,6,12,1,68,0,0,1,67,0,0,1,70,0,0,134,69,0,0,12,35,4,0,68,7,67,70,0,8,63,0,25,9,8,8,1,69,4,0,1,70,0,0,134,10,0,0,24,55,6,0,9,69,70,0,1,70,255,0,19,70,10,70,0,11,70,0,0,13,63,0,25,14,13,12,1,70,4,0,1,69,0,0,134,15,0,0,24,55,6,0,14,70,69,0,41,69,15,5,0,16,69,0,0,17,63,0,25,18,17,12,25,19,18,4,1,69,4,0,1,70,0,0,134,20,0,0,24,55,6,0,19,69,70,0,3,21,16,20,1,70,192,26,41,69,21,3,3,22,70,69,42,70,22,0,1,67,1,0,134,69,0,0,116,78,6,0,70,11,67,0,0,24,62,0,25,25,24,1,0,62,25,0,119,0,191,255,1,69,200,2,1,67,4,0,1,70,0,0,134,26,0,0,24,55,6,0,69,67,70,0,34,27,26,26,2,70,0,0,241,208,0,0,42,70,70,0,1,67,1,0,1,69,0,0,134,28,0,0,24,55,6,0,70,67,69,0,41,69,28,24,42,69,69,24,33,29,69,0,20,69,27,29,0,64,69,0,121,64,3,0,137,66,0,0,139,0,0,0,134,30,0,0,56,80,6,0,0,63,30,0,0,31,63,0,1,67,112,3,134,69,0,0,124,205,5,0,67,31,0,0,0,32,63,0,25,33,32,56,1,67,0,0,1,70,4,0,134,69,0,0,116,78,6,0,33,67,70,0,0,35,63,0,25,36,35,60,1,70,0,0,1,67,4,0,134,69,0,0,116,78,6,0,36,70,67,0,0,37,63,0,25,38,37,29,2,67,0,0,252,51,1,0,1,70,8,0,135,69,9,0,38,67,70,0,0,39,63,0,25,40,39,37,2,70,0,0,252,51,1,0,1,67,8,0,135,69,9,0,40,70,67,0,0,41,63,0,25,42,41,64,1,67,11,0,1,70,4,0,134,69,0,0,116,78,6,0,42,67,70,0,0,43,63,0,25,44,43,8,1,70,44,0,1,67,4,0,134,69,0,0,116,78,6,0,44,70,67,0,0,46,63,0,25,47,46,12,1,67,0,0,1,70,0,0,1,68,0,0,134,69,0,0,12,35,4,0,67,47,70,68,0,48,63,0,25,49,48,12,1,69,4,0,1,68,0,0,134,50,0,0,24,55,6,0,49,69,68,0,41,68,50,5,0,51,68,0,0,52,63,0,25,53,52,12,25,54,53,4,1,68,4,0,1,69,0,0,134,55,0,0,24,55,6,0,54,68,69,0,3,57,51,55,1,69,192,26,41,68,57,3,3,58,69,68,42,69,58,0,1,70,44,0,1,67,1,0,134,68,0,0,116,78,6,0,69,70,67,0,137,66,0,0,139,0,0,0,140,0,65,0,0,0,0,0,1,57,0,0,136,61,0,0,0,58,61,0,136,61,0,0,25,61,61,16,137,61,0,0,130,61,0,0,136,62,0,0,49,61,61,62,144,61,4,0,135,61,0,0,1,56,236,106,1,59,124,3,25,60,56,40,1,63,4,0,1,64,0,0,134,62,0,0,24,55,6,0,59,63,64,0,1,64,4,0,134,61,0,0,116,78,6,0,56,62,64,0,25,56,56,4,25,59,59,4,54,61,56,60,156,61,4,0,1,64,156,26,1,62,20,5,1,63,4,0,134,61,0,0,116,78,6,0,64,62,63,0,134,0,0,0,56,80,6,0,0,55,0,0,0,1,55,0,25,12,1,8,1,63,58,0,1,62,4,0,134,61,0,0,116,78,6,0,12,63,62,0,0,23,55,0,25,34,23,48,1,62,1,0,1,63,4,0,134,61,0,0,116,78,6,0,34,62,63,0,0,45,55,0,1,63,1,0,134,61,0,0,180,155,1,0,45,63,0,0,134,51,0,0,56,80,6,0,0,55,51,0,0,52,55,0,25,53,52,8,1,63,93,0,1,62,4,0,134,61,0,0,116,78,6,0,53,63,62,0,0,54,55,0,25,2,54,52,1,62,1,0,1,63,4,0,134,61,0,0,116,78,6,0,2,62,63,0,1,61,216,2,1,63,4,0,1,62,0,0,134,3,0,0,24,55,6,0,61,63,62,0,26,4,3,1,0,5,55,0,25,6,5,64,1,63,4,0,134,62,0,0,116,78,6,0,6,4,63,0,0,7,55,0,25,8,7,68,1,62,4,0,1,63,0,0,134,9,0,0,24,55,6,0,8,62,63,0,39,63,9,2,0,10,63,0,1,62,4,0,134,63,0,0,116,78,6,0,8,10,62,0,0,11,55,0,25,13,11,48,1,62,1,0,1,61,4,0,134,63,0,0,116,78,6,0,13,62,61,0,0,14,55,0,1,61,192,106,1,62,4,0,134,63,0,0,116,78,6,0,61,14,62,0,0,15,55,0,1,62,1,0,134,63,0,0,180,155,1,0,15,62,0,0,134,16,0,0,56,80,6,0,0,55,16,0,0,17,55,0,1,62,0,0,134,63,0,0,240,86,4,0,17,62,0,0,0,18,55,0,25,19,18,56,1,62,1,0,1,61,4,0,134,63,0,0,116,78,6,0,19,62,61,0,0,20,55,0,25,21,20,60,1,61,1,0,1,62,4,0,134,63,0,0,116,78,6,0,21,61,62,0,0,22,55,0,25,24,22,68,1,63,4,0,1,62,0,0,134,25,0,0,24,55,6,0,24,63,62,0,39,62,25,2,0,26,62,0,1,63,4,0,134,62,0,0,116,78,6,0,24,26,63,0,0,27,55,0,1,63,1,0,134,62,0,0,180,155,1,0,27,63,0,0,0,28,55,0,1,63,204,106,1,61,4,0,134,62,0,0,116,78,6,0,63,28,61,0,134,29,0,0,56,80,6,0,0,55,29,0,0,30,55,0,1,61,2,0,134,62,0,0,240,86,4,0,30,61,0,0,0,31,55,0,25,32,31,56,1,61,1,0,1,63,4,0,134,62,0,0,116,78,6,0,32,61,63,0,0,33,55,0,25,35,33,68,1,62,4,0,1,63,0,0,134,36,0,0,24,55,6,0,35,62,63,0,39,63,36,2,0,37,63,0,1,62,4,0,134,63,0,0,116,78,6,0,35,37,62,0,0,38,55,0,1,62,1,0,134,63,0,0,180,155,1,0,38,62,0,0,134,39,0,0,56,80,6,0,0,55,39,0,0,40,55,0,1,62,3,0,134,63,0,0,240,86,4,0,40,62,0,0,1,63,15,0,134,41,0,0,20,36,6,0,63,0,0,0,25,42,41,25,0,43,55,0,25,44,43,48,1,62,4,0,134,63,0,0,116,78,6,0,44,42,62,0,0,46,55,0,25,47,46,68,1,63,4,0,1,62,0,0,134,48,0,0,24,55,6,0,47,63,62,0,39,62,48,2,0,49,62,0,1,63,4,0,134,62,0,0,116,78,6,0,47,49,63,0,0,50,55,0,1,63,1,0,134,62,0,0,180,155,1,0,50,63,0,0,137,58,0,0,139,0,0,0,140,2,58,0,0,0,0,0,1,53,0,0,136,55,0,0,0,54,55,0,136,55,0,0,25,55,55,48,137,55,0,0,130,55,0,0,136,56,0,0,49,55,55,56,64,65,4,0,135,55,0,0,25,52,54,24,25,51,54,16,25,50,54,8,0,49,54,0,0,2,0,0,0,3,1,0,1,55,24,107,1,56,4,0,1,57,0,0,134,14,0,0,24,55,6,0,55,56,57,0,1,57,0,0,13,25,14,57,121,25,8,0,2,56,0,0,221,53,1,0,134,57,0,0,144,18,6,0,56,49,0,0,137,54,0,0,139,0,0,0,0,36,3,0,2,57,0,0,14,54,1,0,134,43,0,0,52,196,3,0,57,36,0,0,0,48,43,0,0,44,2,0,41,57,44,24,42,57,57,24,33,45,57,0,120,45,2,0,119,0,71,0,1,57,140,26,1,56,4,0,1,55,0,0,134,46,0,0,24,55,6,0,57,56,55,0,32,47,46,0,121,47,3,0,1,53,21,0,119,0,61,0,0,4,48,0,1,55,0,0,13,5,4,55,121,5,7,0,2,56,0,0,23,54,1,0,134,55,0,0,144,18,6,0,56,50,0,0,119,0,224,255,0,6,3,0,33,7,6,0,120,7,2,0,119,0,47,0,0,8,48,0,25,9,8,8,1,55,4,0,1,56,0,0,134,10,0,0,24,55,6,0,9,55,56,0,0,11,3,0,14,12,10,11,120,12,2,0,119,0,36,0,0,13,3,0,32,15,13,254,121,15,19,0,0,16,48,0,25,17,16,8,1,56,4,0,1,55,0,0,134,18,0,0,24,55,6,0,17,56,55,0,32,19,18,61,120,19,24,0,0,20,48,0,25,21,20,8,1,55,4,0,1,56,0,0,134,22,0,0,24,55,6,0,21,55,56,0,32,23,22,47,120,23,15,0,0,24,3,0,134,26,0,0,212,243,5,0,24,0,0,0,1,55,4,0,134,56,0,0,116,78,6,0,51,26,55,0,2,55,0,0,51,54,1,0,134,56,0,0,144,18,6,0,55,51,0,0,119,0,174,255,32,56,53,21,121,56,3,0,137,54,0,0,139,0,0,0,0,27,48,0,1,56,0,0,13,28,27,56,121,28,3,0,137,54,0,0,139,0,0,0,0,29,48,0,25,30,29,8,1,56,4,0,1,55,0,0,134,31,0,0,24,55,6,0,30,56,55,0,1,56,33,0,1,55,61,0,138,31,56,55,44,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,68,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,124,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,148,68,4,0,40,68,4,0,172,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,40,68,4,0,196,68,4,0,119,0,40,0,0,33,48,0,1,56,204,16,134,55,0,0,156,183,5,0,33,56,0,0,119,0,34,0,0,35,48,0,25,37,35,68,1,55,4,0,1,56,0,0,134,38,0,0,24,55,6,0,37,55,56,0,39,56,38,2,0,39,56,0,1,55,4,0,134,56,0,0,116,78,6,0,37,39,55,0,119,0,20,0,0,34,48,0,1,56,44,21,134,55,0,0,156,183,5,0,34,56,0,0,119,0,14,0,0,40,48,0,1,55,228,17,134,56,0,0,156,183,5,0,40,55,0,0,119,0,8,0,0,32,48,0,1,56,252,18,134,55,0,0,156,183,5,0,32,56,0,0,119,0,2,0,119,0,224,255,0,41,48,0,1,56,0,0,134,42,0,0,208,181,1,0,41,56,0,0,134,56,0,0,144,18,6,0,42,52,0,0,137,54,0,0,139,0,0,0,140,0,62,0,0,0,0,0,2,55,0,0,120,3,0,0,2,56,0,0,224,117,0,0,2,57,0,0,148,118,0,0,1,53,0,0,136,58,0,0,0,54,58,0,136,58,0,0,25,58,58,16,137,58,0,0,130,58,0,0,136,59,0,0,49,58,58,59,60,69,4,0,135,58,0,0,1,58,4,0,1,59,0,0,134,0,0,0,24,55,6,0,55,58,59,0,134,59,0,0,164,64,6,0,0,0,0,0,1,51,224,117,0,1,51,0,18,12,1,57,120,12,2,0,119,0,34,0,0,23,51,0,134,59,0,0,32,33,6,0,23,0,0,0,0,34,51,0,25,45,34,12,1,59,4,0,1,58,0,0,134,47,0,0,24,55,6,0,45,59,58,0,0,48,51,0,25,49,48,8,1,58,4,0,1,59,0,0,134,50,0,0,24,55,6,0,49,58,59,0,135,59,50,0,47,50,0,0,1,59,4,0,1,58,0,0,134,2,0,0,24,55,6,0,55,59,58,0,1,59,10,0,134,58,0,0,64,245,1,0,2,59,0,0,0,3,51,0,25,4,3,20,0,51,4,0,119,0,220,255,1,58,4,0,1,59,0,0,134,5,0,0,24,55,6,0,55,58,59,0,1,58,0,0,1,60,0,0,134,59,0,0,164,140,5,0,5,58,60,0,1,51,224,117,0,6,51,0,18,7,6,57,120,7,2,0,119,0,78,0,0,8,51,0,134,59,0,0,32,33,6,0,8,0,0,0,0,9,51,0,25,10,9,16,1,59,4,0,1,60,0,0,134,11,0,0,24,55,6,0,10,59,60,0,0,13,51,0,25,14,13,8,1,60,4,0,1,59,0,0,134,15,0,0,24,55,6,0,14,60,59,0,1,59,4,0,1,60,0,0,134,16,0,0,24,55,6,0,55,59,60,0,135,17,28,0,11,15,16,0,0,52,17,0,0,18,52,0,33,19,18,0,121,19,45,0,0,20,52,0,32,21,20,1,120,21,46,0,0,22,51,0,16,24,56,22,121,24,21,0,1,60,4,0,1,59,0,0,134,25,0,0,24,55,6,0,55,60,59,0,0,26,51,0,0,27,26,0,4,28,27,56,28,59,28,20,38,59,59,255,0,29,59,0,26,30,29,1,1,60,0,0,134,59,0,0,164,140,5,0,25,30,60,0,0,31,51,0,26,32,31,40,0,51,32,0,119,0,19,0,1,60,7,0,134,59,0,0,20,105,6,0,60,0,0,0,1,59,4,0,1,60,0,0,134,33,0,0,24,55,6,0,55,59,60,0,1,59,0,0,1,58,0,0,134,60,0,0,164,140,5,0,33,59,58,0,0,35,51,0,26,36,35,20,0,51,36,0,119,0,1,0,0,37,51,0,25,38,37,20,0,51,38,0,119,0,176,255,1,60,4,0,1,58,0,0,134,39,0,0,24,55,6,0,55,60,58,0,2,58,0,0,76,162,0,0,1,60,4,0,1,59,0,0,134,40,0,0,24,55,6,0,58,60,59,0,26,41,40,1,1,60,0,0,134,59,0,0,164,140,5,0,39,41,60,0,1,59,4,0,1,60,0,0,134,42,0,0,24,55,6,0,55,59,60,0,2,59,0,0,115,52,1,0,134,60,0,0,144,86,6,0,42,59,0,0,1,60,4,0,1,59,0,0,134,43,0,0,24,55,6,0,55,60,59,0,134,59,0,0,124,212,4,0,43,0,0,0,1,60,32,0,134,59,0,0,112,14,6,0,60,0,0,0,2,59,0,0,64,162,0,0,1,60,4,0,1,58,0,0,134,44,0,0,24,55,6,0,59,60,58,0,1,60,1,0,134,58,0,0,0,62,6,0,44,60,0,0,2,58,0,0,68,162,0,0,1,60,4,0,1,59,0,0,134,46,0,0,24,55,6,0,58,60,59,0,134,59,0,0,164,179,5,0,46,0,0,0,2,60,0,0,38,217,0,0,42,60,60,0,1,58,0,0,1,61,1,0,134,59,0,0,116,78,6,0,60,58,61,0,137,54,0,0,139,0,0,0,140,2,63,0,0,0,0,0,2,56,0,0,60,161,0,0,1,54,0,0,136,57,0,0,0,55,57,0,136,57,0,0,25,57,57,16,137,57,0,0,130,57,0,0,136,58,0,0,49,57,57,58,184,72,4,0,135,57,0,0,0,53,55,0,0,2,0,0,0,3,1,0,0,14,2,0,25,25,14,12,134,36,0,0,48,144,4,0,25,56,0,0,41,57,36,24,42,57,57,24,33,47,57,0,121,47,142,0,1,57,4,0,1,58,0,0,134,48,0,0,24,55,6,0,56,57,58,0,41,58,48,5,0,49,58,0,2,58,0,0,64,161,0,0,1,57,4,0,1,59,0,0,134,50,0,0,24,55,6,0,58,57,59,0,3,51,49,50,1,59,192,26,41,57,51,3,3,4,59,57,0,52,4,0,0,5,2,0,25,6,5,8,1,57,4,0,1,59,0,0,134,7,0,0,24,55,6,0,6,57,59,0,1,59,255,0,19,59,7,59,0,8,59,0,0,9,52,0,42,57,9,0,1,58,1,0,134,59,0,0,116,78,6,0,57,8,58,0,0,10,2,0,25,11,10,12,1,57,4,0,1,60,0,0,134,58,0,0,24,55,6,0,56,57,60,0,1,60,4,0,134,59,0,0,116,78,6,0,11,58,60,0,25,60,11,4,25,57,56,4,1,61,4,0,1,62,0,0,134,58,0,0,24,55,6,0,57,61,62,0,1,62,4,0,134,59,0,0,116,78,6,0,60,58,62,0,2,59,0,0,64,161,0,0,1,62,4,0,1,58,0,0,134,12,0,0,24,55,6,0,59,62,58,0,1,58,4,0,1,62,0,0,134,13,0,0,24,55,6,0,56,58,62,0,134,15,0,0,228,47,4,0,12,13,0,0,41,62,15,24,42,62,62,24,33,16,62,0,121,16,58,0,0,17,52,0,25,18,17,4,1,62,4,0,1,58,0,0,134,19,0,0,24,55,6,0,18,62,58,0,1,58,0,0,14,20,19,58,121,20,25,0,0,21,2,0,25,22,21,8,1,58,4,0,1,62,0,0,134,23,0,0,24,55,6,0,22,58,62,0,1,62,255,0,19,62,23,62,0,24,62,0,0,26,52,0,25,27,26,4,1,62,4,0,1,58,0,0,134,28,0,0,24,55,6,0,27,62,58,0,25,29,28,19,42,62,29,0,1,59,1,0,134,58,0,0,116,78,6,0,62,24,59,0,119,0,24,0,2,58,0,0,64,161,0,0,1,59,4,0,1,62,0,0,134,30,0,0,24,55,6,0,58,59,62,0,1,62,4,0,1,59,0,0,134,31,0,0,24,55,6,0,56,62,59,0,0,32,2,0,25,33,32,8,1,59,4,0,1,62,0,0,134,34,0,0,24,55,6,0,33,59,62,0,134,62,0,0,208,39,6,0,30,31,34,0,119,0,1,0,0,35,2,0,1,59,112,3,134,62,0,0,124,205,5,0,59,35,0,0,137,55,0,0,139,0,0,0,119,0,58,0,0,37,3,0,41,62,37,24,42,62,62,24,33,38,62,0,121,38,47,0,2,62,0,0,246,208,0,0,42,62,62,0,1,59,1,0,1,58,0,0,134,39,0,0,24,55,6,0,62,59,58,0,41,58,39,24,42,58,58,24,33,40,58,0,121,40,11,0,134,58,0,0,120,187,4,0,2,59,0,0,246,208,0,0,42,59,59,0,1,62,0,0,1,60,1,0,134,58,0,0,116,78,6,0,59,62,60,0,0,41,2,0,25,42,41,52,1,58,4,0,1,60,0,0,134,43,0,0,24,55,6,0,42,58,60,0,1,60,100,20,27,58,43,20,3,44,60,58,1,58,4,0,1,60,0,0,134,45,0,0,24,55,6,0,44,58,60,0,1,58,4,0,134,60,0,0,116,78,6,0,53,45,58,0,2,58,0,0,63,53,1,0,134,60,0,0,144,18,6,0,58,53,0,0,0,46,2,0,134,60,0,0,100,97,6,0,46,0,0,0,137,55,0,0,139,0,0,0,139,0,0,0,140,2,57,0,0,0,0,0,2,52,0,0,128,128,128,128,2,53,0,0,255,254,254,254,1,50,0,0,136,54,0,0,0,51,54,0,0,11,1,0,0,12,0,0,21,54,11,12,0,23,54,0,38,54,23,3,0,34,54,0,32,40,34,0,121,40,94,0,38,54,11,3,0,41,54,0,32,42,41,0,121,42,4,0,0,2,1,0,0,3,0,0,119,0,33,0,0,4,0,0,0,5,1,0,42,54,5,0,1,55,1,0,1,56,0,0,134,43,0,0,24,55,6,0,54,55,56,0,42,55,4,0,1,54,1,0,134,56,0,0,116,78,6,0,55,43,54,0,41,56,43,24,42,56,56,24,32,44,56,0,121,44,3,0,0,6,4,0,119,0,71,0,25,45,5,1,25,13,4,1,0,14,45,0,38,56,14,3,0,15,56,0,32,16,15,0,121,16,4,0,0,2,45,0,0,3,13,0,119,0,4,0,0,4,13,0,0,5,45,0,119,0,227,255,1,56,4,0,1,54,0,0,134,17,0,0,24,55,6,0,2,56,54,0,2,54,0,0,1,1,1,1,4,18,17,54,19,54,17,52,0,19,54,0,21,54,19,52,0,20,54,0,19,54,20,18,0,21,54,0,32,22,21,0,121,22,33,0,0,26,17,0,0,47,3,0,0,49,2,0,25,24,49,4,25,25,47,4,1,56,4,0,134,54,0,0,116,78,6,0,47,26,56,0,1,54,4,0,1,56,0,0,134,27,0,0,24,55,6,0,24,54,56,0,2,56,0,0,1,1,1,1,4,28,27,56,19,56,27,52,0,29,56,0,21,56,29,52,0,30,56,0,19,56,30,28,0,31,56,0,32,32,31,0,121,32,5,0,0,26,27,0,0,47,25,0,0,49,24,0,119,0,231,255,0,46,25,0,0,48,24,0,119,0,3,0,0,46,3,0,0,48,2,0,0,7,48,0,0,8,46,0,1,50,8,0,119,0,4,0,0,7,1,0,0,8,0,0,1,50,8,0,32,56,50,8,121,56,42,0,42,56,7,0,1,54,1,0,1,55,0,0,134,33,0,0,24,55,6,0,56,54,55,0,42,54,8,0,1,56,1,0,134,55,0,0,116,78,6,0,54,33,56,0,41,55,33,24,42,55,55,24,32,35,55,0,121,35,3,0,0,6,8,0,119,0,25,0,0,9,8,0,0,10,7,0,25,36,10,1,25,37,9,1,42,55,36,0,1,56,1,0,1,54,0,0,134,38,0,0,24,55,6,0,55,56,54,0,42,56,37,0,1,55,1,0,134,54,0,0,116,78,6,0,56,38,55,0,41,54,38,24,42,54,54,24,32,39,54,0,121,39,3,0,0,6,37,0,119,0,4,0,0,9,37,0,0,10,36,0,119,0,235,255,139,6,0,0,140,2,70,0,0,0,0,0,1,62,0,0,136,64,0,0,0,63,64,0,136,64,0,0,25,64,64,16,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,172,78,4,0,135,64,0,0,0,2,0,0,0,3,1,0,0,14,2,0,25,25,14,32,1,64,4,0,1,65,0,0,134,36,0,0,24,55,6,0,25,64,65,0,25,47,36,1,1,64,4,0,134,65,0,0,116,78,6,0,25,47,64,0,0,57,2,0,25,58,57,36,41,65,36,3,3,59,58,65,0,60,3,0,1,66,4,0,1,67,0,0,134,64,0,0,24,55,6,0,60,66,67,0,1,67,4,0,134,65,0,0,116,78,6,0,59,64,67,0,25,67,59,4,25,66,60,4,1,68,4,0,1,69,0,0,134,64,0,0,24,55,6,0,66,68,69,0,1,69,4,0,134,65,0,0,116,78,6,0,67,64,69,0,0,4,2,0,25,5,4,28,1,65,2,0,1,69,0,0,134,6,0,0,24,55,6,0,5,65,69,0,41,69,6,16,42,69,69,16,0,7,69,0,38,69,7,4,0,8,69,0,33,9,8,0,121,9,3,0,137,63,0,0,139,0,0,0,0,10,3,0,1,69,4,0,1,65,0,0,134,11,0,0,24,55,6,0,10,69,65,0,41,65,11,5,0,12,65,0,0,13,3,0,25,15,13,4,1,65,4,0,1,69,0,0,134,16,0,0,24,55,6,0,15,65,69,0,3,17,12,16,1,69,192,26,41,65,17,3,3,18,69,65,0,61,18,0,1,65,10,0,134,19,0,0,20,36,6,0,65,0,0,0,25,20,19,1,1,65,200,2,1,69,4,0,1,64,0,0,134,21,0,0,24,55,6,0,65,69,64,0,15,22,20,21,121,22,92,0,1,64,5,0,134,23,0,0,20,36,6,0,64,0,0,0,32,24,23,0,121,24,86,0,0,26,3,0,25,27,26,4,1,64,4,0,1,69,0,0,134,28,0,0,24,55,6,0,27,64,69,0,0,29,2,0,25,30,29,4,1,69,4,0,1,64,0,0,134,31,0,0,24,55,6,0,30,69,64,0,13,32,28,31,121,32,3,0,1,62,6,0,119,0,36,0,0,33,3,0,25,34,33,4,1,64,4,0,1,69,0,0,134,35,0,0,24,55,6,0,34,64,69,0,0,37,2,0,25,38,37,4,1,69,4,0,1,64,0,0,134,39,0,0,24,55,6,0,38,69,64,0,0,40,2,0,25,41,40,8,25,42,41,4,1,64,4,0,1,69,0,0,134,43,0,0,24,55,6,0,42,64,69,0,3,44,39,43,26,45,44,1,13,46,35,45,121,46,3,0,1,62,6,0,119,0,8,0,0,49,61,0,42,64,49,0,1,65,124,0,1,67,1,0,134,69,0,0,116,78,6,0,64,65,67,0,32,69,62,6,121,69,8,0,0,48,61,0,42,67,48,0,1,65,45,0,1,64,1,0,134,69,0,0,116,78,6,0,67,65,64,0,0,50,61,0,25,51,50,1,42,69,51,0,1,64,1,0,1,65,0,0,134,52,0,0,24,55,6,0,69,64,65,0,41,65,52,24,42,65,65,24,0,53,65,0,38,65,53,239,0,54,65,0,1,65,255,0,19,65,54,65,0,55,65,0,42,64,51,0,1,69,1,0,134,65,0,0,116,78,6,0,64,55,69,0,137,63,0,0,139,0,0,0,0,56,61,0,42,69,56,0,1,64,43,0,1,67,1,0,134,65,0,0,116,78,6,0,69,64,67,0,137,63,0,0,139,0,0,0,140,1,74,0,0,0,0,0,1,70,0,0,136,72,0,0,0,71,72,0,136,72,0,0,25,72,72,32,137,72,0,0,130,72,0,0,136,73,0,0,49,72,72,73,208,81,4,0,135,72,0,0,0,2,0,0,0,13,2,0,1,72,0,0,14,24,13,72,120,24,5,0,1,1,255,255,0,61,1,0,137,71,0,0,139,61,0,0,0,35,2,0,1,72,4,0,1,73,0,0,134,46,0,0,24,55,6,0,35,72,73,0,0,69,46,0,0,57,2,0,25,62,57,4,1,73,4,0,1,72,0,0,134,63,0,0,24,55,6,0,62,73,72,0,0,68,63,0,0,64,2,0,25,3,64,32,1,72,4,0,1,73,0,0,134,4,0,0,24,55,6,0,3,72,73,0,0,65,4,0,0,5,68,0,0,66,5,0,0,6,68,0,0,7,69,0,0,8,2,0,25,9,8,44,1,73,4,0,1,72,0,0,134,10,0,0,24,55,6,0,9,73,72,0,41,72,7,2,3,11,10,72,1,72,4,0,1,73,0,0,134,12,0,0,24,55,6,0,11,72,73,0,41,73,6,2,3,14,12,73,0,67,14,0,0,15,66,0,0,16,2,0,25,17,16,12,1,73,4,0,1,72,0,0,134,18,0,0,24,55,6,0,17,73,72,0,15,19,15,18,120,19,2,0,119,0,14,0,0,20,65,0,0,21,67,0,1,73,4,0,134,72,0,0,116,78,6,0,21,20,73,0,0,22,66,0,25,23,22,1,0,66,23,0,0,25,67,0,25,26,25,4,0,67,26,0,119,0,233,255,0,27,68,0,0,28,69,0,0,29,2,0,25,30,29,48,1,72,4,0,1,73,0,0,134,31,0,0,24,55,6,0,30,72,73,0,41,73,28,2,3,32,31,73,1,73,4,0,1,72,0,0,134,33,0,0,24,55,6,0,32,73,72,0,15,34,27,33,121,34,3,0,1,70,8,0,119,0,19,0,0,36,69,0,0,37,2,0,25,38,37,48,1,72,4,0,1,73,0,0,134,39,0,0,24,55,6,0,38,72,73,0,41,73,36,2,3,40,39,73,1,73,4,0,1,72,0,0,134,41,0,0,24,55,6,0,40,73,72,0,32,42,41,255,121,42,2,0,1,70,8,0,32,72,70,8,121,72,16,0,0,43,68,0,0,44,69,0,0,45,2,0,25,47,45,48,1,72,4,0,1,73,0,0,134,48,0,0,24,55,6,0,47,72,73,0,41,73,44,2,3,49,48,73,1,72,4,0,134,73,0,0,116,78,6,0,49,43,72,0,0,50,2,0,25,51,50,12,1,73,4,0,1,72,0,0,134,52,0,0,24,55,6,0,51,73,72,0,26,53,52,1,0,54,69,0,0,55,2,0,25,56,55,52,1,72,4,0,1,73,0,0,134,58,0,0,24,55,6,0,56,72,73,0,41,73,54,2,3,59,58,73,1,72,4,0,134,73,0,0,116,78,6,0,59,53,72,0,0,60,2,0,134,73,0,0,0,42,6,0,60,0,0,0,1,1,0,0,0,61,1,0,137,71,0,0,139,61,0,0,140,2,64,0,0,0,0,0,1,59,0,0,136,61,0,0,0,60,61,0,136,61,0,0,25,61,61,16,137,61,0,0,130,61,0,0,136,62,0,0,49,61,61,62,140,84,4,0,135,61,0,0,0,3,0,0,0,14,1,0,0,25,14,0,1,61,4,0,1,62,0,0,134,36,0,0,24,55,6,0,25,61,62,0,34,47,36,0,120,47,140,0,0,55,14,0,1,62,4,0,1,61,0,0,134,56,0,0,24,55,6,0,55,62,61,0,1,61,80,0,17,57,61,56,120,57,131,0,0,58,14,0,25,4,58,4,1,61,4,0,1,62,0,0,134,5,0,0,24,55,6,0,4,61,62,0,36,6,5,0,120,6,122,0,0,7,14,0,25,8,7,4,1,62,4,0,1,61,0,0,134,9,0,0,24,55,6,0,8,62,61,0,1,61,23,0,17,10,61,9,120,10,112,0,0,11,14,0,1,61,4,0,1,62,0,0,134,12,0,0,24,55,6,0,11,61,62,0,0,13,3,0,1,62,4,0,1,61,0,0,134,15,0,0,24,55,6,0,13,62,61,0,13,16,12,15,120,16,94,0,0,17,14,0,25,18,17,4,1,61,4,0,1,62,0,0,134,19,0,0,24,55,6,0,18,61,62,0,0,20,3,0,25,21,20,4,1,62,4,0,1,61,0,0,134,22,0,0,24,55,6,0,21,62,61,0,13,23,19,22,120,23,78,0,0,24,3,0,1,61,4,0,1,62,0,0,134,26,0,0,24,55,6,0,24,61,62,0,41,62,26,5,0,27,62,0,0,28,14,0,25,29,28,4,1,62,4,0,1,61,0,0,134,30,0,0,24,55,6,0,29,62,61,0,3,31,27,30,1,61,192,26,41,62,31,3,3,32,61,62,42,62,32,0,1,61,1,0,1,63,0,0,134,33,0,0,24,55,6,0,62,61,63,0,41,63,33,24,42,63,63,24,0,34,63,0,134,35,0,0,232,58,6,0,34,0,0,0,33,37,35,0,121,37,35,0,0,38,14,0,1,63,4,0,1,61,0,0,134,39,0,0,24,55,6,0,38,63,61,0,41,61,39,5,0,40,61,0,0,41,3,0,25,42,41,4,1,61,4,0,1,63,0,0,134,43,0,0,24,55,6,0,42,61,63,0,3,44,40,43,1,63,192,26,41,61,44,3,3,45,63,61,42,61,45,0,1,63,1,0,1,62,0,0,134,46,0,0,24,55,6,0,61,63,62,0,41,62,46,24,42,62,62,24,0,48,62,0,134,49,0,0,232,58,6,0,48,0,0,0,33,50,49,0,0,52,50,0,119,0,2,0,1,52,0,0,38,62,52,1,0,51,62,0,1,62,255,0,19,62,51,62,0,53,62,0,0,2,53,0,0,54,2,0,137,60,0,0,139,54,0,0,1,2,1,0,0,54,2,0,137,60,0,0,139,54,0,0,1,2,0,0,0,54,2,0,137,60,0,0,139,54,0,0,140,2,68,0,0,0,0,0,1,63,0,0,136,65,0,0,0,64,65,0,136,65,0,0,25,65,65,16,137,65,0,0,130,65,0,0,136,66,0,0,49,65,65,66,36,87,4,0,135,65,0,0,0,2,0,0,0,3,1,0,0,14,2,0,25,25,14,8,1,66,41,0,1,67,4,0,134,65,0,0,116,78,6,0,25,66,67,0,0,36,3,0,0,47,2,0,25,58,47,52,1,67,4,0,134,65,0,0,116,78,6,0,58,36,67,0,0,59,3,0,2,65,0,0,68,161,0,0,41,67,59,4,3,60,65,67,0,62,60,0,0,61,2,0,25,4,61,29,0,5,62,0,1,67,4,0,1,65,0,0,134,6,0,0,24,55,6,0,5,67,65,0,1,67,8,0,135,65,9,0,4,6,67,0,0,7,2,0,25,8,7,37,0,9,62,0,25,10,9,4,1,65,4,0,1,67,0,0,134,11,0,0,24,55,6,0,10,65,67,0,1,65,8,0,135,67,9,0,8,11,65,0,0,12,62,0,25,13,12,8,42,67,13,0,1,65,1,0,1,66,0,0,134,15,0,0,24,55,6,0,67,65,66,0,41,66,15,24,42,66,66,24,0,16,66,0,0,17,2,0,25,18,17,24,1,65,4,0,134,66,0,0,116,78,6,0,18,16,65,0,0,19,62,0,25,20,19,12,1,66,4,0,1,65,0,0,134,21,0,0,24,55,6,0,20,66,65,0,0,22,2,0,25,23,22,68,1,66,4,0,134,65,0,0,116,78,6,0,23,21,66,0,0,24,2,0,25,26,24,56,1,66,0,0,1,67,4,0,134,65,0,0,116,78,6,0,26,66,67,0,0,27,2,0,25,28,27,60,1,67,0,0,1,66,4,0,134,65,0,0,116,78,6,0,28,67,66,0,0,29,3,0,32,30,29,4,121,30,34,0,1,65,4,0,134,31,0,0,20,36,6,0,65,0,0,0,25,32,31,2,0,33,2,0,25,34,33,48,1,66,4,0,134,65,0,0,116,78,6,0,34,32,66,0,2,65,0,0,48,161,0,0,1,66,4,0,1,67,0,0,134,35,0,0,24,55,6,0,65,66,67,0,25,37,35,1,2,66,0,0,48,161,0,0,1,65,4,0,134,67,0,0,116,78,6,0,66,37,65,0,0,38,2,0,25,39,38,72,1,65,4,0,134,67,0,0,116,78,6,0,39,35,65,0,137,64,0,0,139,0,0,0,0,40,2,0,25,41,40,68,1,67,4,0,1,65,0,0,134,42,0,0,24,55,6,0,41,67,65,0,38,65,42,8,0,43,65,0,33,44,43,0,121,44,35,0,1,65,8,0,134,45,0,0,20,36,6,0,65,0,0,0,25,46,45,8,0,48,2,0,25,49,48,48,1,67,4,0,134,65,0,0,116,78,6,0,49,46,67,0,2,65,0,0,48,161,0,0,1,67,4,0,1,66,0,0,134,50,0,0,24,55,6,0,65,67,66,0,25,51,50,1,2,67,0,0,48,161,0,0,1,65,4,0,134,66,0,0,116,78,6,0,67,51,65,0,0,52,2,0,25,53,52,72,1,65,4,0,134,66,0,0,116,78,6,0,53,50,65,0,137,64,0,0,139,0,0,0,119,0,17,0,0,54,2,0,25,55,54,48,1,65,1,0,1,67,4,0,134,66,0,0,116,78,6,0,55,65,67,0,0,56,2,0,25,57,56,72,1,67,0,0,1,65,4,0,134,66,0,0,116,78,6,0,57,67,65,0,137,64,0,0,139,0,0,0,139,0,0,0,140,1,78,0,0,0,0,0,2,73,0,0,192,26,0,0,1,71,0,0,136,74,0,0,0,72,74,0,136,74,0,0,25,74,74,16,137,74,0,0,130,74,0,0,136,75,0,0,49,74,74,75,76,90,4,0,135,74,0,0,0,1,0,0,0,2,1,0,25,13,2,28,1,74,2,0,1,75,0,0,134,24,0,0,24,55,6,0,13,74,75,0,41,75,24,16,42,75,75,16,0,35,75,0,38,75,35,4,0,46,75,0,33,57,46,0,0,66,1,0,121,57,6,0,134,75,0,0,48,217,4,0,66,0,0,0,137,72,0,0,139,0,0,0,0,67,1,0,1,75,4,0,1,74,0,0,134,68,0,0,24,55,6,0,67,75,74,0,134,74,0,0,32,214,5,0,66,68,0,0,0,3,1,0,0,4,1,0,1,74,4,0,1,75,0,0,134,5,0,0,24,55,6,0,4,74,75,0,0,6,1,0,25,7,6,8,1,75,4,0,1,74,0,0,134,8,0,0,24,55,6,0,7,75,74,0,3,9,5,8,26,10,9,1,134,74,0,0,32,214,5,0,3,10,0,0,0,11,1,0,0,12,1,0,25,14,12,4,1,74,4,0,1,75,0,0,134,15,0,0,24,55,6,0,14,74,75,0,134,75,0,0,232,244,5,0,11,15,0,0,0,16,1,0,0,17,1,0,25,18,17,4,1,75,4,0,1,74,0,0,134,19,0,0,24,55,6,0,18,75,74,0,0,20,1,0,25,21,20,8,25,22,21,4,1,74,4,0,1,75,0,0,134,23,0,0,24,55,6,0,22,74,75,0,3,25,19,23,26,26,25,1,134,75,0,0,232,244,5,0,16,26,0,0,0,27,1,0,25,28,27,4,1,75,4,0,1,74,0,0,134,29,0,0,24,55,6,0,28,75,74,0,25,30,29,1,0,70,30,0,0,31,70,0,0,32,1,0,25,33,32,4,1,74,4,0,1,75,0,0,134,34,0,0,24,55,6,0,33,74,75,0,0,36,1,0,25,37,36,8,25,38,37,4,1,75,4,0,1,74,0,0,134,39,0,0,24,55,6,0,38,75,74,0,3,40,34,39,26,41,40,1,15,42,31,41,120,42,2,0,119,0,49,0,0,43,1,0,1,74,4,0,1,75,0,0,134,44,0,0,24,55,6,0,43,74,75,0,25,45,44,1,0,69,45,0,0,47,69,0,0,48,1,0,1,75,4,0,1,74,0,0,134,49,0,0,24,55,6,0,48,75,74,0,0,50,1,0,25,51,50,8,1,74,4,0,1,75,0,0,134,52,0,0,24,55,6,0,51,74,75,0,3,53,49,52,26,54,53,1,15,55,47,54,120,55,2,0,119,0,18,0,0,56,69,0,41,75,56,5,0,58,75,0,0,59,70,0,3,60,58,59,41,75,60,3,3,61,73,75,42,74,61,0,1,76,46,0,1,77,1,0,134,75,0,0,116,78,6,0,74,76,77,0,0,62,69,0,25,63,62,1,0,69,63,0,119,0,221,255,0,64,70,0,25,65,64,1,0,70,65,0,119,0,188,255,137,72,0,0,139,0,0,0,140,2,71,0,0,0,0,0,1,66,0,0,136,68,0,0,0,67,68,0,136,68,0,0,25,68,68,16,137,68,0,0,130,68,0,0,136,69,0,0,49,68,68,69,4,93,4,0,135,68,0,0,0,3,0,0,0,14,1,0,2,68,0,0,80,159,0,0,1,69,4,0,1,70,0,0,134,25,0,0,24,55,6,0,68,69,70,0,33,36,25,0,2,70,0,0,84,159,0,0,1,69,4,0,1,68,0,0,134,47,0,0,24,55,6,0,70,69,68,0,33,58,47,0,20,68,36,58,0,65,68,0,121,65,27,0,2,68,0,0,84,159,0,0,1,69,4,0,1,70,0,0,134,62,0,0,24,55,6,0,68,69,70,0,33,63,62,0,2,70,0,0,80,159,0,0,1,69,4,0,1,68,0,0,134,64,0,0,24,55,6,0,70,69,68,0,33,4,64,0,1,68,1,0,125,5,63,68,4,0,0,0,38,68,5,1,0,6,68,0,0,2,6,0,0,61,2,0,137,67,0,0,139,61,0,0,119,0,118,0,0,7,3,0,2,69,0,0,3,0,205,171,134,68,0,0,4,110,5,0,7,69,0,0,0,8,3,0,0,9,14,0,25,10,9,8,134,68,0,0,100,182,4,0,8,10,0,0,0,11,3,0,0,12,14,0,25,13,12,12,134,68,0,0,60,15,5,0,11,13,0,0,0,15,3,0,0,16,14,0,25,17,16,24,134,68,0,0,100,182,4,0,15,17,0,0,0,18,3,0,0,19,14,0,25,20,19,28,134,68,0,0,0,195,5,0,18,20,0,0,0,21,3,0,0,22,14,0,25,23,22,29,1,69,8,0,134,68,0,0,108,81,5,0,21,23,69,0,0,24,3,0,0,26,14,0,25,27,26,37,1,69,8,0,134,68,0,0,108,81,5,0,24,27,69,0,0,28,3,0,0,29,14,0,25,30,29,48,134,68,0,0,100,182,4,0,28,30,0,0,0,31,3,0,0,32,14,0,25,33,32,52,134,68,0,0,100,182,4,0,31,33,0,0,0,34,3,0,0,35,14,0,25,37,35,56,134,68,0,0,100,182,4,0,34,37,0,0,0,38,3,0,0,39,14,0,25,40,39,60,134,68,0,0,100,182,4,0,38,40,0,0,0,41,3,0,0,42,14,0,25,43,42,64,134,68,0,0,100,182,4,0,41,43,0,0,0,44,3,0,0,45,14,0,25,46,45,68,134,68,0,0,100,182,4,0,44,46,0,0,0,48,3,0,0,49,14,0,25,50,49,72,134,68,0,0,100,182,4,0,48,50,0,0,0,51,3,0,0,52,14,0,25,53,52,76,134,68,0,0,232,22,5,0,51,53,0,0,2,68,0,0,84,159,0,0,1,69,4,0,1,70,0,0,134,54,0,0,24,55,6,0,68,69,70,0,33,55,54,0,2,70,0,0,80,159,0,0,1,69,4,0,1,68,0,0,134,56,0,0,24,55,6,0,70,69,68,0,33,57,56,0,1,68,1,0,125,59,55,68,57,0,0,0,38,68,59,1,0,60,68,0,0,2,60,0,0,61,2,0,137,67,0,0,139,61,0,0,1,68,0,0,139,68,0,0,140,2,59,0,0,0,0,0,2,53,0,0,128,128,128,128,2,54,0,0,255,254,254,254,2,55,0,0,255,0,0,0,1,51,0,0,136,56,0,0,0,52,56,0,19,56,1,55,0,6,56,0,32,7,6,0,121,7,6,0,135,43,22,0,0,0,0,0,3,44,0,43,0,2,44,0,119,0,124,0,0,18,0,0,38,56,18,3,0,29,56,0,32,40,29,0,121,40,3,0], eb + 276480);
  HEAPU8.set([0,3,0,0,119,0,33,0,19,56,1,55,0,42,56,0,0,4,0,0,42,56,4,0,1,57,1,0,1,58,0,0,134,45,0,0,24,55,6,0,56,57,58,0,41,58,45,24,42,58,58,24,32,46,58,0,41,58,45,24,42,58,58,24,41,57,42,24,42,57,57,24,13,8,58,57,20,57,46,8,0,47,57,0,121,47,3,0,0,2,4,0,119,0,95,0,25,9,4,1,0,10,9,0,38,57,10,3,0,11,57,0,32,12,11,0,121,12,3,0,0,3,9,0,119,0,3,0,0,4,9,0,119,0,228,255,2,57,0,0,1,1,1,1,5,13,6,57,1,57,4,0,1,58,0,0,134,14,0,0,24,55,6,0,3,57,58,0,2,58,0,0,1,1,1,1,4,15,14,58,19,58,14,53,0,16,58,0,21,58,16,53,0,17,58,0,19,58,17,15,0,19,58,0,32,20,19,0,121,20,40,0,0,22,14,0,0,50,3,0,21,58,22,13,0,21,58,0,2,58,0,0,1,1,1,1,4,23,21,58,19,58,21,53,0,24,58,0,21,58,24,53,0,25,58,0,19,58,25,23,0,26,58,0,32,27,26,0,120,27,3,0,0,49,50,0,119,0,24,0,25,28,50,4,1,58,4,0,1,57,0,0,134,30,0,0,24,55,6,0,28,58,57,0,2,57,0,0,1,1,1,1,4,31,30,57,19,57,30,53,0,32,57,0,21,57,32,53,0,33,57,0,19,57,33,31,0,34,57,0,32,35,34,0,121,35,4,0,0,22,30,0,0,50,28,0,119,0,222,255,0,49,28,0,119,0,2,0,0,49,3,0,19,57,1,55,0,36,57,0,0,5,49,0,42,57,5,0,1,58,1,0,1,56,0,0,134,37,0,0,24,55,6,0,57,58,56,0,41,56,37,24,42,56,56,24,32,38,56,0,41,56,37,24,42,56,56,24,41,58,36,24,42,58,58,24,13,39,56,58,20,58,38,39,0,48,58,0,25,41,5,1,121,48,3,0,0,2,5,0,119,0,3,0,0,5,41,0,119,0,235,255,139,2,0,0,140,1,53,0,0,0,0,0,1,48,0,0,136,50,0,0,0,49,50,0,25,6,0,104,1,50,4,0,1,51,0,0,134,7,0,0,24,55,6,0,6,50,51,0,32,18,7,0,121,18,3,0,1,48,3,0,119,0,12,0,25,29,0,108,1,51,4,0,1,50,0,0,134,40,0,0,24,55,6,0,29,51,50,0,15,43,40,7,121,43,3,0,1,48,3,0,119,0,2,0,1,48,4,0,32,50,48,3,121,50,116,0,134,44,0,0,88,6,6,0,0,0,0,0,34,45,44,0,121,45,3,0,1,48,4,0,119,0,109,0,1,50,4,0,1,51,0,0,134,47,0,0,24,55,6,0,6,50,51,0,32,8,47,0,25,2,0,8,121,8,11,0,1,51,4,0,1,50,0,0,134,4,0,0,24,55,6,0,2,51,50,0,0,9,4,0,0,25,4,0,0,42,9,0,1,48,9,0,119,0,36,0,1,50,4,0,1,51,0,0,134,10,0,0,24,55,6,0,2,50,51,0,25,11,0,4,1,51,4,0,1,50,0,0,134,12,0,0,24,55,6,0,11,51,50,0,0,13,10,0,0,14,12,0,4,15,13,14,25,16,0,108,1,50,4,0,1,51,0,0,134,17,0,0,24,55,6,0,16,50,51,0,4,19,47,17,26,20,19,1,15,21,20,15,121,21,9,0,3,22,12,20,25,23,0,100,1,50,4,0,134,51,0,0,116,78,6,0,23,22,50,0,0,26,10,0,119,0,4,0,0,25,13,0,0,42,10,0,1,48,9,0,32,51,48,9,121,51,7,0,25,24,0,100,1,50,4,0,134,51,0,0,116,78,6,0,24,25,50,0,0,26,42,0,1,51,0,0,13,27,26,51,25,3,0,4,1,51,4,0,1,50,0,0,134,5,0,0,24,55,6,0,3,51,50,0,120,27,16,0,0,28,26,0,0,30,5,0,25,31,0,108,1,50,4,0,1,51,0,0,134,32,0,0,24,55,6,0,31,50,51,0,25,33,28,1,4,34,33,30,3,35,34,32,1,50,4,0,134,51,0,0,116,78,6,0,31,35,50,0,26,36,5,1,42,51,36,0,1,50,1,0,1,52,0,0,134,37,0,0,24,55,6,0,51,50,52,0,1,52,255,0,19,52,37,52,0,38,52,0,13,39,38,44,121,39,3,0,0,1,44,0,119,0,10,0,1,52,255,0,19,52,44,52,0,41,52,0,42,50,36,0,1,51,1,0,134,52,0,0,116,78,6,0,50,41,51,0,0,1,44,0,32,52,48,4,121,52,8,0,25,46,0,100,1,51,0,0,1,50,4,0,134,52,0,0,116,78,6,0,46,51,50,0,1,1,255,255,139,1,0,0,140,3,65,0,0,0,0,0,1,57,0,0,136,59,0,0,0,58,59,0,136,59,0,0,25,59,59,32,137,59,0,0,130,59,0,0,136,60,0,0,49,59,59,60,116,100,4,0,135,59,0,0,0,3,0,0,0,4,1,0,0,15,2,0,0,26,4,0,25,37,26,72,1,59,4,0,1,60,0,0,134,48,0,0,24,55,6,0,37,59,60,0,0,56,48,0,0,51,56,0,1,60,0,0,14,52,51,60,120,52,2,0,119,0,55,0,0,53,56,0,1,60,4,0,1,59,0,0,134,54,0,0,24,55,6,0,53,60,59,0,0,55,54,0,0,5,56,0,25,6,5,12,0,7,4,0,25,8,7,8,1,61,4,0,1,62,0,0,134,60,0,0,24,55,6,0,8,61,62,0,1,62,4,0,134,59,0,0,116,78,6,0,6,60,62,0,25,62,6,4,25,61,8,4,1,63,4,0,1,64,0,0,134,60,0,0,24,55,6,0,61,63,64,0,1,64,4,0,134,59,0,0,116,78,6,0,62,60,64,0,0,9,4,0,25,10,9,72,0,11,56,0,134,59,0,0,36,53,5,0,10,11,0,0,0,12,15,0,41,59,12,24,42,59,59,24,33,13,59,0,0,14,56,0,121,13,6,0,1,64,0,0,134,59,0,0,124,72,4,0,14,64,0,0,119,0,4,0,134,59,0,0,100,97,6,0,14,0,0,0,0,16,55,0,0,56,16,0,119,0,198,255,0,17,3,0,1,59,4,0,1,64,0,0,134,18,0,0,24,55,6,0,17,59,64,0,41,64,18,5,0,19,64,0,0,20,3,0,25,21,20,4,1,64,4,0,1,59,0,0,134,22,0,0,24,55,6,0,21,64,59,0,3,23,19,22,1,59,192,26,41,64,23,3,3,24,59,64,25,25,24,4,1,59,0,0,1,60,4,0,134,64,0,0,116,78,6,0,25,59,60,0,0,27,3,0,25,28,27,4,1,64,4,0,1,60,0,0,134,29,0,0,24,55,6,0,28,64,60,0,0,30,3,0,1,60,4,0,1,64,0,0,134,31,0,0,24,55,6,0,30,60,64,0,0,32,4,0,25,33,32,19,42,64,33,0,1,60,1,0,1,59,0,0,134,34,0,0,24,55,6,0,64,60,59,0,41,59,34,24,42,59,59,24,0,35,59,0,134,59,0,0,208,39,6,0,29,31,35,0,0,36,4,0,1,60,116,3,134,59,0,0,36,53,5,0,60,36,0,0,0,38,4,0,25,39,38,24,1,59,2,0,1,60,0,0,134,40,0,0,24,55,6,0,39,59,60,0,41,60,40,16,42,60,60,16,0,41,60,0,1,60,128,0,19,60,41,60,0,42,60,0,33,43,42,0,38,60,43,1,0,44,60,0,1,60,255,0,19,60,44,60,0,45,60,0,41,60,45,24,42,60,60,24,33,46,60,0,120,46,7,0,0,50,4,0,134,60,0,0,100,97,6,0,50,0,0,0,137,58,0,0,139,0,0,0,2,59,0,0,250,208,0,0,42,59,59,0,1,64,0,0,1,62,1,0,134,60,0,0,116,78,6,0,59,64,62,0,2,62,0,0,6,209,0,0,42,62,62,0,1,64,0,0,1,59,1,0,134,60,0,0,116,78,6,0,62,64,59,0,2,60,0,0,243,208,0,0,42,60,60,0,1,59,1,0,1,64,0,0,134,47,0,0,24,55,6,0,60,59,64,0,41,64,47,24,42,64,64,24,33,49,64,0,120,49,7,0,0,50,4,0,134,64,0,0,100,97,6,0,50,0,0,0,137,58,0,0,139,0,0,0,134,64,0,0,96,111,6,0,0,50,4,0,134,64,0,0,100,97,6,0,50,0,0,0,137,58,0,0,139,0,0,0,140,0,36,0,0,0,0,0,2,30,0,0,5,209,0,0,2,31,0,0,70,52,1,0,2,32,0,0,59,52,1,0,1,28,0,0,136,33,0,0,0,29,33,0,136,33,0,0,25,33,33,80,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,216,103,4,0,135,33,0,0,25,20,29,48,25,24,29,40,25,23,29,32,25,22,29,24,25,21,29,16,25,19,29,8,0,18,29,0,1,17,0,0,42,33,30,0,1,34,1,0,1,35,0,0,134,0,0,0,24,55,6,0,33,34,35,0,41,35,0,24,42,35,35,24,33,1,35,0,120,1,6,0,2,34,0,0,0,52,1,0,134,35,0,0,112,85,6,0,34,18,0,0,2,34,0,0,5,52,1,0,134,35,0,0,112,85,6,0,34,19,0,0,42,35,30,0,1,34,1,0,1,33,0,0,134,8,0,0,24,55,6,0,35,34,33,0,41,33,8,24,42,33,33,24,33,9,33,0,120,9,6,0,2,34,0,0,15,52,1,0,134,33,0,0,112,85,6,0,34,21,0,0,2,34,0,0,45,52,1,0,134,33,0,0,144,18,6,0,34,22,0,0,134,10,0,0,24,71,6,0,0,16,10,0,0,11,16,0,41,33,11,24,42,33,33,24,0,12,33,0,1,35,27,0,1,34,37,0,138,12,35,34,248,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,0,106,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,8,106,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,12,106,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,84,105,4,0,16,106,4,0,84,105,4,0,20,106,4,0,42,33,30,0,1,34,1,0,1,35,0,0,134,13,0,0,24,55,6,0,33,34,35,0,41,35,13,24,42,35,35,24,33,14,35,0,121,14,5,0,134,35,0,0,144,18,6,0,32,24,0,0,119,0,36,0,1,34,33,0,1,33,4,0,134,35,0,0,116,78,6,0,20,34,33,0,25,25,20,4,1,33,63,0,1,34,4,0,134,35,0,0,116,78,6,0,25,33,34,0,25,26,20,8,1,34,61,0,1,33,4,0,134,35,0,0,116,78,6,0,26,34,33,0,25,27,20,12,1,33,47,0,1,34,4,0,134,35,0,0,116,78,6,0,27,33,34,0,134,35,0,0,144,18,6,0,31,20,0,0,119,0,9,0,1,28,7,0,119,0,15,0,1,17,1,0,119,0,5,0,119,0,254,255,119,0,253,255,119,0,252,255,119,0,251,255,0,15,17,0,41,35,15,24,42,35,35,24,33,2,35,0,40,35,2,1,0,3,35,0,120,3,113,255,119,0,1,0,32,35,28,7,121,35,8,0,2,34,0,0,166,51,1,0,134,35,0,0,144,18,6,0,34,23,0,0,137,29,0,0,139,0,0,0,0,4,16,0,41,35,4,24,42,35,35,24,0,5,35,0,32,6,5,42,121,6,40,0,1,34,33,0,134,35,0,0,92,167,4,0,34,0,0,0,2,34,0,0,166,51,1,0,1,33,0,0,134,35,0,0,140,159,2,0,34,33,0,0,1,33,63,0,134,35,0,0,92,167,4,0,33,0,0,0,2,33,0,0,166,51,1,0,1,34,0,0,134,35,0,0,140,159,2,0,33,34,0,0,1,34,61,0,134,35,0,0,92,167,4,0,34,0,0,0,2,34,0,0,166,51,1,0,1,33,0,0,134,35,0,0,140,159,2,0,34,33,0,0,1,33,47,0,134,35,0,0,92,167,4,0,33,0,0,0,134,35,0,0,248,238,5,0,137,29,0,0,139,0,0,0,119,0,9,0,0,7,16,0,134,35,0,0,92,167,4,0,7,0,0,0,134,35,0,0,248,238,5,0,137,29,0,0,139,0,0,0,139,0,0,0,140,0,46,0,0,0,0,0,1,40,0,0,136,42,0,0,0,41,42,0,136,42,0,0,25,42,42,64,137,42,0,0,130,42,0,0,136,43,0,0,49,42,42,43,104,107,4,0,135,42,0,0,25,35,41,40,25,38,41,32,25,37,41,24,25,36,41,16,25,34,41,8,0,33,41,0,1,42,24,107,1,43,4,0,1,44,0,0,134,0,0,0,24,55,6,0,42,43,44,0,1,44,0,0,13,1,0,44,121,1,8,0,2,43,0,0,229,31,1,0,134,44,0,0,144,18,6,0,43,33,0,0,137,41,0,0,139,0,0,0,1,44,24,107,1,43,4,0,1,42,0,0,134,12,0,0,24,55,6,0,44,43,42,0,1,42,4,0,1,43,0,0,134,23,0,0,24,55,6,0,12,42,43,0,1,43,0,0,13,25,23,43,121,25,22,0,1,43,24,107,1,42,4,0,1,44,0,0,134,26,0,0,24,55,6,0,43,42,44,0,1,44,0,0,134,27,0,0,208,181,1,0,26,44,0,0,1,42,4,0,134,44,0,0,116,78,6,0,34,27,42,0,2,42,0,0,2,32,1,0,134,44,0,0,144,18,6,0,42,34,0,0,137,41,0,0,139,0,0,0,2,44,0,0,5,209,0,0,42,44,44,0,1,42,1,0,1,43,0,0,134,28,0,0,24,55,6,0,44,42,43,0,1,43,255,0,19,43,28,43,0,29,43,0,33,30,29,0,2,43,0,0,8,32,1,0,2,42,0,0,15,32,1,0,125,2,30,43,42,0,0,0,134,42,0,0,144,18,6,0,2,36,0,0,1,43,204,2,1,44,0,0,1,45,4,0,134,42,0,0,116,78,6,0,43,44,45,0,134,3,0,0,24,71,6,0,0,31,3,0,41,42,3,24,42,42,42,24,0,4,42,0,32,5,4,27,121,5,8,0,2,45,0,0,166,51,1,0,134,42,0,0,144,18,6,0,45,37,0,0,137,41,0,0,139,0,0,0,1,42,24,107,1,45,4,0,1,44,0,0,134,6,0,0,24,55,6,0,42,45,44,0,0,32,6,0,0,7,32,0,1,44,0,0,14,8,7,44,0,9,31,0,41,44,9,24,42,44,44,24,0,10,44,0,120,8,3,0,1,40,12,0,119,0,24,0,0,11,32,0,25,13,11,28,42,44,13,0,1,45,1,0,1,42,0,0,134,14,0,0,24,55,6,0,44,45,42,0,41,42,14,24,42,42,42,24,0,15,42,0,13,16,10,15,121,16,3,0,1,40,10,0,119,0,9,0,0,21,32,0,1,42,4,0,1,45,0,0,134,22,0,0,24,55,6,0,21,42,45,0,0,32,22,0,119,0,224,255,32,45,40,10,121,45,27,0,0,17,31,0,41,45,17,24,42,45,45,24,0,18,45,0,0,19,32,0,1,45,0,0,134,20,0,0,208,181,1,0,19,45,0,0,1,42,4,0,134,45,0,0,116,78,6,0,38,18,42,0,25,39,38,4,1,42,4,0,134,45,0,0,116,78,6,0,39,20,42,0,2,42,0,0,53,32,1,0,134,45,0,0,144,18,6,0,42,38,0,0,137,41,0,0,139,0,0,0,119,0,17,0,32,45,40,12,121,45,15,0,134,24,0,0,160,236,5,0,10,0,0,0,1,42,4,0,134,45,0,0,116,78,6,0,35,24,42,0,2,42,0,0,60,32,1,0,134,45,0,0,144,18,6,0,42,35,0,0,137,41,0,0,139,0,0,0,139,0,0,0,140,3,72,0,0,0,0,0,2,68,0,0,255,0,0,0,1,66,0,0,136,69,0,0,0,67,69,0,136,69,0,0,25,69,69,48,137,69,0,0,130,69,0,0,136,70,0,0,49,69,69,70,132,110,4,0,135,69,0,0,0,4,0,0,0,15,1,0,0,26,2,0,1,62,0,0,0,37,4,0,0,48,15,0,0,56,26,0,1,69,1,0,134,57,0,0,248,112,4,0,37,69,48,56,0,64,57,0,32,58,57,0,0,59,64,0,32,5,59,255,20,69,58,5,0,63,69,0,121,63,6,0,0,6,64,0,0,3,6,0,0,55,3,0,137,67,0,0,139,55,0,0,2,60,0,0,201,52,1,0,2,61,0,0,241,52,1,0,0,7,15,0,26,8,7,1,0,15,8,0,33,9,7,0,120,9,2,0,119,0,120,0,0,10,60,0,42,69,10,0,1,70,1,0,1,71,0,0,134,11,0,0,24,55,6,0,69,70,71,0,41,71,11,24,42,71,71,24,0,12,71,0,0,13,61,0,42,71,13,0,1,70,1,0,1,69,0,0,134,14,0,0,24,55,6,0,71,70,69,0,41,69,14,24,42,69,69,24,0,16,69,0,21,69,12,16,0,17,69,0,0,18,62,0,41,69,18,24,42,69,69,24,0,19,69,0,21,69,17,19,0,20,69,0,0,21,4,0,25,22,21,1,0,4,22,0,42,69,21,0,1,70,1,0,1,71,0,0,134,23,0,0,24,55,6,0,69,70,71,0,41,71,23,24,42,71,71,24,0,24,71,0,21,71,24,20,0,25,71,0,19,71,25,68,0,27,71,0,42,70,21,0,1,69,1,0,134,71,0,0,116,78,6,0,70,27,69,0,0,28,60,0,25,29,28,1,0,60,29,0,42,71,28,0,1,69,1,0,1,70,0,0,134,30,0,0,24,55,6,0,71,69,70,0,41,70,30,24,42,70,70,24,0,31,70,0,0,65,31,0,0,32,62,0,41,70,32,24,42,70,70,24,0,33,70,0,0,34,65,0,0,35,61,0,25,36,35,1,0,61,36,0,42,70,35,0,1,69,1,0,1,71,0,0,134,38,0,0,24,55,6,0,70,69,71,0,41,71,38,24,42,71,71,24,0,39,71,0,5,40,34,39,19,71,40,68,0,41,71,0,41,71,41,24,42,71,71,24,0,42,71,0,3,43,33,42,19,71,43,68,0,44,71,0,0,62,44,0,0,45,60,0,42,71,45,0,1,69,1,0,1,70,0,0,134,46,0,0,24,55,6,0,71,69,70,0,41,70,46,24,42,70,70,24,0,47,70,0,32,49,47,0,121,49,3,0,2,60,0,0,201,52,1,0,0,50,61,0,42,70,50,0,1,69,1,0,1,71,0,0,134,51,0,0,24,55,6,0,70,69,71,0,41,71,51,24,42,71,71,24,0,52,71,0,32,53,52,0,120,53,2,0,119,0,135,255,2,61,0,0,241,52,1,0,119,0,132,255,0,54,64,0,0,3,54,0,0,55,3,0,137,67,0,0,139,55,0,0,140,4,55,0,0,0,0,0,1,50,0,0,136,52,0,0,0,51,52,0,5,6,2,1,25,7,3,76,1,52,4,0,1,53,0,0,134,18,0,0,24,55,6,0,7,52,53,0,1,53,255,255,15,29,53,18,121,29,6,0,134,39,0,0,152,111,6,0,3,0,0,0,0,31,39,0,119,0,2,0,1,31,0,0,25,40,3,74,42,53,40,0,1,52,1,0,1,54,0,0,134,41,0,0,24,55,6,0,53,52,54,0,41,54,41,24,42,54,54,24,0,42,54,0,1,54,255,0,3,43,42,54,20,54,43,42,0,44,54,0,1,54,255,0,19,54,44,54,0,8,54,0,42,52,40,0,1,53,1,0,134,54,0,0,116,78,6,0,52,8,53,0,25,9,3,8,1,54,4,0,1,53,0,0,134,10,0,0,24,55,6,0,9,54,53,0,25,11,3,4,1,53,4,0,1,54,0,0,134,12,0,0,24,55,6,0,11,53,54,0,0,13,10,0,0,14,12,0,4,15,13,14,1,54,0,0,15,16,54,15,121,16,16,0,16,17,15,6,125,4,17,15,6,0,0,0,135,54,26,0,0,12,4,0,3,19,12,4,1,53,4,0,134,54,0,0,116,78,6,0,11,19,53,0,3,20,0,4,4,21,6,4,0,45,20,0,0,47,21,0,119,0,3,0,0,45,0,0,0,47,6,0,32,22,47,0,121,22,3,0,1,50,13,0,119,0,42,0,25,23,3,32,0,46,45,0,0,48,47,0,134,24,0,0,204,106,5,0,3,0,0,0,32,25,24,0,120,25,3,0,0,49,48,0,119,0,22,0,1,54,4,0,1,53,0,0,134,26,0,0,24,55,6,0,23,54,53,0,135,27,49,0,26,3,46,48,25,28,27,1,35,30,28,2,121,30,3,0,0,49,48,0,119,0,10,0,4,35,48,27,3,36,46,27,13,37,48,27,121,37,3,0,1,50,13,0,119,0,14,0,0,46,36,0,0,48,35,0,119,0,229,255,32,32,31,0,120,32,4,0,134,53,0,0,128,111,6,0,3,0,0,0,4,33,6,49,7,53,33,1,38,53,53,255,0,34,53,0,0,5,34,0,32,53,50,13,121,53,9,0,32,38,31,0,121,38,3,0,0,5,2,0,119,0,5,0,134,53,0,0,128,111,6,0,3,0,0,0,0,5,2,0,139,5,0,0,140,2,62,0,0,0,0,0,1,56,0,0,136,59,0,0,0,57,59,0,136,59,0,0,25,59,59,32,137,59,0,0,130,59,0,0,136,60,0,0,49,59,59,60,68,115,4,0,135,59,0,0,25,49,57,12,0,3,0,0,0,14,1,0,1,52,0,0,1,54,0,0,1,50,0,0,2,59,0,0,80,159,0,0,1,60,4,0,1,61,0,0,134,25,0,0,24,55,6,0,59,60,61,0,33,36,25,0,2,61,0,0,84,159,0,0,1,60,4,0,1,59,0,0,134,44,0,0,24,55,6,0,61,60,59,0,33,45,44,0,20,59,36,45,0,53,59,0,121,53,26,0,2,59,0,0,84,159,0,0,1,60,4,0,1,61,0,0,134,46,0,0,24,55,6,0,59,60,61,0,33,47,46,0,2,61,0,0,80,159,0,0,1,60,4,0,1,59,0,0,134,48,0,0,24,55,6,0,61,60,59,0,33,4,48,0,1,59,1,0,125,5,47,59,4,0,0,0,38,59,5,1,0,6,59,0,0,2,6,0,0,43,2,0,137,57,0,0,139,43,0,0,0,7,3,0,2,60,0,0,7,0,205,171,134,59,0,0,4,110,5,0,7,60,0,0,0,8,3,0,134,59,0,0,100,182,4,0,8,49,0,0,1,51,0,0,0,9,51,0,1,59,4,0,1,60,0,0,134,10,0,0,24,55,6,0,49,59,60,0,15,11,9,10,120,11,2,0,119,0,49,0,134,12,0,0,56,80,6,0,0,52,12,0,0,13,52,0,0,55,13,0,25,58,55,80,1,59,0,0,1,61,4,0,134,60,0,0,116,78,6,0,55,59,61,0,25,55,55,4,54,60,55,58,116,116,4,0,0,15,54,0,0,16,52,0,25,17,16,4,1,61,4,0,134,60,0,0,116,78,6,0,17,15,61,0,0,18,54,0,1,60,0,0,14,19,18,60,121,19,7,0,0,20,52,0,0,21,54,0,1,61,4,0,134,60,0,0,116,78,6,0,21,20,61,0,0,22,3,0,0,23,52,0,134,60,0,0,208,92,4,0,22,23,0,0,0,24,54,0,1,60,0,0,13,26,24,60,121,26,3,0,0,27,52,0,0,50,27,0,0,28,52,0,0,54,28,0,0,29,51,0,25,30,29,1,0,51,30,0,119,0,200,255,0,31,52,0,1,60,0,0,14,32,31,60,121,32,7,0,0,33,52,0,1,61,0,0,1,59,4,0,134,60,0,0,116,78,6,0,33,61,59,0,0,34,50,0,0,35,14,0,1,59,4,0,134,60,0,0,116,78,6,0,35,34,59,0,2,60,0,0,84,159,0,0,1,59,4,0,1,61,0,0,134,37,0,0,24,55,6,0,60,59,61,0,33,38,37,0,2,61,0,0,80,159,0,0,1,59,4,0,1,60,0,0,134,39,0,0,24,55,6,0,61,59,60,0,33,40,39,0,1,60,1,0,125,41,38,60,40,0,0,0,38,60,41,1,0,42,60,0,0,2,42,0,0,43,2,0,137,57,0,0,139,43,0,0,140,3,49,0,0,0,0,0,1,44,0,0,136,46,0,0,0,45,46,0,25,8,2,16,1,46,4,0,1,47,0,0,134,9,0,0,24,55,6,0,8,46,47,0,1,47,0,0,13,20,9,47,121,20,16,0,134,31,0,0,12,202,5,0,2,0,0,0,32,35,31,0,121,35,9,0,1,47,4,0,1,46,0,0,134,6,0,0,24,55,6,0,8,47,46,0,0,38,6,0,1,44,4,0,119,0,5,0,1,3,0,0,119,0,3,0,0,38,9,0,1,44,4,0,32,46,44,4,121,46,100,0,25,36,2,20,1,46,4,0,1,47,0,0,134,37,0,0,24,55,6,0,36,46,47,0,0,39,38,0,0,40,37,0,4,10,39,40,16,11,10,1,121,11,11,0,25,12,2,36,1,47,4,0,1,46,0,0,134,13,0,0,24,55,6,0,12,47,46,0,135,14,49,0,13,2,0,1,0,3,14,0,119,0,79,0,25,15,2,75,42,46,15,0,1,47,1,0,1,48,0,0,134,16,0,0,24,55,6,0,46,47,48,0,1,48,255,255,41,47,16,24,42,47,47,24,15,17,48,47,121,17,49,0,0,41,1,0,32,18,41,0,121,18,6,0,0,4,1,0,0,5,0,0,0,30,37,0,1,43,0,0,119,0,45,0,26,19,41,1,3,21,0,19,42,47,21,0,1,48,1,0,1,46,0,0,134,22,0,0,24,55,6,0,47,48,46,0,41,46,22,24,42,46,46,24,32,23,46,10,121,23,3,0,0,42,41,0,119,0,3,0,0,41,19,0,119,0,234,255,25,24,2,36,1,46,4,0,1,48,0,0,134,25,0,0,24,55,6,0,24,46,48,0,135,26,49,0,25,2,0,42,16,27,26,42,121,27,3,0,0,3,42,0,119,0,31,0,3,28,0,42,4,29,1,42,1,48,4,0,1,46,0,0,134,7,0,0,24,55,6,0,36,48,46,0,0,4,29,0,0,5,28,0,0,30,7,0,0,43,42,0,119,0,5,0,0,4,1,0,0,5,0,0,0,30,37,0,1,43,0,0,135,46,26,0,30,5,4,0,1,46,4,0,1,48,0,0,134,32,0,0,24,55,6,0,36,46,48,0,3,33,32,4,1,46,4,0,134,48,0,0,116,78,6,0,36,33,46,0,3,34,43,4,0,3,34,0,139,3,0,0,140,1,58,0,0,0,0,0,1,53,0,0,136,55,0,0,0,54,55,0,136,55,0,0,25,55,55,16,137,55,0,0,130,55,0,0,136,56,0,0,49,55,55,56,8,120,4,0,135,55,0,0,0,1,0,0,1,50,0,0,1,55,116,3,1,56,4,0,1,57,0,0,134,2,0,0,24,55,6,0,55,56,57,0,0,52,2,0,0,13,52,0,1,57,0,0,14,24,13,57,120,24,2,0,119,0,118,0,0,35,52,0,25,45,35,8,25,46,45,4,1,57,4,0,1,56,0,0,134,47,0,0,24,55,6,0,46,57,56,0,0,48,52,0,25,49,48,8,1,56,4,0,1,57,0,0,134,3,0,0,24,55,6,0,49,56,57,0,134,57,0,0,124,108,5,0,47,3,0,0,0,4,52,0,134,5,0,0,24,227,3,0,4,0,0,0,0,51,5,0,0,6,1,0,41,57,6,24,42,57,57,24,33,7,57,0,0,8,51,0,41,57,8,24,42,57,57,24,33,9,57,0,121,7,17,0,120,9,77,0,0,10,52,0,25,11,10,19,42,57,11,0,1,56,1,0,1,55,0,0,134,12,0,0,24,55,6,0,57,56,55,0,41,55,12,24,42,55,55,24,0,14,55,0,134,55,0,0,172,88,6,0,14,0,0,0,119,0,62,0,120,9,3,0,134,55,0,0,116,105,6,0,1,55,232,106,1,56,2,0,1,57,0,0,134,15,0,0,24,55,6,0,55,56,57,0,41,57,15,16,42,57,57,16,0,16,57,0,1,57,0,8,19,57,16,57,0,17,57,0,33,18,17,0,38,57,18,1,0,19,57,0,1,57,255,0,19,57,19,57,0,20,57,0,41,57,20,24,42,57,57,24,33,21,57,0,121,21,10,0,1,57,26,0,134,27,0,0,20,36,6,0,57,0,0,0,25,28,27,65,134,57,0,0,172,88,6,0,28,0,0,0,119,0,15,0,0,22,52,0,25,23,22,17,42,57,23,0,1,56,1,0,1,55,0,0,134,25,0,0,24,55,6,0,57,56,55,0,41,55,25,24,42,55,55,24,0,26,55,0,134,55,0,0,172,88,6,0,26,0,0,0,0,29,51,0,41,55,29,24,42,55,55,24,33,30,55,0,120,30,9,0,134,55,0,0,92,106,6,0,0,31,50,0,25,55,31,1,41,55,55,24,42,55,55,24,0,32,55,0,0,50,32,0,0,33,52,0,1,55,4,0,1,56,0,0,134,34,0,0,24,55,6,0,33,55,56,0,0,52,34,0,119,0,135,255,0,36,1,0,41,56,36,24,42,56,56,24,33,37,56,0,1,56,232,106,1,55,2,0,1,57,0,0,134,38,0,0,24,55,6,0,56,55,57,0,41,57,38,16,42,57,57,16,0,39,57,0,121,37,17,0,1,57,255,191,19,57,39,57,0,40,57,0,2,57,0,0,255,255,0,0,19,57,40,57,0,41,57,0,1,55,232,106,1,56,2,0,134,57,0,0,116,78,6,0,55,41,56,0,0,44,50,0,137,54,0,0,139,44,0,0,119,0,16,0,1,57,0,64,20,57,39,57,0,42,57,0,2,57,0,0,255,255,0,0,19,57,42,57,0,43,57,0,1,56,232,106,1,55,2,0,134,57,0,0,116,78,6,0,56,43,55,0,0,44,50,0,137,54,0,0,139,44,0,0,1,57,0,0,139,57,0,0,140,0,43,0,0,0,0,0,2,38,0,0,240,106,0,0,1,36,0,0,136,39,0,0,0,37,39,0,136,39,0,0,25,39,39,48,137,39,0,0,130,39,0,0,136,40,0,0,49,39,39,40,12,123,4,0,135,39,0,0,25,35,37,32,25,34,37,24,25,33,37,16,25,32,37,8,0,31,37,0,2,39,0,0,224,16,1,0,1,40,58,0,134,1,0,0,52,196,3,0,39,40,0,0,0,30,1,0,1,40,0,0,13,2,1,40,121,2,3,0,137,37,0,0,139,0,0,0,0,13,30,0,25,23,13,8,1,40,4,0,1,39,0,0,134,24,0,0,24,55,6,0,23,40,39,0,33,25,24,58,121,25,28,0,2,39,0,0,5,209,0,0,42,39,39,0,1,40,1,0,1,41,0,0,134,26,0,0,24,55,6,0,39,40,41,0,41,41,26,24,42,41,41,24,33,27,41,0,121,27,9,0,2,40,0,0,11,17,1,0,134,41,0,0,144,18,6,0,40,32,0,0,137,37,0,0,139,0,0,0,119,0,8,0,2,40,0,0,228,16,1,0,134,41,0,0,144,18,6,0,40,31,0,0,137,37,0,0,139,0,0,0,1,41,156,26,1,40,4,0,1,39,0,0,134,28,0,0,24,55,6,0,41,40,39,0,34,29,28,0,121,29,7,0,1,40,156,26,1,41,0,0,1,42,4,0,134,39,0,0,116,78,6,0,40,41,42,0,1,39,144,1,134,3,0,0,20,36,6,0,39,0,0,0,1,39,76,4,3,4,39,3,1,39,156,26,1,42,4,0,1,41,0,0,134,5,0,0,24,55,6,0,39,42,41,0,3,6,5,4,1,42,156,26,1,39,4,0,134,41,0,0,116,78,6,0,42,6,39,0,1,41,208,7,15,7,41,6,1,41,208,7,125,0,7,41,6,0,0,0,1,39,156,26,1,42,4,0,134,41,0,0,116,78,6,0,39,0,42,0,1,42,188,2,1,39,0,0,1,40,4,0,134,41,0,0,116,78,6,0,42,39,40,0,0,8,30,0,1,41,204,106,1,40,4,0,1,39,0,0,134,9,0,0,24,55,6,0,41,40,39,0,13,10,8,9,121,10,7,0,1,40,204,106,1,41,0,0,1,42,4,0,134,39,0,0,116,78,6,0,40,41,42,0,0,11,30,0,25,12,11,52,1,39,4,0,1,42,0,0,134,14,0,0,24,55,6,0,12,39,42,0,32,15,14,1,121,15,13,0,2,39,0,0,34,209,0,0,1,41,4,0,134,42,0,0,116,78,6,0,33,39,41,0,2,41,0,0,28,17,1,0,134,42,0,0,144,18,6,0,41,33,0,0,119,0,54,0,1,42,100,0,134,16,0,0,20,36,6,0,42,0,0,0,1,42,70,0,15,17,42,16,121,17,30,0,1,42,4,0,1,41,0,0,134,18,0,0,24,55,6,0,38,42,41,0,25,19,18,1,1,42,4,0,134,41,0,0,116,78,6,0,38,19,42,0,2,41,0,0,52,17,1,0,2,42,0,0,59,17,1,0,134,20,0,0,224,49,6,0,41,42,0,0,1,41,4,0,134,42,0,0,116,78,6,0,34,20,41,0,2,41,0,0,63,17,1,0,134,42,0,0,144,18,6,0,41,34,0,0,134,42,0,0,0,55,5,0,119,0,18,0,2,42,0,0,90,17,1,0,2,41,0,0,98,17,1,0,134,21,0,0,224,49,6,0,42,41,0,0,1,42,4,0,134,41,0,0,116,78,6,0,35,21,42,0,2,42,0,0,102,17,1,0,134,41,0,0,144,18,6,0,42,35,0,0,119,0,1,0,0,22,30,0,1,42,0,0,1,39,0,0,134,41,0,0,176,164,4,0,22,42,39,0,137,37,0,0,139,0,0,0,140,1,51,0,0,0,0,0,2,46,0,0,200,106,0,0,2,47,0,0,196,106,0,0,1,44,0,0,136,48,0,0,0,45,48,0,136,48,0,0,25,48,48,32,137,48,0,0,130,48,0,0,136,49,0,0,49,48,48,49,104,126,4,0,135,48,0,0,25,43,45,16,25,42,45,8,0,41,45,0,0,1,0,0,0,2,1,0,1,48,0,0,13,13,2,48,121,13,3,0,137,45,0,0,139,0,0,0,0,24,1,0,25,35,24,8,1,48,4,0,1,49,0,0,134,36,0,0,24,55,6,0,35,48,49,0,33,37,36,93,121,37,3,0,137,45,0,0,139,0,0,0,0,38,1,0,25,39,38,52,1,49,4,0,1,48,0,0,134,40,0,0,24,55,6,0,39,49,48,0,32,3,40,0,121,3,3,0,137,45,0,0,139,0,0,0,0,4,1,0,25,5,4,64,1,48,4,0,1,49,0,0,134,6,0,0,24,55,6,0,5,48,49,0,1,49,9,0,17,7,49,6,121,7,3,0,137,45,0,0,139,0,0,0,0,8,1,0,25,9,8,68,1,49,4,0,1,48,0,0,134,10,0,0,24,55,6,0,9,49,48,0,38,48,10,32,0,11,48,0,33,12,11,0,120,12,82,0,1,48,4,0,1,49,0,0,134,14,0,0,24,55,6,0,47,48,49,0,1,49,0,0,14,15,14,49,121,15,14,0,1,49,4,0,1,48,0,0,134,16,0,0,24,55,6,0,47,49,48,0,25,17,16,52,1,48,4,0,1,49,0,0,134,18,0,0,24,55,6,0,17,48,49,0,32,19,18,13,120,19,61,0,1,49,4,0,1,48,0,0,134,20,0,0,24,55,6,0,46,49,48,0,1,48,0,0,14,21,20,48,121,21,14,0,1,48,4,0,1,49,0,0,134,22,0,0,24,55,6,0,46,48,49,0,25,23,22,52,1,49,4,0,1,48,0,0,134,25,0,0,24,55,6,0,23,49,48,0,32,26,25,13,120,26,40,0,0,29,1,0,25,30,29,64,1,48,4,0,1,49,0,0,134,31,0,0,24,55,6,0,30,48,49,0,25,32,31,1,1,48,4,0,134,49,0,0,116,78,6,0,30,32,48,0,2,49,0,0,5,209,0,0,42,49,49,0,1,48,1,0,1,50,0,0,134,33,0,0,24,55,6,0,49,48,50,0,41,50,33,24,42,50,50,24,33,34,50,0,121,34,9,0,2,48,0,0,166,21,1,0,134,50,0,0,144,18,6,0,48,43,0,0,137,45,0,0,139,0,0,0,119,0,8,0,2,48,0,0,122,21,1,0,134,50,0,0,144,18,6,0,48,42,0,0,137,45,0,0,139,0,0,0,2,50,0,0,6,209,0,0,42,50,50,0,1,48,1,0,1,49,0,0,134,27,0,0,24,55,6,0,50,48,49,0,41,49,27,24,42,49,49,24,33,28,49,0,121,28,3,0,137,45,0,0,139,0,0,0,2,48,0,0,94,21,1,0,134,49,0,0,144,18,6,0,48,41,0,0,137,45,0,0,139,0,0,0,140,0,57,0,0,0,0,0,2,50,0,0,88,1,1,0,2,51,0,0,121,1,1,0,2,52,0,0,80,26,0,0,1,48,0,0,136,53,0,0,0,49,53,0,136,53,0,0,25,53,53,16,137,53,0,0,130,53,0,0,136,54,0,0,49,53,53,54,40,129,4,0,135,53,0,0,1,45,0,0,0,0,45,0,35,1,0,33,120,1,2,0,119,0,13,0,0,12,45,0,3,23,50,12,42,54,23,0,1,55,0,0,1,56,1,0,134,53,0,0,116,78,6,0,54,55,56,0,0,34,45,0,25,40,34,1,0,45,40,0,119,0,241,255,1,45,0,0,0,41,45,0,35,42,41,22,120,42,2,0,119,0,13,0,0,43,45,0,3,44,51,43,42,56,44,0,1,55,0,0,1,54,1,0,134,53,0,0,116,78,6,0,56,55,54,0,0,2,45,0,25,3,2,1,0,45,3,0,119,0,241,255,1,45,0,0,0,4,45,0,34,5,4,14,120,5,2,0,119,0,119,0,1,53,2,0,134,6,0,0,20,36,6,0,53,0,0,0,32,7,6,0,121,7,20,0,1,53,22,0,134,8,0,0,20,36,6,0,53,0,0,0,0,46,8,0,0,9,46,0,3,10,51,9,42,53,10,0,1,54,1,0,1,55,0,0,134,11,0,0,24,55,6,0,53,54,55,0,41,55,11,24,42,55,55,24,33,13,55,0,120,13,234,255,1,48,11,0,119,0,20,0,1,55,33,0,134,21,0,0,20,36,6,0,55,0,0,0,0,46,21,0,0,22,46,0,3,24,50,22,42,55,24,0,1,54,1,0,1,53,0,0,134,25,0,0,24,55,6,0,55,54,53,0,41,53,25,24,42,53,53,24,33,26,53,0,120,26,215,255,1,48,13,0,119,0,1,0,32,53,48,11,121,53,30,0,1,48,0,0,0,14,45,0,41,53,14,2,3,15,52,53,2,54,0,0,172,48,1,0,1,55,4,0,134,53,0,0,116,78,6,0,15,54,55,0,0,16,46,0,1,53,212,114,41,55,16,2,3,17,53,55,1,55,4,0,1,53,0,0,134,18,0,0,24,55,6,0,17,55,53,0,0,47,18,0,0,19,46,0,3,20,51,19,42,55,20,0,1,54,1,0,1,56,1,0,134,53,0,0,116,78,6,0,55,54,56,0,119,0,31,0,32,53,48,13,121,53,29,0,1,48,0,0,0,27,45,0,41,53,27,2,3,28,52,53,2,56,0,0,177,48,1,0,1,54,4,0,134,53,0,0,116,78,6,0,28,56,54,0,0,29,46,0,1,53,76,114,41,54,29,2,3,30,53,54,1,54,4,0,1,53,0,0,134,31,0,0,24,55,6,0,30,54,53,0,0,47,31,0,0,32,46,0,3,33,50,32,42,54,33,0,1,56,1,0,1,55,1,0,134,53,0,0,116,78,6,0,54,56,55,0,0,35,47,0,0,36,45,0,1,53,24,26,41,55,36,2,3,37,53,55,1,53,4,0,134,55,0,0,116,78,6,0,37,35,53,0,0,38,45,0,25,39,38,1,0,45,39,0,119,0,135,255,137,49,0,0,139,0,0,0,140,2,46,0,0,0,0,0,1,41,0,0,136,43,0,0,0,42,43,0,136,43,0,0,25,43,43,32,137,43,0,0,130,43,0,0,136,44,0,0,49,43,43,44,216,131,4,0,135,43,0,0,0,40,42,0,0,3,0,0,0,14,1,0,0,25,3,0,0,36,25,0,1,37,1,0,0,30,14,0,134,31,0,0,76,79,6,0,30,0,0,0,0,39,31,0,0,32,14,0,134,33,0,0,168,75,6,0,32,0,0,0,0,38,33,0,0,34,14,0,0,35,36,0,1,43,4,0,1,44,0,0,134,4,0,0,24,55,6,0,35,43,44,0,1,44,144,2,41,43,4,2,3,5,44,43,1,43,4,0,1,44,0,0,134,6,0,0,24,55,6,0,5,43,44,0,134,44,0,0,144,86,6,0,34,6,0,0,0,7,37,0,41,44,7,24,42,44,44,24,33,8,44,0,0,9,14,0,0,10,39,0,0,11,38,0,120,8,3,0,1,41,11,0,119,0,170,0,134,44,0,0,164,140,5,0,9,10,11,0,0,12,14,0,134,44,0,0,124,212,4,0,12,0,0,0,134,13,0,0,24,71,6,0,41,44,13,24,42,44,44,24,0,15,44,0,1,44,10,0,1,45,106,0,138,15,44,45,164,134,4,0,108,134,4,0,108,134,4,0,172,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,176,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,184,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,192,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,196,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,200,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,204,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,236,134,4,0,108,134,4,0,108,134,4,0,108,134,4,0,12,135,4,0,0,19,14,0,0,20,39,0,0,21,38,0,25,22,21,15,134,44,0,0,164,140,5,0,19,20,22,0,0,23,14,0,2,45,0,0,205,21,1,0,134,44,0,0,144,86,6,0,23,45,0,0,119,0,112,255,1,37,0,0,119,0,110,255,119,0,254,255,1,41,8,0,119,0,30,0,1,41,9,0,119,0,28,0,119,0,3,0,119,0,10,0,119,0,17,0,0,18,36,0,1,43,2,0,1,45,4,0,134,44,0,0,116,78,6,0,18,43,45,0,1,37,0,0,119,0,94,255,0,16,36,0,1,43,0,0,1,45,4,0,134,44,0,0,116,78,6,0,16,43,45,0,1,37,0,0,119,0,86,255,0,17,36,0,1,45,1,0,1,43,4,0,134,44,0,0,116,78,6,0,17,45,43,0,1,37,0,0,119,0,78,255,32,44,41,8,121,44,6,0,1,2,1,0,0,29,2,0,137,42,0,0,139,29,0,0,119,0,38,0,32,44,41,9,121,44,6,0,1,2,2,0,0,29,2,0,137,42,0,0,139,29,0,0,119,0,31,0,32,44,41,11,121,44,29,0,0,24,36,0,1,44,4,0,1,45,0,0,134,26,0,0,24,55,6,0,24,44,45,0,1,45,144,2,41,44,26,2,3,27,45,44,1,44,4,0,1,45,0,0,134,28,0,0,24,55,6,0,27,44,45,0,1,44,4,0,134,45,0,0,116,78,6,0,40,28,44,0,2,44,0,0,218,21,1,0,134,45,0,0,48,255,5,0,9,10,11,44,40,0,0,0,1,2,0,0,0,29,2,0,137,42,0,0,139,29,0,0,1,45,0,0,139,45,0,0,140,2,67,0,0,0,0,0,2,62,0,0,216,106,0,0,2,63,0,0,220,106,0,0,1,60,0,0], eb + 286720);
  HEAPU8.set([136,64,0,0,0,61,64,0,136,64,0,0,25,64,64,32,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,40,136,4,0,135,64,0,0,0,2,0,0,0,3,1,0,2,64,0,0,3,209,0,0,42,64,64,0,1,65,1,0,1,66,0,0,134,14,0,0,24,55,6,0,64,65,66,0,1,66,255,0,19,66,14,66,0,25,66,0,33,36,25,0,120,36,3,0,137,61,0,0,139,0,0,0,0,47,3,0,25,51,47,28,1,66,2,0,1,65,0,0,134,52,0,0,24,55,6,0,51,66,65,0,41,65,52,16,42,65,65,16,0,53,65,0,38,65,53,3,0,54,65,0,32,4,54,1,120,4,3,0,137,61,0,0,139,0,0,0,1,65,232,106,1,66,2,0,1,64,0,0,134,5,0,0,24,55,6,0,65,66,64,0,41,64,5,16,42,64,64,16,0,6,64,0,38,64,6,4,0,7,64,0,33,8,7,0,38,64,8,1,0,9,64,0,1,64,255,0,19,64,9,64,0,10,64,0,41,64,10,24,42,64,64,24,33,11,64,0,121,11,3,0,137,61,0,0,139,0,0,0,0,12,2,0,25,13,12,4,1,64,4,0,1,66,0,0,134,15,0,0,24,55,6,0,13,64,66,0,25,16,15,1,0,56,16,0,0,17,2,0,1,66,4,0,1,64,0,0,134,18,0,0,24,55,6,0,17,66,64,0,25,19,18,1,0,55,19,0,0,20,2,0,25,21,20,4,1,64,4,0,1,66,0,0,134,22,0,0,24,55,6,0,21,64,66,0,26,23,22,1,0,57,23,0,0,24,2,0,1,66,4,0,1,64,0,0,134,26,0,0,24,55,6,0,24,66,64,0,26,27,26,1,0,58,27,0,0,28,58,0,0,29,55,0,17,30,28,29,120,30,2,0,119,0,51,0,0,31,57,0,0,59,31,0,0,32,59,0,0,33,56,0,17,34,32,33,120,34,2,0,119,0,40,0,0,35,59,0,1,64,4,0,1,66,0,0,134,37,0,0,24,55,6,0,63,64,66,0,13,38,35,37,121,38,11,0,0,39,58,0,1,66,4,0,1,64,0,0,134,40,0,0,24,55,6,0,62,66,64,0,13,41,39,40,120,41,4,0,1,60,10,0,119,0,2,0,1,60,10,0,32,64,60,10,121,64,15,0,1,60,0,0,0,42,59,0,0,43,58,0,134,64,0,0,124,108,5,0,42,43,0,0,134,44,0,0,96,107,6,0,32,45,44,46,121,45,5,0,1,66,32,0,134,64,0,0,172,88,6,0,66,0,0,0,0,46,59,0,25,48,46,1,0,59,48,0,119,0,213,255,0,49,58,0,25,50,49,1,0,58,50,0,119,0,202,255,137,61,0,0,139,0,0,0,140,0,52,0,0,0,0,0,2,47,0,0,252,106,0,0,1,45,0,0,136,48,0,0,0,46,48,0,136,48,0,0,25,48,48,16,137,48,0,0,130,48,0,0,136,49,0,0,49,48,48,49,176,138,4,0,135,48,0,0,1,48,244,106,1,49,4,0,1,50,0,0,134,0,0,0,24,55,6,0,48,49,50,0,0,43,0,0,1,50,4,0,1,49,0,0,134,1,0,0,24,55,6,0,47,50,49,0,0,44,1,0,1,49,12,3,1,50,4,0,1,48,0,0,134,12,0,0,24,55,6,0,49,50,48,0,25,23,12,1,1,50,12,3,1,49,4,0,134,48,0,0,116,78,6,0,50,23,49,0,0,34,43,0,34,38,34,8,1,48,12,3,1,49,4,0,1,50,0,0,134,39,0,0,24,55,6,0,48,49,50,0,121,38,19,0,0,40,43,0,41,50,40,1,0,41,50,0,3,42,39,41,1,50,20,0,15,2,50,42,121,2,31,0,1,50,4,0,1,49,0,0,134,3,0,0,24,55,6,0,47,50,49,0,25,4,3,1,1,50,4,0,134,49,0,0,116,78,6,0,47,4,50,0,119,0,20,0,1,49,3,0,17,5,49,39,121,5,17,0,0,6,43,0,26,7,6,7,134,8,0,0,20,36,6,0,7,0,0,0,25,9,8,1,1,49,4,0,1,50,0,0,134,10,0,0,24,55,6,0,47,49,50,0,3,11,10,9,1,49,4,0,134,50,0,0,116,78,6,0,47,11,49,0,1,50,196,106,1,49,4,0,1,48,0,0,134,13,0,0,24,55,6,0,50,49,48,0,1,48,0,0,14,14,13,48,121,14,25,0,1,48,196,106,1,49,4,0,1,50,0,0,134,15,0,0,24,55,6,0,48,49,50,0,25,16,15,52,1,50,4,0,1,49,0,0,134,17,0,0,24,55,6,0,16,50,49,0,32,18,17,9,121,18,11,0,1,49,4,0,1,50,0,0,134,19,0,0,24,55,6,0,47,49,50,0,25,20,19,1,1,49,4,0,134,50,0,0,116,78,6,0,47,20,49,0,1,50,200,106,1,49,4,0,1,48,0,0,134,21,0,0,24,55,6,0,50,49,48,0,1,48,0,0,14,22,21,48,121,22,25,0,1,48,200,106,1,49,4,0,1,50,0,0,134,24,0,0,24,55,6,0,48,49,50,0,25,25,24,52,1,50,4,0,1,49,0,0,134,26,0,0,24,55,6,0,25,50,49,0,32,27,26,9,121,27,11,0,1,49,4,0,1,50,0,0,134,28,0,0,24,55,6,0,47,49,50,0,25,29,28,1,1,49,4,0,134,50,0,0,116,78,6,0,47,29,49,0,0,30,44,0,1,50,4,0,1,49,0,0,134,31,0,0,24,55,6,0,47,50,49,0,14,32,30,31,120,32,3,0,137,46,0,0,139,0,0,0,1,49,4,0,1,50,0,0,134,33,0,0,24,55,6,0,47,49,50,0,1,50,16,107,1,49,4,0,1,48,0,0,134,35,0,0,24,55,6,0,50,49,48,0,15,36,35,33,121,36,11,0,1,48,16,107,1,49,4,0,1,50,0,0,134,37,0,0,24,55,6,0,48,49,50,0,1,49,4,0,134,50,0,0,116,78,6,0,47,37,49,0,1,49,12,3,1,48,0,0,1,51,4,0,134,50,0,0,116,78,6,0,49,48,51,0,137,46,0,0,139,0,0,0,140,1,50,0,0,0,0,0,2,44,0,0,196,106,0,0,2,45,0,0,192,106,0,0,1,42,0,0,136,46,0,0,0,43,46,0,136,46,0,0,25,46,46,16,137,46,0,0,130,46,0,0,136,47,0,0,49,46,46,47,188,141,4,0,135,46,0,0,0,41,43,0,0,2,0,0,0,13,2,0,1,46,0,0,13,24,13,46,121,24,5,0,1,1,1,0,0,34,1,0,137,43,0,0,139,34,0,0,0,35,2,0,1,46,4,0,1,47,0,0,134,36,0,0,24,55,6,0,45,46,47,0,14,37,35,36,121,37,31,0,0,38,2,0,1,47,204,106,1,46,4,0,1,48,0,0,134,39,0,0,24,55,6,0,47,46,48,0,14,40,38,39,121,40,22,0,0,3,2,0,1,48,4,0,1,46,0,0,134,4,0,0,24,55,6,0,44,48,46,0,14,5,3,4,121,5,14,0,0,6,2,0,1,46,200,106,1,48,4,0,1,47,0,0,134,7,0,0,24,55,6,0,46,48,47,0,14,8,6,7,121,8,5,0,1,1,1,0,0,34,1,0,137,43,0,0,139,34,0,0,0,9,2,0,25,10,9,68,1,47,4,0,1,48,0,0,134,11,0,0,24,55,6,0,10,47,48,0,38,48,11,1,0,12,48,0,33,14,12,0,121,14,10,0,2,47,0,0,216,51,1,0,134,48,0,0,144,18,6,0,47,41,0,0,1,1,0,0,0,34,1,0,137,43,0,0,139,34,0,0,0,15,2,0,1,48,204,106,1,47,4,0,1,46,0,0,134,16,0,0,24,55,6,0,48,47,46,0,13,17,15,16,121,17,8,0,1,47,204,106,1,48,0,0,1,49,4,0,134,46,0,0,116,78,6,0,47,48,49,0,119,0,70,0,0,18,2,0,1,46,4,0,1,49,0,0,134,19,0,0,24,55,6,0,45,46,49,0,13,20,18,19,121,20,9,0,134,49,0,0,52,95,6,0,1,46,0,0,1,48,4,0,134,49,0,0,116,78,6,0,45,46,48,0,119,0,54,0,0,21,2,0,1,49,4,0,1,48,0,0,134,22,0,0,24,55,6,0,44,49,48,0,13,23,21,22,1,48,0,0,1,49,1,0,125,25,23,48,49,0,0,0,41,49,25,2,3,26,44,49,1,48,0,0,1,46,4,0,134,49,0,0,116,78,6,0,26,48,46,0,0,27,2,0,25,28,27,52,1,49,4,0,1,46,0,0,134,29,0,0,24,55,6,0,28,49,46,0,1,49,1,0,1,46,4,0,138,29,49,46,208,143,4,0,204,143,4,0,204,143,4,0,4,144,4,0,119,0,21,0,0,30,2,0,25,31,30,64,1,46,4,0,1,49,0,0,134,32,0,0,24,55,6,0,31,46,49,0,1,49,0,0,4,33,49,32,134,49,0,0,20,25,5,0,33,0,0,0,119,0,8,0,134,49,0,0,152,65,5,0,1,46,10,0,134,49,0,0,184,73,6,0,46,0,0,0,119,0,1,0,1,1,1,0,0,34,1,0,137,43,0,0,139,34,0,0,140,2,67,0,0,0,0,0,2,61,0,0,220,106,0,0,2,62,0,0,216,106,0,0,2,63,0,0,192,26,0,0,1,59,0,0,136,64,0,0,0,60,64,0,136,64,0,0,25,64,64,32,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,124,144,4,0,135,64,0,0,0,2,0,0,0,3,1,0,1,55,0,0,0,14,2,0,25,25,14,4,1,64,4,0,1,65,0,0,134,36,0,0,24,55,6,0,25,64,65,0,26,47,36,1,0,58,47,0,0,50,58,0,0,51,2,0,25,52,51,4,1,65,4,0,1,64,0,0,134,53,0,0,24,55,6,0,52,65,64,0,25,4,53,1,17,5,50,4,120,5,2,0,119,0,93,0,0,6,2,0,1,64,4,0,1,65,0,0,134,7,0,0,24,55,6,0,6,64,65,0,26,8,7,1,0,57,8,0,0,9,57,0,0,10,2,0,1,65,4,0,1,64,0,0,134,11,0,0,24,55,6,0,10,65,64,0,25,12,11,1,17,13,9,12,0,15,58,0,120,13,2,0,119,0,70,0,1,64,4,0,1,65,0,0,134,16,0,0,24,55,6,0,61,64,65,0,13,17,15,16,121,17,11,0,0,18,57,0,1,65,4,0,1,64,0,0,134,19,0,0,24,55,6,0,62,65,64,0,13,20,18,19,120,20,4,0,1,59,7,0,119,0,2,0,1,59,7,0,32,64,59,7,121,64,46,0,1,59,0,0,0,21,57,0,41,64,21,5,0,22,64,0,0,23,58,0,3,24,22,23,41,64,24,3,3,26,63,64,42,64,26,0,1,65,1,0,1,66,0,0,134,27,0,0,24,55,6,0,64,65,66,0,41,66,27,24,42,66,66,24,0,28,66,0,0,54,28,0,32,29,28,46,0,30,54,0,32,31,30,35,20,66,29,31,0,56,66,0,121,56,22,0,0,32,55,0,25,33,32,1,0,55,33,0,134,34,0,0,20,36,6,0,33,0,0,0,32,35,34,0,121,35,14,0,0,37,58,0,0,38,3,0,25,39,38,4,1,65,4,0,134,66,0,0,116,78,6,0,39,37,65,0,0,40,57,0,0,41,3,0,1,65,4,0,134,66,0,0,116,78,6,0,41,40,65,0,0,42,57,0,25,43,42,1,0,57,43,0,119,0,176,255,25,44,15,1,0,58,44,0,119,0,153,255,0,45,55,0,33,46,45,0,38,66,46,1,0,48,66,0,1,66,255,0,19,66,48,66,0,49,66,0,137,60,0,0,139,49,0,0,140,1,67,0,0,0,0,0,2,63,0,0,192,26,0,0,1,61,0,0,136,64,0,0,0,62,64,0,136,64,0,0,25,64,64,16,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,172,146,4,0,135,64,0,0,0,2,0,0,0,3,2,0,25,14,3,28,1,64,2,0,1,65,0,0,134,25,0,0,24,55,6,0,14,64,65,0,41,65,25,16,42,65,65,16,0,36,65,0,38,65,36,2,0,47,65,0,33,55,47,0,121,55,3,0,137,62,0,0,139,0,0,0,0,56,2,0,25,57,56,4,1,65,4,0,1,64,0,0,134,58,0,0,24,55,6,0,57,65,64,0,0,60,58,0,0,4,60,0,0,5,2,0,25,6,5,4,1,64,4,0,1,65,0,0,134,7,0,0,24,55,6,0,6,64,65,0,0,8,2,0,25,9,8,8,25,10,9,4,1,65,4,0,1,64,0,0,134,11,0,0,24,55,6,0,10,65,64,0,3,12,7,11,15,13,4,12,120,13,2,0,119,0,92,0,0,15,2,0,1,64,4,0,1,65,0,0,134,16,0,0,24,55,6,0,15,64,65,0,0,59,16,0,0,17,59,0,0,18,2,0,1,65,4,0,1,64,0,0,134,19,0,0,24,55,6,0,18,65,64,0,0,20,2,0,25,21,20,8,1,64,4,0,1,65,0,0,134,22,0,0,24,55,6,0,21,64,65,0,3,23,19,22,15,24,17,23,120,24,2,0,119,0,63,0,0,26,59,0,41,65,26,5,0,27,65,0,0,28,60,0,3,29,27,28,41,65,29,3,3,30,63,65,25,31,30,4,1,65,4,0,1,64,0,0,134,32,0,0,24,55,6,0,31,65,64,0,1,64,0,0,14,33,32,64,0,34,59,0,41,64,34,5,0,35,64,0,0,37,60,0,3,38,35,37,41,64,38,3,3,39,63,64,121,33,16,0,25,40,39,4,1,64,4,0,1,65,0,0,134,41,0,0,24,55,6,0,40,64,65,0,25,42,41,18,42,65,42,0,1,64,1,0,1,66,0,0,134,43,0,0,24,55,6,0,65,64,66,0,0,1,43,0,119,0,8,0,42,66,39,0,1,64,1,0,1,65,0,0,134,44,0,0,24,55,6,0,66,64,65,0,0,1,44,0,41,65,1,24,42,65,65,24,0,45,65,0,134,46,0,0,188,105,6,0,45,0,0,0,33,48,46,0,121,48,6,0,0,49,60,0,0,50,59,0,134,65,0,0,28,73,2,0,49,50,0,0,0,51,59,0,25,52,51,1,0,59,52,0,119,0,177,255,0,53,60,0,25,54,53,1,0,60,54,0,119,0,146,255,137,62,0,0,139,0,0,0,140,2,57,0,0,0,0,0,1,52,0,0,136,54,0,0,0,53,54,0,136,54,0,0,25,54,54,32,137,54,0,0,130,54,0,0,136,55,0,0,49,54,54,55,8,149,4,0,135,54,0,0,0,51,53,0,0,2,0,0,0,3,1,0,0,14,2,0,1,54,212,118,27,55,14,20,3,25,54,55,0,49,25,0,0,36,2,0,1,55,204,16,27,54,36,20,3,44,55,54,25,45,44,16,42,54,45,0,1,55,1,0,1,56,0,0,134,46,0,0,24,55,6,0,54,55,56,0,41,56,46,24,42,56,56,24,33,47,56,0,120,47,12,0,0,48,3,0,0,4,2,0,1,56,204,16,27,55,4,20,3,5,56,55,25,6,5,16,42,56,6,0,1,54,1,0,134,55,0,0,116,78,6,0,56,48,54,0,0,7,49,0,25,8,7,8,1,55,4,0,1,54,0,0,134,9,0,0,24,55,6,0,8,55,54,0,134,10,0,0,148,77,6,0,9,0,0,0,0,50,10,0,1,54,232,106,1,55,2,0,1,56,0,0,134,11,0,0,24,55,6,0,54,55,56,0,41,56,11,16,42,56,56,16,0,12,56,0,0,13,49,0,1,56,4,0,1,55,0,0,134,15,0,0,24,55,6,0,13,56,55,0,19,55,12,15,0,16,55,0,33,17,16,0,38,55,17,1,0,18,55,0,1,55,255,0,19,55,18,55,0,19,55,0,41,55,19,24,42,55,55,24,33,20,55,0,0,21,49,0,121,20,34,0,25,33,21,4,1,55,4,0,1,56,0,0,134,34,0,0,24,55,6,0,33,55,56,0,0,35,50,0,134,56,0,0,56,46,6,0,34,35,0,0,0,37,49,0,25,38,37,12,1,56,4,0,1,55,0,0,134,39,0,0,24,55,6,0,38,56,55,0,0,40,49,0,25,41,40,16,1,55,4,0,1,56,0,0,134,42,0,0,24,55,6,0,41,55,56,0,134,43,0,0,224,49,6,0,39,42,0,0,134,56,0,0,144,18,6,0,43,51,0,0,137,53,0,0,139,0,0,0,119,0,68,0,1,56,4,0,1,55,0,0,134,22,0,0,24,55,6,0,21,56,55,0,1,55,232,106,1,56,2,0,1,54,0,0,134,23,0,0,24,55,6,0,55,56,54,0,41,54,23,16,42,54,54,16,0,24,54,0,20,54,24,22,0,26,54,0,2,54,0,0,255,255,0,0,19,54,26,54,0,27,54,0,1,56,232,106,1,55,2,0,134,54,0,0,116,78,6,0,56,27,55,0,0,28,49,0,25,29,28,4,1,54,4,0,1,55,0,0,134,30,0,0,24,55,6,0,29,54,55,0,0,31,50,0,1,55,2,0,134,32,0,0,148,77,6,0,55,0,0,0,1,54,0,0,134,55,0,0,172,13,6,0,30,54,31,32,1,54,0,0,134,55,0,0,204,39,1,0,54,0,0,0,0,37,49,0,25,38,37,12,1,55,4,0,1,54,0,0,134,39,0,0,24,55,6,0,38,55,54,0,0,40,49,0,25,41,40,16,1,54,4,0,1,55,0,0,134,42,0,0,24,55,6,0,41,54,55,0,134,43,0,0,224,49,6,0,39,42,0,0,134,55,0,0,144,18,6,0,43,51,0,0,137,53,0,0,139,0,0,0,139,0,0,0,140,3,58,0,0,0,0,0,2,53,0,0,255,0,0,0,2,54,0,0,128,0,0,0,1,51,0,0,136,55,0,0,0,52,55,0,1,55,0,0,13,4,0,55,121,4,3,0,1,3,1,0,119,0,163,0,35,5,1,128,121,5,10,0,19,55,1,53,0,16,55,0,42,56,0,0,1,57,1,0,134,55,0,0,116,78,6,0,56,16,57,0,1,3,1,0,119,0,152,0,1,55,0,8,16,27,1,55,121,27,27,0,43,55,1,6,0,38,55,0,1,55,192,0,20,55,38,55,0,45,55,0,19,55,45,53,0,46,55,0,25,47,0,1,42,57,0,0,1,56,1,0,134,55,0,0,116,78,6,0,57,46,56,0,38,55,1,63,0,48,55,0,20,55,48,54,0,49,55,0,19,55,49,53,0,6,55,0,42,56,47,0,1,57,1,0,134,55,0,0,116,78,6,0,56,6,57,0,1,3,2,0,119,0,123,0,2,55,0,0,0,216,0,0,16,7,1,55,1,55,0,224,19,55,1,55,0,8,55,0,2,55,0,0,0,224,0,0,13,9,8,55,20,55,7,9,0,50,55,0,121,50,41,0,43,55,1,12,0,10,55,0,1,55,224,0,20,55,10,55,0,11,55,0,19,55,11,53,0,12,55,0,25,13,0,1,42,57,0,0,1,56,1,0,134,55,0,0,116,78,6,0,57,12,56,0,43,55,1,6,0,14,55,0,38,55,14,63,0,15,55,0,20,55,15,54,0,17,55,0,19,55,17,53,0,18,55,0,25,19,0,2,42,56,13,0,1,57,1,0,134,55,0,0,116,78,6,0,56,18,57,0,38,55,1,63,0,20,55,0,20,55,20,54,0,21,55,0,19,55,21,53,0,22,55,0,42,57,19,0,1,56,1,0,134,55,0,0,116,78,6,0,57,22,56,0,1,3,3,0,119,0,71,0,2,55,0,0,0,0,1,0,4,23,1,55,2,55,0,0,0,0,16,0,16,24,23,55,121,24,55,0,43,55,1,18,0,25,55,0,1,55,240,0,20,55,25,55,0,26,55,0,19,55,26,53,0,28,55,0,25,29,0,1,42,56,0,0,1,57,1,0,134,55,0,0,116,78,6,0,56,28,57,0,43,55,1,12,0,30,55,0,38,55,30,63,0,31,55,0,20,55,31,54,0,32,55,0,19,55,32,53,0,33,55,0,25,34,0,2,42,57,29,0,1,56,1,0,134,55,0,0,116,78,6,0,57,33,56,0,43,55,1,6,0,35,55,0,38,55,35,63,0,36,55,0,20,55,36,54,0,37,55,0,19,55,37,53,0,39,55,0,25,40,0,3,42,56,34,0,1,57,1,0,134,55,0,0,116,78,6,0,56,39,57,0,38,55,1,63,0,41,55,0,20,55,41,54,0,42,55,0,19,55,42,53,0,43,55,0,42,57,40,0,1,56,1,0,134,55,0,0,116,78,6,0,57,43,56,0,1,3,4,0,119,0,10,0,134,44,0,0,4,85,6,0,1,56,84,0,1,57,4,0,134,55,0,0,116,78,6,0,44,56,57,0,1,3,255,255,119,0,1,0,139,3,0,0,140,1,55,0,0,0,0,0,2,49,0,0,24,4,0,0,2,50,0,0,248,2,0,0,2,51,0,0,173,45,1,0,1,47,0,0,136,52,0,0,0,48,52,0,136,52,0,0,25,52,52,32,137,52,0,0,130,52,0,0,136,53,0,0,49,52,52,53,208,154,4,0,135,52,0,0,0,41,48,0,0,1,0,0,1,52,4,0,1,53,0,0,134,2,0,0,24,55,6,0,50,52,53,0,1,53,0,0,13,13,2,53,121,13,3,0,137,48,0,0,139,0,0,0,1,53,4,0,1,52,0,0,134,24,0,0,24,55,6,0,50,53,52,0,134,52,0,0,56,38,6,0,24,0,0,0,1,40,0,0,0,34,40,0,1,52,176,117,1,53,4,0,1,54,0,0,134,35,0,0,24,55,6,0,52,53,54,0,16,36,34,35,120,36,2,0,119,0,93,0,0,37,40,0,0,38,1,0,5,54,37,49,3,39,38,54,25,3,39,14,1,54,4,0,1,53,0,0,134,4,0,0,24,55,6,0,50,54,53,0,1,54,0,4,134,53,0,0,72,110,4,0,3,54,4,0,1,53,4,0,1,54,0,0,134,5,0,0,24,55,6,0,50,53,54,0,1,53,100,0,134,54,0,0,72,110,4,0,51,53,5,0,0,6,40,0,0,7,1,0,5,54,6,49,3,8,7,54,0,9,40,0,0,10,1,0,5,54,9,49,3,11,10,54,25,12,11,4,0,14,40,0,0,15,1,0,5,54,14,49,3,16,15,54,25,17,16,8,0,18,40,0,0,19,1,0,5,54,18,49,3,20,19,54,25,21,20,12,0,22,40,0,0,23,1,0,5,54,22,49,3,25,23,54,1,54,16,4,3,26,25,54,0,27,40,0,0,28,1,0,5,54,27,49,3,29,28,54,1,54,20,4,3,30,29,54,1,53,4,0,134,54,0,0,116,78,6,0,41,8,53,0,25,42,41,4,1,53,4,0,134,54,0,0,116,78,6,0,42,12,53,0,25,43,41,8,1,53,4,0,134,54,0,0,116,78,6,0,43,17,53,0,25,44,41,12,1,53,4,0,134,54,0,0,116,78,6,0,44,21,53,0,25,45,41,16,1,53,4,0,134,54,0,0,116,78,6,0,45,26,53,0,25,46,41,20,1,53,4,0,134,54,0,0,116,78,6,0,46,30,53,0,2,53,0,0,17,46,1,0,134,54,0,0,176,83,6,0,51,53,41,0,0,31,40,0,25,32,31,1,0,40,32,0,119,0,155,255,1,54,4,0,1,53,0,0,134,33,0,0,24,55,6,0,50,54,53,0,134,53,0,0,56,38,6,0,33,0,0,0,137,48,0,0,139,0,0,0,140,3,67,0,0,0,0,0,2,63,0,0,255,0,0,0,1,61,0,0,136,64,0,0,0,62,64,0,136,64,0,0,25,64,64,32,137,64,0,0,130,64,0,0,136,65,0,0,49,64,64,65,32,157,4,0,135,64,0,0,0,3,0,0,0,4,1,0,0,15,2,0,0,26,4,0,0,59,26,0,2,56,0,0,201,52,1,0,2,57,0,0,241,52,1,0,1,58,0,0,0,37,4,0,33,48,37,0,120,48,3,0,1,61,9,0,119,0,123,0,0,52,3,0,25,53,52,1,0,3,53,0,42,64,52,0,1,65,1,0,1,66,0,0,134,54,0,0,24,55,6,0,64,65,66,0,41,66,54,24,42,66,66,24,0,55,66,0,0,5,56,0,42,66,5,0,1,65,1,0,1,64,0,0,134,6,0,0,24,55,6,0,66,65,64,0,41,64,6,24,42,64,64,24,0,7,64,0,21,64,55,7,0,8,64,0,0,9,57,0,42,64,9,0,1,65,1,0,1,66,0,0,134,10,0,0,24,55,6,0,64,65,66,0,41,66,10,24,42,66,66,24,0,11,66,0,21,66,8,11,0,12,66,0,0,13,58,0,41,66,13,24,42,66,66,24,0,14,66,0,21,66,12,14,0,16,66,0,0,17,15,0,134,18,0,0,12,224,4,0,16,17,0,0,32,19,18,255,121,19,3,0,1,61,9,0,119,0,73,0,0,20,56,0,25,21,20,1,0,56,21,0,42,66,20,0,1,65,1,0,1,64,0,0,134,22,0,0,24,55,6,0,66,65,64,0,41,64,22,24,42,64,64,24,0,23,64,0,0,60,23,0,0,24,58,0,41,64,24,24,42,64,64,24,0,25,64,0,0,27,60,0,0,28,57,0,25,29,28,1,0,57,29,0,42,64,28,0,1,65,1,0,1,66,0,0,134,30,0,0,24,55,6,0,64,65,66,0,41,66,30,24,42,66,66,24,0,31,66,0,5,32,27,31,19,66,32,63,0,33,66,0,41,66,33,24,42,66,66,24,0,34,66,0,3,35,25,34,19,66,35,63,0,36,66,0,0,58,36,0,0,38,56,0,42,66,38,0,1,65,1,0,1,64,0,0,134,39,0,0,24,55,6,0,66,65,64,0,41,64,39,24,42,64,64,24,0,40,64,0,32,41,40,0,121,41,3,0,2,56,0,0,201,52,1,0,0,42,57,0,42,64,42,0,1,65,1,0,1,66,0,0,134,43,0,0,24,55,6,0,64,65,66,0,41,66,43,24,42,66,66,24,0,44,66,0,32,45,44,0,121,45,3,0,2,57,0,0,241,52,1,0,0,46,4,0,26,47,46,1,0,4,47,0,119,0,130,255,32,66,61,9,121,66,6,0,0,49,59,0,0,50,4,0,4,51,49,50,137,62,0,0,139,51,0,0,1,66,0,0,139,66,0,0,140,3,63,0,0,0,0,0,1,57,0,0,136,59,0,0,0,58,59,0,136,59,0,0,25,59,59,32,137,59,0,0,130,59,0,0,136,60,0,0,49,59,59,60,156,159,4,0,135,59,0,0,0,56,58,0,0,4,0,0,0,15,1,0,0,26,2,0,2,59,0,0,80,159,0,0,1,60,4,0,1,61,0,0,134,37,0,0,24,55,6,0,59,60,61,0,33,48,37,0,2,61,0,0,84,159,0,0,1,60,4,0,1,59,0,0,134,50,0,0,24,55,6,0,61,60,59,0,33,51,50,0,20,59,48,51,0,55,59,0,121,55,26,0,2,59,0,0,84,159,0,0,1,60,4,0,1,61,0,0,134,52,0,0,24,55,6,0,59,60,61,0,33,53,52,0,2,61,0,0,80,159,0,0,1,60,4,0,1,59,0,0,134,5,0,0,24,55,6,0,61,60,59,0,33,6,5,0,1,59,1,0,125,7,53,59,6,0,0,0,38,59,7,1,0,8,59,0,0,3,8,0,0,49,3,0,137,58,0,0,139,49,0,0,0,9,4,0,2,60,0,0,4,0,205,171,134,59,0,0,4,110,5,0,9,60,0,0,0,10,4,0,134,59,0,0,100,182,4,0,10,56,0,0,1,59,4,0,1,60,0,0,134,11,0,0,24,55,6,0,56,59,60,0,0,12,26,0,15,13,12,11,121,13,8,0,2,59,0,0,84,159,0,0,1,61,1,0,1,62,4,0,134,60,0,0,116,78,6,0,59,61,62,0,1,54,0,0,0,14,54,0,1,60,4,0,1,62,0,0,134,16,0,0,24,55,6,0,56,60,62,0,15,17,14,16,120,17,2,0,119,0,41,0,0,18,4,0,0,19,54,0,0,20,15,0,27,62,19,20,3,21,20,62,25,22,21,4,134,62,0,0,100,182,4,0,18,22,0,0,0,23,4,0,0,24,54,0,0,25,15,0,27,62,24,20,3,27,25,62,25,28,27,8,134,62,0,0,100,182,4,0,23,28,0,0,0,29,4,0,0,30,54,0,0,31,15,0,27,62,30,20,3,32,31,62,25,33,32,12,134,62,0,0,232,22,5,0,29,33,0,0,0,34,4,0,0,35,54,0,0,36,15,0,27,62,35,20,3,38,36,62,25,39,38,16,134,62,0,0,152,89,5,0,34,39,0,0,0,40,54,0,25,41,40,1,0,54,41,0,119,0,208,255,2,62,0,0,84,159,0,0,1,60,4,0,1,61,0,0,134,42,0,0,24,55,6,0,62,60,61,0,33,43,42,0,2,61,0,0,80,159,0,0,1,60,4,0,1,62,0,0,134,44,0,0,24,55,6,0,61,60,62,0,33,45,44,0,1,62,1,0,125,46,43,62,45,0,0,0,38,62,46,1,0,47,62,0,0,3,47,0,0,49,3,0,137,58,0,0,139,49,0,0,140,0,53,0,0,0,0,0,1,48,0,0,136,50,0,0,0,49,50,0,136,50,0,0,25,50,50,16,137,50,0,0,130,50,0,0,136,51,0,0,49,50,50,51,32,162,4,0,135,50,0,0,1,50,188,26,1,51,4,0,1,52,0,0,134,1,0,0,24,55,6,0,50,51,52,0,1,52,184,26,1,51,4,0,1,50,0,0,134,12,0,0,24,55,6,0,52,51,50,0,134,50,0,0,124,108,5,0,1,12,0,0,134,23,0,0,96,107,6,0,32,34,23,37,121,34,5,0,1,0,1,0,0,41,0,0,137,49,0,0,139,41,0,0,1,50,216,106,1,51,4,0,1,52,0,0,134,42,0,0,24,55,6,0,50,51,52,0,1,52,184,26,1,51,4,0,1,50,0,0,134,43,0,0,24,55,6,0,52,51,50,0,13,44,42,43,121,44,19,0,1,50,220,106,1,51,4,0,1,52,0,0,134,45,0,0,24,55,6,0,50,51,52,0,1,52,188,26,1,51,4,0,1,50,0,0,134,46,0,0,24,55,6,0,52,51,50,0,13,2,45,46,121,2,5,0,1,0,1,0,0,41,0,0,137,49,0,0,139,41,0,0,1,50,184,26,1,51,4,0,1,52,0,0,134,3,0,0,24,55,6,0,50,51,52,0,41,52,3,5,0,4,52,0,1,52,188,26,1,51,4,0,1,50,0,0,134,5,0,0,24,55,6,0,52,51,50,0,3,6,4,5,1,50,192,26,41,51,6,3,3,7,50,51,25,8,7,4,1,51,4,0,1,50,0,0,134,9,0,0,24,55,6,0,8,51,50,0,0,47,9,0,1,50,0,0,14,10,9,50,121,10,78,0,0,11,47,0,134,13,0,0,24,227,3,0,11,0,0,0,1,50,255,0,19,50,13,50,0,14,50,0,33,15,14,0,121,15,29,0,0,16,47,0,25,17,16,24,1,50,2,0,1,51,0,0,134,18,0,0,24,55,6,0,17,50,51,0,41,51,18,16,42,51,51,16,0,19,51,0,1,51,0,32,19,51,19,51,0,20,51,0,33,21,20,0,38,51,21,1,0,22,51,0,1,51,255,0,19,51,22,51,0,24,51,0,1,51,255,0,19,51,24,51,0,25,51,0,33,26,25,0,121,26,5,0,1,0,1,0,0,41,0,0,137,49,0,0,139,41,0,0,1,51,232,106,1,50,2,0,1,52,0,0,134,27,0,0,24,55,6,0,51,50,52,0,41,52,27,16,42,52,52,16,0,28,52,0,1,52,0,64,19,52,28,52,0,29,52,0,33,30,29,0,38,52,30,1,0,31,52,0,1,52,255,0,19,52,31,52,0,32,52,0,1,52,255,0,19,52,32,52,0,33,52,0,33,35,33,0,121,35,18,0,0,36,47,0,25,37,36,19,42,52,37,0,1,50,1,0,1,51,0,0,134,38,0,0,24,55,6,0,52,50,51,0,41,51,38,24,42,51,51,24,0,39,51,0,32,40,39,37,121,40,5,0,1,0,1,0,0,41,0,0,137,49,0,0,139,41,0,0,1,0,0,0,0,41,0,0,137,49,0,0,139,41,0,0,140,3,55,0,0,0,0,0,1,47,0,0,136,51,0,0,0,48,51,0,136,51,0,0,25,51,51,16,137,51,0,0,130,51,0,0,136,52,0,0,49,51,51,52,228,164,4,0,135,51,0,0,0,3,0,0,0,4,1,0,0,15,2,0,1,51,192,2,1,52,4,0,1,53,0,0,134,26,0,0,24,55,6,0,51,52,53,0,26,37,26,1,1,52,192,2,1,51,4,0,134,53,0,0,116,78,6,0,52,37,51,0,0,39,3,0,0,44,39,0,0,40,3,0,25,41,40,48,1,53,4,0,1,51,0,0,134,42,0,0,24,55,6,0,41,53,51,0,36,43,42,1,0,5,15,0,41,51,5,24,42,51,51,24,33,6,51,0,20,51,43,6,0,45,51,0,121,45,36,0,1,53,108,3,1,52,0,0,1,54,4,0,134,51,0,0,116,78,6,0,53,52,54,0,0,30,3,0,25,31,30,28,42,51,31,0,1,54,1,0,1,52,0,0,134,32,0,0,24,55,6,0,51,54,52,0,41,52,32,24,42,52,52,24,0,33,52,0,26,34,33,97,2,52,0,0,8,209,0,0,3,35,52,34,42,54,35,0,1,51,0,0,1,53,1,0,134,52,0,0,116,78,6,0,54,51,53,0,0,36,3,0,1,53,24,107,134,52,0,0,36,53,5,0,53,36,0,0,0,38,44,0,137,48,0,0,139,38,0,0,0,7,3,0,1,53,108,3,1,51,4,0,134,52,0,0,116,78,6,0,53,7,51,0,0,8,3,0,25,9,8,48,1,52,4,0,1,51,0,0,134,10,0,0,24,55,6,0,9,52,51,0,26,11,10,1,1,52,4,0,134,51,0,0,116,78,6,0,9,11,52,0,0,12,3,0,25,13,12,72,1,51,4,0,1,52,0,0,134,14,0,0,24,55,6,0,13,51,52,0,33,16,14,0,121,16,13,0,1,52,192,2,1,51,4,0,1,53,0,0,134,17,0,0,24,55,6,0,52,51,53,0,25,18,17,1,1,51,192,2,1,52,4,0,134,53,0,0,116,78,6,0,51,18,52,0,0,19,4,0,41,53,19,24,42,53,53,24,33,20,53,0,120,20,4,0,0,38,44,0,137,48,0,0,139,38,0,0,134,21,0,0,56,80,6,0,0,44,21,0,0,22,44,0,0,23,3,0,0,46,22,0,0,49,23,0,25,50,46,80,1,51,4,0,1,54,0,0,134,52,0,0,24,55,6,0,49,51,54,0,1,54,4,0,134,53,0,0,116,78,6,0,46,52,54,0,25,46,46,4,25,49,49,4,54,53,46,50,204,166,4,0,0,24,44,0,1,54,0,0,1,52,4,0,134,53,0,0,116,78,6,0,24,54,52,0,0,25,44,0,25,27,25,4,1,52,0,0,1,54,4,0,134,53,0,0,116,78,6,0,27,52,54,0,0,28,44,0,25,29,28,48,1,54,1,0,1,52,4,0,134,53,0,0,116,78,6,0,29,54,52,0,0,38,44,0,137,48,0,0,139,38,0,0,140,1,50,0,0,0,0,0,2,45,0,0,132,160,0,0,1,43,0,0,136,46,0,0,0,44,46,0,136,46,0,0,25,46,46,32,137,46,0,0,130,46,0,0,136,47,0,0,49,46,46,47,152,167,4,0,135,46,0,0,0,1,0,0,1,40,0,0,1,41,0,0,0,2,1,0,41,46,2,24,42,46,46,24,0,13,46,0,1,46,33,0,1,47,31,0,138,13,46,47,64,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,76,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,60,168,4,0,88,168,4,0,60,168,4,0,100,168,4,0,119,0,13,0,1,41,14,0,1,40,204,16,119,0,10,0,1,41,14,0,1,40,44,21,119,0,7,0,1,41,14,0,1,40,228,17,119,0,4,0,1,41,18,0,1,40,252,18,119,0,1,0,0,24,41,0,134,46,0,0,168,78,5,0,45,24,0,0,2,47,0,0,252,160,0,0,1,48,1,0,1,49,4,0,134,46,0,0,116,78,6,0,47,48,49,0,2,49,0,0,16,161,0,0,1,48,0,0,1,47,4,0,134,46,0,0,116,78,6,0,49,48,47,0,1,42,0,0,1,39,0,0,0,33,39,0,0,34,41,0,15,35,33,34,120,35,2,0,119,0,92,0,0,36,39,0,41,46,36,2,3,37,45,46,1,46,4,0,1,47,0,0,134,38,0,0,24,55,6,0,37,46,47,0,0,3,40,0,27,47,38,20,3,4,3,47,25,5,4,16,42,47,5,0,1,46,1,0,1,48,0,0,134,6,0,0,24,55,6,0,47,46,48,0,1,48,255,0,19,48,6,48,0,7,48,0,33,8,7,0,121,8,3,0,1,43,10,0,119,0,22,0,0,9,39,0,41,48,9,2,3,10,45,48,1,48,4,0,1,46,0,0,134,11,0,0,24,55,6,0,10,48,46,0,0,12,40,0,27,46,11,20,3,14,12,46,25,15,14,12,1,46,4,0,1,48,0,0,134,16,0,0,24,55,6,0,15,46,48,0,1,48,0,0,14,17,16,48,121,17,2,0,1,43,10,0,32,48,43,10,121,48,40,0,1,43,0,0,0,18,1,0,41,48,18,24,42,48,48,24,0,19,48,0,2,46,0,0,212,160,0,0,1,47,4,0,134,48,0,0,116,78,6,0,46,19,47,0,0,20,39,0,41,48,20,2,3,21,45,48,1,48,4,0,1,47,0,0,134,22,0,0,24,55,6,0,21,48,47,0,2,48,0,0,0,161,0,0,1,46,4,0,134,47,0,0,116,78,6,0,48,22,46,0,2,47,0,0,204,160,0,0,1,46,0,0,134,23,0,0,208,181,1,0,47,46,0,0,2,47,0,0,219,50,1,0,134,46,0,0,140,159,2,0,47,23,0,0,0,25,42,0,25,26,25,1,0,42,26,0,0,27,39,0,25,28,27,1,0,39,28,0,119,0,161,255,0,29,42,0,32,30,29,0,120,30,3,0,137,44,0,0,139,0,0,0,0,31,1,0,134,32,0,0,100,137,5,0,31,0,0,0,1,47,0,0,134,46,0,0,140,159,2,0,32,47,0,0,137,44,0,0,139,0,0,0,140,2,53,0,0,0,0,0,2,47,0,0,76,177,0,0,2,48,0,0,140,0,0,0,2,49,0,0,136,0,0,0,1,45,0,0,136,50,0,0,0,46,50,0,136,50,0,0,25,50,50,16,137,50,0,0,130,50,0,0,136,51,0,0,49,50,50,51,200,170,4,0,135,50,0,0,0,3,0,0,0,14,1,0,1,50,4,0,1,51,0,0,134,25,0,0,24,55,6,0,47,50,51,0,1,51,0,0,14,36,25,51,121,36,123,0,2,51,0,0,60,162,0,0,1,50,4,0,1,52,0,0,134,39,0,0,24,55,6,0,51,50,52,0,25,40,39,56,1,52,4,0,1,50,0,0,134,41,0,0,24,55,6,0,40,52,50,0,1,50,0,0,14,42,41,50,121,42,107,0,0,43,3,0,2,50,0,0,60,162,0,0,1,52,4,0,1,51,0,0,134,4,0,0,24,55,6,0,50,52,51,0,25,5,4,56,1,51,4,0,1,52,0,0,134,6,0,0,24,55,6,0,5,51,52,0,25,7,6,16,1,52,4,0,1,51,0,0,134,8,0,0,24,55,6,0,7,52,51,0,2,51,0,0,84,177,0,0,1,52,4,0,1,50,0,0,134,9,0,0,24,55,6,0,51,52,50,0,3,10,8,9,14,11,43,10,120,11,77,0,1,44,0,0,0,12,44,0,2,50,0,0,68,177,0,0,1,52,4,0,1,51,0,0,134,13,0,0,24,55,6,0,50,52,51,0,15,15,12,13,120,15,3,0,1,45,11,0,119,0,49,0,0,16,14,0,0,17,44,0,1,51,4,0,1,52,0,0,134,18,0,0,24,55,6,0,47,51,52,0,5,52,17,48,3,19,18,52,3,20,19,49,1,52,4,0,1,51,0,0,134,21,0,0,24,55,6,0,20,52,51,0,17,22,21,16,121,22,28,0,0,23,14,0,0,24,44,0,1,51,4,0,1,52,0,0,134,26,0,0,24,55,6,0,47,51,52,0,5,52,24,48,3,27,26,52,3,28,27,49,1,52,4,0,1,51,0,0,134,29,0,0,24,55,6,0,28,52,51,0,2,51,0,0,80,177,0,0,1,52,4,0,1,50,0,0,134,30,0,0,24,55,6,0,51,52,50,0,3,31,29,30,15,32,23,31,121,32,3,0,1,45,9,0,119,0,5,0,0,35,44,0,25,37,35,1,0,44,37,0,119,0,197,255,32,50,45,9,121,50,8,0,0,33,44,0,25,34,33,1,0,2,34,0,0,38,2,0,137,46,0,0,139,38,0,0,119,0,7,0,32,50,45,11,121,50,5,0,1,2,0,0,0,38,2,0,137,46,0,0,139,38,0,0,1,2,0,0,0,38,2,0,137,46,0,0,139,38,0,0,140,2,59,0,0,0,0,0,1,54,0,0,136,56,0,0,0,55,56,0,136,56,0,0,25,56,56,32,137,56,0,0,130,56,0,0,136,57,0,0,49,56,56,57,28,173,4,0,135,56,0,0,25,48,55,12,0,3,0,0,0,14,1,0,1,51,0,0,1,53,0,0,1,49,0,0,2,56,0,0,80,159,0,0,1,57,4,0,1,58,0,0,134,25,0,0,24,55,6,0,56,57,58,0,33,36,25,0,2,58,0,0,84,159,0,0,1,57,4,0,1,56,0,0,134,43,0,0,24,55,6,0,58,57,56,0,33,44,43,0,20,56,36,44,0,52,56,0,121,52,26,0,2,56,0,0,84,159,0,0,1,57,4,0,1,58,0,0,134,45,0,0,24,55,6,0,56,57,58,0,33,46,45,0,2,58,0,0,80,159,0,0,1,57,4,0,1,56,0,0,134,47,0,0,24,55,6,0,58,57,56,0,33,4,47,0,1,56,1,0,125,5,46,56,4,0,0,0,38,56,5,1,0,6,56,0,0,2,6,0,0,42,2,0,137,55,0,0,139,42,0,0,0,7,3,0,2,57,0,0,9,0,205,171,134,56,0,0,4,110,5,0,7,57,0,0,0,8,3,0,134,56,0,0,100,182,4,0,8,48,0,0,1,50,0,0,0,9,50,0,1,56,4,0,1,57,0,0,134,10,0,0,24,55,6,0,48,56,57,0,15,11,9,10,120,11,2,0,119,0,38,0,134,12,0,0,56,80,6,0,0,51,12,0,0,13,53,0,0,15,51,0,25,16,15,4,1,56,4,0,134,57,0,0,116,78,6,0,16,13,56,0,0,17,53,0,1,57,0,0,14,18,17,57,121,18,7,0,0,19,51,0,0,20,53,0,1,56,4,0,134,57,0,0,116,78,6,0,20,19,56,0,0,21,3,0,0,22,51,0,134,57,0,0,20,95,3,0,21,22,0,0,0,23,53,0,1,57,0,0,13,24,23,57,121,24,3,0,0,26,51,0,0,49,26,0,0,27,51,0,0,53,27,0,0,28,50,0,25,29,28,1,0,50,29,0,119,0,211,255,0,30,51,0,1,57,0,0,14,31,30,57,121,31,7,0,0,32,51,0,1,56,0,0,1,58,4,0,134,57,0,0,116,78,6,0,32,56,58,0,0,33,49,0,0,34,14,0,1,58,4,0,134,57,0,0,116,78,6,0,34,33,58,0,2,57,0,0,84,159,0,0,1,58,4,0,1,56,0,0,134,35,0,0,24,55,6,0,57,58,56,0,33,37,35,0,2,56,0,0,80,159,0,0,1,58,4,0,1,57,0,0,134,38,0,0,24,55,6,0,56,58,57,0,33,39,38,0,1,57,1,0,125,40,37,57,39,0,0,0,38,57,40,1,0,41,57,0,0,2,41,0,0,42,2,0,137,55,0,0,139,42,0,0,140,2,48,0,0,0,0,0,1,42,0,0,136,44,0,0,0,43,44,0,136,44,0,0,25,44,44,32,137,44,0,0,130,44,0,0,136,45,0,0,49,44,44,45,160,175,4,0,135,44,0,0,0,3,0,0,0,14,1,0,0,25,3,0,0,38,25,0,1,39,1,0,0,32,14,0,134,33,0,0,76,79,6,0,32,0,0,0,0,41,33,0,0,34,14,0,134,35,0,0,168,75,6,0,34,0,0,0,0,40,35,0,0,36,14,0,0,37,38,0,42,44,37,0,1,45,1,0,1,46,0,0,134,4,0,0,24,55,6,0,44,45,46,0,1,46,255,0], eb + 296960);
  HEAPU8.set([19,46,4,46,0,5,46,0,33,6,5,0,2,46,0,0,185,21,1,0,2,45,0,0,190,21,1,0,125,7,6,46,45,0,0,0,134,45,0,0,144,86,6,0,36,7,0,0,0,8,39,0,41,45,8,24,42,45,45,24,33,9,45,0,0,10,14,0,0,11,41,0,0,12,40,0,134,45,0,0,164,140,5,0,10,11,12,0,0,13,14,0,120,9,3,0,1,42,10,0,119,0,160,0,134,45,0,0,124,212,4,0,13,0,0,0,134,15,0,0,24,71,6,0,41,45,15,24,42,45,45,24,0,16,45,0,1,45,10,0,1,46,107,0,138,16,45,46,120,178,4,0,64,178,4,0,64,178,4,0,128,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,132,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,140,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,148,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,152,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,156,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,64,178,4,0,192,178,4,0,0,19,14,0,0,20,41,0,0,21,40,0,25,22,21,10,134,45,0,0,164,140,5,0,19,20,22,0,0,23,14,0,2,46,0,0,196,21,1,0,134,45,0,0,144,86,6,0,23,46,0,0,119,0,111,255,1,39,0,0,119,0,109,255,119,0,254,255,1,42,7,0,119,0,23,0,1,42,8,0,119,0,21,0,119,0,2,0,119,0,10,0,0,18,38,0,42,47,18,0,1,44,0,0,1,46,1,0,134,45,0,0,116,78,6,0,47,44,46,0,1,39,0,0,119,0,93,255,0,17,38,0,42,46,17,0,1,44,1,0,1,47,1,0,134,45,0,0,116,78,6,0,46,44,47,0,1,39,0,0,119,0,84,255,32,45,42,7,121,45,6,0,1,2,1,0,0,31,2,0,137,43,0,0,139,31,0,0,119,0,39,0,32,45,42,8,121,45,6,0,1,2,2,0,0,31,2,0,137,43,0,0,139,31,0,0,119,0,32,0,32,45,42,10,121,45,30,0,0,24,38,0,42,45,24,0,1,46,1,0,1,44,0,0,134,26,0,0,24,55,6,0,45,46,44,0,1,44,255,0,19,44,26,44,0,27,44,0,33,28,27,0,2,44,0,0,185,21,1,0,2,46,0,0,190,21,1,0,125,29,28,44,46,0,0,0,134,46,0,0,144,86,6,0,13,29,0,0,0,30,14,0,1,44,10,0,134,46,0,0,64,245,1,0,30,44,0,0,1,2,0,0,0,31,2,0,137,43,0,0,139,31,0,0,1,46,0,0,139,46,0,0,140,0,41,0,0,0,0,0,2,36,0,0,192,164,0,0,2,37,0,0,188,164,0,0,1,34,0,0,136,38,0,0,0,35,38,0,136,38,0,0,25,38,38,16,137,38,0,0,130,38,0,0,136,39,0,0,49,38,38,39,228,179,4,0,135,38,0,0,0,33,35,0,1,38,4,0,1,39,0,0,134,0,0,0,24,55,6,0,36,38,39,0,1,39,0,0,14,1,0,39,121,1,8,0,1,39,4,0,1,38,0,0,134,12,0,0,24,55,6,0,36,39,38,0,135,38,51,0,12,0,0,0,2,38,0,0,176,164,0,0,1,39,4,0,1,40,0,0,134,23,0,0,24,55,6,0,38,39,40,0,135,27,52,0,23,0,0,0,1,39,4,0,134,40,0,0,116,78,6,0,36,27,39,0,1,40,4,0,1,39,0,0,134,28,0,0,24,55,6,0,37,40,39,0,1,39,0,0,14,29,28,39,120,29,3,0,137,35,0,0,139,0,0,0,25,30,33,4,1,40,0,0,1,38,4,0,134,39,0,0,116,78,6,0,30,40,38,0,25,31,33,4,1,39,4,0,1,38,0,0,134,32,0,0,24,55,6,0,31,39,38,0,1,38,4,0,1,39,0,0,134,2,0,0,24,55,6,0,36,38,39,0,25,3,2,12,1,39,4,0,1,38,0,0,134,4,0,0,24,55,6,0,3,39,38,0,15,5,32,4,120,5,2,0,119,0,78,0,1,39,0,0,1,40,4,0,134,38,0,0,116,78,6,0,33,39,40,0,1,38,4,0,1,40,0,0,134,6,0,0,24,55,6,0,33,38,40,0,1,40,4,0,1,38,0,0,134,7,0,0,24,55,6,0,36,40,38,0,25,8,7,8,1,38,4,0,1,40,0,0,134,9,0,0,24,55,6,0,8,38,40,0,15,10,6,9,1,40,4,0,1,38,0,0,134,11,0,0,24,55,6,0,37,40,38,0,120,10,2,0,119,0,31,0,1,38,4,0,1,40,0,0,134,13,0,0,24,55,6,0,36,38,40,0,1,38,0,0,135,40,33,0,11,38,13,33,1,40,4,0,1,38,0,0,134,14,0,0,24,55,6,0,37,40,38,0,25,15,14,8,1,38,4,0,1,40,0,0,134,16,0,0,24,55,6,0,15,38,40,0,1,40,4,0,1,38,0,0,134,17,0,0,24,55,6,0,33,40,38,0,3,18,17,16,1,40,4,0,134,38,0,0,116,78,6,0,33,18,40,0,119,0,203,255,25,19,11,12,1,38,4,0,1,40,0,0,134,20,0,0,24,55,6,0,19,38,40,0,25,21,33,4,1,40,4,0,1,38,0,0,134,22,0,0,24,55,6,0,21,40,38,0,3,24,22,20,1,40,4,0,134,38,0,0,116,78,6,0,21,24,40,0,119,0,160,255,1,38,4,0,1,40,0,0,134,25,0,0,24,55,6,0,36,38,40,0,2,40,0,0,176,164,0,0,1,38,4,0,1,39,0,0,134,26,0,0,24,55,6,0,40,38,39,0,1,38,0,0,1,40,0,0,135,39,33,0,25,38,26,40,137,35,0,0,139,0,0,0,140,2,52,0,0,0,0,0,1,47,0,0,136,49,0,0,0,48,49,0,136,49,0,0,25,49,49,32,137,49,0,0,130,49,0,0,136,50,0,0,49,49,49,50,152,182,4,0,135,49,0,0,25,44,48,20,25,45,48,4,0,3,0,0,0,14,1,0,1,50,0,0,1,51,4,0,134,49,0,0,116,78,6,0,45,50,51,0,0,43,45,0,2,49,0,0,80,159,0,0,1,51,4,0,1,50,0,0,134,25,0,0,24,55,6,0,49,51,50,0,33,36,25,0,2,50,0,0,84,159,0,0,1,51,4,0,1,49,0,0,134,38,0,0,24,55,6,0,50,51,49,0,33,39,38,0,20,49,36,39,0,46,49,0,121,46,26,0,2,49,0,0,84,159,0,0,1,51,4,0,1,50,0,0,134,40,0,0,24,55,6,0,49,51,50,0,33,41,40,0,2,50,0,0,80,159,0,0,1,51,4,0,1,49,0,0,134,42,0,0,24,55,6,0,50,51,49,0,33,4,42,0,1,49,1,0,125,5,41,49,4,0,0,0,38,49,5,1,0,6,49,0,0,2,6,0,0,37,2,0,137,48,0,0,139,37,0,0,0,7,3,0,1,51,4,0,134,49,0,0,192,115,5,0,7,45,51,0,2,49,0,0,88,159,0,0,42,49,49,0,1,51,1,0,1,50,0,0,134,8,0,0,24,55,6,0,49,51,50,0,41,50,8,24,42,50,50,24,0,9,50,0,32,10,9,1,121,10,56,0,0,11,43,0,42,50,11,0,1,51,1,0,1,49,0,0,134,12,0,0,24,55,6,0,50,51,49,0,25,13,44,3,42,51,13,0,1,50,1,0,134,49,0,0,116,78,6,0,51,12,50,0,0,15,43,0,25,16,15,1,42,49,16,0,1,50,1,0,1,51,0,0,134,17,0,0,24,55,6,0,49,50,51,0,25,18,44,2,42,50,18,0,1,49,1,0,134,51,0,0,116,78,6,0,50,17,49,0,0,19,43,0,25,20,19,2,42,51,20,0,1,49,1,0,1,50,0,0,134,21,0,0,24,55,6,0,51,49,50,0,25,22,44,1,42,49,22,0,1,51,1,0,134,50,0,0,116,78,6,0,49,21,51,0,0,23,43,0,25,24,23,3,42,50,24,0,1,51,1,0,1,49,0,0,134,26,0,0,24,55,6,0,50,51,49,0,42,51,44,0,1,50,1,0,134,49,0,0,116,78,6,0,51,26,50,0,0,43,44,0,0,27,43,0,1,49,4,0,1,50,0,0,134,28,0,0,24,55,6,0,27,49,50,0,0,29,14,0,1,49,4,0,134,50,0,0,116,78,6,0,29,28,49,0,2,50,0,0,84,159,0,0,1,49,4,0,1,51,0,0,134,30,0,0,24,55,6,0,50,49,51,0,33,31,30,0,2,51,0,0,80,159,0,0,1,49,4,0,1,50,0,0,134,32,0,0,24,55,6,0,51,49,50,0,33,33,32,0,1,50,1,0,125,34,31,50,33,0,0,0,38,50,34,1,0,35,50,0,0,2,35,0,0,37,2,0,137,48,0,0,139,37,0,0,140,0,58,0,0,0,0,0,2,49,0,0,147,0,0,0,2,50,0,0,48,115,0,0,2,51,0,0,82,225,0,0,2,52,0,0,42,225,0,0,2,53,0,0,208,25,0,0,1,47,0,0,136,54,0,0,0,48,54,0,136,54,0,0,25,54,54,32,137,54,0,0,130,54,0,0,136,55,0,0,49,54,54,55,128,185,4,0,135,54,0,0,1,43,0,0,0,0,43,0,34,1,0,18,120,1,2,0,119,0,120,0,2,42,0,0,42,225,0,0,1,54,3,0,134,12,0,0,20,36,6,0,54,0,0,0,25,23,12,2,0,45,23,0,0,34,45,0,26,37,34,1,0,45,37,0,33,38,34,0,120,38,2,0,119,0,71,0,1,54,3,0,134,39,0,0,20,36,6,0,54,0,0,0,25,40,39,1,0,44,40,0,0,41,44,0,26,2,41,1,0,44,2,0,33,3,41,0,120,3,2,0,119,0,49,0,134,4,0,0,20,36,6,0,49,0,0,0,41,54,4,2,3,5,50,54,1,54,4,0,1,55,0,0,134,6,0,0,24,55,6,0,5,54,55,0,0,46,6,0,0,7,46,0,135,8,22,0,7,0,0,0,0,9,42,0,3,10,9,8,16,11,51,10,120,11,31,0,0,13,46,0,42,55,13,0,1,54,1,0,1,56,0,0,134,14,0,0,24,55,6,0,55,54,56,0,41,56,14,24,42,56,56,24,33,15,56,0,120,15,2,0,119,0,221,255,0,16,46,0,25,17,16,1,0,46,17,0,42,56,16,0,1,54,1,0,1,55,0,0,134,18,0,0,24,55,6,0,56,54,55,0,0,19,42,0,25,20,19,1,0,42,20,0,42,54,19,0,1,56,1,0,134,55,0,0,116,78,6,0,54,18,56,0,119,0,227,255,0,21,42,0,25,22,21,1,0,42,22,0,42,56,21,0,1,54,32,0,1,57,1,0,134,55,0,0,116,78,6,0,56,54,57,0,119,0,181,255,0,24,42,0,26,25,24,1,0,42,25,0,42,57,25,0,1,54,0,0,1,56,1,0,134,55,0,0,116,78,6,0,57,54,56,0,135,26,22,0,52,0,0,0,25,27,26,1,135,28,5,0,27,0,0,0,0,29,43,0,41,55,29,2,3,30,53,55,1,56,4,0,134,55,0,0,116,78,6,0,30,28,56,0,0,31,43,0,41,55,31,2,3,32,53,55,1,55,4,0,1,56,0,0,134,33,0,0,24,55,6,0,32,55,56,0,135,56,24,0,33,52,0,0,0,35,43,0,25,36,35,1,0,43,36,0,119,0,134,255,137,48,0,0,139,0,0,0,140,0,39,0,0,0,0,0,2,33,0,0,183,10,1,0,2,34,0,0,204,2,0,0,1,31,0,0,136,35,0,0,0,32,35,0,136,35,0,0,25,35,35,16,137,35,0,0,130,35,0,0,136,36,0,0,49,35,35,36,188,187,4,0,135,35,0,0,2,35,0,0,2,209,0,0,42,35,35,0,1,36,1,0,1,37,0,0,134,1,0,0,24,55,6,0,35,36,37,0,41,37,1,24,42,37,37,24,33,12,37,0,121,12,5,0,2,36,0,0,42,221,0,0,135,37,24,0,36,33,0,0,1,37,4,0,1,36,0,0,134,22,0,0,24,55,6,0,34,37,36,0,33,23,22,0,121,23,78,0,1,37,0,0,134,36,0,0,204,39,1,0,37,0,0,0,1,36,4,0,1,37,0,0,134,24,0,0,24,55,6,0,34,36,37,0,1,36,0,0,2,35,0,0,70,11,1,0,134,37,0,0,220,36,6,0,36,24,35,0,134,37,0,0,224,106,6,0,2,37,0,0,253,208,0,0,42,37,37,0,1,35,1,0,1,36,0,0,134,25,0,0,24,55,6,0,37,35,36,0,41,36,25,24,42,36,36,24,33,26,36,0,120,26,6,0,1,35,32,0,134,36,0,0,112,14,6,0,35,0,0,0,119,0,44,0,134,27,0,0,24,71,6,0,0,29,27,0,41,36,27,24,42,36,36,24,0,28,36,0,33,2,28,32,120,2,2,0,119,0,35,0,0,3,29,0,41,36,3,24,42,36,36,24,0,4,36,0,32,5,4,27,121,5,242,255,119,0,1,0,42,35,33,0,1,37,0,0,1,38,1,0,134,36,0,0,116,78,6,0,35,37,38,0,1,38,0,0,1,37,4,0,134,36,0,0,116,78,6,0,34,38,37,0,1,37,124,117,1,38,0,0,1,35,4,0,134,36,0,0,116,78,6,0,37,38,35,0,42,35,33,0,1,38,0,0,1,37,1,0,134,36,0,0,116,78,6,0,35,38,37,0,1,0,27,0,0,21,0,0,137,32,0,0,139,21,0,0,42,36,33,0,1,37,1,0,1,38,0,0,134,6,0,0,24,55,6,0,36,37,38,0,41,38,6,24,42,38,38,24,0,7,38,0,134,8,0,0,12,106,6,0,7,0,0,0,32,9,8,0,2,38,0,0,251,208,0,0,42,38,38,0,1,37,1,0,1,36,0,0,134,10,0,0,24,55,6,0,38,37,36,0,41,36,10,24,42,36,36,24,33,11,36,0,20,36,9,11,0,30,36,0,120,30,34,0,2,36,0,0,184,10,1,0,42,36,36,0,1,37,1,0,1,38,0,0,134,13,0,0,24,55,6,0,36,37,38,0,41,38,13,24,42,38,38,24,0,14,38,0,33,15,14,41,121,15,21,0,42,38,33,0,1,37,1,0,1,36,0,0,134,16,0,0,24,55,6,0,38,37,36,0,41,36,16,24,42,36,36,24,0,17,36,0,134,18,0,0,36,102,6,0,17,0,0,0,1,36,255,0,19,36,18,36,0,19,36,0,42,37,33,0,1,38,1,0,134,36,0,0,116,78,6,0,37,19,38,0,1,38,0,0,1,37,0,0,134,36,0,0,220,36,6,0,38,37,33,0,134,36,0,0,160,106,6,0,1,36,124,117,1,37,4,0,1,38,0,0,134,20,0,0,24,55,6,0,36,37,38,0,1,37,4,0,134,38,0,0,116,78,6,0,34,20,37,0,1,37,124,117,1,36,0,0,1,35,4,0,134,38,0,0,116,78,6,0,37,36,35,0,42,35,33,0,1,36,0,0,1,37,1,0,134,38,0,0,116,78,6,0,35,36,37,0,134,38,0,0,224,106,6,0,1,0,228,255,0,21,0,0,137,32,0,0,139,21,0,0,140,2,52,0,0,0,0,0,1,47,0,0,136,49,0,0,0,48,49,0,136,49,0,0,25,49,49,32,137,49,0,0,130,49,0,0,136,50,0,0,49,49,49,50,252,190,4,0,135,49,0,0,25,44,48,20,25,45,48,4,0,3,0,0,0,14,1,0,0,43,45,0,2,49,0,0,80,159,0,0,1,50,4,0,1,51,0,0,134,25,0,0,24,55,6,0,49,50,51,0,33,36,25,0,2,51,0,0,84,159,0,0,1,50,4,0,1,49,0,0,134,38,0,0,24,55,6,0,51,50,49,0,33,39,38,0,20,49,36,39,0,46,49,0,121,46,26,0,2,49,0,0,84,159,0,0,1,50,4,0,1,51,0,0,134,40,0,0,24,55,6,0,49,50,51,0,33,41,40,0,2,51,0,0,80,159,0,0,1,50,4,0,1,49,0,0,134,42,0,0,24,55,6,0,51,50,49,0,33,4,42,0,1,49,1,0,125,5,41,49,4,0,0,0,38,49,5,1,0,6,49,0,0,2,6,0,0,37,2,0,137,48,0,0,139,37,0,0,0,7,3,0,1,50,4,0,134,49,0,0,192,115,5,0,7,45,50,0,2,49,0,0,88,159,0,0,42,49,49,0,1,50,1,0,1,51,0,0,134,8,0,0,24,55,6,0,49,50,51,0,41,51,8,24,42,51,51,24,0,9,51,0,32,10,9,1,121,10,56,0,0,11,43,0,42,51,11,0,1,50,1,0,1,49,0,0,134,12,0,0,24,55,6,0,51,50,49,0,25,13,44,3,42,50,13,0,1,51,1,0,134,49,0,0,116,78,6,0,50,12,51,0,0,15,43,0,25,16,15,1,42,49,16,0,1,51,1,0,1,50,0,0,134,17,0,0,24,55,6,0,49,51,50,0,25,18,44,2,42,51,18,0,1,49,1,0,134,50,0,0,116,78,6,0,51,17,49,0,0,19,43,0,25,20,19,2,42,50,20,0,1,49,1,0,1,51,0,0,134,21,0,0,24,55,6,0,50,49,51,0,25,22,44,1,42,49,22,0,1,50,1,0,134,51,0,0,116,78,6,0,49,21,50,0,0,23,43,0,25,24,23,3,42,51,24,0,1,50,1,0,1,49,0,0,134,26,0,0,24,55,6,0,51,50,49,0,42,50,44,0,1,51,1,0,134,49,0,0,116,78,6,0,50,26,51,0,0,43,44,0,0,27,43,0,1,49,4,0,1,51,0,0,134,28,0,0,24,55,6,0,27,49,51,0,0,29,14,0,1,49,4,0,134,51,0,0,116,78,6,0,29,28,49,0,2,51,0,0,84,159,0,0,1,49,4,0,1,50,0,0,134,30,0,0,24,55,6,0,51,49,50,0,33,31,30,0,2,50,0,0,80,159,0,0,1,49,4,0,1,51,0,0,134,32,0,0,24,55,6,0,50,49,51,0,33,33,32,0,1,51,1,0,125,34,31,51,33,0,0,0,38,51,34,1,0,35,51,0,0,2,35,0,0,37,2,0,137,48,0,0,139,37,0,0,140,1,44,0,0,0,0,0,2,39,0,0,88,194,0,0,2,40,0,0,64,195,0,0,1,37,0,0,136,41,0,0,0,38,41,0,1,41,0,0,13,5,0,41,121,5,96,0,1,41,4,0,1,42,0,0,134,30,0,0,24,55,6,0,40,41,42,0,1,42,0,0,13,31,30,42,121,31,3,0,1,25,0,0,119,0,10,0,1,42,4,0,1,41,0,0,134,32,0,0,24,55,6,0,40,42,41,0,134,7,0,0,116,193,4,0,32,0,0,0,0,25,7,0,135,41,41,0,39,0,0,0,2,41,0,0,84,194,0,0,1,42,4,0,1,43,0,0,134,3,0,0,24,55,6,0,41,42,43,0,1,43,0,0,13,8,3,43,121,8,3,0,0,34,25,0,119,0,59,0,0,4,3,0,0,35,25,0,25,9,4,76,1,43,4,0,1,42,0,0,134,10,0,0,24,55,6,0,9,43,42,0,1,42,255,255,15,11,42,10,121,11,6,0,134,12,0,0,152,111,6,0,4,0,0,0,0,21,12,0,119,0,2,0,1,21,0,0,25,13,4,20,1,42,4,0,1,43,0,0,134,14,0,0,24,55,6,0,13,42,43,0,25,15,4,28,1,43,4,0,1,42,0,0,134,16,0,0,24,55,6,0,15,43,42,0,16,18,16,14,121,18,8,0,134,19,0,0,0,119,5,0,4,0,0,0,20,42,19,35,0,20,42,0,0,36,20,0,119,0,2,0,0,36,35,0,32,22,21,0,120,22,4,0,134,42,0,0,128,111,6,0,4,0,0,0,25,23,4,56,1,42,4,0,1,43,0,0,134,2,0,0,24,55,6,0,23,42,43,0,1,43,0,0,13,24,2,43,121,24,3,0,0,34,36,0,119,0,4,0,0,4,2,0,0,35,36,0,119,0,201,255,135,43,42,0,39,0,0,0,0,1,34,0,119,0,29,0,25,6,0,76,1,43,4,0,1,42,0,0,134,17,0,0,24,55,6,0,6,43,42,0,1,42,255,255,15,26,42,17,120,26,6,0,134,27,0,0,0,119,5,0,0,0,0,0,0,1,27,0,119,0,15,0,134,28,0,0,152,111,6,0,0,0,0,0,32,33,28,0,134,29,0,0,0,119,5,0,0,0,0,0,121,33,3,0,0,1,29,0,119,0,5,0,134,42,0,0,128,111,6,0,0,0,0,0,0,1,29,0,139,1,0,0,140,1,57,0,0,0,0,0,1,52,0,0,136,54,0,0,0,53,54,0,136,54,0,0,25,54,54,16,137,54,0,0,130,54,0,0,136,55,0,0,49,54,54,55,200,195,4,0,135,54,0,0,0,2,0,0,0,13,2,0,134,24,0,0,24,227,3,0,13,0,0,0,41,54,24,24,42,54,54,24,33,35,54,0,120,35,45,0,1,54,232,106,1,55,2,0,1,56,0,0,134,45,0,0,24,55,6,0,54,55,56,0,41,56,45,16,42,56,56,16,0,46,56,0,1,56,0,64,19,56,46,56,0,47,56,0,33,48,47,0,38,56,48,1,0,49,56,0,1,56,255,0,19,56,49,56,0,3,56,0,41,56,3,24,42,56,56,24,33,4,56,0,120,4,23,0,2,56,0,0,5,209,0,0,42,56,56,0,1,55,1,0,1,54,0,0,134,5,0,0,24,55,6,0,56,55,54,0,1,54,255,0,19,54,5,54,0,6,54,0,33,7,6,0,2,54,0,0,70,18,1,0,2,55,0,0,75,247,0,0,125,8,7,54,55,0,0,0,0,1,8,0,0,44,1,0,137,53,0,0,139,44,0,0,1,55,232,106,1,54,2,0,1,56,0,0,134,9,0,0,24,55,6,0,55,54,56,0,41,56,9,16,42,56,56,16,0,10,56,0,1,56,0,8,19,56,10,56,0,11,56,0,33,12,11,0,38,56,12,1,0,14,56,0,1,56,255,0,19,56,14,56,0,15,56,0,41,56,15,24,42,56,56,24,33,16,56,0,0,17,2,0,121,16,50,0,25,18,17,8,25,19,18,4,1,56,4,0,1,54,0,0,134,20,0,0,24,55,6,0,19,56,54,0,0,21,2,0,25,22,21,8,1,54,4,0,1,56,0,0,134,23,0,0,24,55,6,0,22,54,56,0,134,56,0,0,124,108,5,0,20,23,0,0,134,25,0,0,96,107,6,0,134,26,0,0,4,109,6,0,25,0,0,0,0,50,26,0,0,27,50,0,134,28,0,0,188,105,6,0,27,0,0,0,33,29,28,0,121,29,5,0,0,31,50,0,26,32,31,65,0,50,32,0,119,0,6,0,1,56,26,0,134,30,0,0,20,36,6,0,56,0,0,0,0,50,30,0,0,33,50,0,1,56,88,10,27,54,33,52,3,34,56,54,1,54,4,0,1,56,0,0,134,36,0,0,24,55,6,0,34,54,56,0,0,51,36,0,119,0,21,0,25,37,17,17,42,56,37,0,1,54,1,0,1,55,0,0,134,38,0,0,24,55,6,0,56,54,55,0,41,55,38,24,42,55,55,24,0,39,55,0,26,40,39,65,1,55,88,10,27,54,40,52,3,41,55,54,1,54,4,0,1,55,0,0,134,42,0,0,24,55,6,0,41,54,55,0,0,51,42,0,0,43,51,0,2,54,0,0,89,247,0,0,135,55,24,0,54,43,0,0,2,1,0,0,85,247,0,0,0,44,1,0,137,53,0,0,139,44,0,0,140,1,56,0,0,0,0,0,1,52,0,0,136,54,0,0,0,53,54,0,136,54,0,0,25,54,54,32,137,54,0,0,130,54,0,0,136,55,0,0,49,54,54,55,104,198,4,0,135,54,0,0,0,2,0,0,0,13,2,0,1,54,0,0,14,24,13,54,120,24,5,0,1,1,0,0,0,42,1,0,137,53,0,0,139,42,0,0,0,35,2,0,25,43,35,8,1,54,4,0,1,55,0,0,134,44,0,0,24,55,6,0,43,54,55,0,0,51,44,0,0,45,2,0,25,46,45,12,1,55,4,0,1,54,0,0,134,47,0,0,24,55,6,0,46,55,54,0,0,50,47,0,1,48,0,0,0,3,48,0,0,4,51,0,15,5,3,4,120,5,3,0,1,52,11,0,119,0,27,0,0,6,50,0,41,54,6,2,0,7,54,0,135,8,5,0,7,0,0,0,0,9,48,0,0,10,2,0,25,11,10,44,1,54,4,0,1,55,0,0,134,12,0,0,24,55,6,0,11,54,55,0,41,55,9,2,3,14,12,55,1,54,4,0,134,55,0,0,116,78,6,0,14,8,54,0,1,55,0,0,13,15,8,55,120,15,5,0,0,39,48,0,25,40,39,1,0,48,40,0,119,0,225,255,32,55,52,11,121,55,6,0,0,41,2,0,0,1,41,0,0,42,1,0,137,53,0,0,139,42,0,0,1,49,0,0,0,16,49,0,0,17,48,0,15,18,16,17,120,18,2,0,119,0,22,0,0,19,49,0,0,20,2,0,25,21,20,44,1,55,4,0,1,54,0,0,134,22,0,0,24,55,6,0,21,55,54,0,41,54,19,2,3,23,22,54,1,54,4,0,1,55,0,0,134,25,0,0,24,55,6,0,23,54,55,0,135,55,6,0,25,0,0,0,0,26,49,0,25,27,26,1,0,49,27,0,119,0,231,255,0,28,2,0,25,29,28,48,1,55,4,0,1,54,0,0,134,30,0,0,24,55,6,0,29,55,54,0,135,54,6,0,30,0,0,0,0,31,2,0,25,32,31,52,1,54,4,0,1,55,0,0,134,33,0,0,24,55,6,0,32,54,55,0,135,55,6,0,33,0,0,0,0,34,2,0,25,36,34,44,1,55,4,0,1,54,0,0,134,37,0,0,24,55,6,0,36,55,54,0,135,54,6,0,37,0,0,0,0,38,2,0,135,54,6,0,38,0,0,0,1,1,0,0,0,42,1,0,137,53,0,0,139,42,0,0,140,1,53,0,0,0,0,0,1,49,0,0,136,51,0,0,0,50,51,0,136,51,0,0,25,51,51,16,137,51,0,0,130,51,0,0,136,52,0,0,49,51,51,52,148,200,4,0,135,51,0,0,0,2,0,0,0,13,2,0,1,51,0,0,14,24,13,51,120,24,5,0,1,1,255,255,0,42,1,0,137,50,0,0,139,42,0,0,0,35,2,0,25,43,35,24,1,51,4,0,1,52,0,0,134,44,0,0,24,55,6,0,43,51,52,0,38,52,44,33,0,45,52,0,33,46,45,0,120,46,71,0,1,48,0,0,0,47,48,0,0,3,2,0,25,4,3,8,1,52,4,0,1,51,0,0,134,5,0,0,24,55,6,0,4,52,51,0,15,6,47,5,120,6,2,0,119,0,59,0,0,7,48,0,0,8,2,0,25,9,8,44,1,51,4,0,1,52,0,0,134,10,0,0,24,55,6,0,9,51,52,0,41,52,7,2,3,11,10,52,1,52,4,0,1,51,0,0,134,12,0,0,24,55,6,0,11,52,51,0,1,51,0,0,14,14,12,51,120,14,2,0,119,0,40,0,0,15,48,0,0,16,2,0,25,17,16,44,1,51,4,0,1,52,0,0,134,18,0,0,24,55,6,0,17,51,52,0,41,52,15,2,3,19,18,52,1,52,4,0,1,51,0,0,134,20,0,0,24,55,6,0,19,52,51,0,1,51,0,0,14,21,20,51,121,21,18,0,0,22,48,0,0,23,2,0,25,25,23,44,1,51,4,0,1,52,0,0,134,26,0,0,24,55,6,0,25,51,52,0,41,52,22,2,3,27,26,52,1,52,4,0,1,51,0,0,134,28,0,0,24,55,6,0,27,52,51,0,135,51,6,0,28,0,0,0,0,29,48,0,25,30,29,1,0,48,30,0,119,0,188,255,0,31,2,0,25,32,31,48,1,51,4,0,1,52,0,0,134,33,0,0,24,55,6,0,32,51,52,0,135,52,6,0,33,0,0,0,0,34,2,0,25,36,34,52,1,52,4,0,1,51,0,0,134,37,0,0,24,55,6,0,36,52,51,0,135,51,6,0,37,0,0,0,0,38,2,0,25,39,38,44,1,51,4,0,1,52,0,0,134,40,0,0,24,55,6,0,39,51,52,0,135,52,6,0,40,0,0,0,0,41,2,0,135,52,6,0,41,0,0,0,1,1,0,0,0,42,1,0,137,50,0,0,139,42,0,0,140,0,40,0,0,0,0,0,1,34,0,0,136,36,0,0,0,35,36,0,136,36,0,0,25,36,36,48,137,36,0,0,130,36,0,0,136,37,0,0,49,36,36,37,184,202,4,0,135,36,0,0,25,32,35,24,25,31,35,16,25,30,35,8,0,29,35,0,1,36,196,106,1,37,4,0,1,38,0,0,134,0,0,0,24,55,6,0,36,37,38,0,1,38,0,0,13,1,0,38,1,38,200,106,1,37,4,0,1,36,0,0,134,12,0,0,24,55,6,0,38,37,36,0,1,36,0,0,13,19,12,36,19,36,1,19,0,27,36,0,121,27,28,0,2,36,0,0,5,209,0,0,42,36,36,0,1,37,1,0,1,38,0,0,134,20,0,0,24,55,6,0,36,37,38,0,41,38,20,24,42,38,38,24,33,21,38,0,121,21,9,0,2,37,0,0,253,36,1,0,134,38,0,0,144,18,6,0,37,29,0,0,137,35,0,0,139,0,0,0,119,0,8,0,2,37,0,0,6,37,1,0,134,38,0,0,144,18,6,0,37,30,0,0,137,35,0,0,139,0,0,0,1,38,196,106,1,37,4,0,1,36,0,0,134,22,0,0,24,55,6,0,38,37,36,0,1,36,0,0,13,23,22,36,121,23,3,0,1,28,1,0,119,0,19,0,1,36,200,106,1,37,4,0,1,38,0,0,134,24,0,0,24,55,6,0,36,37,38,0,1,38,0,0,13,25,24,38,121,25,3,0,1,28,0,0,119,0,8,0,134,2,0,0,132,39,5,0,0,28,2,0,34,3,2,0,121,3,3,0,137,35,0,0,139,0,0,0,1,37,204,2,1,36,0,0,1,39,4,0,134,38,0,0,116,78,6,0,37,36,39,0,0,4,28,0,1,38,196,106,41,39,4,2,3,5,38,39,1,39,4,0,1,38,0,0,134,6,0,0,24,55,6,0,5,39,38,0,0,26,6,0,0,7,26,0,1,38,0,0,13,8,7,38,121,8,8,0,2,39,0,0,35,37,1,0,134,38,0,0,144,18,6,0,39,31,0,0,137,35,0,0,139,0,0,0,0,9,26,0,134,10,0,0,120,141,4,0,9,0,0,0,41,38,10,24,42,38,38,24,33,11,38,0,120,11,3,0,137,35,0,0,139,0,0,0,0,13,26,0,1,38,1,0,134,14,0,0,208,181,1,0,13,38,0,0,0,15,26,0,25,16,15,28,42,38,16,0,1,39,1,0,1,36,0,0,134,17,0,0,24,55,6,0,38,39,36,0,41,36,17,24,42,36,36,24,0,18,36,0,1,39,4,0,134,36,0,0,116,78,6,0,32,14,39,0,25,33,32,4,1,39,4,0,134,36,0,0,116,78,6,0,33,18,39,0,2,39,0,0,59,37,1,0,134,36,0,0,144,18,6,0,39,32,0,0,137,35,0,0,139,0,0,0,140,2,45,0,0,0,0,0,1,39,0,0,136,41,0,0,0,40,41,0,136,41,0,0,25,41,41,32,137,41,0,0,130,41,0,0,136,42,0,0,49,41,41,42,60,205,4,0,135,41,0,0,25,38,40,16,25,37,40,8,0,36,40,0,0,3,0,0,0,14,1,0,1,41,192,2,1,42,4,0,1,43,0,0,134,25,0,0,24,55,6,0,41,42,43,0,25,30,25,1,1,42,192,2,1,41,4,0,134,43,0,0,116,78,6,0,42,30,41,0,1,43,23,0,15,31,43,30,120,31,83,0,0,7,3,0,41,43,7,24,42,43,43,24,33,8,43,0,121,8,74,0,0,9,14,0,1,41,112,3,134,43,0,0,36,53,5,0,41,9,0,0,1,43,220,106,1,41,4,0,1,42,0,0,134,10,0,0,24,55,6,0,43,41,42,0,1,42,216,106,1,41,4,0,1,43,0,0,134,11,0,0,24,55,6,0,42,41,43,0,134,12,0,0,236,29,6,0,41,43,12,24,42,43,43,24,0,13,43,0,134,43,0,0,208,39,6,0,10,11,13,0,1,43,20,107,1,41,4,0,1,42,0,0,134,15,0,0,24,55,6,0,43,41,42,0,25,16,15,28,1,42,2,0,1,41,0,0,134,17,0,0,24,55,6,0,16,42,41,0,41,41,17,16,42,41,41,16,0,18,41,0,38,41,18,2,0,19,41,0,33,20,19,0,1,41,35,0,1,42,46,0,125,21,20,41,42,0,0,0,1,42,255,0,19,42,21,42,0,22,42,0,1,42,216,106,1,41,4,0,1,43,0,0,134,23,0,0,24,55,6,0,42,41,43,0,41,43,23,5,0,24,43,0,1,43,220,106,1,41,4,0,1,42,0,0,134,26,0,0,24,55,6,0,43,41,42,0,3,27,24,26,1,42,192,26,41,41,27,3,3,28,42,41,42,42,28,0,1,43,1,0,134,41,0,0,116,78,6,0,42,22,43,0,1,2,1,0,0,29,2,0,137,40,0,0,139,29,0,0,2,41,0,0,5,209,0,0,42,41,41,0,1,43,1,0,1,42,0,0,134,32,0,0,24,55,6,0,41,43,42,0,41,42,32,24,42,42,42,24,33,33,42,0,120,33,6,0,2,43,0,0,55,27,1,0,134,42,0,0,112,85,6,0,43,36,0,0,2,43,0,0,64,27,1,0,134,42,0,0,112,85,6,0,43,37,0,0,2,42,0,0,5,209,0,0,42,42,42,0,1,43,1,0,1,41,0,0,134,34,0,0,24,55,6,0,42,43,41,0,41,41,34,24,42,41,41,24,33,35,41,0,120,35,6,0,2,43,0,0,72,27,1,0,134,41,0,0,112,85,6,0,43,38,0,0,134,41,0,0,120,187,4,0,0,4,3,0,41,41,4,24,42,41,41,24,33,5,41,0,121,5,5,0,0,6,14,0,134,41,0,0,204,47,6,0,6,0,0,0,1,43,192,2,1,42,23,0,1,44,4,0,134,41,0,0,116,78,6,0,43,42,44,0,1,2,0,0,0,29,2,0,137,40,0,0,139,29,0,0,140,2,48,0,0,0,0,0,1,42,0,0,136,44,0,0,0,43,44,0,136,44,0,0,25,44,44,16,137,44,0,0,130,44,0,0,136,45,0,0,49,44,44,45,248,207,4,0,135,44,0,0,0,41,43,0,0,2,0,0,0,3,1,0,0,14,2,0,41,44,14,24,42,44,44,24,0,25,44,0,134,32,0,0,188,105,6,0,25,0,0,0,33,33,32,0,121,33,17,0,0,34,2,0,41,44,34,24,42,44,44,24,0,35,44,0,26,36,35,65,1,44,88,10,27,45,36,52,3,37,44,45,1,45,4,0,1,44,0,0,134,4,0,0,24,55,6,0,37,45,44,0,0,40,4,0,1,38,1,0,119,0,53,0,2,40,0,0,18,38,1,0,1,38,0,0,1,39,52,120,0,5,39,0,42,44,5,0,1,45,1,0,1,46,0,0,134,6,0,0,24,55,6,0,44,45,46,0,41,46,6,24,42,46,46,24,33,7,46,0,120,7,2,0,119,0,37,0,0,8,39,0,42,46,8,0,1,45,1,0,1,44,0,0,134,9,0,0,24,55,6,0,46,45,44,0,41,44,9,24,42,44,44,24,0,10,44,0,0,11,2,0,41,44,11,24,42,44,44,24,0,12,44,0,13,13,10,12,0,15,39,0,120,13,4,0,25,21,15,12,0,39,21,0,119,0,225,255,25,16,15,4,1,44,4,0,1,45,0,0,134,17,0,0,24,55,6,0,16,44,45,0,0,40,17,0,0,18,39,0,25,19,18,8,42,45,19,0,1,44,1,0,1,46,0,0,134,20,0,0,24,55,6,0,45,44,46,0,0,38,20,0,0,22,3,0,1,46,255,0,19,46,22,46,0,23,46,0,33,24,23,0,121,24,31,0,0,26,38,0,1,46,255,0,19,46,26,46,0,27,46,0,33,28,27,0,121,28,25,0,0,29,40,0,134,30,0,0,64,51,6,0,29,0,0,0,1,44,4,0,134,46,0,0,116,78,6,0,41,30,44,0,2,44,0,0,42,225,0,0,2,45,0,0,42,38,1,0,134,46,0,0,248,82,6,0,44,45,41,0,0,31,40,0,2,45,0,0,42,225,0,0,135,46,23,0,45,31,0,0,137,43,0,0,2,46,0,0,42,225,0,0,139,46,0,0,2,45,0,0,42,225,0,0,42,45,45,0,1,44,0,0,1,47,1,0,134,46,0,0,116,78,6,0,45,44,47,0,0,31,40,0,2,47,0,0,42,225,0,0,135,46,23,0,47,31,0,0,137,43,0,0,2,46,0,0,42,225,0,0,139,46,0,0,140,3,37,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,64,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,64,210,4,0,135,33,0,0,25,27,32,40,25,26,32,32,25,29,32,24,25,28,32,16,25,25,32,8,0,24,32,0,0,3,0,0,0,4,1,0,0,15,2,0,2,34,0,0,38,217,0,0,42,34,34,0,1,35,0,0,1,36,1,0,134,33,0,0,116,78,6,0,34,35,36,0,0,17,3,0,1,33,0,0,14,18,17,33,2,33,0,0,5,209,0,0,42,33,33,0,1,36,1,0,1,35,0,0,134,19,0,0,24,55,6,0,33,36,35,0,41,35,19,24,42,35,35,24,33,20,35,0,121,18,77,0,120,20,11,0,0,21,4,0,1,36,4,0,134,35,0,0,116,78,6,0,24,21,36,0,2,36,0,0,215,204,0,0,134,35,0,0,112,85,6,0,36,24,0,0,2,36,0,0,248,208,0,0,42,36,36,0,1,33,0,0,1,34,1,0,134,35,0,0,116,78,6,0,36,33,34,0,0,22,3,0,25,23,22,28,42,35,23,0,1,34,1,0,1,33,0,0,134,5,0,0,24,55,6,0,35,34,33,0,41,33,5,24,42,33,33,24,0,6,33,0,0,7,3,0,1,33,1,0,134,8,0,0,208,181,1,0,7,33,0,0,1,34,4,0,134,33,0,0,116,78,6,0,25,6,34,0,25,30,25,4,1,34,4,0,134,33,0,0,116,78,6,0,30,8,34,0,2,34,0,0,53,32,1,0,134,33,0,0,112,85,6,0,34,25,0,0,2,34,0,0,248,208,0,0,42,34,34,0,1,35,1,0,1,36,1,0,134,33,0,0,116,78,6,0,34,35,36,0,0,9,15,0,1,33,0,0,14,10,9,33,121,10,11,0,0,11,15,0,1,36,4,0,134,33,0,0,116,78,6,0,28,11,36,0,2,36,0,0,172,251,0,0,134,33,0,0,112,85,6,0,36,28,0,0,134,33,0,0,120,187,4,0,137,32,0,0,139,0,0,0,119,0,35,0,120,20,6,0,2,36,0,0,228,204,0,0,134,33,0,0,112,85,6,0,36,29,0,0,0,12,4,0,1,36,4,0,134,33,0,0,116,78,6,0,26,12,36,0,2,36,0,0,237,204,0,0,134,33,0,0,112,85,6,0,36,26,0,0,0,13,15,0,1,33,0,0,14,14,13,33,121,14,11,0,0,16,15,0,1,36,4,0,134,33,0,0,116,78,6,0,27,16,36,0,2,36,0,0,172,251,0,0,134,33,0,0,112,85,6,0,36,27,0,0,134,33,0,0,120,187,4,0,137,32,0,0,139,0,0,0,139,0,0,0,140,1,47,0,0,0,0,0,1,41,0,0,136,43,0,0,0,42,43,0,136,43,0,0,25,43,43,16,137,43,0,0,130,43,0,0,136,44,0,0,49,43,43,44,176,212,4,0,135,43,0,0,0,2,0,0,0,13,2,0,1,43,0,0,14,24,13,43,121,24,120,0,0,34,2,0,25,35,34,24,1,43,4,0,1,44,0,0,134,36,0,0,24,55,6,0,35,43,44,0,38,44,36,48,0,37,44,0,33,38,37,0,120,38,109,0,0,39,2,0,25,3,39,36,42,44,3,0,1,43,1,0,1,45,0,0,134,4,0,0,24,55,6,0,44,43,45,0,0,40,4,0,0,5,2,0,2,45,0,0,64,162,0,0,1,43,4,0,1,44,0,0,134,6,0,0,24,55,6,0,45,43,44,0,13,7,5,6,121,7,16,0,2,44,0,0,64,162,0,0,1,43,4,0,1,45,0,0,134,8,0,0,24,55,6,0,44,43,45,0,25,9,8,36,42,43,9,0,1,44,1,0,1,46,1,0,134,45,0,0,116,78,6,0,43,44,46,0,119,0,5,0,0,10,2,0,134,45,0,0,96,152,2,0,10,0,0,0,0,11,40,0,1,45,255,0,19,45,11,45,0,12,45,0,33,14,12,0,121,14,59,0,0,15,2,0,25,16,15,8,1,45,4,0,1,46,0,0,134,17,0,0,24,55,6,0,16,45,46,0,2,46,0,0,60,162,0,0,1,45,4,0,1,44,0,0,134,18,0,0,24,55,6,0,46,45,44,0,25,19,18,32,1,44,4,0,1,45,0,0,134,20,0,0,24,55,6,0,19,44,45,0,13,21,17,20,121,21,37,0,0,22,2,0,25,23,22,12,1,45,4,0,1,44,0,0,134,25,0,0,24,55,6,0,23,45,44,0,2,44,0,0,60,162,0,0,1,45,4,0,1,46,0,0,134,26,0,0,24,55,6,0,44,45,46,0,25,27,26,36,1,46,4,0,1,45,0,0,134,28,0,0,24,55,6,0,27,46,45,0,13,29,25,28,121,29,15,0,2,45,0,0,64,162,0,0,1,46,4,0,1,44,0,0,134,30,0,0,24,55,6,0,45,46,44,0,25,31,30,36,42,46,31,0,1,45,1,0,1,43,1,0,134,44,0,0,116,78,6,0,46,45,43,0,134,32,0,0,124,135,2,0,0,1,32,0,0,33,1,0,137,42,0,0,139,33,0,0,1,1,255,255,0,33,1,0,137,42,0,0,139,33,0,0,140,1,48,0,0,0,0,0,2,43,0,0,24,26,0,0,2,44,0,0,80,26,0,0,1,41,0,0,136,45,0,0,0,42,45,0,136,45,0,0,25,45,45,16,137,45,0,0,130,45,0,0,136,46,0,0,49,45,45,46,244,214,4,0,135,45,0,0,0,39,42,0,0,2,0,0,1,38,0,0,1,46,0,0,1,47,4,0,134,45,0,0,116,78,6,0,39,46,47,0,2,45,0,0,80,159,0,0,1,47,4,0,1,46,0,0,134,13,0,0,24,55,6,0,45,47,46,0,33,24,13,0,2,46,0,0,84,159,0,0,1,47,4,0,1,45,0,0,134,32,0,0,24,55,6,0,46,47,45,0,33,33,32,0,20,45,24,33,0,40,45,0,121,40,26,0,2,45,0,0,84,159,0,0,1,47,4,0,1,46,0,0,134,34,0,0,24,55,6,0,45,47,46,0,33,35,34,0,2,46,0,0,80,159,0,0,1,47,4,0,1,45,0,0,134,36,0,0,24,55,6,0,46,47,45,0,33,37,36,0,1,45,1,0,125,3,35,45,37,0,0,0,38,45,3,1,0,4,45,0,0,1,4,0,0,31,1,0,137,42,0,0,139,31,0,0,1,38,0,0,0,5,38,0,34,6,5,14,120,6,2,0,119,0,62,0,0,7,2,0,134,45,0,0,100,182,4,0,7,39,0,0,1,45,4,0,1,47,0,0,134,8,0,0,24,55,6,0,39,45,47,0,32,9,8,0], eb + 307200);
  HEAPU8.set([0,10,2,0,121,9,24,0,1,47,208,114,1,45,4,0,1,46,0,0,134,11,0,0,24,55,6,0,47,45,46,0,0,12,38,0,41,46,12,2,3,14,43,46,1,45,76,114,134,46,0,0,12,226,4,0,10,45,11,14,0,15,38,0,41,46,15,2,3,16,44,46,2,45,0,0,177,48,1,0,1,47,4,0,134,46,0,0,116,78,6,0,16,45,47,0,119,0,23,0,1,46,44,115,1,47,4,0,1,45,0,0,134,17,0,0,24,55,6,0,46,47,45,0,0,18,38,0,41,45,18,2,3,19,43,45,1,47,212,114,134,45,0,0,12,226,4,0,10,47,17,19,0,20,38,0,41,45,20,2,3,21,44,45,2,47,0,0,172,48,1,0,1,46,4,0,134,45,0,0,116,78,6,0,21,47,46,0,0,22,38,0,25,23,22,1,0,38,23,0,119,0,192,255,2,45,0,0,84,159,0,0,1,46,4,0,1,47,0,0,134,25,0,0,24,55,6,0,45,46,47,0,33,26,25,0,2,47,0,0,80,159,0,0,1,46,4,0,1,45,0,0,134,27,0,0,24,55,6,0,47,46,45,0,33,28,27,0,1,45,1,0,125,29,26,45,28,0,0,0,38,45,29,1,0,30,45,0,0,1,30,0,0,31,1,0,137,42,0,0,139,31,0,0,140,1,50,0,0,0,0,0,1,45,0,0,136,47,0,0,0,46,47,0,136,47,0,0,25,47,47,16,137,47,0,0,130,47,0,0,136,48,0,0,49,47,47,48,100,217,4,0,135,47,0,0,0,1,0,0,1,42,192,120,0,2,42,0,2,47,0,0,144,158,0,0,18,13,2,47,120,13,2,0,119,0,18,0,0,24,42,0,25,35,24,36,1,48,0,0,1,49,4,0,134,47,0,0,116,78,6,0,35,48,49,0,0,37,42,0,1,49,0,0,1,48,4,0,134,47,0,0,116,78,6,0,37,49,48,0,0,38,42,0,25,39,38,40,0,42,39,0,119,0,234,255,0,40,1,0,25,41,40,8,25,3,41,4,1,47,4,0,1,48,0,0,134,4,0,0,24,55,6,0,3,47,48,0,2,47,0,0,184,158,0,0,1,49,4,0,134,48,0,0,116,78,6,0,47,4,49,0,0,5,1,0,25,6,5,8,1,48,4,0,1,49,0,0,134,7,0,0,24,55,6,0,6,48,49,0,2,48,0,0,188,158,0,0,1,47,4,0,134,49,0,0,116,78,6,0,48,7,47,0,0,8,1,0,25,9,8,4,1,49,4,0,1,47,0,0,134,10,0,0,24,55,6,0,9,49,47,0,2,49,0,0,192,158,0,0,1,48,4,0,134,47,0,0,116,78,6,0,49,10,48,0,0,11,1,0,1,47,4,0,1,48,0,0,134,12,0,0,24,55,6,0,11,47,48,0,2,47,0,0,196,158,0,0,1,49,4,0,134,48,0,0,116,78,6,0,47,12,49,0,0,14,1,0,25,15,14,8,25,16,15,4,1,48,4,0,1,49,0,0,134,17,0,0,24,55,6,0,16,48,49,0,134,18,0,0,20,36,6,0,17,0,0,0,28,49,18,2,38,49,49,255,0,19,49,0,41,49,19,1,0,20,49,0,0,44,20,0,0,21,1,0,25,22,21,8,1,49,4,0,1,48,0,0,134,23,0,0,24,55,6,0,22,49,48,0,134,25,0,0,20,36,6,0,23,0,0,0,28,48,25,2,38,48,48,255,0,26,48,0,41,48,26,1,0,27,48,0,0,43,27,0,0,28,44,0,2,48,0,0,192,158,0,0,1,49,4,0,1,47,0,0,134,29,0,0,24,55,6,0,48,49,47,0,3,30,28,29,2,49,0,0,204,158,0,0,1,48,4,0,134,47,0,0,116,78,6,0,49,30,48,0,0,31,43,0,2,47,0,0,196,158,0,0,1,48,4,0,1,49,0,0,134,32,0,0,24,55,6,0,47,48,49,0,3,33,31,32,2,48,0,0,200,158,0,0,1,47,4,0,134,49,0,0,116,78,6,0,48,33,47,0,2,47,0,0,200,158,0,0,134,49,0,0,84,117,5,0,47,0,0,0,0,34,44,0,0,36,43,0,134,49,0,0,176,162,3,0,34,36,0,0,137,46,0,0,139,0,0,0,140,4,46,0,0,0,0,0,1,40,0,0,136,42,0,0,0,41,42,0,136,42,0,0,25,42,42,32,137,42,0,0,130,42,0,0,136,43,0,0,49,42,42,43,248,219,4,0,135,42,0,0,0,38,41,0,0,5,0,0,0,16,1,0,0,27,2,0,0,32,3,0,1,43,0,0,1,44,4,0,134,42,0,0,116,78,6,0,38,43,44,0,2,42,0,0,80,159,0,0,1,44,4,0,1,43,0,0,134,33,0,0,24,55,6,0,42,44,43,0,33,34,33,0,2,43,0,0,84,159,0,0,1,44,4,0,1,42,0,0,134,35,0,0,24,55,6,0,43,44,42,0,33,36,35,0,20,42,34,36,0,39,42,0,121,39,26,0,2,42,0,0,84,159,0,0,1,44,4,0,1,43,0,0,134,37,0,0,24,55,6,0,42,44,43,0,33,6,37,0,2,43,0,0,80,159,0,0,1,44,4,0,1,42,0,0,134,7,0,0,24,55,6,0,43,44,42,0,33,8,7,0,1,42,1,0,125,9,6,42,8,0,0,0,38,42,9,1,0,10,42,0,0,4,10,0,0,31,4,0,137,41,0,0,139,31,0,0,0,11,5,0,134,42,0,0,100,182,4,0,11,38,0,0,1,42,4,0,1,44,0,0,134,12,0,0,24,55,6,0,38,42,44,0,0,13,27,0,15,14,13,12,121,14,9,0,2,42,0,0,84,159,0,0,1,43,1,0,1,45,4,0,134,44,0,0,116,78,6,0,42,43,45,0,119,0,35,0,1,44,4,0,1,45,0,0,134,15,0,0,24,55,6,0,38,44,45,0,1,45,0,0,17,17,45,15,121,17,20,0,1,45,4,0,1,44,0,0,134,18,0,0,24,55,6,0,38,45,44,0,0,19,16,0,41,44,18,3,3,20,19,44,1,44,4,0,1,45,0,0,134,21,0,0,24,55,6,0,20,44,45,0,0,22,32,0,1,44,4,0,134,45,0,0,116,78,6,0,22,21,44,0,119,0,8,0,0,23,32,0,1,44,0,0,1,43,4,0,134,45,0,0,116,78,6,0,23,44,43,0,119,0,1,0,2,45,0,0,84,159,0,0,1,43,4,0,1,44,0,0,134,24,0,0,24,55,6,0,45,43,44,0,33,25,24,0,2,44,0,0,80,159,0,0,1,43,4,0,1,45,0,0,134,26,0,0,24,55,6,0,44,43,45,0,33,28,26,0,1,45,1,0,125,29,25,45,28,0,0,0,38,45,29,1,0,30,45,0,0,4,30,0,0,31,4,0,137,41,0,0,139,31,0,0,140,2,41,0,0,0,0,0,2,37,0,0,255,0,0,0,1,35,0,0,136,38,0,0,0,36,38,0,25,3,1,76,1,38,4,0,1,39,0,0,134,4,0,0,24,55,6,0,3,38,39,0,34,15,4,0,121,15,3,0,1,35,3,0,119,0,63,0,134,26,0,0,152,111,6,0,1,0,0,0,32,29,26,0,121,29,3,0,1,35,3,0,119,0,56,0,25,13,1,75,42,39,13,0,1,38,1,0,1,40,0,0,134,14,0,0,24,55,6,0,39,38,40,0,41,40,14,24,42,40,40,24,0,16,40,0,13,17,16,0,121,17,3,0,1,35,10,0,119,0,32,0,25,18,1,20,1,40,4,0,1,38,0,0,134,19,0,0,24,55,6,0,18,40,38,0,25,20,1,16,1,38,4,0,1,40,0,0,134,21,0,0,24,55,6,0,20,38,40,0,16,22,19,21,121,22,17,0,19,40,0,37,0,23,40,0,25,24,19,1,1,38,4,0,134,40,0,0,116,78,6,0,18,24,38,0,42,38,19,0,1,39,1,0,134,40,0,0,116,78,6,0,38,23,39,0,19,40,0,37,0,25,40,0,0,28,25,0,119,0,2,0,1,35,10,0,32,40,35,10,121,40,5,0,134,27,0,0,208,56,5,0,1,0,0,0,0,28,27,0,134,40,0,0,128,111,6,0,1,0,0,0,0,2,28,0,32,40,35,3,121,40,47,0,25,30,1,75,42,40,30,0,1,39,1,0,1,38,0,0,134,31,0,0,24,55,6,0,40,39,38,0,41,38,31,24,42,38,38,24,0,32,38,0,13,33,32,0,120,33,31,0,25,34,1,20,1,38,4,0,1,39,0,0,134,5,0,0,24,55,6,0,34,38,39,0,25,6,1,16,1,39,4,0,1,38,0,0,134,7,0,0,24,55,6,0,6,39,38,0,16,8,5,7,121,8,17,0,19,38,0,37,0,9,38,0,25,10,5,1,1,39,4,0,134,38,0,0,116,78,6,0,34,10,39,0,42,39,5,0,1,40,1,0,134,38,0,0,116,78,6,0,39,9,40,0,19,38,0,37,0,11,38,0,0,2,11,0,119,0,5,0,134,12,0,0,208,56,5,0,1,0,0,0,0,2,12,0,139,2,0,0,140,2,41,0,0,0,0,0,2,37,0,0,255,0,0,0,1,35,0,0,136,38,0,0,0,36,38,0,25,3,1,76,1,38,4,0,1,39,0,0,134,4,0,0,24,55,6,0,3,38,39,0,34,15,4,0,121,15,3,0,1,35,3,0,119,0,63,0,134,26,0,0,152,111,6,0,1,0,0,0,32,29,26,0,121,29,3,0,1,35,3,0,119,0,56,0,25,13,1,75,42,39,13,0,1,38,1,0,1,40,0,0,134,14,0,0,24,55,6,0,39,38,40,0,41,40,14,24,42,40,40,24,0,16,40,0,13,17,16,0,121,17,3,0,1,35,10,0,119,0,32,0,25,18,1,20,1,40,4,0,1,38,0,0,134,19,0,0,24,55,6,0,18,40,38,0,25,20,1,16,1,38,4,0,1,40,0,0,134,21,0,0,24,55,6,0,20,38,40,0,16,22,19,21,121,22,17,0,19,40,0,37,0,23,40,0,25,24,19,1,1,38,4,0,134,40,0,0,116,78,6,0,18,24,38,0,42,38,19,0,1,39,1,0,134,40,0,0,116,78,6,0,38,23,39,0,19,40,0,37,0,25,40,0,0,28,25,0,119,0,2,0,1,35,10,0,32,40,35,10,121,40,5,0,134,27,0,0,208,56,5,0,1,0,0,0,0,28,27,0,134,40,0,0,128,111,6,0,1,0,0,0,0,2,28,0,32,40,35,3,121,40,47,0,25,30,1,75,42,40,30,0,1,39,1,0,1,38,0,0,134,31,0,0,24,55,6,0,40,39,38,0,41,38,31,24,42,38,38,24,0,32,38,0,13,33,32,0,120,33,31,0,25,34,1,20,1,38,4,0,1,39,0,0,134,5,0,0,24,55,6,0,34,38,39,0,25,6,1,16,1,39,4,0,1,38,0,0,134,7,0,0,24,55,6,0,6,39,38,0,16,8,5,7,121,8,17,0,19,38,0,37,0,9,38,0,25,10,5,1,1,39,4,0,134,38,0,0,116,78,6,0,34,10,39,0,42,39,5,0,1,40,1,0,134,38,0,0,116,78,6,0,39,9,40,0,19,38,0,37,0,11,38,0,0,2,11,0,119,0,5,0,134,12,0,0,208,56,5,0,1,0,0,0,0,2,12,0,139,2,0,0,140,4,46,0,0,0,0,0,1,40,0,0,136,42,0,0,0,41,42,0,136,42,0,0,25,42,42,32,137,42,0,0,130,42,0,0,136,43,0,0,49,42,42,43,64,226,4,0,135,42,0,0,0,38,41,0,0,5,0,0,0,16,1,0,0,27,2,0,0,32,3,0,2,42,0,0,80,159,0,0,1,43,4,0,1,44,0,0,134,33,0,0,24,55,6,0,42,43,44,0,33,34,33,0,2,44,0,0,84,159,0,0,1,43,4,0,1,42,0,0,134,35,0,0,24,55,6,0,44,43,42,0,33,36,35,0,20,42,34,36,0,39,42,0,121,39,26,0,2,42,0,0,84,159,0,0,1,43,4,0,1,44,0,0,134,37,0,0,24,55,6,0,42,43,44,0,33,6,37,0,2,44,0,0,80,159,0,0,1,43,4,0,1,42,0,0,134,7,0,0,24,55,6,0,44,43,42,0,33,8,7,0,1,42,1,0,125,9,6,42,8,0,0,0,38,42,9,1,0,10,42,0,0,4,10,0,0,31,4,0,137,41,0,0,139,31,0,0,0,11,5,0,134,42,0,0,100,182,4,0,11,38,0,0,1,42,4,0,1,43,0,0,134,12,0,0,24,55,6,0,38,42,43,0,0,13,27,0,15,14,13,12,121,14,9,0,2,42,0,0,84,159,0,0,1,44,1,0,1,45,4,0,134,43,0,0,116,78,6,0,42,44,45,0,119,0,35,0,1,43,4,0,1,45,0,0,134,15,0,0,24,55,6,0,38,43,45,0,1,45,0,0,17,17,45,15,121,17,20,0,1,45,4,0,1,43,0,0,134,18,0,0,24,55,6,0,38,45,43,0,0,19,16,0,41,43,18,2,3,20,19,43,1,43,4,0,1,45,0,0,134,21,0,0,24,55,6,0,20,43,45,0,0,22,32,0,1,43,4,0,134,45,0,0,116,78,6,0,22,21,43,0,119,0,8,0,0,23,32,0,1,43,0,0,1,44,4,0,134,45,0,0,116,78,6,0,23,43,44,0,119,0,1,0,2,45,0,0,84,159,0,0,1,44,4,0,1,43,0,0,134,24,0,0,24,55,6,0,45,44,43,0,33,25,24,0,2,43,0,0,80,159,0,0,1,44,4,0,1,45,0,0,134,26,0,0,24,55,6,0,43,44,45,0,33,28,26,0,1,45,1,0,125,29,25,45,28,0,0,0,38,45,29,1,0,30,45,0,0,4,30,0,0,31,4,0,137,41,0,0,139,31,0,0,140,3,51,0,0,0,0,0,1,46,0,0,136,48,0,0,0,47,48,0,136,48,0,0,25,48,48,32,137,48,0,0,130,48,0,0,136,49,0,0,49,48,48,49,116,228,4,0,135,48,0,0,0,4,0,0,0,15,1,0,0,26,2,0,2,48,0,0,76,159,0,0,1,49,4,0,1,50,0,0,134,37,0,0,24,55,6,0,48,49,50,0,33,40,37,0,121,40,12,0,2,50,0,0,76,159,0,0,1,49,4,0,1,48,0,0,134,41,0,0,24,55,6,0,50,49,48,0,0,3,41,0,0,39,3,0,137,47,0,0,139,39,0,0,0,42,4,0,2,49,0,0,4,0,205,171,134,48,0,0,72,32,6,0,42,49,0,0,0,43,4,0,0,44,26,0,134,48,0,0,156,47,5,0,43,44,0,0,1,45,0,0,0,5,45,0,0,6,26,0,15,7,5,6,120,7,2,0,119,0,65,0,0,8,4,0,0,9,45,0,0,10,15,0,27,48,9,20,3,11,10,48,25,12,11,4,1,48,4,0,1,49,0,0,134,13,0,0,24,55,6,0,12,48,49,0,134,49,0,0,156,47,5,0,8,13,0,0,0,14,4,0,0,16,45,0,0,17,15,0,27,49,16,20,3,18,17,49,25,19,18,8,1,49,4,0,1,48,0,0,134,20,0,0,24,55,6,0,19,49,48,0,134,48,0,0,156,47,5,0,14,20,0,0,0,21,4,0,0,22,45,0,0,23,15,0,27,48,22,20,3,24,23,48,25,25,24,12,1,48,4,0,1,49,0,0,134,27,0,0,24,55,6,0,25,48,49,0,134,49,0,0,136,235,5,0,21,27,0,0,0,28,4,0,0,29,45,0,0,30,15,0,27,49,29,20,3,31,30,49,25,32,31,16,42,49,32,0,1,48,1,0,1,50,0,0,134,33,0,0,24,55,6,0,49,48,50,0,1,50,255,0,19,50,33,50,0,34,50,0,134,50,0,0,68,5,6,0,28,34,0,0,0,35,45,0,25,36,35,1,0,45,36,0,119,0,188,255,2,50,0,0,76,159,0,0,1,48,4,0,1,49,0,0,134,38,0,0,24,55,6,0,50,48,49,0,0,3,38,0,0,39,3,0,137,47,0,0,139,39,0,0,140,2,46,0,0,0,0,0,1,41,0,0,136,43,0,0,0,42,43,0,136,43,0,0,25,43,43,32,137,43,0,0,130,43,0,0,136,44,0,0,49,43,43,44,116,230,4,0,135,43,0,0,0,3,0,0,0,14,1,0,2,43,0,0,76,159,0,0,1,44,4,0,1,45,0,0,134,25,0,0,24,55,6,0,43,44,45,0,33,31,25,0,121,31,12,0,2,45,0,0,76,159,0,0,1,44,4,0,1,43,0,0,134,32,0,0,24,55,6,0,45,44,43,0,0,2,32,0,0,30,2,0,137,42,0,0,139,30,0,0,0,33,14,0,134,34,0,0,184,74,6,0,33,0,0,0,0,40,34,0,0,35,14,0,134,36,0,0,48,75,6,0,35,0,0,0,0,38,36,0,0,4,3,0,2,44,0,0,13,0,205,171,134,43,0,0,72,32,6,0,4,44,0,0,0,5,3,0,0,6,38,0,134,43,0,0,156,47,5,0,5,6,0,0,0,7,3,0,0,8,40,0,134,43,0,0,156,47,5,0,7,8,0,0,1,39,0,0,0,9,39,0,0,10,38,0,15,11,9,10,120,11,3,0,1,41,11,0,119,0,29,0,1,37,0,0,0,12,37,0,0,13,40,0,15,15,12,13,120,15,2,0,119,0,19,0,0,16,3,0,0,17,14,0,0,18,39,0,0,19,37,0,134,20,0,0,184,220,5,0,17,18,19,0,134,21,0,0,156,47,5,0,16,20,0,0,33,22,21,0,121,22,3,0,1,41,8,0,119,0,9,0,0,24,37,0,25,26,24,1,0,37,26,0,119,0,234,255,0,27,39,0,25,28,27,1,0,39,28,0,119,0,223,255,32,43,41,8,121,43,13,0,2,43,0,0,76,159,0,0,1,44,4,0,1,45,0,0,134,23,0,0,24,55,6,0,43,44,45,0,0,2,23,0,0,30,2,0,137,42,0,0,139,30,0,0,119,0,14,0,32,45,41,11,121,45,12,0,2,45,0,0,76,159,0,0,1,44,4,0,1,43,0,0,134,29,0,0,24,55,6,0,45,44,43,0,0,2,29,0,0,30,2,0,137,42,0,0,139,30,0,0,1,43,0,0,139,43,0,0,140,0,37,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,48,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,104,232,4,0,135,33,0,0,25,29,32,16,25,28,32,8,0,27,32,0,1,33,204,106,1,34,4,0,1,35,0,0,134,0,0,0,24,55,6,0,33,34,35,0,0,25,0,0,1,35,204,106,1,34,4,0,1,33,0,0,134,1,0,0,24,55,6,0,35,34,33,0,134,12,0,0,120,141,4,0,1,0,0,0,41,33,12,24,42,33,33,24,33,17,33,0,0,18,25,0,1,34,204,106,1,35,4,0,134,33,0,0,116,78,6,0,34,18,35,0,120,17,3,0,137,32,0,0,139,0,0,0,2,33,0,0,127,53,1,0,1,35,41,0,134,19,0,0,52,196,3,0,33,35,0,0,0,24,19,0,1,35,0,0,13,20,19,35,120,20,81,0,0,21,24,0,25,22,21,8,1,35,4,0,1,33,0,0,134,23,0,0,24,55,6,0,22,35,33,0,32,2,23,93,121,2,7,0,2,35,0,0,133,53,1,0,134,33,0,0,144,18,6,0,35,27,0,0,119,0,66,0,0,3,24,0,134,4,0,0,148,130,5,0,3,0,0,0,41,33,4,24,42,33,33,24,33,5,33,0,120,5,58,0,0,6,24,0,1,33,1,0,134,7,0,0,208,181,1,0,6,33,0,0,0,26,7,0,0,8,24,0,1,35,204,106,1,34,4,0,134,33,0,0,116,78,6,0,35,8,34,0,2,33,0,0,5,209,0,0,42,33,33,0,1,34,1,0,1,35,0,0,134,9,0,0,24,55,6,0,33,34,35,0,41,35,9,24,42,35,35,24,33,10,35,0,120,10,6,0,2,34,0,0,155,53,1,0,134,35,0,0,112,85,6,0,34,28,0,0,0,11,26,0,0,13,24,0,25,14,13,28,42,35,14,0,1,34,1,0,1,33,0,0,134,15,0,0,24,55,6,0,35,34,33,0,41,33,15,24,42,33,33,24,0,16,33,0,1,34,4,0,134,33,0,0,116,78,6,0,29,11,34,0,25,30,29,4,1,34,4,0,134,33,0,0,116,78,6,0,30,16,34,0,2,34,0,0,168,53,1,0,134,33,0,0,144,18,6,0,34,29,0,0,137,32,0,0,139,0,0,0,2,34,0,0,38,217,0,0,42,34,34,0,1,35,0,0,1,36,1,0,134,33,0,0,116,78,6,0,34,35,36,0,137,32,0,0,139,0,0,0,140,3,51,0,0,0,0,0,1,46,0,0,136,48,0,0,0,47,48,0,136,48,0,0,25,48,48,32,137,48,0,0,130,48,0,0,136,49,0,0,49,48,48,49,168,234,4,0,135,48,0,0,0,4,0,0,0,15,1,0,0,26,2,0,1,44,0,0,2,48,0,0,80,159,0,0,1,49,4,0,1,50,0,0,134,37,0,0,24,55,6,0,48,49,50,0,33,39,37,0,2,50,0,0,84,159,0,0,1,49,4,0,1,48,0,0,134,40,0,0,24,55,6,0,50,49,48,0,33,41,40,0,20,48,39,41,0,45,48,0,121,45,26,0,2,48,0,0,84,159,0,0,1,49,4,0,1,50,0,0,134,42,0,0,24,55,6,0,48,49,50,0,33,43,42,0,2,50,0,0,80,159,0,0,1,49,4,0,1,48,0,0,134,5,0,0,24,55,6,0,50,49,48,0,33,6,5,0,1,48,1,0,125,7,43,48,6,0,0,0,38,48,7,1,0,8,48,0,0,3,8,0,0,38,3,0,137,47,0,0,139,38,0,0,1,44,0,0,0,9,44,0,0,10,26,0,15,11,9,10,120,11,2,0,119,0,37,0,0,12,4,0,0,13,44,0,0,14,15,0,41,48,13,3,3,16,14,48,134,48,0,0,0,195,5,0,12,16,0,0,0,17,4,0,0,18,44,0,0,19,15,0,41,48,18,3,3,20,19,48,25,21,20,1,134,48,0,0,0,195,5,0,17,21,0,0,0,22,4,0,1,48,116,3,1,49,4,0,1,50,0,0,134,23,0,0,24,55,6,0,48,49,50,0,0,24,44,0,0,25,15,0,41,50,24,3,3,27,25,50,25,28,27,4,134,50,0,0,176,61,5,0,22,23,28,0,0,29,44,0,25,30,29,1,0,44,30,0,119,0,216,255,2,50,0,0,84,159,0,0,1,49,4,0,1,48,0,0,134,31,0,0,24,55,6,0,50,49,48,0,33,32,31,0,2,48,0,0,80,159,0,0,1,49,4,0,1,50,0,0,134,33,0,0,24,55,6,0,48,49,50,0,33,34,33,0,1,50,1,0,125,35,32,50,34,0,0,0,38,50,35,1,0,36,50,0,0,3,36,0,0,38,3,0,137,47,0,0,139,38,0,0,140,1,47,0,0,0,0,0,1,42,0,0,136,44,0,0,0,43,44,0,136,44,0,0,25,44,44,16,137,44,0,0,130,44,0,0,136,45,0,0,49,44,44,45,168,236,4,0,135,44,0,0,0,2,0,0,0,13,2,0,1,44,4,0,1,45,0,0,134,24,0,0,24,55,6,0,13,44,45,0,0,41,24,0,0,34,2,0,25,35,34,4,1,45,4,0,1,44,0,0,134,36,0,0,24,55,6,0,35,45,44,0,0,40,36,0,0,37,2,0,1,44,0,0,14,38,37,44,120,38,5,0,1,1,255,255,0,33,1,0,137,43,0,0,139,33,0,0,0,39,2,0,1,44,4,0,1,45,0,0,134,3,0,0,24,55,6,0,39,44,45,0,25,4,3,1,0,5,2,0,25,6,5,8,1,45,4,0,1,44,0,0,134,7,0,0,24,55,6,0,6,45,44,0,15,8,4,7,121,8,64,0,0,9,2,0,25,10,9,4,1,45,0,0,1,46,4,0,134,44,0,0,116,78,6,0,10,45,46,0,0,11,2,0,1,44,4,0,1,46,0,0,134,12,0,0,24,55,6,0,11,44,46,0,25,14,12,1,1,44,4,0,134,46,0,0,116,78,6,0,11,14,44,0,0,15,2,0,25,16,15,8,1,46,4,0,1,44,0,0,134,17,0,0,24,55,6,0,16,46,44,0,0,18,2,0,1,44,4,0,1,46,0,0,134,19,0,0,24,55,6,0,18,44,46,0,15,20,19,17,120,20,2,0,119,0,17,0,0,21,2,0,134,46,0,0,156,81,4,0,21,0,0,0,0,22,2,0,1,46,4,0,1,44,0,0,134,23,0,0,24,55,6,0,22,46,44,0,25,25,23,1,1,46,4,0,134,44,0,0,116,78,6,0,22,25,46,0,119,0,225,255,0,26,41,0,0,27,2,0,1,46,4,0,134,44,0,0,116,78,6,0,27,26,46,0,0,28,40,0,0,29,2,0,25,30,29,4,1,46,4,0,134,44,0,0,116,78,6,0,30,28,46,0,0,31,2,0,134,44,0,0,156,81,4,0,31,0,0,0,0,32,2,0,134,44,0,0,0,42,6,0,32,0,0,0,1,1,0,0,0,33,1,0,137,43,0,0,139,33,0,0,140,3,48,0,0,0,0,0,1,42,0,0,136,44,0,0,0,43,44,0,136,44,0,0,25,44,44,32,137,44,0,0,130,44,0,0,136,45,0,0,49,44,44,45,168,238,4,0,135,44,0,0,25,41,43,4,0,4,0,0,0,15,1,0,0,26,2,0,1,45,0,0,1,46,4,0,134,44,0,0,116,78,6,0,41,45,46,0,1,39,0,0,2,44,0,0,80,159,0,0,1,46,4,0,1,45,0,0,134,33,0,0,24,55,6,0,44,46,45,0,33,34,33,0,2,45,0,0,84,159,0,0,1,46,4,0,1,44,0,0,134,35,0,0,24,55,6,0,45,46,44,0,33,36,35,0,20,44,34,36,0,40,44,0,121,40,26,0,2,44,0,0,84,159,0,0,1,46,4,0,1,45,0,0,134,37,0,0,24,55,6,0,44,46,45,0,33,38,37,0,2,45,0,0,80,159,0,0,1,46,4,0,1,44,0,0,134,5,0,0,24,55,6,0,45,46,44,0,33,6,5,0,1,44,1,0,125,7,38,44,6,0,0,0,38,44,7,1,0,8,44,0,0,3,8,0,0,32,3,0,137,43,0,0,139,32,0,0,0,9,4,0,2,46,0,0,11,0,205,171,134,44,0,0,4,110,5,0,9,46,0,0,0,10,4,0,134,44,0,0,100,182,4,0,10,41,0,0,1,44,4,0,1,46,0,0,134,11,0,0,24,55,6,0,41,44,46,0,0,12,26,0,14,13,11,12,121,13,8,0,2,44,0,0,84,159,0,0,1,45,1,0,1,47,4,0,134,46,0,0,116,78,6,0,44,45,47,0,1,39,0,0,0,14,39,0,0,16,26,0,15,17,14,16,120,17,2,0,119,0,14,0,0,18,4,0,0,19,39,0,0,20,15,0,27,46,19,52,3,21,20,46,25,22,21,12,134,46,0,0,224,243,4,0,18,22,0,0,0,23,39,0,25,24,23,1,0,39,24,0,119,0,239,255,2,46,0,0,84,159,0,0,1,47,4,0,1,45,0,0,134,25,0,0,24,55,6,0,46,47,45,0,33,27,25,0,2,45,0,0,80,159,0,0,1,47,4,0,1,46,0,0,134,28,0,0,24,55,6,0,45,47,46,0,33,29,28,0,1,46,1,0,125,30,27,46,29,0,0,0,38,46,30,1,0,31,46,0,0,3,31,0,0,32,3,0,137,43,0,0,139,32,0,0,140,4,51,0,0,0,0,0,1,46,0,0,136,48,0,0,0,47,48,0,136,48,0,0,25,48,48,32,137,48,0,0,130,48,0,0,136,49,0,0,49,48,48,49,200,240,4,0,135,48,0,0,0,5,0,0,0,16,1,0,0,27,2,0,0,38,3,0,0,40,5,0,33,41,40,0,120,41,11,0,2,48,0,0,76,162,0,0,1,49,4,0,1,50,0,0,134,42,0,0,24,55,6,0,48,49,50,0,0,43,27,0,4,44,42,43,0,5,44,0,0,6,16,0,33,7,6,0,120,7,11,0,2,50,0,0,80,162,0,0,1,49,4,0,1,48,0,0,134,8,0,0,24,55,6,0,50,49,48,0,0,9,38,0,4,10,8,9,0,16,10,0,0,11,27,0,0,12,5,0,3,13,11,12,2,48,0,0,60,162,0,0,1,49,4,0,1,50,0,0,134,14,0,0,24,55,6,0,48,49,50,0,25,15,14,32,1,50,4,0,1,49,0,0,134,17,0,0,24,55,6,0,15,50,49,0,15,18,17,13,120,18,47,0,0,19,38,0,0,20,16,0,3,21,19,20,2,49,0,0,60,162,0,0,1,50,4,0,1,48,0,0,134,22,0,0,24,55,6,0,49,50,48,0,25,23,22,36,1,48,4,0,1,50,0,0,134,24,0,0,24,55,6,0,23,48,50,0,15,25,24,21,120,25,29,0,0,26,5,0,0,28,16,0,0,29,27,0,0,30,38,0,134,31,0,0,140,248,3,0,26,28,29,30,0,45,31,0,1,50,0,0,14,32,31,50,121,32,18,0,0,33,45,0,134,34,0,0,52,198,4,0,33,0,0,0,0,45,34,0,1,50,0,0,14,35,34,50,121,35,10,0,0,36,45,0,134,50,0,0,56,73,6,0,36,0,0,0,0,37,45,0,0,4,37,0,0,39,4,0,137,47,0,0,139,39,0,0,1,4,0,0,0,39,4,0,137,47,0,0,139,39,0,0,140,3,50,0,0,0,0,0,1,45,0,0,136,47,0,0,0,46,47,0,136,47,0,0,25,47,47,32,137,47,0,0,130,47,0,0,136,48,0,0,49,47,47,48,132,242,4,0,135,47,0,0,0,4,0,0,0,15,1,0,0,26,2,0,0,37,4,0,1,47,0,0,14,39,37,47,121,39,77,0,0,40,15,0,0,41,4,0,25,42,41,8,1,47,4,0,1,48,0,0,134,43,0,0,24,55,6,0,42,47,48,0,15,5,43,40,120,5,67,0,0,6,15,0,0,7,26,0,3,8,6,7,0,9,4,0,25,10,9,8,1,48,4,0,1,47,0,0,134,11,0,0,24,55,6,0,10,48,47,0,15,12,11,8,120,12,55,0,0,13,15,0,0,44,13,0,0,14,44,0,0,16,15,0,0,17,26,0,3,18,16,17,15,19,14,18,120,19,2,0,119,0,42,0,0,20,44,0,0,21,4,0,25,22,21,48,1,47,4,0,1,48,0,0,134,23,0,0,24,55,6,0,22,47,48,0,41,48,20,2,3,24,23,48,1,47,0,0,1,49,4,0,134,48,0,0,116,78,6,0,24,47,49,0,0,25,4,0,25,27,25,12,1,48,4,0,1,49,0,0,134,28,0,0,24,55,6,0,27,48,49,0,26,29,28,1,0,30,44,0,0,31,4,0,25,32,31,52,1,49,4,0,1,48,0,0,134,33,0,0,24,55,6,0,32,49,48,0,41,48,30,2,3,34,33,48,1,49,4,0,134,48,0,0,116,78,6,0,34,29,49,0,0,35,44,0,25,36,35,1,0,44,36,0,119,0,209,255,1,3,0,0,0,38,3,0,137,46,0,0,139,38,0,0,1,3,255,255,0,38,3,0,137,46,0,0,139,38,0,0,140,2,49,0,0,0,0,0,1,44,0,0,136,46,0,0,0,45,46,0,136,46,0,0,25,46,46,16,137,46,0,0,130,46,0,0,136,47,0,0,49,46,46,47,20,244,4,0,135,46,0,0,0,3,0,0,0,14,1,0,2,46,0,0,80,159,0,0,1,47,4,0,1,48,0,0,134,25,0,0,24,55,6,0,46,47,48,0,33,36,25,0,2,48,0,0,84,159,0,0,1,47,4,0,1,46,0,0,134,38,0,0,24,55,6,0,48,47,46,0,33,39,38,0,20,46,36,39,0,43,46,0,121,43,27,0,2,46,0,0,84,159,0,0,1,47,4,0,1,48,0,0,134,40,0,0,24,55,6,0,46,47,48,0,33,41,40,0,2,48,0,0,80,159,0,0,1,47,4,0,1,46,0,0,134,42,0,0,24,55,6,0,48,47,46,0,33,4,42,0,1,46,1,0,125,5,41,46,4,0,0,0,38,46,5,1,0,6,46,0,0,2,6,0,0,37,2,0,137,45,0,0,139,37,0,0,119,0,74,0,0,7,3,0,2,47,0,0,1,0,205,171,134,46,0,0,4,110,5,0,7,47,0,0,0,8,3,0,0,9,14,0,134,46,0,0,100,192,5,0,8,9,0,0,0,10,3,0,0,11,14,0,25,12,11,4,134,46,0,0,100,182,4,0,10,12,0,0,0,13,3,0,0,15,14,0,25,16,15,8,134,46,0,0,100,182,4,0,13,16,0,0,0,17,3,0,0,18,14,0,25,19,18,12,134,46,0,0,100,182,4,0,17,19,0,0,0,20,3,0,0,21,14,0,25,22,21,16,134,46,0,0,100,182,4,0,20,22,0,0,0,23,3,0,0,24,14,0,25,26,24,20,1,47,13,0,134,46,0,0,108,81,5,0,23,26,47,0,0,27,3,0,0,28,14,0,25,29,28,36,134,46,0,0,100,182,4,0,27,29,0,0,2,46,0,0,84,159,0,0,1,47,4,0,1,48,0,0,134,30,0,0,24,55,6,0,46,47,48,0,33,31,30,0,2,48,0,0,80,159,0,0,1,47,4,0,1,46,0,0,134,32,0,0,24,55,6,0,48,47,46,0,33,33,32,0,1,46,1,0,125,34,31,46,33,0,0,0,38,46,34,1,0,35,46,0,0,2,35,0,0,37,2,0,137,45,0,0,139,37,0,0,1,46,0,0,139,46,0,0,140,4,39,0,0,0,0,0,1,31,0,0,136,35,0,0,0,32,35,0,136,35,0,0,1,36,128,0,3,35,35,36,137,35,0,0,130,35,0,0,136,36,0,0,49,35,35,36,52,246,4,0,135,35,0,0,25,28,32,112,0,29,32,0,0,30,29,0,2,33,0,0,108,195,0,0,25,34,30,112,1,37,4,0,1,38,0,0,134,36,0,0,24,55,6,0,33,37,38,0,1,38,4,0,134,35,0,0,116,78,6,0,30,36,38,0,25,30,30,4,25,33,33,4,54,35,30,34,76,246,4,0,26,8,1,1,2,35,0,0,254,255,255,127,16,9,35,8,121,9,16,0,32,20,1,0,121,20,5,0,0,6,28,0,1,7,1,0,1,31,4,0,119,0,13,0,134,21,0,0,4,85,6,0,1,38,75,0,1,36,4,0,134,35,0,0,116,78,6,0,21,38,36,0,1,5,255,255,119,0,4,0,0,6,0,0,0,7,1,0,1,31,4,0,32,35,31,4,121,35,62,0,0,22,6,0,1,35,254,255,4,23,35,22,16,24,23,7,125,4,24,23,7,0,0,0,25,25,29,48,1,36,4,0,134,35,0,0,116,78,6,0,25,4,36,0,25,26,29,20,1,36,4,0,134,35,0,0,116,78,6,0,26,6,36,0,25,27,29,44,1,36,4,0,134,35,0,0,116,78,6,0,27,6,36,0,3,10,6,4,25,11,29,16,1,36,4,0,134,35,0,0,116,78,6,0,11,10,36,0,25,12,29,28,1,36,4,0,134,35,0,0,116,78,6,0,12,10,36,0,134,13,0,0,24,38,4,0,29,2,3,0,32,14,4,0,121,14,3,0,0,5,13,0,119,0,23,0,1,35,4,0,1,36,0,0,134,15,0,0,24,55,6,0,26,35,36,0,1,36,4,0,1,35,0,0,134,16,0,0,24,55,6,0,11,36,35,0,13,17,15,16,41,35,17,31,42,35,35,31,0,18,35,0,3,19,15,18,42,36,19,0,1,38,0,0,1,37,1,0,134,35,0,0,116,78,6,0,36,38,37,0,0,5,13,0,137,32,0,0,139,5,0,0,140,3,48,0,0,0,0,0,1,42,0,0,136,44,0,0,0,43,44,0,136,44,0,0,25,44,44,32,137,44,0,0,130,44,0,0,136,45,0,0,49,44,44,45,20,248,4,0,135,44,0,0,0,41,43,0,0,4,0,0,0,15,1,0,0,26,2,0,1,39,0,0,1,45,0,0,1,46,4,0,134,44,0,0,116,78,6,0,41,45,46,0,2,44,0,0,80,159,0,0,1,46,4,0,1,45,0,0,134,33,0,0,24,55,6,0,44,46,45,0,33,34,33,0,2,45,0,0,84,159,0,0,1,46,4,0,1,44,0,0,134,35,0,0,24,55,6,0,45,46,44,0,33,36,35,0,20,44,34,36,0,40,44,0,121,40,26,0,2,44,0,0,84,159,0,0,1,46,4,0,1,45,0,0,134,37,0,0,24,55,6,0,44,46,45,0,33,38,37,0,2,45,0,0,80,159,0,0,1,46,4,0,1,44,0,0,134,5,0,0,24,55,6,0,45,46,44,0,33,6,5,0,1,44,1,0,125,7,38,44,6,0,0,0,38,44,7,1,0,8,44,0,0,3,8,0,0,32,3,0,137,43,0,0,139,32,0,0,0,9,4,0,134,44,0,0,100,182,4,0,9,41,0,0,1,44,4,0,1,46,0,0,134,10,0,0,24,55,6,0,41,44,46,0,0,11,26,0,14,12,10,11,121,12,8,0,2,44,0,0,84,159,0,0,1,45,1,0,1,47,4,0,134,46,0,0,116,78,6,0,44,45,47,0,1,39,0,0,0,13,39,0,0,14,26,0,15,16,13,14,120,16,2,0,119,0,15,0,0,17,4,0,0,18,39,0,0,19,15,0,41,46,18,2,3,20,19,46,134,21,0,0,232,22,5,0,17,20,0,0,33,22,21,0,120,22,5,0,0,23,39,0,25,24,23,1,0,39,24,0,119,0,238,255,2,46,0,0,84,159,0,0,1,47,4,0,1,45,0,0,134,25,0,0,24,55,6,0,46,47,45,0,33,27,25,0,2,45,0,0,80,159,0,0,1,47,4,0,1,46,0,0,134,28,0,0,24,55,6,0,45,47,46,0,33,29,28,0,1,46,1,0,125,30,27,46,29,0,0,0,38,46,30,1,0,31,46,0,0,3,31,0,0,32,3,0,137,43,0,0,139,32,0,0,140,1,43,0,0,0,0,0,1,38,0,0,136,40,0,0,0,39,40,0,136,40,0,0,25,40,40,16,137,40,0,0,130,40,0,0,136,41,0,0,49,40,40,41,32,250,4,0,135,40,0,0,0,37,39,0,0,1,0,0,0,2,1,0,25,13,2,16,42,40,13,0,1,41,1,0,1,42,0,0,134,24,0,0,24,55,6,0,40,41,42,0,41,42,24,24,42,42,42,24,33,31,42,0,0,32,1,0,25,33,32,12,1,42,4,0,1,41,0,0,134,34,0,0,24,55,6,0,33,42,41,0,1,41,0,0,14,35,34,41,121,31,22,0,120,35,3,0,137,39,0,0,139,0,0,0,0,36,1,0,25,3,36,12,1,41,4,0,1,42,0,0,134,4,0,0,24,55,6,0,3,41,42,0,135,42,6,0,4,0,0,0,0,5,1,0,25,6,5,12,1,41,0,0,1,40,4,0,134,42,0,0,116,78,6,0,6,41,40,0,137,39,0,0,139,0,0,0,121,35,3,0,137,39,0,0,139,0,0,0,2,42,0,0,5,209,0,0,42,42,42,0,1,40,1,0,1,41,0,0,134,7,0,0,24,55,6,0,42,40,41,0,1,41,255,0,19,41,7,41,0,8,41,0,33,9,8,0,2,41,0,0,224,17,1,0,2,40,0,0,234,17,1,0,125,10,9,41,40,0,0,0,134,40,0,0,144,18,6,0,10,37,0,0,2,40,0,0,68,162,0,0,1,41,4,0,1,42,0,0,134,11,0,0,24,55,6,0,40,41,42,0,2,42,0,0,42,225,0,0,134,12,0,0,12,60,3,0,42,11,0,0,32,14,12,0,120,14,3,0,137,39,0,0,139,0,0,0,0,15,1,0,25,16,15,12,1,42,4,0,1,41,0,0,134,17,0,0,24,55,6,0,16,42,41,0,1,41,0,0,14,18,17,41,121,18,10,0,0,19,1,0,25,20,19,12,1,41,4,0,1,42,0,0,134,21,0,0,24,55,6,0,20,41,42,0,135,42,6,0,21,0,0,0,2,42,0,0,42,225,0,0,135,22,22,0,42,0,0,0,25,23,22,1,135,25,5,0,23,0,0,0,0,26,1,0,25,27,26,12,1,41,4,0,134,42,0,0,116,78,6,0,27,25,41,0,0,28,1,0,25,29,28,12,1,42,4,0,1,41,0,0,134,30,0,0,24,55,6,0,29,42,41,0,2,42,0,0,42,225,0,0,135,41,24,0,30,42,0,0,137,39,0,0,139,0,0,0,140,0,40,0,0,0,0,0,1,34,0,0,136,36,0,0,0,35,36,0,136,36,0,0,25,36,36,48,137,36,0,0,130,36,0,0,136,37,0,0,49,36,36,37,88,252,4,0,135,36,0,0,25,32,35,16,25,31,35,8,0,30,35,0,2,37,0,0,97,205,0,0,134,36,0,0,144,18,6,0,37,30,0,0,134,0,0,0,24,71,6,0,41,36,0,24,42,36,36,24,0,1,36,0,0,27,1,0,1,37,204,2,1,38,0,0,1,39,4,0,134,36,0,0,116,78,6,0,37,38,39,0,0,12,27,0,32,20,12,27,121,20,8,0,2,39,0,0,166,51,1,0,134,36,0,0,144,18,6,0,39,31,0,0,137,35,0,0,139,0,0,0,0,21,27,0,134,22,0,0,188,105,6,0,21,0,0,0,33,23,22,0,121,23,13,0,0,24,27,0,26,25,24,65,1,36,88,10,27,39,25,52,3,26,36,39,1,39,4,0,1,36,0,0,134,2,0,0,24,55,6,0,26,39,36,0,0,29,2,0,119,0,41,0,2,29,0,0,127,205,0,0,1,28,104,0,0,3,28,0,42,36,3,0,1,39,1,0,1,38,0,0,134,4,0,0,24,55,6,0,36,39,38,0,41,38,4,24,42,38,38,24,0,5,38,0,33,6,5,0,120,6,2,0,119,0,25,0,0,7,28,0,42,38,7,0,1,39,1,0,1,36,0,0,134,8,0,0,24,55,6,0,38,39,36,0,41,36,8,24,42,36,36,24,0,9,36,0,0,10,27,0,13,11,9,10,0,13,28,0,120,11,4,0,25,16,13,12,0,28,16,0,119,0,227,255,25,14,13,4,1,36,4,0,1,39,0,0,134,15,0,0,24,55,6,0,14,36,39,0,0,29,15,0,0,17,27,0,134,18,0,0,160,236,5,0,17,0,0,0,0,19,29,0,1,36,4,0,134,39,0,0,116,78,6,0,32,18,36,0,25,33,32,4,1,36,4,0,134,39,0,0,116,78,6,0,33,19,36,0,2,36,0,0,145,205,0,0,134,39,0,0,144,18,6,0,36,32,0,0,137,35,0,0,139,0,0,0,140,0,48,0,0,0,0,0,2,44,0,0,255,0,0,0,1,42,0,0,136,45,0,0,0,43,45,0,136,45,0,0,25,45,45,16,137,45,0,0,130,45,0,0,136,46,0,0,49,45,45,46,72,254,4,0,135,45,0,0,1,45,232,106,1,46,2,0,1,47,0,0,134,0,0,0,24,55,6,0,45,46,47,0,41,47,0,16,42,47,47,16,0,1,47,0,39,47,1,2,0,12,47,0,2,47,0,0,255,255,0,0,19,47,12,47,0,23,47,0,1,46,232,106,1,45,2,0,134,47,0,0,116,78,6,0,46,23,45,0,1,47,116,3,1,45,4,0,1,46,0,0,134,34,0,0,24,55,6,0,47,45,46,0,0,41,34,0,0,36,41,0,1,46,0,0,14,37,36,46,120,37,2,0,119,0,89,0,0,38,41,0,25,39,38,24,1,46,2,0,1,45,0,0,134,40,0,0,24,55,6,0,39,46,45,0,41,45,40,16,42,45,45,16,0,2,45,0,1,45,0,4,19,45,2,45,0,3,45,0,33,4,3,0,38,45,4,1,0,5,45,0,19,45,5,44,0,6,45,0,19,45,6,44,0,7,45,0,33,8,7,0,121,8,59,0,0,9,41,0,134,10,0,0,24,227,3,0,9,0,0,0,19,45,10,44,0,11,45,0,33,13,11,0,121,13,51,0,1,45,232,106,1,46,2,0,1,47,0,0,134,14,0,0,24,55,6,0,45,46,47,0,41,47,14,16,42,47,47,16,0,15,47,0,1,47,0,8,19,47,15,47,0,16,47,0,33,17,16,0,38,47,17,1,0,18,47,0,19,47,18,44,0,19,47,0,41,47,19,24,42,47,47,24,33,20,47,0,120,20,30,0,0,21,41,0,25,22,21,8,25,24,22,4,1,47,4,0,1,46,0,0,134,25,0,0,24,55,6,0,24,47,46,0,0,26,41,0,25,27,26,8,1,46,4,0,1,47,0,0,134,28,0,0,24,55,6,0,27,46,47,0,0,29,41,0,25,30,29,18,42,47,30,0,1,46,1,0,1,45,0,0,134,31,0,0,24,55,6,0,47,46,45,0,41,45,31,24,42,45,45,24,0,32,45,0,134,45,0,0], eb + 317440);
  HEAPU8.set([208,39,6,0,25,28,32,0,0,33,41,0,1,45,4,0,1,46,0,0,134,35,0,0,24,55,6,0,33,45,46,0,0,41,35,0,119,0,164,255,137,43,0,0,139,0,0,0,140,3,48,0,0,0,0,0,1,42,0,0,136,44,0,0,0,43,44,0,136,44,0,0,25,44,44,32,137,44,0,0,130,44,0,0,136,45,0,0,49,44,44,45,100,0,5,0,135,44,0,0,0,41,43,0,0,4,0,0,0,15,1,0,0,26,2,0,1,39,0,0,1,45,0,0,1,46,4,0,134,44,0,0,116,78,6,0,41,45,46,0,2,44,0,0,80,159,0,0,1,46,4,0,1,45,0,0,134,33,0,0,24,55,6,0,44,46,45,0,33,34,33,0,2,45,0,0,84,159,0,0,1,46,4,0,1,44,0,0,134,35,0,0,24,55,6,0,45,46,44,0,33,36,35,0,20,44,34,36,0,40,44,0,121,40,26,0,2,44,0,0,84,159,0,0,1,46,4,0,1,45,0,0,134,37,0,0,24,55,6,0,44,46,45,0,33,38,37,0,2,45,0,0,80,159,0,0,1,46,4,0,1,44,0,0,134,5,0,0,24,55,6,0,45,46,44,0,33,6,5,0,1,44,1,0,125,7,38,44,6,0,0,0,38,44,7,1,0,8,44,0,0,3,8,0,0,32,3,0,137,43,0,0,139,32,0,0,0,9,4,0,134,44,0,0,100,182,4,0,9,41,0,0,1,44,4,0,1,46,0,0,134,10,0,0,24,55,6,0,41,44,46,0,0,11,26,0,14,12,10,11,121,12,8,0,2,44,0,0,84,159,0,0,1,45,1,0,1,47,4,0,134,46,0,0,116,78,6,0,44,45,47,0,1,39,0,0,0,13,39,0,0,14,26,0,15,16,13,14,120,16,2,0,119,0,14,0,0,17,4,0,0,18,39,0,0,19,15,0,3,20,19,18,134,21,0,0,152,89,5,0,17,20,0,0,33,22,21,0,120,22,5,0,0,23,39,0,25,24,23,1,0,39,24,0,119,0,239,255,2,46,0,0,84,159,0,0,1,47,4,0,1,45,0,0,134,25,0,0,24,55,6,0,46,47,45,0,33,27,25,0,2,45,0,0,80,159,0,0,1,47,4,0,1,46,0,0,134,28,0,0,24,55,6,0,45,47,46,0,33,29,28,0,1,46,1,0,125,30,27,46,29,0,0,0,38,46,30,1,0,31,46,0,0,3,31,0,0,32,3,0,137,43,0,0,139,32,0,0,140,2,44,0,0,0,0,0,1,39,0,0,136,41,0,0,0,40,41,0,136,41,0,0,25,41,41,32,137,41,0,0,130,41,0,0,136,42,0,0,49,41,41,42,108,2,5,0,135,41,0,0,25,36,40,18,25,37,40,16,0,3,0,0,0,14,1,0,0,35,37,0,2,41,0,0,80,159,0,0,1,42,4,0,1,43,0,0,134,25,0,0,24,55,6,0,41,42,43,0,33,29,25,0,2,43,0,0,84,159,0,0,1,42,4,0,1,41,0,0,134,30,0,0,24,55,6,0,43,42,41,0,33,31,30,0,20,41,29,31,0,38,41,0,121,38,26,0,2,41,0,0,84,159,0,0,1,42,4,0,1,43,0,0,134,32,0,0,24,55,6,0,41,42,43,0,33,33,32,0,2,43,0,0,80,159,0,0,1,42,4,0,1,41,0,0,134,34,0,0,24,55,6,0,43,42,41,0,33,4,34,0,1,41,1,0,125,5,33,41,4,0,0,0,38,41,5,1,0,6,41,0,0,2,6,0,0,28,2,0,137,40,0,0,139,28,0,0,0,7,3,0,1,42,2,0,134,41,0,0,192,115,5,0,7,37,42,0,2,41,0,0,88,159,0,0,42,41,41,0,1,42,1,0,1,43,0,0,134,8,0,0,24,55,6,0,41,42,43,0,41,43,8,24,42,43,43,24,0,9,43,0,32,10,9,1,121,10,28,0,0,11,35,0,42,43,11,0,1,42,1,0,1,41,0,0,134,12,0,0,24,55,6,0,43,42,41,0,25,13,36,1,42,42,13,0,1,43,1,0,134,41,0,0,116,78,6,0,42,12,43,0,0,15,35,0,25,16,15,1,42,41,16,0,1,43,1,0,1,42,0,0,134,17,0,0,24,55,6,0,41,43,42,0,42,43,36,0,1,41,1,0,134,42,0,0,116,78,6,0,43,17,41,0,0,35,36,0,0,18,35,0,1,42,2,0,1,41,0,0,134,19,0,0,24,55,6,0,18,42,41,0,0,20,14,0,1,42,2,0,134,41,0,0,116,78,6,0,20,19,42,0,2,41,0,0,84,159,0,0,1,42,4,0,1,43,0,0,134,21,0,0,24,55,6,0,41,42,43,0,33,22,21,0,2,43,0,0,80,159,0,0,1,42,4,0,1,41,0,0,134,23,0,0,24,55,6,0,43,42,41,0,33,24,23,0,1,41,1,0,125,26,22,41,24,0,0,0,38,41,26,1,0,27,41,0,0,2,27,0,0,28,2,0,137,40,0,0,139,28,0,0,140,1,39,0,0,0,0,0,1,35,0,0,136,37,0,0,0,36,37,0,136,37,0,0,25,37,37,16,137,37,0,0,130,37,0,0,136,38,0,0,49,37,37,38,168,4,5,0,135,37,0,0,0,2,0,0,0,13,2,0,25,24,13,8,1,37,4,0,1,38,0,0,134,29,0,0,24,55,6,0,24,37,38,0,1,37,33,0,1,38,61,0,138,29,37,38,220,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,240,5,5,0,200,5,5,0,200,5,5,0,104,6,5,0,200,5,5,0,200,5,5,0,108,6,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,112,6,5,0,200,5,5,0,116,6,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,200,5,5,0,120,6,5,0,1,1,0,0,0,28,1,0,137,36,0,0,139,28,0,0,119,0,87,0,1,1,1,0,0,28,1,0,137,36,0,0,139,28,0,0,119,0,82,0,0,16,2,0,25,17,16,56,1,37,4,0,1,38,0,0,134,18,0,0,24,55,6,0,17,37,38,0,33,19,18,0,121,19,3,0,1,26,1,0,119,0,10,0,0,20,2,0,25,21,20,60,1,38,4,0,1,37,0,0,134,22,0,0,24,55,6,0,21,38,37,0,33,23,22,0,0,26,23,0,38,37,26,1,0,25,37,0,1,37,255,0,19,37,25,37,0,27,37,0,0,1,27,0,0,28,1,0,137,36,0,0,139,28,0,0,119,0,52,0,119,0,221,255,119,0,220,255,119,0,219,255,119,0,218,255,0,30,2,0,25,31,30,68,1,38,4,0,1,37,0,0,134,32,0,0,24,55,6,0,31,38,37,0,38,37,32,32,0,33,37,0,33,34,33,0,121,34,3,0,1,14,1,0,119,0,25,0,0,3,2,0,25,4,3,64,1,37,4,0,1,38,0,0,134,5,0,0,24,55,6,0,4,37,38,0,0,6,2,0,25,7,6,52,1,38,4,0,1,37,0,0,134,8,0,0,24,55,6,0,7,38,37,0,1,37,212,2,41,38,8,2,3,9,37,38,1,38,4,0,1,37,0,0,134,10,0,0,24,55,6,0,9,38,37,0,14,11,5,10,0,14,11,0,38,37,14,1,0,12,37,0,1,37,255,0,19,37,12,37,0,15,37,0,0,1,15,0,0,28,1,0,137,36,0,0,139,28,0,0,119,0,1,0,1,37,0,0,139,37,0,0,140,1,38,0,0,0,0,0,1,33,0,0,136,35,0,0,0,34,35,0,0,1,0,0,42,35,1,0,1,36,1,0,1,37,0,0,134,7,0,0,24,55,6,0,35,36,37,0,41,37,7,24,42,37,37,24,0,8,37,0,134,16,0,0,100,99,6,0,8,0,0,0,32,17,16,0,25,18,1,1,121,17,4,0,0,2,1,0,0,5,18,0,119,0,3,0,0,1,18,0,119,0,237,255,42,37,2,0,1,36,1,0,1,35,0,0,134,19,0,0,24,55,6,0,37,36,35,0,41,35,19,24,42,35,35,24,0,20,35,0,1,35,43,0,1,36,3,0,138,20,35,36,240,7,5,0,224,7,5,0,252,7,5,0,0,3,2,0,0,22,19,0,1,32,0,0,119,0,7,0,1,31,0,0,1,33,5,0,119,0,4,0,1,31,1,0,1,33,5,0,119,0,1,0,32,35,33,5,121,35,10,0,42,35,5,0,1,36,1,0,1,37,0,0,134,6,0,0,24,55,6,0,35,36,37,0,0,3,5,0,0,22,6,0,0,32,31,0,41,37,22,24,42,37,37,24,0,21,37,0,26,27,21,48,35,25,27,10,121,25,25,0,0,4,3,0,0,28,27,0,1,30,0,0,27,23,30,10,25,9,4,1,4,10,23,28,42,37,9,0,1,36,1,0,1,35,0,0,134,11,0,0,24,55,6,0,37,36,35,0,41,35,11,24,42,35,35,24,0,12,35,0,26,26,12,48,35,24,26,10,121,24,5,0,0,4,9,0,0,28,26,0,0,30,10,0,119,0,238,255,0,29,10,0,119,0,2,0,1,29,0,0,33,13,32,0,1,35,0,0,4,14,35,29,125,15,13,29,14,0,0,0,139,15,0,0,140,3,46,0,0,0,0,0,1,40,0,0,136,42,0,0,0,41,42,0,136,42,0,0,25,42,42,32,137,42,0,0,130,42,0,0,136,43,0,0,49,42,42,43,252,8,5,0,135,42,0,0,25,39,41,4,0,4,0,0,0,15,1,0,0,26,2,0,1,43,0,0,1,44,4,0,134,42,0,0,116,78,6,0,39,43,44,0,1,37,0,0,2,42,0,0,80,159,0,0,1,44,4,0,1,43,0,0,134,31,0,0,24,55,6,0,42,44,43,0,33,32,31,0,2,43,0,0,84,159,0,0,1,44,4,0,1,42,0,0,134,33,0,0,24,55,6,0,43,44,42,0,33,34,33,0,20,42,32,34,0,38,42,0,121,38,26,0,2,42,0,0,84,159,0,0,1,44,4,0,1,43,0,0,134,35,0,0,24,55,6,0,42,44,43,0,33,36,35,0,2,43,0,0,80,159,0,0,1,44,4,0,1,42,0,0,134,5,0,0,24,55,6,0,43,44,42,0,33,6,5,0,1,42,1,0,125,7,36,42,6,0,0,0,38,42,7,1,0,8,42,0,0,3,8,0,0,30,3,0,137,41,0,0,139,30,0,0,0,9,4,0,134,42,0,0,100,182,4,0,9,39,0,0,1,42,4,0,1,44,0,0,134,10,0,0,24,55,6,0,39,42,44,0,0,11,26,0,15,12,11,10,121,12,8,0,2,42,0,0,84,159,0,0,1,43,1,0,1,45,4,0,134,44,0,0,116,78,6,0,42,43,45,0,1,37,0,0,0,13,37,0,1,44,4,0,1,45,0,0,134,14,0,0,24,55,6,0,39,44,45,0,15,16,13,14,120,16,2,0,119,0,14,0,0,17,4,0,0,18,37,0,0,19,15,0,1,45,132,0,5,45,18,45,3,20,19,45,134,45,0,0,0,252,3,0,17,20,0,0,0,21,37,0,25,22,21,1,0,37,22,0,119,0,235,255,2,45,0,0,84,159,0,0,1,44,4,0,1,43,0,0,134,23,0,0,24,55,6,0,45,44,43,0,33,24,23,0,2,43,0,0,80,159,0,0,1,44,4,0,1,45,0,0,134,25,0,0,24,55,6,0,43,44,45,0,33,27,25,0,1,45,1,0,125,28,24,45,27,0,0,0,38,45,28,1,0,29,45,0,0,3,29,0,0,30,3,0,137,41,0,0,139,30,0,0,140,2,47,0,0,0,0,0,1,43,0,0,136,45,0,0,0,44,45,0,136,45,0,0,25,45,45,16,137,45,0,0,130,45,0,0,136,46,0,0,49,45,45,46,20,11,5,0,135,45,0,0,0,2,0,0,0,3,1,0,2,45,0,0,57,53,1,0,1,46,41,0,134,14,0,0,52,196,3,0,45,46,0,0,0,42,14,0,1,46,0,0,13,25,14,46,121,25,3,0,137,44,0,0,139,0,0,0,0,36,42,0,134,37,0,0,120,141,4,0,36,0,0,0,41,46,37,24,42,46,46,24,33,38,46,0,120,38,3,0,137,44,0,0,139,0,0,0,0,39,42,0,134,40,0,0,148,130,5,0,39,0,0,0,1,46,255,0,19,46,40,46,0,41,46,0,33,4,41,0,121,4,3,0,137,44,0,0,139,0,0,0,0,5,42,0,1,46,1,0,1,45,0,0,134,6,0,0,176,164,4,0,5,46,45,0,0,42,6,0,0,7,42,0,0,8,2,0,0,9,3,0,134,45,0,0,188,25,3,0,7,8,9,0,0,10,42,0,25,11,10,12,1,45,4,0,1,46,0,0,134,12,0,0,24,55,6,0,11,45,46,0,41,46,12,5,0,13,46,0,0,15,42,0,25,16,15,12,25,17,16,4,1,46,4,0,1,45,0,0,134,18,0,0,24,55,6,0,17,46,45,0,3,19,13,18,1,45,192,26,41,46,19,3,3,20,45,46,25,21,20,4,1,46,4,0,1,45,0,0,134,22,0,0,24,55,6,0,21,46,45,0,1,45,0,0,13,23,22,45,120,23,24,0,0,24,42,0,25,26,24,12,25,27,26,4,1,45,4,0,1,46,0,0,134,28,0,0,24,55,6,0,27,45,46,0,0,29,42,0,25,30,29,12,1,46,4,0,1,45,0,0,134,31,0,0,24,55,6,0,30,46,45,0,0,32,42,0,134,33,0,0,192,66,6,0,28,31,32,0,33,34,33,0,121,34,3,0,137,44,0,0,139,0,0,0,0,35,42,0,1,46,1,0,134,45,0,0,124,72,4,0,35,46,0,0,137,44,0,0,139,0,0,0,140,2,37,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,16,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,248,12,5,0,135,33,0,0,0,3,0,0,0,14,1,0,2,33,0,0,29,72,1,0,42,33,33,0,1,34,1,0,1,35,0,0,134,23,0,0,24,55,6,0,33,34,35,0,41,35,23,24,42,35,35,24,33,24,35,0,120,24,5,0,1,2,255,255,0,22,2,0,137,32,0,0,139,22,0,0,0,25,3,0,33,26,25,0,0,27,14,0,33,28,27,0,19,35,26,28,0,30,35,0,121,30,31,0,0,29,3,0,2,35,0,0,212,164,0,0,1,34,4,0,1,33,0,0,134,4,0,0,24,55,6,0,35,34,33,0,5,5,29,4,2,34,0,0,196,164,0,0,1,35,4,0,134,33,0,0,116,78,6,0,34,5,35,0,0,6,14,0,2,33,0,0,216,164,0,0,1,35,4,0,1,34,0,0,134,7,0,0,24,55,6,0,33,35,34,0,5,8,6,7,2,35,0,0,200,164,0,0,1,33,4,0,134,34,0,0,116,78,6,0,35,8,33,0,2,34,0,0,176,164,0,0,1,33,4,0,1,35,0,0,134,9,0,0,24,55,6,0,34,33,35,0,135,35,51,0,9,0,0,0,2,35,0,0,200,164,0,0,1,33,4,0,1,34,0,0,134,10,0,0,24,55,6,0,35,33,34,0,2,34,0,0,196,164,0,0,1,33,4,0,1,35,0,0,134,11,0,0,24,55,6,0,34,33,35,0,1,35,0,0,2,33,0,0,0,0,16,1,135,12,19,0,10,11,35,33,2,35,0,0,176,164,0,0,1,34,4,0,134,33,0,0,116,78,6,0,35,12,34,0,2,33,0,0,192,164,0,0,1,34,4,0,1,35,0,0,134,13,0,0,24,55,6,0,33,34,35,0,1,35,0,0,14,15,13,35,121,15,3,0,134,35,0,0,160,179,4,0,2,35,0,0,60,162,0,0,1,34,4,0,1,33,0,0,134,16,0,0,24,55,6,0,35,34,33,0,25,17,16,8,42,34,17,0,1,35,0,0,1,36,1,0,134,33,0,0,116,78,6,0,34,35,36,0,2,33,0,0,60,162,0,0,1,36,4,0,1,35,0,0,134,18,0,0,24,55,6,0,33,36,35,0,25,19,18,20,1,36,0,0,1,33,4,0,134,35,0,0,116,78,6,0,19,36,33,0,2,35,0,0,60,162,0,0,1,33,4,0,1,36,0,0,134,20,0,0,24,55,6,0,35,33,36,0,25,21,20,16,1,33,0,0,1,35,4,0,134,36,0,0,116,78,6,0,21,33,35,0,1,2,0,0,0,22,2,0,137,32,0,0,139,22,0,0,140,2,45,0,0,0,0,0,1,40,0,0,136,42,0,0,0,41,42,0,136,42,0,0,25,42,42,32,137,42,0,0,130,42,0,0,136,43,0,0,49,42,42,43,112,15,5,0,135,42,0,0,0,38,41,0,0,3,0,0,0,14,1,0,2,42,0,0,80,159,0,0,1,43,4,0,1,44,0,0,134,25,0,0,24,55,6,0,42,43,44,0,33,32,25,0,2,44,0,0,84,159,0,0,1,43,4,0,1,42,0,0,134,33,0,0,24,55,6,0,44,43,42,0,33,34,33,0,20,42,32,34,0,39,42,0,121,39,26,0,2,42,0,0,84,159,0,0,1,43,4,0,1,44,0,0,134,35,0,0,24,55,6,0,42,43,44,0,33,36,35,0,2,44,0,0,80,159,0,0,1,43,4,0,1,42,0,0,134,37,0,0,24,55,6,0,44,43,42,0,33,4,37,0,1,42,1,0,125,5,36,42,4,0,0,0,38,42,5,1,0,6,42,0,0,2,6,0,0,31,2,0,137,41,0,0,139,31,0,0,0,7,3,0,134,42,0,0,100,182,4,0,7,38,0,0,0,8,3,0,25,9,38,4,134,42,0,0,100,182,4,0,8,9,0,0,2,42,0,0,84,159,0,0,1,43,4,0,1,44,0,0,134,10,0,0,24,55,6,0,42,43,44,0,33,11,10,0,2,44,0,0,80,159,0,0,1,43,4,0,1,42,0,0,134,12,0,0,24,55,6,0,44,43,42,0,33,13,12,0,1,42,1,0,125,15,11,42,13,0,0,0,38,42,15,1,0,16,42,0,32,17,16,0,121,17,23,0,1,42,4,0,1,43,0,0,134,18,0,0,24,55,6,0,38,42,43,0,0,19,14,0,1,42,4,0,134,43,0,0,116,78,6,0,19,18,42,0,25,20,38,4,1,43,4,0,1,42,0,0,134,21,0,0,24,55,6,0,20,43,42,0,0,22,14,0,25,23,22,4,1,43,4,0,134,42,0,0,116,78,6,0,23,21,43,0,2,42,0,0,84,159,0,0,1,43,4,0,1,44,0,0,134,24,0,0,24,55,6,0,42,43,44,0,33,26,24,0,2,44,0,0,80,159,0,0,1,43,4,0,1,42,0,0,134,27,0,0,24,55,6,0,44,43,42,0,33,28,27,0,1,42,1,0,125,29,26,42,28,0,0,0,38,42,29,1,0,30,42,0,0,2,30,0,0,31,2,0,137,41,0,0,139,31,0,0,140,3,48,0,0,0,0,0,1,42,0,0,136,44,0,0,0,43,44,0,136,44,0,0,25,44,44,32,137,44,0,0,130,44,0,0,136,45,0,0,49,44,44,45,156,17,5,0,135,44,0,0,0,41,43,0,0,4,0,0,0,15,1,0,0,26,2,0,2,44,0,0,80,159,0,0,1,45,4,0,1,46,0,0,134,33,0,0,24,55,6,0,44,45,46,0,33,34,33,0,2,46,0,0,84,159,0,0,1,45,4,0,1,44,0,0,134,35,0,0,24,55,6,0,46,45,44,0,33,36,35,0,20,44,34,36,0,40,44,0,121,40,26,0,2,44,0,0,84,159,0,0,1,45,4,0,1,46,0,0,134,37,0,0,24,55,6,0,44,45,46,0,33,38,37,0,2,46,0,0,80,159,0,0,1,45,4,0,1,44,0,0,134,5,0,0,24,55,6,0,46,45,44,0,33,6,5,0,1,44,1,0,125,7,38,44,6,0,0,0,38,44,7,1,0,8,44,0,0,3,8,0,0,32,3,0,137,43,0,0,139,32,0,0,0,9,4,0,134,44,0,0,100,182,4,0,9,41,0,0,1,44,4,0,1,45,0,0,134,10,0,0,24,55,6,0,41,44,45,0,0,11,26,0,14,12,10,11,121,12,8,0,2,44,0,0,84,159,0,0,1,46,1,0,1,47,4,0,134,45,0,0,116,78,6,0,44,46,47,0,1,39,0,0,0,13,39,0,0,14,26,0,15,16,13,14,120,16,2,0,119,0,15,0,0,17,4,0,0,18,39,0,0,19,15,0,41,45,18,2,3,20,19,45,134,21,0,0,100,182,4,0,17,20,0,0,33,22,21,0,120,22,5,0,0,23,39,0,25,24,23,1,0,39,24,0,119,0,238,255,2,45,0,0,84,159,0,0,1,47,4,0,1,46,0,0,134,25,0,0,24,55,6,0,45,47,46,0,33,27,25,0,2,46,0,0,80,159,0,0,1,47,4,0,1,45,0,0,134,28,0,0,24,55,6,0,46,47,45,0,33,29,28,0,1,45,1,0,125,30,27,45,29,0,0,0,38,45,30,1,0,31,45,0,0,3,31,0,0,32,3,0,137,43,0,0,139,32,0,0,140,0,28,0,0,0,0,0,1,20,0,0,136,22,0,0,0,21,22,0,1,22,220,106,1,23,4,0,1,24,0,0,134,0,0,0,24,55,6,0,22,23,24,0,1,24,216,106,1,23,4,0,1,22,0,0,134,1,0,0,24,55,6,0,24,23,22,0,134,12,0,0,64,35,6,0,41,22,12,24,42,22,22,24,0,13,22,0,134,22,0,0,208,39,6,0,0,1,13,0,1,23,0,0,2,24,0,0,52,162,0,0,1,25,0,0,1,26,1,0,134,22,0,0,12,35,4,0,23,24,25,26,2,22,0,0,52,162,0,0,134,14,0,0,248,24,4,0,22,0,0,0,1,22,20,107,1,26,4,0,1,25,0,0,134,15,0,0,24,55,6,0,22,26,25,0,14,16,14,15,121,16,36,0,1,26,216,106,134,25,0,0,176,104,3,0,26,0,0,0,1,26,216,106,2,24,0,0,52,162,0,0,1,23,4,0,1,27,0,0,134,22,0,0,24,55,6,0,24,23,27,0,1,27,4,0,134,25,0,0,116,78,6,0,26,22,27,0,1,27,216,106,25,27,27,4,2,26,0,0,52,162,0,0,25,26,26,4,1,23,4,0,1,24,0,0,134,22,0,0,24,55,6,0,26,23,24,0,1,24,4,0,134,25,0,0,116,78,6,0,27,22,24,0,1,24,216,106,134,25,0,0,204,169,3,0,24,0,0,0,119,0,31,0,1,24,216,106,2,27,0,0,52,162,0,0,1,23,4,0,1,26,0,0,134,22,0,0,24,55,6,0,27,23,26,0,1,26,4,0,134,25,0,0,116,78,6,0,24,22,26,0,1,26,216,106,25,26,26,4,2,24,0,0,52,162,0,0,25,24,24,4,1,23,4,0,1,27,0,0,134,22,0,0,24,55,6,0,24,23,27,0,1,27,4,0,134,25,0,0,116,78,6,0,26,22,27,0,1,27,1,0,134,25,0,0,204,39,1,0,27,0,0,0,1,25,220,106,1,27,4,0,1,22,0,0,134,17,0,0,24,55,6,0,25,27,22,0,1,22,216,106,1,27,4,0,1,25,0,0,134,18,0,0,24,55,6,0,22,27,25,0,1,27,64,0,134,25,0,0,208,39,6,0,17,18,27,0,1,25,232,106,1,27,2,0,1,22,0,0,134,19,0,0,24,55,6,0,25,27,22,0,41,22,19,16,42,22,22,16,0,2,22,0,1,22,0,1,19,22,2,22,0,3,22,0,33,4,3,0,38,22,4,1,0,5,22,0,1,22,255,0,19,22,5,22,0,6,22,0,41,22,6,24,42,22,22,24,33,7,22,0,120,7,24,0,1,27,4,3,1,25,0,0,1,26,4,0,134,22,0,0,116,78,6,0,27,25,26,0,1,26,244,2,1,25,0,0,1,27,4,0,134,22,0,0,116,78,6,0,26,25,27,0,2,27,0,0,1,209,0,0,42,27,27,0,1,25,0,0,1,26,1,0,134,22,0,0,116,78,6,0,27,25,26,0,134,22,0,0,96,111,6,0,139,0,0,0,1,22,232,106,1,26,2,0,1,25,0,0,134,8,0,0,24,55,6,0,22,26,25,0,41,25,8,16,42,25,25,16,0,9,25,0,1,25,255,254,19,25,9,25,0,10,25,0,2,25,0,0,255,255,0,0,19,25,10,25,0,11,25,0,1,26,232,106,1,22,2,0,134,25,0,0,116,78,6,0,26,11,22,0,1,22,16,3,1,26,0,0,1,27,4,0,134,25,0,0,116,78,6,0,22,26,27,0,1,27,124,11,2,26,0,0,74,54,1,0,135,25,24,0,27,26,0,0,1,26,4,3,1,27,0,0,1,22,4,0,134,25,0,0,116,78,6,0,26,27,22,0,1,22,244,2,1,27,0,0,1,26,4,0,134,25,0,0,116,78,6,0,22,27,26,0,2,26,0,0,1,209,0,0,42,26,26,0,1,27,0,0,1,22,1,0,134,25,0,0,116,78,6,0,26,27,22,0,134,25,0,0,96,111,6,0,139,0,0,0,140,2,43,0,0,0,0,0,1,37,0,0,136,39,0,0,0,38,39,0,136,39,0,0,25,39,39,32,137,39,0,0,130,39,0,0,136,40,0,0,49,39,39,40,28,23,5,0,135,39,0,0,25,35,38,4,0,3,0,0,0,14,1,0,1,40,0,0,1,41,4,0,134,39,0,0,116,78,6,0,35,40,41,0,1,34,0,0,2,39,0,0,80,159,0,0,1,41,4,0,1,40,0,0,134,25,0,0,24,55,6,0,39,41,40,0,33,28,25,0,2,40,0,0,84,159,0,0,1,41,4,0,1,39,0,0,134,29,0,0,24,55,6,0,40,41,39,0,33,30,29,0,20,39,28,30,0,36,39,0,121,36,26,0,2,39,0,0,84,159,0,0,1,41,4,0,1,40,0,0,134,31,0,0,24,55,6,0,39,41,40,0,33,32,31,0,2,40,0,0,80,159,0,0,1,41,4,0,1,39,0,0,134,33,0,0,24,55,6,0,40,41,39,0,33,4,33,0,1,39,1,0,125,5,32,39,4,0,0,0,38,39,5,1,0,6,39,0,0,2,6,0,0,27,2,0,137,38,0,0,139,27,0,0,0,7,3,0,134,39,0,0,100,182,4,0,7,35,0,0,1,39,4,0,1,41,0,0,134,8,0,0,24,55,6,0,35,39,41,0,32,9,8,0,121,9,3,0,1,34,0,0,119,0,20,0,1,41,4,0,1,39,0,0,134,10,0,0,24,55,6,0,35,41,39,0,135,11,5,0,10,0,0,0,0,34,11,0,0,12,34,0,1,39,0,0,13,13,12,39,121,13,8,0,2,41,0,0,80,159,0,0,1,40,1,0,1,42,4,0,134,39,0,0,116,78,6,0,41,40,42,0,0,15,3,0,0,16,34,0,1,39,4,0,1,42,0,0,134,17,0,0,24,55,6,0,35,39,42,0,134,42,0,0,108,81,5,0,15,16,17,0,0,18,34,0,0,19,14,0,1,39,4,0,134,42,0,0,116,78,6,0,19,18,39,0,2,42,0,0,84,159,0,0,1,39,4,0,1,40,0,0,134,20,0,0,24,55,6,0,42,39,40,0,33,21,20,0,2,40,0,0,80,159,0,0,1,39,4,0,1,42,0,0,134,22,0,0,24,55,6,0,40,39,42,0,33,23,22,0,1,42,1,0,125,24,21,42,23,0,0,0,38,42,24,1,0,26,42,0,0,2,26,0,0,27,2,0,137,38,0,0,139,27,0,0,140,1,36,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,16,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,72,25,5,0,135,33,0,0,0,30,32,0,0,1,0,0,0,2,1,0,32,13,2,0,121,13,3,0,137,32,0,0,139,0,0,0,0,23,1,0,1,34,236,106,134,33,0,0,140,25,6,0,34,23,0,0,1,33,236,106,1,34,4,0,1,35,0,0,134,24,0,0,24,55,6,0,33,34,35,0,1,34,4,0,134,35,0,0,116,78,6,0,30,24,34,0,1,35,196,106,1,34,4,0,1,33,0,0,134,25,0,0,24,55,6,0,35,34,33,0,1,33,0,0,14,26,25,33,121,26,32,0,1,33,196,106,1,34,4,0,1,35,0,0,134,27,0,0,24,55,6,0,33,34,35,0,25,28,27,52,1,35,4,0,1,34,0,0,134,29,0,0,24,55,6,0,28,35,34,0,32,3,29,1,121,3,18,0,1,34,196,106,1,35,4,0,1,33,0,0,134,4,0,0,24,55,6,0,34,35,33,0,25,5,4,64,1,33,4,0,1,35,0,0,134,6,0,0,24,55,6,0,5,33,35,0,1,35,0,0,4,7,35,6,134,35,0,0,140,25,6,0,30,7,0,0,1,35,200,106,1,33,4,0,1,34,0,0,134,8,0,0,24,55,6,0,35,33,34,0,1,34,0,0,14,9,8,34,121,9,32,0,1,34,200,106,1,33,4,0,1,35,0,0,134,10,0,0,24,55,6,0,34,33,35,0,25,11,10,52,1,35,4,0,1,33,0,0,134,12,0,0,24,55,6,0,11,35,33,0,32,14,12,1,121,14,18,0,1,33,200,106,1,35,4,0,1,34,0,0,134,15,0,0,24,55,6,0,33,35,34,0,25,16,15,64,1,34,4,0,1,35,0,0,134,17,0,0,24,55,6,0,16,34,35,0,1,35,0,0,4,18,35,17,134,35,0,0,140,25,6,0,30,18,0,0,1,35,4,0,1,34,0,0,134,19,0,0,24,55,6,0,30,35,34,0,1,34,124,3,1,35,4,0,1,33,0,0,134,20,0,0,24,55,6,0,34,35,33,0,16,21,20,19,120,21,3,0,137,32,0,0,139,0,0,0,1,33,4,0,1,35,0,0,134,22,0,0,24,55,6,0,30,33,35,0,1,33,124,3,1,34,4,0,134,35,0,0,116,78,6,0,33,22,34,0,137,32,0,0,139,0,0,0,140,0,33,0,0,0,0,0,1,27,0,0,136,29,0,0,0,28,29,0,136,29,0,0,25,29,29,48,137,29,0,0,130,29,0,0,136,30,0,0,49,29,29,30,128,27,5,0,135,29,0,0,25,26,28,32,25,25,28,24,25,24,28,16,25,23,28,8,0,22,28,0,2,29,0,0,32,203,0,0,1,30,93,0,134,0,0,0,52,196,3,0,29,30,0,0,0,20,0,0,1,30,0,0,13,1,0,30,121,1,3,0,137,28,0,0,139,0,0,0,1,30,192,106,1,29,4,0,1,31,0,0,134,12,0,0,24,55,6,0,30,29,31,0,1,31,0,0,14,13,12,31,121,13,35,0,2,29,0,0,37,203,0,0,134,31,0,0,112,85,6,0,29,22,0,0,2,31,0,0,5,209,0,0,42,31,31,0,1,29,1,0,1,30,0,0,134,14,0,0,24,55,6,0,31,29,30,0,41,30,14,24,42,30,30,24,33,15,30,0,120,15,6,0,2,29,0,0,66,203,0,0,134,30,0,0,112,85,6,0,29,23,0,0,134,30,0,0,120,187,4,0,2,29,0,0,38,217,0,0,42,29,29,0,1,31,0,0,1,32,1,0,134,30,0,0,116,78,6,0,29,31,32,0,137,28,0,0,139,0,0,0,0,16,20,0,25,17,16,8,1,30,4,0,1,32,0,0,134,18,0,0,24,55,6,0,17,30,32,0,33,19,18,93,121,19,8,0,2,30,0,0,102,203,0,0,134,32,0,0,144,18,6,0,30,24,0,0,137,28,0,0,139,0,0,0,134,32,0,0,52,95,6,0,0,2,20,0,25,3,2,68,1,32,4,0,1,30,0,0,134,4,0,0,24,55,6,0,3,32,30,0,39,30,4,2,0,5,30,0,1,32,4,0,134,30,0,0,116,78,6,0,3,5,32,0,0,6,20,0,1,30,1,0,134,7,0,0,208,181,1,0,6,30,0,0,0,21,7,0,0,8,20,0,1,32,192,106,1,31,4,0,134,30,0,0,116,78,6,0,32,8,31,0,2,30,0,0,5,209,0,0,42,30,30,0,1,31,1,0,1,32,0,0,134,9,0,0,24,55,6,0,30,31,32,0,41,32,9,24,42,32,32,24,33,10,32,0,120,10,6,0,2,31,0,0,155,53,1,0,134,32,0,0,112,85,6,0,31,25,0,0,0,11,21,0,1,31,4,0,134,32,0,0,116,78,6,0,26,11,31,0,2,31,0,0,122,203,0,0,134,32,0,0,144,18,6,0,31,26,0,0,137,28,0,0,139,0,0,0,140,3,37,0,0,0,0,0,1,32,0,0,136,34,0,0,0,33,34,0,32,5,2,1,121,5,19,0,25,6,0,8,1,34,4,0,1,35,0,0,134,17,0,0,24,55,6,0,6,34,35,0,25,25,0,4,1,35,4,0,1,34,0,0,134,26,0,0,24,55,6,0,25,35,34,0,0,27,17,0,0,28,26,0,4,29,1,27,3,30,29,28,0,4,30,0,119,0,2,0,0,4,1,0,25,31,0,20,1,34,4,0,1,35,0,0,134,7,0,0,24,55,6,0,31,34,35,0,25,8,0,28,1,35,4,0,1,34,0,0,134,9,0,0,24,55,6,0,8,35,34,0,16,10,9,7,121,10,23,0,25,11,0,36,1,34,4,0,1,35,0,0,134,12,0,0,24,55,6,0,11,34,35,0,1,34,0,0,1,36,0,0,135,35,49,0,12,0,34,36,1,35,4,0,1,36,0,0,134,13,0,0,24,55,6,0,31,35,36,0,1,36,0,0,13,14,13,36,121,14,3,0,1,3,255,255,119,0,4,0,1,32,5,0,119,0,2,0,1,32,5,0,32,36,32,5,121,36,53,0,25,15,0,16,1,35,0,0,1,34,4,0,134,36,0,0,116,78,6,0,15,35,34,0,1,34,0,0,1,35,4,0,134,36,0,0,116,78,6,0,8,34,35,0,1,35,0,0,1,34,4,0,134,36,0,0,116,78,6,0,31,35,34,0,25,16,0,40,1,36,4,0,1,34,0,0,134,18,0,0,24,55,6,0,16,36,34,0,135,19,49,0,18,0,4,2,34,20,19,0,121,20,3,0,1,3,255,255,119,0,25,0,25,21,0,8,1,36,0,0,1,35,4,0,134,34,0,0,116,78,6,0,21,36,35,0,25,22,0,4,1,35,0,0,1,36,4,0,134,34,0,0,116,78,6,0,22,35,36,0,1,34,4,0,1,36,0,0,134,23,0,0,24,55,6,0,0,34,36,0,38,36,23,239,0,24,36,0,1,34,4,0,134,36,0,0,116,78,6,0,0,24,34,0,1,3,0,0,139,3,0,0,140,2,42,0,0,0,0,0,1,37,0,0,136,39,0,0,0,38,39,0,136,39,0,0,25,39,39,16,137,39,0,0,130,39,0,0,136,40,0,0,49,39,39,40,156,31,5,0,135,39,0,0,0,3,0,0,0,14,1,0,2,39,0,0,76,159,0,0,1,40,4,0,1,41,0,0,134,25,0,0,24,55,6,0,39,40,41,0,33,31,25,0,121,31,13,0,2,41,0,0,76,159,0,0,1,40,4,0,1,39,0,0,134,32,0,0,24,55,6,0,41,40,39,0,0,2,32,0,0,30,2,0,137,38,0,0,139,30,0,0,119,0,90,0,0,33,3,0,2,40,0,0,1,0,205,171,134,39,0,0,72,32,6,0,33,40,0,0,0,34,3,0,0,35,14,0,1,39,4,0,1,40,0,0,134,36,0,0,24,55,6,0,35,39,40,0,134,40,0,0,112,31,6,0,34,36,0,0,0,4,3,0,0,5,14,0,25,6,5,4,1,40,4,0,1,39,0,0,134,7,0,0,24,55,6,0,6,40,39,0,134,39,0,0,156,47,5,0,4,7,0,0,0,8,3,0,0,9,14,0,25,10,9,8,1,39,4,0,1,40,0,0,134,11,0,0,24,55,6,0,10,39,40,0,134,40,0,0,156,47,5,0,8,11,0,0,0,12,3,0,0,13,14,0,25,15,13,12,1,40,4,0,1,39,0,0,134,16,0,0,24,55,6,0,15,40,39,0,134,39,0,0,156,47,5,0,12,16,0,0,0,17,3,0,0,18,14,0,25,19,18,16,1,39,4,0,1,40,0,0,134,20,0,0,24,55,6,0,19,39,40,0,134,40,0,0,156,47,5,0,17,20,0,0,0,21,3,0,0,22,14,0,25,23,22,20,1,39,13,0,134,40,0,0,56,10,6,0,21,23,39,0,0,24,3,0,0,26,14,0,25,27,26,36,1,40,4,0,1,39,0,0,134,28,0,0,24,55,6,0,27,40,39,0,134,39,0,0,156,47,5,0,24,28,0,0,2,39,0,0,76,159,0,0,1,40,4,0,1,41,0,0,134,29,0,0,24,55,6,0,39,40,41,0,0,2,29,0,0,30,2,0,137,38,0,0,139,30,0,0,1,41,0,0,139,41,0,0,140,3,44,0,0,0,0,0,2,40,0,0,255,0,0,0,1,38,0,0,136,41,0,0,0,39,41,0,1,41,0,0,16,19,41,1,1,41,255,255,16,30,41,0,32,31,1,0,19,41,31,30,0,32,41,0,20,41,19,32,0,33,41,0,121,33,49,0,0,5,2,0,0,34,0,0,0,35,1,0,1,41,10,0,1,42,0,0,134,36,0,0,12,78,6,0,34,35,41,42,128,42,0,0,0,9,42,0,39,42,36,48,0,10,42,0,19,42,10,40,0,11,42,0,26,12,5,1,42,41,12,0,1,43,1,0,134,42,0,0,116,78,6,0,41,11,43,0,1,42,10,0,1,43,0,0,134,13,0,0,156,104,6,0,34,35,42,43,128,43,0,0,0,14,43,0,1,43,9,0,16,15,43,35,1,43,255,255,16,16,43,34,32,17,35,9,19,43,17,16,0,18,43,0,20,43,15,18,0,20,43,0,121,20,5,0,0,5,12,0,0,34,13,0,0,35,14,0,119,0,219,255,0,8,12,0,0,28,13,0,0,29,14,0,119,0,1,0,0,3,8,0,0,4,28,0,119,0,3,0,0,3,2,0,0,4,0,0,32,21,4,0,121,21,3,0,0,6,3,0,119,0,26,0,0,7,3,0,0,37,4,0,31,43,37,10,38,43,43,255,0,22,43,0,39,43,22,48,0,23,43,0,19,43,23,40,0,24,43,0,26,25,7,1,42,42,25,0,1,41,1,0,134,43,0,0,116,78,6,0,42,24,41,0,29,43,37,10,38,43,43,255,0,26,43,0,35,27,37,10,121,27,3,0,0,6,25,0,119,0,4,0,0,7,25,0,0,37,26,0,119,0,234,255,139,6,0,0,140,1,44,0,0,0,0,0,1,39,0,0,136,41,0,0,0,40,41,0,136,41,0,0,25,41,41,16,137,41,0,0,130,41,0,0,136,42,0,0,49,41,41,42,28,35,5,0,135,41,0,0,0,2,0,0,0,13,2,0,25,24,13,24,1,41,2,0,1,42,0,0,134,33,0,0,24,55,6,0,24,41,42,0,41,42,33,16,42,42,42,16,0,34,42,0,2,42,0,0,0,128,0,0,19,42,34,42,0,35,42,0,33,36,35,0,38,42,36,1,0,37,42,0,1,42,255,0,19,42,37,42,0,38,42,0,41,42,38,24,42,42,42,24,33,3,42,0,121,3,16,0,0,4,2,0,25,5,4,16,42,42,5,0,1,41,1,0,1,43,0,0,134,6,0,0,24,55,6,0,42,41,43,0,1,43,255,0,19,43,6,43,0,7,43,0,33,8,7,0,121,8,4,0,1,39,3,0,119,0,2,0,1,39,3,0,32,43,39,3,121,43,11,0,0,9,2,0,134,10,0,0,24,195,1,0,9,0,0,0,32,11,10,255,121,11,5,0,1,1,255,255,0,32,1,0,137,40,0,0,139,32,0,0,0,12,2,0,25,14,12,24,1,43,2,0,1,41,0,0,134,15,0,0,24,55,6,0,14,43,41,0,41,41,15,16,42,41,41,16,0,16,41,0,38,41,16,64,0,17,41,0,33,18,17,0,38,41,18,1,0,19,41,0,1,41,255,0,19,41,19,41,0,20,41,0,41,41,20,24,42,41,41,24,33,21,41,0,121,21,11,0,0,22,2,0,134,23,0,0,24,195,1,0,22,0,0,0,32,25,23,255,121,25,5,0,1,1,255,255,0,32,1,0,137,40,0,0,139,32,0,0,0,26,2,0,25,27,26,16,42,41,27,0,1,43,1,0,1,42,0,0,134,28,0,0,24,55,6,0,41,43,42,0,1,42,255,0,19,42,28,42,0,29,42,0,40,42,29,1,0,30,42,0,1,42,255,0,19,42,30,42,0,31,42,0,42,43,27,0,1,41,1,0,134,42,0,0,116,78,6,0,43,31,41,0,1,1,0,0,0,32,1,0,137,40,0,0,139,32,0,0,140,1,31,0,0,0,0,0,1,25,0,0,136,27,0,0,0,26,27,0,136,27,0,0,25,27,27,32,137,27,0,0,130,27,0,0,136,28,0,0,49,27,27,28,8,37,5,0,135,27,0,0,25,24,26,8,0,23,26,0,0,1,0,0,0,2,1,0,25,13,2,0,0,1,13,0,2,27,0,0,0,209,0,0,42,27,27,0,1,28,1,0,1,29,0,0,134,14,0,0,24,55,6,0,27,28,29,0,41,29,14,24,42,29,29,24,33,15,29,0,120,15,7,0,1,28,204,2,1,27,0,0,1,30,4,0,134,29,0,0,116,78,6,0,28,27,30,0,2,29,0,0,64,162,0,0,1,30,4,0,1,27,0,0,134,16,0,0,24,55,6,0,29,30,27,0,134,17,0,0,76,79,6,0,16,0,0,0,0,22,17,0,2,27,0,0,64,162,0,0,1,30,4,0,1,29,0,0,134,18,0,0,24,55,6,0,27,30,29,0,134,19,0,0,168,75,6,0,18,0,0,0,0,21,19,0,2,30,0,0,147,12,1,0,134,29,0,0,144,18,6,0,30,23,0,0,134,20,0,0,24,71,6,0,41,29,20,24,42,29,29,24,0,3,29,0,32,4,3,121,121,4,63,0,1,30,2,0,1,27,25,0,135,29,25,0,30,27,0,0,134,29,0,0,32,107,6,0,2,29,0,0,76,162,0,0,1,27,4,0,1,30,0,0,134,5,0,0,24,55,6,0,29,27,30,0,26,6,5,2,1,30,8,3,1,27,4,0,1,29,0,0,134,7,0,0,24,55,6,0,30,27,29,0,1,27,4,0,134,29,0,0,116,78,6,0,24,7,27,0,1,27,0,0,2,30,0,0,160,12,1,0,134,29,0,0,92,8,6,0,6,27,30,24,2,29,0,0,76,162,0,0,1,30,4,0,1,27,0,0,134,8,0,0,24,55,6,0,29,30,27,0,26,9,8,1,1,30,0,0,134,27,0,0,124,108,5,0,9,30,0,0,134,27,0,0,224,106,6,0,1,27,8,3,1,30,4,0,1,29,0,0,134,10,0,0,24,55,6,0,27,30,29,0,1,30,1,0,1,27,0,0,134,29,0,0,240,255,1,0,10,30,27,0,1,27,0,0,134,29,0,0,20,99,6,0,27,0,0,0,137,26,0,0,139,0,0,0,119,0,39,0,1,27,0,0,1,30,0,0,134,29,0,0,124,108,5,0,27,30,0,0,134,29,0,0,160,106,6,0,134,29,0,0,196,168,2,0,0,11,22,0,0,12,21,0,134,29,0,0,124,108,5,0,11,12,0,0,134,29,0,0,224,106,6,0,1,30,204,2,1,27,0,0,1,28,4,0,134,29,0,0,116,78,6,0,30,27,28,0,1,28,244,2,1,27,0,0,1,30,4,0,134,29,0,0,116,78,6,0,28,27,30,0,2,30,0,0,6,209,0,0,42,30,30,0,1,27,0,0,1,28,1,0,134,29,0,0,116,78,6,0,30,27,28,0,137,26,0,0,139,0,0,0,139,0,0,0,140,0,31,0,0,0,0,0,2,26,0,0,5,209,0,0,1,24,0,0,136,27,0,0,0,25,27,0,136,27,0,0,25,27,27,48,137,27,0,0,130,27,0,0,136,28,0,0,49,27,27,28,192,39,5,0,135,27,0,0,25,23,25,24,25,22,25,16,25,21,25,8,0,20,25,0,42,27,26,0,1,28,1,0,1,29,0,0,134,1,0,0,24,55,6,0,27,28,29,0,41,29,1,24,42,29,29,24,33,9,29,0,121,9,7,0,2,28,0,0,78,37,1,0], eb + 327680);
  HEAPU8.set([134,29,0,0,144,18,6,0,28,20,0,0,119,0,6,0,2,28,0,0,99,37,1,0,134,29,0,0,144,18,6,0,28,21,0,0,134,10,0,0,24,71,6,0,41,29,10,24,42,29,29,24,0,11,29,0,0,17,11,0,32,12,11,27,121,12,3,0,1,24,6,0,119,0,47,0,1,28,204,2,1,27,0,0,1,30,4,0,134,29,0,0,116,78,6,0,28,27,30,0,0,13,17,0,32,14,13,108,0,15,17,0,32,16,15,76,20,29,14,16,0,18,29,0,121,18,3,0,1,24,8,0,119,0,32,0,0,2,17,0,32,3,2,114,0,4,17,0,32,5,4,82,20,29,3,5,0,19,29,0,121,19,3,0,1,24,10,0,119,0,23,0,42,29,26,0,1,30,1,0,1,27,0,0,134,6,0,0,24,55,6,0,29,30,27,0,41,27,6,24,42,27,27,24,33,7,27,0,121,7,7,0,2,30,0,0,125,37,1,0,134,27,0,0,144,18,6,0,30,22,0,0,119,0,186,255,2,30,0,0,132,37,1,0,134,27,0,0,144,18,6,0,30,23,0,0,119,0,180,255,32,27,24,6,121,27,6,0,1,0,255,255,0,8,0,0,137,25,0,0,139,8,0,0,119,0,14,0,32,27,24,8,121,27,6,0,1,0,0,0,0,8,0,0,137,25,0,0,139,8,0,0,119,0,7,0,32,27,24,10,121,27,5,0,1,0,1,0,0,8,0,0,137,25,0,0,139,8,0,0,1,27,0,0,139,27,0,0,140,2,41,0,0,0,0,0,1,36,0,0,136,38,0,0,0,37,38,0,136,38,0,0,25,38,38,16,137,38,0,0,130,38,0,0,136,39,0,0,49,38,38,39,144,41,5,0,135,38,0,0,0,2,0,0,0,3,1,0,0,14,2,0,1,38,2,0,1,39,0,0,134,25,0,0,24,55,6,0,14,38,39,0,41,39,25,16,42,39,39,16,0,30,39,0,32,31,30,255,121,31,48,0,2,39,0,0,60,162,0,0,1,38,4,0,1,40,0,0,134,32,0,0,24,55,6,0,39,38,40,0,25,33,32,9,42,40,33,0,1,38,1,0,1,39,0,0,134,34,0,0,24,55,6,0,40,38,39,0,1,39,255,0,19,39,34,39,0,35,39,0,33,4,35,0,121,4,19,0,2,39,0,0,60,162,0,0,1,38,4,0,1,40,0,0,134,5,0,0,24,55,6,0,39,38,40,0,25,6,5,10,1,40,2,0,1,38,0,0,134,7,0,0,24,55,6,0,6,40,38,0,41,38,7,16,42,38,38,16,0,8,38,0,0,10,8,0,119,0,2,0,1,10,7,0,2,38,0,0,255,255,0,0,19,38,10,38,0,9,38,0,0,11,2,0,1,40,2,0,134,38,0,0,116,78,6,0,11,9,40,0,0,12,3,0,1,38,2,0,1,40,0,0,134,13,0,0,24,55,6,0,12,38,40,0,41,40,13,16,42,40,40,16,0,15,40,0,32,16,15,255,120,16,3,0,137,37,0,0,139,0,0,0,2,40,0,0,60,162,0,0,1,38,4,0,1,39,0,0,134,17,0,0,24,55,6,0,40,38,39,0,25,18,17,9,42,39,18,0,1,38,1,0,1,40,0,0,134,19,0,0,24,55,6,0,39,38,40,0,1,40,255,0,19,40,19,40,0,20,40,0,33,21,20,0,121,21,19,0,2,40,0,0,60,162,0,0,1,38,4,0,1,39,0,0,134,22,0,0,24,55,6,0,40,38,39,0,25,23,22,12,1,39,2,0,1,38,0,0,134,24,0,0,24,55,6,0,23,39,38,0,41,38,24,16,42,38,38,16,0,26,38,0,0,28,26,0,119,0,2,0,1,28,0,0,2,38,0,0,255,255,0,0,19,38,28,38,0,27,38,0,0,29,3,0,1,39,2,0,134,38,0,0,116,78,6,0,29,27,39,0,137,37,0,0,139,0,0,0,140,0,28,0,0,0,0,0,1,22,0,0,136,24,0,0,0,23,24,0,136,24,0,0,25,24,24,48,137,24,0,0,130,24,0,0,136,25,0,0,49,24,24,25,172,43,5,0,135,24,0,0,25,20,23,32,25,19,23,24,25,18,23,16,25,17,23,8,0,16,23,0,1,24,192,106,1,25,4,0,1,26,0,0,134,0,0,0,24,55,6,0,24,25,26,0,0,15,0,0,1,26,0,0,13,1,0,26,121,1,36,0,2,25,0,0,38,217,0,0,42,25,25,0,1,24,0,0,1,27,1,0,134,26,0,0,116,78,6,0,25,24,27,0,2,26,0,0,5,209,0,0,42,26,26,0,1,27,1,0,1,24,0,0,134,7,0,0,24,55,6,0,26,27,24,0,41,24,7,24,42,24,24,24,33,8,24,0,121,8,9,0,2,27,0,0,133,203,0,0,134,24,0,0,144,18,6,0,27,16,0,0,137,23,0,0,139,0,0,0,119,0,8,0,2,27,0,0,151,203,0,0,134,24,0,0,144,18,6,0,27,17,0,0,137,23,0,0,139,0,0,0,1,24,192,106,1,27,4,0,1,26,0,0,134,9,0,0,24,55,6,0,24,27,26,0,134,10,0,0,120,141,4,0,9,0,0,0,41,26,10,24,42,26,26,24,33,11,26,0,120,11,3,0,137,23,0,0,139,0,0,0,1,27,192,106,1,24,0,0,1,25,4,0,134,26,0,0,116,78,6,0,27,24,25,0,2,26,0,0,5,209,0,0,42,26,26,0,1,25,1,0,1,24,0,0,134,12,0,0,24,55,6,0,26,25,24,0,41,24,12,24,42,24,24,24,33,13,24,0,121,13,7,0,2,25,0,0,180,203,0,0,134,24,0,0,112,85,6,0,25,18,0,0,119,0,6,0,2,25,0,0,184,203,0,0,134,24,0,0,112,85,6,0,25,19,0,0,0,14,15,0,25,2,14,28,42,24,2,0,1,25,1,0,1,26,0,0,134,3,0,0,24,55,6,0,24,25,26,0,41,26,3,24,42,26,26,24,0,4,26,0,0,5,15,0,1,26,1,0,134,6,0,0,208,181,1,0,5,26,0,0,1,25,4,0,134,26,0,0,116,78,6,0,20,4,25,0,25,21,20,4,1,25,4,0,134,26,0,0,116,78,6,0,21,6,25,0,2,25,0,0,199,203,0,0,134,26,0,0,144,18,6,0,25,20,0,0,137,23,0,0,139,0,0,0,140,2,36,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,32,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,216,45,5,0,135,33,0,0,25,14,32,4,25,30,32,16,0,3,0,0,1,34,4,0,134,33,0,0,116,78,6,0,14,1,34,0,0,29,14,0,2,33,0,0,76,159,0,0,1,34,4,0,1,35,0,0,134,22,0,0,24,55,6,0,33,34,35,0,33,23,22,0,121,23,12,0,2,35,0,0,76,159,0,0,1,34,4,0,1,33,0,0,134,24,0,0,24,55,6,0,35,34,33,0,0,2,24,0,0,21,2,0,137,32,0,0,139,21,0,0,2,33,0,0,88,159,0,0,42,33,33,0,1,34,1,0,1,35,0,0,134,25,0,0,24,55,6,0,33,34,35,0,41,35,25,24,42,35,35,24,0,26,35,0,32,27,26,1,121,27,56,0,0,28,29,0,42,35,28,0,1,34,1,0,1,33,0,0,134,4,0,0,24,55,6,0,35,34,33,0,25,5,30,3,42,34,5,0,1,35,1,0,134,33,0,0,116,78,6,0,34,4,35,0,0,6,29,0,25,7,6,1,42,33,7,0,1,35,1,0,1,34,0,0,134,8,0,0,24,55,6,0,33,35,34,0,25,9,30,2,42,35,9,0,1,33,1,0,134,34,0,0,116,78,6,0,35,8,33,0,0,10,29,0,25,11,10,2,42,34,11,0,1,33,1,0,1,35,0,0,134,12,0,0,24,55,6,0,34,33,35,0,25,13,30,1,42,33,13,0,1,34,1,0,134,35,0,0,116,78,6,0,33,12,34,0,0,15,29,0,25,16,15,3,42,35,16,0,1,34,1,0,1,33,0,0,134,17,0,0,24,55,6,0,35,34,33,0,42,34,30,0,1,35,1,0,134,33,0,0,116,78,6,0,34,17,35,0,0,29,30,0,0,18,3,0,0,19,29,0,1,35,4,0,134,33,0,0,72,4,6,0,18,19,35,0,2,33,0,0,76,159,0,0,1,35,4,0,1,34,0,0,134,20,0,0,24,55,6,0,33,35,34,0,0,2,20,0,0,21,2,0,137,32,0,0,139,21,0,0,140,2,36,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,32,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,208,47,5,0,135,33,0,0,25,14,32,4,25,30,32,16,0,3,0,0,1,34,4,0,134,33,0,0,116,78,6,0,14,1,34,0,0,29,14,0,2,33,0,0,76,159,0,0,1,34,4,0,1,35,0,0,134,22,0,0,24,55,6,0,33,34,35,0,33,23,22,0,121,23,12,0,2,35,0,0,76,159,0,0,1,34,4,0,1,33,0,0,134,24,0,0,24,55,6,0,35,34,33,0,0,2,24,0,0,21,2,0,137,32,0,0,139,21,0,0,2,33,0,0,88,159,0,0,42,33,33,0,1,34,1,0,1,35,0,0,134,25,0,0,24,55,6,0,33,34,35,0,41,35,25,24,42,35,35,24,0,26,35,0,32,27,26,1,121,27,56,0,0,28,29,0,42,35,28,0,1,34,1,0,1,33,0,0,134,4,0,0,24,55,6,0,35,34,33,0,25,5,30,3,42,34,5,0,1,35,1,0,134,33,0,0,116,78,6,0,34,4,35,0,0,6,29,0,25,7,6,1,42,33,7,0,1,35,1,0,1,34,0,0,134,8,0,0,24,55,6,0,33,35,34,0,25,9,30,2,42,35,9,0,1,33,1,0,134,34,0,0,116,78,6,0,35,8,33,0,0,10,29,0,25,11,10,2,42,34,11,0,1,33,1,0,1,35,0,0,134,12,0,0,24,55,6,0,34,33,35,0,25,13,30,1,42,33,13,0,1,34,1,0,134,35,0,0,116,78,6,0,33,12,34,0,0,15,29,0,25,16,15,3,42,35,16,0,1,34,1,0,1,33,0,0,134,17,0,0,24,55,6,0,35,34,33,0,42,34,30,0,1,35,1,0,134,33,0,0,116,78,6,0,34,17,35,0,0,29,30,0,0,18,3,0,0,19,29,0,1,35,4,0,134,33,0,0,72,4,6,0,18,19,35,0,2,33,0,0,76,159,0,0,1,35,4,0,1,34,0,0,134,20,0,0,24,55,6,0,33,35,34,0,0,2,20,0,0,21,2,0,137,32,0,0,139,21,0,0,140,0,42,0,0,0,0,0,2,36,0,0,125,33,1,0,2,37,0,0,132,0,0,0,1,34,0,0,136,38,0,0,0,35,38,0,136,38,0,0,25,38,38,16,137,38,0,0,130,38,0,0,136,39,0,0,49,38,38,39,216,49,5,0,135,38,0,0,1,39,208,118,1,40,0,0,1,41,4,0,134,38,0,0,116,78,6,0,39,40,41,0,42,41,36,0,1,40,0,0,1,39,1,0,134,38,0,0,116,78,6,0,41,40,39,0,1,33,164,3,0,0,33,0,1,1,88,10,16,12,0,1,120,12,2,0,119,0,12,0,0,23,33,0,25,26,23,32,1,39,0,0,1,40,4,0,134,38,0,0,116,78,6,0,26,39,40,0,0,27,33,0,3,28,27,37,0,33,28,0,119,0,241,255,1,33,36,107,0,29,33,0,1,30,200,111,16,31,29,30,120,31,2,0,119,0,60,0,1,32,0,0,0,2,32,0,0,3,33,0,25,4,3,32,1,38,4,0,1,40,0,0,134,5,0,0,24,55,6,0,4,38,40,0,15,6,2,5,120,6,2,0,119,0,44,0,42,40,36,0,1,38,1,0,1,39,0,0,134,7,0,0,24,55,6,0,40,38,39,0,25,39,7,1,41,39,39,24,42,39,39,24,0,8,39,0,42,38,36,0,1,40,1,0,134,39,0,0,116,78,6,0,38,8,40,0,0,9,32,0,0,10,33,0,25,11,10,36,41,39,9,3,3,13,11,39,25,14,13,4,1,39,4,0,1,40,0,0,134,15,0,0,24,55,6,0,14,39,40,0,0,16,32,0,0,17,33,0,25,18,17,36,41,40,16,3,3,19,18,40,1,40,4,0,1,39,0,0,134,20,0,0,24,55,6,0,19,40,39,0,134,39,0,0,164,207,3,0,15,20,0,0,0,21,32,0,25,22,21,1,0,32,22,0,119,0,203,255,0,24,33,0,3,25,24,37,0,33,25,0,119,0,193,255,137,35,0,0,139,0,0,0,140,0,43,0,0,0,0,0,2,37,0,0,88,1,1,0,2,38,0,0,120,113,0,0,1,35,0,0,136,39,0,0,0,36,39,0,136,39,0,0,25,39,39,16,137,39,0,0,130,39,0,0,136,40,0,0,49,39,39,40,156,51,5,0,135,39,0,0,1,33,0,0,0,0,33,0,35,1,0,26,120,1,2,0,119,0,13,0,0,12,33,0,3,23,37,12,42,40,23,0,1,41,0,0,1,42,1,0,134,39,0,0,116,78,6,0,40,41,42,0,0,27,33,0,25,28,27,1,0,33,28,0,119,0,241,255,1,33,0,0,0,29,33,0,34,30,29,14,120,30,2,0,119,0,75,0,1,39,26,0,134,31,0,0,20,36,6,0,39,0,0,0,0,34,31,0,0,32,34,0,3,2,37,32,42,39,2,0,1,42,1,0,1,41,0,0,134,3,0,0,24,55,6,0,39,42,41,0,41,41,3,24,42,41,41,24,33,4,41,0,40,41,4,1,0,5,41,0,40,41,5,1,0,6,41,0,120,6,236,255,119,0,1,0,0,7,34,0,3,8,37,7,42,42,8,0,1,39,1,0,1,40,1,0,134,41,0,0,116,78,6,0,42,39,40,0,0,9,34,0,41,41,9,3,3,10,38,41,1,41,4,0,1,40,0,0,134,11,0,0,24,55,6,0,10,41,40,0,0,13,33,0,1,40,152,25,41,41,13,2,3,14,40,41,1,40,4,0,134,41,0,0,116,78,6,0,14,11,40,0,0,15,34,0,41,41,15,3,3,16,38,41,25,17,16,4,1,41,4,0,1,40,0,0,134,18,0,0,24,55,6,0,17,41,40,0,0,19,33,0,1,40,228,17,27,41,19,20,3,20,40,41,25,21,20,8,1,41,4,0,1,40,0,0,134,22,0,0,24,55,6,0,21,41,40,0,3,24,22,18,1,41,4,0,134,40,0,0,116,78,6,0,21,24,41,0,0,25,33,0,25,26,25,1,0,33,26,0,119,0,179,255,137,36,0,0,139,0,0,0,140,2,37,0,0,0,0,0,1,32,0,0,136,34,0,0,0,33,34,0,136,34,0,0,25,34,34,16,137,34,0,0,130,34,0,0,136,35,0,0,49,34,34,35,88,53,5,0,135,34,0,0,0,2,0,0,0,3,1,0,0,14,2,0,1,34,4,0,1,35,0,0,134,25,0,0,24,55,6,0,14,34,35,0,0,26,3,0,13,27,25,26,121,27,12,0,0,28,3,0,1,35,4,0,1,34,0,0,134,29,0,0,24,55,6,0,28,35,34,0,0,30,2,0,1,35,4,0,134,34,0,0,116,78,6,0,30,29,35,0,0,31,3,0,25,4,31,4,1,34,4,0,1,35,0,0,134,5,0,0,24,55,6,0,4,34,35,0,1,35,0,0,14,6,5,35,121,6,18,0,0,7,3,0,1,35,4,0,1,34,0,0,134,8,0,0,24,55,6,0,7,35,34,0,0,9,3,0,25,10,9,4,1,34,4,0,1,35,0,0,134,11,0,0,24,55,6,0,10,34,35,0,1,34,4,0,134,35,0,0,116,78,6,0,11,8,34,0,0,12,3,0,1,35,4,0,1,34,0,0,134,13,0,0,24,55,6,0,12,35,34,0,1,34,0,0,14,15,13,34,120,15,16,0,0,22,3,0,1,35,0,0,1,36,4,0,134,34,0,0,116,78,6,0,22,35,36,0,0,23,3,0,25,24,23,4,1,36,0,0,1,35,4,0,134,34,0,0,116,78,6,0,24,36,35,0,137,33,0,0,139,0,0,0,0,16,3,0,25,17,16,4,1,34,4,0,1,35,0,0,134,18,0,0,24,55,6,0,17,34,35,0,0,19,3,0,1,35,4,0,1,34,0,0,134,20,0,0,24,55,6,0,19,35,34,0,25,21,20,4,1,35,4,0,134,34,0,0,116,78,6,0,21,18,35,0,0,22,3,0,1,35,0,0,1,36,4,0,134,34,0,0,116,78,6,0,22,35,36,0,0,23,3,0,25,24,23,4,1,36,0,0,1,35,4,0,134,34,0,0,116,78,6,0,24,36,35,0,137,33,0,0,139,0,0,0,140,0,39,0,0,0,0,0,2,35,0,0,20,3,0,0,1,33,0,0,136,36,0,0,0,34,36,0,136,36,0,0,25,36,36,16,137,36,0,0,130,36,0,0,136,37,0,0,49,36,36,37,60,55,5,0,135,36,0,0,0,32,34,0,1,30,0,0,0,0,30,0,41,36,0,2,3,1,35,36,1,36,4,0,1,37,0,0,134,12,0,0,24,55,6,0,1,36,37,0,33,22,12,0,120,22,2,0,119,0,21,0,0,23,30,0,41,37,23,2,3,24,35,37,1,37,4,0,1,36,0,0,134,25,0,0,24,55,6,0,24,37,36,0,1,36,240,106,1,37,4,0,1,38,0,0,134,26,0,0,24,55,6,0,36,37,38,0,15,27,26,25,120,27,5,0,0,28,30,0,25,2,28,1,0,30,2,0,119,0,226,255,0,3,30,0,25,4,3,1,0,30,4,0,1,38,244,106,1,37,4,0,1,36,0,0,134,5,0,0,24,55,6,0,38,37,36,0,0,31,5,0,0,6,30,0,1,37,244,106,1,38,4,0,134,36,0,0,116,78,6,0,37,6,38,0,0,7,30,0,0,8,31,0,15,9,8,7,120,9,3,0,137,34,0,0,139,0,0,0,0,10,30,0,0,11,31,0,4,13,10,11,1,36,10,0,134,14,0,0,212,44,6,0,13,36,0,0,0,29,14,0,0,15,29,0,1,36,16,107,1,38,4,0,1,37,0,0,134,16,0,0,24,55,6,0,36,38,37,0,3,17,16,15,1,38,16,107,1,36,4,0,134,37,0,0,116,78,6,0,38,17,36,0,0,18,29,0,1,37,252,106,1,36,4,0,1,38,0,0,134,19,0,0,24,55,6,0,37,36,38,0,3,20,19,18,1,36,252,106,1,37,4,0,134,38,0,0,116,78,6,0,36,20,37,0,0,21,30,0,1,37,4,0,134,38,0,0,116,78,6,0,32,21,37,0,2,37,0,0,123,17,1,0,134,38,0,0,144,18,6,0,37,32,0,0,137,34,0,0,139,0,0,0,140,2,33,0,0,0,0,0,2,29,0,0,255,0,0,0,1,27,0,0,136,30,0,0,0,28,30,0,136,30,0,0,25,30,30,16,137,30,0,0,130,30,0,0,136,31,0,0,49,30,30,31,12,57,5,0,135,30,0,0,0,26,28,0,19,30,1,29,0,4,30,0,42,31,26,0,1,32,1,0,134,30,0,0,116,78,6,0,31,4,32,0,25,5,0,16,1,30,4,0,1,32,0,0,134,16,0,0,24,55,6,0,5,30,32,0,1,32,0,0,13,19,16,32,121,19,16,0,134,20,0,0,12,202,5,0,0,0,0,0,32,21,20,0,121,21,9,0,1,32,4,0,1,30,0,0,134,3,0,0,24,55,6,0,5,32,30,0,0,25,3,0,1,27,4,0,119,0,5,0,1,2,255,255,119,0,3,0,0,25,16,0,1,27,4,0,32,30,27,4,121,30,57,0,25,22,0,20,1,30,4,0,1,32,0,0,134,23,0,0,24,55,6,0,22,30,32,0,16,24,23,25,121,24,27,0,19,32,1,29,0,6,32,0,25,7,0,75,42,32,7,0,1,30,1,0,1,31,0,0,134,8,0,0,24,55,6,0,32,30,31,0,41,31,8,24,42,31,31,24,0,9,31,0,13,10,6,9,120,10,13,0,25,11,23,1,1,30,4,0,134,31,0,0,116,78,6,0,22,11,30,0,42,30,23,0,1,32,1,0,134,31,0,0,116,78,6,0,30,4,32,0,0,2,6,0,119,0,23,0,25,12,0,36,1,31,4,0,1,32,0,0,134,13,0,0,24,55,6,0,12,31,32,0,1,32,1,0,135,14,49,0,13,0,26,32,32,15,14,1,121,15,11,0,42,32,26,0,1,31,1,0,1,30,0,0,134,17,0,0,24,55,6,0,32,31,30,0,19,30,17,29,0,18,30,0,0,2,18,0,119,0,2,0,1,2,255,255,137,28,0,0,139,2,0,0,140,3,41,0,0,0,0,0,1,36,0,0,136,38,0,0,0,37,38,0,136,38,0,0,25,38,38,32,137,38,0,0,130,38,0,0,136,39,0,0,49,38,38,39,184,58,5,0,135,38,0,0,0,4,0,0,0,15,1,0,0,26,2,0,1,35,0,0,2,38,0,0,76,159,0,0,1,39,4,0,1,40,0,0,134,29,0,0,24,55,6,0,38,39,40,0,33,30,29,0,121,30,12,0,2,40,0,0,76,159,0,0,1,39,4,0,1,38,0,0,134,31,0,0,24,55,6,0,40,39,38,0,0,3,31,0,0,28,3,0,137,37,0,0,139,28,0,0,1,35,0,0,0,32,35,0,0,33,26,0,15,34,32,33,120,34,2,0,119,0,54,0,0,5,4,0,0,6,35,0,0,7,15,0,41,38,6,3,3,8,7,38,42,38,8,0,1,39,1,0,1,40,0,0,134,9,0,0,24,55,6,0,38,39,40,0,134,40,0,0,120,27,6,0,5,9,0,0,0,10,4,0,0,11,35,0,0,12,15,0,41,40,11,3,3,13,12,40,25,14,13,1,42,40,14,0,1,39,1,0,1,38,0,0,134,16,0,0,24,55,6,0,40,39,38,0,134,38,0,0,120,27,6,0,10,16,0,0,0,17,4,0,1,38,116,3,1,39,4,0,1,40,0,0,134,18,0,0,24,55,6,0,38,39,40,0,0,19,35,0,0,20,15,0,41,40,19,3,3,21,20,40,25,22,21,4,1,40,4,0,1,39,0,0,134,23,0,0,24,55,6,0,22,40,39,0,134,39,0,0,116,240,5,0,17,18,23,0,0,24,35,0,25,25,24,1,0,35,25,0,119,0,199,255,2,39,0,0,76,159,0,0,1,40,4,0,1,38,0,0,134,27,0,0,24,55,6,0,39,40,38,0,0,3,27,0,0,28,3,0,137,37,0,0,139,28,0,0,140,3,42,0,0,0,0,0,1,37,0,0,136,39,0,0,0,38,39,0,136,39,0,0,25,39,39,32,137,39,0,0,130,39,0,0,136,40,0,0,49,39,39,40,100,60,5,0,135,39,0,0,0,4,0,0,0,15,1,0,0,26,2,0,1,34,0,0,0,28,4,0,1,39,0,0,14,29,28,39,0,30,15,0,1,39,0,0,14,31,30,39,19,39,29,31,0,35,39,0,120,35,5,0,1,3,255,255,0,27,3,0,137,38,0,0,139,27,0,0,0,32,34,0,0,33,15,0,3,5,33,32,42,39,5,0,1,40,1,0,1,41,0,0,134,6,0,0,24,55,6,0,39,40,41,0,41,41,6,24,42,41,41,24,0,7,41,0,33,8,7,0,120,8,3,0,1,37,7,0,119,0,36,0,0,9,34,0,0,10,26,0,15,11,9,10,0,12,26,0,34,13,12,0,1,41,1,0,125,14,11,41,13,0,0,0,120,14,3,0,1,37,7,0,119,0,25,0,0,16,34,0,25,17,16,1,0,34,17,0,0,18,15,0,3,19,18,16,42,41,19,0,1,40,1,0,1,39,0,0,134,20,0,0,24,55,6,0,41,40,39,0,1,39,255,0,19,39,20,39,0,21,39,0,0,36,21,0,0,22,4,0,0,23,36,0,134,24,0,0,64,245,1,0,22,23,0,0,32,25,24,255,121,25,208,255,1,37,6,0,119,0,1,0,32,39,37,6,121,39,6,0,1,3,255,255,0,27,3,0,137,38,0,0,139,27,0,0,119,0,7,0,32,39,37,7,121,39,5,0,1,3,0,0,0,27,3,0,137,38,0,0,139,27,0,0,1,39,0,0,139,39,0,0,140,3,39,0,0,0,0,0,1,34,0,0,136,36,0,0,0,35,36,0,136,36,0,0,25,36,36,32,137,36,0,0,130,36,0,0,136,37,0,0,49,36,36,37,228,61,5,0,135,36,0,0,0,32,35,0,0,4,0,0,0,15,1,0,0,25,2,0,2,36,0,0,80,159,0,0,1,37,4,0,1,38,0,0,134,26,0,0,24,55,6,0,36,37,38,0,33,27,26,0,2,38,0,0,84,159,0,0,1,37,4,0,1,36,0,0,134,28,0,0,24,55,6,0,38,37,36,0,33,29,28,0,20,36,27,29,0,33,36,0,121,33,26,0,2,36,0,0,84,159,0,0,1,37,4,0,1,38,0,0,134,30,0,0,24,55,6,0,36,37,38,0,33,31,30,0,2,38,0,0,80,159,0,0,1,37,4,0,1,36,0,0,134,5,0,0,24,55,6,0,38,37,36,0,33,6,5,0,1,36,1,0,125,7,31,36,6,0,0,0,38,36,7,1,0,8,36,0,0,3,8,0,0,24,3,0,137,35,0,0,139,24,0,0,0,9,4,0,134,36,0,0,100,182,4,0,9,32,0,0,1,36,4,0,1,37,0,0,134,10,0,0,24,55,6,0,32,36,37,0,32,11,10,255,121,11,8,0,0,12,25,0,1,36,0,0,1,38,4,0,134,37,0,0,116,78,6,0,12,36,38,0,119,0,15,0,0,13,15,0,1,37,4,0,1,38,0,0,134,14,0,0,24,55,6,0,32,37,38,0,134,16,0,0,240,255,5,0,13,14,0,0,0,17,25,0,1,37,4,0,134,38,0,0,116,78,6,0,17,16,37,0,2,38,0,0,84,159,0,0,1,37,4,0,1,36,0,0,134,18,0,0,24,55,6,0,38,37,36,0,33,19,18,0,2,36,0,0,80,159,0,0,1,37,4,0,1,38,0,0,134,20,0,0,24,55,6,0,36,37,38,0,33,21,20,0,1,38,1,0,125,22,19,38,21,0,0,0,38,38,22,1,0,23,38,0,0,3,23,0,0,24,3,0,137,35,0,0,139,24,0,0,140,1,34,0,0,0,0,0,1,29,0,0,136,31,0,0,0,30,31,0,136,31,0,0,25,31,31,16,137,31,0,0,130,31,0,0,136,32,0,0,49,31,31,32,188,63,5,0,135,31,0,0,25,28,30,8,0,27,30,0,0,1,0,0,0,2,1,0,1,31,8,3,1,32,4,0,1,33,0,0,134,13,0,0,24,55,6,0,31,32,33,0,3,20,13,2,1,32,8,3,1,31,4,0,134,33,0,0,116,78,6,0,32,20,31,0,1,33,220,106,1,31,4,0,1,32,0,0,134,21,0,0,24,55,6,0,33,31,32,0,1,32,216,106,1,31,4,0,1,33,0,0,134,22,0,0,24,55,6,0,32,31,33,0,134,23,0,0,236,29,6,0,41,33,23,24,42,33,33,24,0,24,33,0,134,33,0,0,208,39,6,0,21,22,24,0,1,33,20,107,1,31,4,0,1,32,0,0,134,25,0,0,24,55,6,0,33,31,32,0,25,26,25,28,1,32,2,0,1,31,0,0,134,3,0,0,24,55,6,0,26,32,31,0,41,31,3,16,42,31,31,16,0,4,31,0,38,31,4,2,0,5,31,0,33,6,5,0,1,31,35,0,1,32,46,0,125,7,6,31,32,0,0,0,1,32,255,0,19,32,7,32,0,8,32,0,1,32,216,106,1,31,4,0,1,33,0,0,134,9,0,0,24,55,6,0,32,31,33,0,41,33,9,5,0,10,33,0,1,33,220,106,1,31,4,0,1,32,0,0,134,11,0,0,24,55,6,0,33,31,32,0,3,12,10,11,1,32,192,26,41,31,12,3,3,14,32,31,42,32,14,0,1,33,1,0,134,31,0,0,116,78,6,0,32,8,33,0,0,15,1,0,1,31,0,0,15,16,31,15,120,16,3,0,137,30,0,0,139,0,0,0,2,31,0,0,5,209,0,0,42,31,31,0,1,33,1,0,1,32,0,0,134,17,0,0,24,55,6,0,31,33,32,0,41,32,17,24,42,32,32,24,33,18,32,0,120,18,6,0,2,33,0,0,203,31,1,0,134,32,0,0,112,85,6,0,33,27,0,0,0,19,1,0,1,33,4,0,134,32,0,0,116,78,6,0,28,19,33,0,2,33,0,0,214,31,1,0,134,32,0,0,144,18,6,0,33,28,0,0,137,30,0,0,139,0,0,0,140,0,41,0,0,0,0,0,2,37,0,0,255,0,0,0,1,35,0,0,136,38,0,0,0,36,38,0,136,38,0,0,25,38,38,16,137,38,0,0,130,38,0,0,136,39,0,0,49,38,38,39,212,65,5,0,135,38,0,0,1,38,116,3,1,39,4,0,1,40,0,0,134,0,0,0,24,55,6,0,38,39,40,0,0,34,0,0,0,1,34,0,1,40,0,0,14,12,1,40,120,12,2,0,119,0,68,0,0,23,34,0,25,28,23,24,1,40,2,0,1,39,0,0,134,29,0,0,24,55,6,0,28,40,39,0,41,39,29,16,42,39,39,16,0,30,39,0,1,39,0,4,19,39,30,39,0,31,39,0,33,32,31,0,38,39,32,1,0,33,39,0,19,39,33,37,0,2,39,0,19,39,2,37,0,3,39,0,33,4,3,0,121,4,38,0,0,5,34,0,134,6,0,0,24,227,3,0,5,0,0,0,19,39,6,37,0,7,39,0,33,8,7,0,121,8,30,0,0,9,34,0,25,10,9,8,25,11,10,4,1,39,4,0,1,40,0,0,134,13,0,0,24,55,6,0,11,39,40,0,0,14,34,0,25,15,14,8,1,40,4,0,1,39,0,0,134,16,0,0,24,55,6,0,15,40,39,0,0,17,34,0,25,18,17,19,42,39,18,0,1,40,1,0,1,38,0,0,134,19,0,0,24,55,6,0,39,40,38,0,41,38,19,24,42,38,38,24,0,20,38,0,134,38,0,0,208,39,6,0,13,16,20,0,0,21,34,0,1,38,4,0,1,40,0,0,134,22,0,0,24,55,6,0,21,38,40,0,0,34,22,0,119,0,185,255,1,40,232,106,1,38,2,0,1,39,0,0,134,24,0,0,24,55,6,0,40,38,39,0,41,39,24,16,42,39,39,16,0,25,39,0,38,39,25,253,0,26,39,0,2,39,0,0,255,255,0,0,19,39,26,39,0,27,39,0,1,38,232,106,1,40,2,0,134,39,0,0,116,78,6,0,38,27,40,0,137,36,0,0,139,0,0,0,140,5,36,0,0,0,0,0,2,31,0,0,0,1,0,0,2,32,0,0,255,0,0,0,2,33,0,0,0,255,255,255,1,29,0,0,136,34,0,0,0,30,34,0,136,34,0,0,3,34,34,31,137,34,0,0,130,34,0,0,136,35,0,0,49,34,34,35,180,67,5,0,135,34,0,0,0,28,30,0,2,34,0,0,0,32,1,0,19,34,4,34,0,8,34,0,32,9,8,0,15,19,3,2,19,34,19,9,0,27,34,0,121,27,54,0,4,20,2,3,16,21,31,20,125,22,21,31,20,0,0,0,135,34,4,0,28,1,22,0,16,23,32,20,1,34,4,0,1,35,0,0,134,24,0,0,24,55,6,0,0,34,35,0,38,35,24,32,0,25,35,0,32,26,25,0,121,23,32,0,4,10,2,3,0,6,20,0,0,17,24,0,0,18,26,0,121,18,11,0,134,35,0,0,192,117,4,0,28,31,0,0,1,35,4,0,1,34,0,0,134,7,0,0,24,55,6,0,0,35,34,0,0,14,7,0,119,0,2,0,0,14,17,0,4,11,6,31,16,12,32,11,38,34,14,32,0,13,34,0,32,15,13,0,121,12,5,0,0,6,11,0,0,17,14,0,0,18,15,0,119,0,235,255,19,34,10,32,0,16,34,0,121,15,9,0,0,5,16,0,119,0,4,0,121,26,6,0,0,5,20,0,119,0,1,0,134,34,0,0,192,117,4,0,28,5,0,0,137,30,0,0,139,0,0,0,140,1,35,0,0,0,0,0,2,31,0,0,24,26,0,0,1,29,0,0,136,32,0,0,0,30,32,0,136,32,0,0,25,32,32,16,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,244,68,5,0,135,32,0,0,0,2,0,0,2,32,0,0,76,159,0,0,1,33,4,0,1,34,0,0,134,13,0,0,24,55,6,0,32,33,34,0,33,21,13,0,121,21,12,0,2,34,0,0,76,159,0,0,1,33,4,0,1,32,0,0,134,22,0,0,24,55,6,0,34,33,32,0,0,1,22,0,0,20,1,0,137,30,0,0,139,20,0,0,1,28,0,0,0,23,28,0,34,24,23,14,120,24,2,0,119,0,69,0,0,25,28,0,1,32,80,26,41,33,25,2,3,26,32,33,1,33,4,0,1,32,0,0,134,27,0,0,24,55,6,0,26,33,32,0,2,32,0,0,177,48,1,0,134,3,0,0,84,226,5,0,27,32,0,0,32,4,3,0,0,5,2,0,121,4,25,0,1,33,0,0,134,32,0,0,156,47,5,0,5,33,0,0,0,6,2,0,1,32,208,114,1,33,4,0,1,34,0,0,134,7,0,0,24,55,6,0,32,33,34,0,0,8,28,0,41,34,8,2,3,9,31,34,1,34,4,0,1,33,0,0,134,10,0,0,24,55,6,0,9,34,33,0,1,34,76,114,134,33,0,0,164,98,5,0,6,34,7,10,119,0,24,0,1,34,1,0,134,33,0,0,156,47,5,0,5,34,0,0,0,11,2,0,1,33,44,115,1,34,4,0,1,32,0,0,134,12,0,0,24,55,6,0,33,34,32,0,0,14,28,0,41,32,14,2,3,15,31,32,1,32,4,0,1,34,0,0,134,16,0,0,24,55,6,0,15,32,34,0,1,32,212,114,134,34,0,0,164,98,5,0,11,32,12,16,0,17,28,0,25,18,17,1,0,28,18,0,119,0,185,255,2,34,0,0,76,159,0,0,1,32,4,0,1,33,0,0,134,19,0,0,24,55,6,0,34,32,33,0,0,1,19,0,0,20,1,0,137,30,0,0,139,20,0,0,140,3,35,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,48,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,204,70,5,0,135,32,0,0,25,29,31,16,25,28,31,8,0,27,31,0,0,3,0,0,0,4,1,0,0,15,2,0,2,32,0,0,6,209,0,0,42,32,32,0,1,33,1,0,1,34,0,0,134,19,0,0,24,55,6,0,32,33,34,0,41,34,19,24,42,34,34,24,33,20,34,0,121,20,3,0,137,31,0,0,139,0,0,0,0,21,3,0,1,34,1,0,134,22,0,0,244,15,6,0,21,34,0,0,134,34,0,0,112,85,6,0,22,27,0,0,2,34,0,0,5,209,0,0,42,34,34,0,1,33,1,0,1,32,0,0,134,23,0,0,24,55,6,0,34,33,32,0,41,32,23,24,42,32,32,24,33,24,32,0,121,24,3,0,1,26,0,0,119,0,6,0,1,32,4,0,134,25,0,0,20,36,6,0,32,0,0,0,0,26,25,0,0,5,3,0,1,32,0,0,14,6,5,32,121,6,4,0,0,7,26,0,25,8,7,4,0,26,8,0,0,9,26,0,1,32,232,111,41,33,9,2,3,10,32,33,1,33,4,0,1,32,0,0,134,11,0,0,24,55,6,0,10,33,32,0,134,32,0,0,112,85,6,0,11,28,0,0,2,32,0,0,5,209,0,0,42,32,32,0,1,33,1,0,1,34,0,0,134,12,0,0,24,55,6,0,32,33,34,0,41,34,12,24,42,34,34,24,33,13,34,0,120,13,15,0,0,14,4,0,1,34,0,0,134,16,0,0,244,15,6,0,14,34,0,0,1,33,4,0,134,34,0,0,116,78,6,0,29,16,33,0,2,33,0,0,172,251,0,0,134,34,0,0,112,85,6,0,33,29,0,0,0,17,15,0,41,34,17,24,42,34,34,24,33,18,34,0,121,18,3,0,137,31,0,0,139,0,0,0,134,34,0,0,120,187,4,0,137,31,0,0,139,0,0,0,140,3,37,0,0,0,0,0,1,32,0,0,136,34,0,0,0,33,34,0,136,34,0,0,25,34,34,48,137,34,0,0,130,34,0,0,136,35,0,0,49,34,34,35,156,72,5,0,135,34,0,0,25,31,33,16,25,30,33,8,0,29,33,0,0,3,0,0,0,4,1,0,0,15,2,0,2,34,0,0,6,209,0,0,42,34,34,0,1,35,1,0,1,36,0,0,134,20,0,0,24,55,6,0,34,35,36,0,41,36,20,24,42,36,36,24,33,21,36,0,121,21,3,0,137,33,0,0,139,0,0,0,0,22,3,0,1,36,1,0,134,23,0,0,244,15,6,0,22,36,0,0,134,36,0,0,112,85,6,0,23,29,0,0,2,36,0,0,5,209,0,0,42,36,36,0,1,35,1,0,1,34,0,0,134,24,0,0,24,55,6,0,36,35,34,0,41,34,24,24,42,34,34,24,33,25,34,0,121,25,4,0,2,28,0,0,107,251,0,0,119,0,23,0,1,34,4,0,134,26,0,0,20,36,6,0,34,0,0,0,0,27,26,0,0,5,3,0,1,34,0,0,14,6,5,34,121,6,4,0,0,7,27,0,25,8,7,4,0,27,8,0,0,9,27,0,1,34,200,111,41,35,9,2,3,10,34,35,1,35,4,0,1,34,0,0,134,11,0,0,24,55,6,0,10,35,34,0,0,28,11,0,0,12,28,0,134,34,0,0,112,85,6,0,12,30,0,0,2,34,0,0,5,209,0,0,42,34,34,0,1,35,1,0,1,36,0,0,134,13,0,0,24,55,6,0,34,35,36,0,41,36,13,24,42,36,36,24,33,14,36,0,120,14,9,0,0,16,4,0,1,36,0,0,134,17,0,0,244,15,6,0,16,36,0,0,134,36,0,0,112,85,6,0,17,31,0,0,0,18,15,0,41,36,18,24,42,36,36,24,33,19,36,0,121,19,3,0,137,33,0,0,139,0,0,0,134,36,0,0,120,187,4,0,137,33,0,0,139,0,0,0,140,3,42,0,0,0,0,0,1,37,0,0,136,39,0,0,0,38,39,0,136,39,0,0,25,39,39,16,137,39,0,0,130,39,0,0,136,40,0,0,49,39,39,40,96,74,5,0,135,39,0,0,0,4,0,0,0,15,1,0,0,26,2,0,0,29,4,0,1,39,0,0,14,30,29,39,121,30,67,0,0,31,15,0,0,32,4,0,25,33,32,8,1,39,4,0,1,40,0,0,134,34,0,0,24,55,6,0,33,39,40,0,3,5,31,34,2,40,0,0,76,162,0,0,1,39,4,0,1,41,0,0,134,6,0,0,24,55,6,0,40,39,41,0,15,7,6,5,0,8,15,0,34,9,8,0,20,41,7,9,0,35,41,0,120,35,45,0,0,10,26,0,0,11,4,0,25,12,11,12,1,41,4,0,1,39,0,0,134,13,0,0,24,55,6,0,12,41,39,0,3,14,10,13,2,39,0,0,80,162,0,0,1,41,4,0,1,40,0,0,134,16,0,0,24,55,6,0,39,41,40,0,15,17,16,14,0,18,26,0,34,19,18,0,20,40,17,19,0,36,40,0,120,36,23,0,0,20,15,0,0,21,4,0,25,22,21,16,1,41,4,0,134,40,0,0,116,78,6,0,22,20,41,0,0,23,26,0,0,24,4,0,25,25,24,20,1,41,4,0,134,40,0,0,116,78,6,0,25,23,41,0,0,27,4,0,134,40,0,0,164,179,5,0,27,0,0,0,1,3,0,0,0,28,3,0,137,38,0,0,139,28,0,0,1,3,255,255,0,28,3,0,137,38,0,0,139,28,0,0,140,3,35,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,16,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,200,75,5,0,135,32,0,0,0,3,0,0,0,4,1,0,0,15,2,0,1,32,232,106,1,33,2,0,1,34,0,0,134,22,0,0,24,55,6,0,32,33,34,0,41,34,22,16,42,34,34,16,0,23,34,0,1,34,0,8,19,34,23,34,0,24,34,0,33,25,24,0,38,34,25,1,0,26,34,0,1,34,255,0,19,34,26,34,0,27,34,0,1,34,255,0,19,34,27,34,0,28,34,0,33,5,28,0,121,5,156,0,2,34,0,0,38,217,0,0,42,34,34,0,1,33,1,0,1,32,0,0,134,6,0,0,24,55,6,0,34,33,32,0,1,32,255,0,19,32,6,32,0,7,32,0,33,8,7,0,121,8,143,0,0,9,15,0,1,32,32,0,1,33,93,0,138,9,32,33,236,77,5,0,232,77,5,0,232,77,5,0,240,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,244,77,5,0,232,77,5,0,248,77,5,0,252,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,0,78,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,232,77,5,0,4,78,5,0,119,0,8,0,119,0,44,0,119,0,43,0,119,0,42,0,119,0,41,0,119,0,40,0,119,0,39,0,119,0,38,0,0,10,3,0,1,32,188,26,1,33,4,0,1,34,0,0,134,11,0,0,24,55,6,0,32,33,34,0,14,12,10,11,120,12,23,0,0,13,4,0,1,34,184,26,1,33,4,0,1,32,0,0,134,14,0,0,24,55,6,0,34,33,32,0,13,16,13,14,2,32,0,0,40,217,0,0,42,32,32,0,1,33,1,0,1,34,0,0,134,17,0,0,24,55,6,0,32,33,34,0,41,34,17,24,42,34,34,24,33,18,34,0,19,34,16,18,0,29,34,0,120,29,7,0,134,19,0,0,12,66,6,0,41,34,19,24,42,34,34,24,0,20,34,0,0,15,20,0,0,21,15,0,137,31,0,0,139,21,0,0,140,2,44,0,0,0,0,0,1,40,0,0,136,42,0,0,0,41,42,0,136,42,0,0,25,42,42,32,137,42,0,0,130,42,0,0,136,43,0,0,49,42,42,43,220,78,5,0,135,42,0,0,0,2,0,0,0,3,1,0,1,37,0,0,0,14,37,0,0,25,3,0,15,31,14,25,120,31,2,0,119,0,14,0,0,32,37,0,0,33,37,0,0,34,2,0,41,42,33,2,3,35,34,42,1,43,4,0,134,42,0,0,116,78,6,0,35,32,43,0,0,36,37,0,25,4,36,1,0,37,4,0,119,0,239,255,0,5,3,0,0,37,5,0,0,6,37,0,1,42,0,0,15,7,42,6,120,7,2,0,119,0,48,0,0,8,37,0,134,9,0,0,20,36,6,0,8,0,0,0,0,38,9,0,0,10,37,0,26,11,10,1,0,12,2,0,41,42,11,2,3,13,12,42,1,42,4,0,1,43,0,0,134,15,0,0,24,55,6,0,13,42,43,0,0,39,15,0,0,16,38,0,0,17,2,0,41,43,16,2,3,18,17,43,1,43,4,0,1,42,0,0,134,19,0,0,24,55,6,0,18,43,42,0,0,20,37,0,26,21,20,1,0,22,2,0,41,42,21,2,3,23,22,42,1,43,4,0,134,42,0,0,116,78,6,0,23,19,43,0,0,24,39,0,0,26,38,0,0,27,2,0,41,42,26,2,3,28,27,42,1,43,4,0,134,42,0,0,116,78,6,0,28,24,43,0,0,29,37,0,26,30,29,1], eb + 337920);
  HEAPU8.set([0,37,30,0,119,0,205,255,137,41,0,0,139,0,0,0,140,4,43,0,0,0,0,0,1,39,0,0,136,41,0,0,0,40,41,0,136,41,0,0,25,41,41,32,137,41,0,0,130,41,0,0,136,42,0,0,49,41,41,42,68,80,5,0,135,41,0,0,0,4,0,0,0,5,1,0,0,16,2,0,0,27,3,0,0,31,5,0,0,32,4,0,1,41,192,120,1,42,56,4,5,42,32,42,3,33,41,42,27,42,31,40,3,34,33,42,0,38,34,0,0,35,38,0,25,36,35,4,0,37,36,0,0,6,37,0,0,7,38,0,1,42,4,0,1,41,0,0,134,8,0,0,24,55,6,0,7,42,41,0,0,9,38,0,25,10,9,4,41,41,8,3,3,11,10,41,16,12,6,11,120,12,2,0,119,0,26,0,0,13,37,0,25,14,13,4,1,41,4,0,1,42,0,0,134,15,0,0,24,55,6,0,14,41,42,0,0,17,16,0,13,18,15,17,121,18,12,0,0,19,37,0,1,42,4,0,1,41,0,0,134,20,0,0,24,55,6,0,19,42,41,0,0,21,27,0,13,22,20,21,121,22,3,0,1,39,7,0,119,0,5,0,0,23,37,0,25,24,23,8,0,37,24,0,119,0,218,255,32,41,39,7,121,41,3,0,137,40,0,0,139,0,0,0,0,25,16,0,0,26,37,0,25,28,26,4,1,42,4,0,134,41,0,0,116,78,6,0,28,25,42,0,0,29,27,0,0,30,37,0,1,42,4,0,134,41,0,0,116,78,6,0,30,29,42,0,137,40,0,0,139,0,0,0,140,3,39,0,0,0,0,0,1,33,0,0,136,35,0,0,0,34,35,0,136,35,0,0,25,35,35,32,137,35,0,0,130,35,0,0,136,36,0,0,49,35,35,36,160,81,5,0,135,35,0,0,0,32,34,0,0,4,0,0,0,15,1,0,0,24,2,0,1,36,0,0,1,37,4,0,134,35,0,0,116,78,6,0,32,36,37,0,2,35,0,0,80,159,0,0,1,37,4,0,1,36,0,0,134,25,0,0,24,55,6,0,35,37,36,0,33,26,25,0,2,36,0,0,84,159,0,0,1,37,4,0,1,35,0,0,134,27,0,0,24,55,6,0,36,37,35,0,33,28,27,0,20,35,26,28,0,31,35,0,121,31,26,0,2,35,0,0,84,159,0,0,1,37,4,0,1,36,0,0,134,29,0,0,24,55,6,0,35,37,36,0,33,30,29,0,2,36,0,0,80,159,0,0,1,37,4,0,1,35,0,0,134,5,0,0,24,55,6,0,36,37,35,0,33,6,5,0,1,35,1,0,125,7,30,35,6,0,0,0,38,35,7,1,0,8,35,0,0,3,8,0,0,23,3,0,137,34,0,0,139,23,0,0,0,9,4,0,134,35,0,0,100,182,4,0,9,32,0,0,1,35,4,0,1,37,0,0,134,10,0,0,24,55,6,0,32,35,37,0,0,11,24,0,14,12,10,11,121,12,8,0,2,35,0,0,84,159,0,0,1,36,1,0,1,38,4,0,134,37,0,0,116,78,6,0,35,36,38,0,0,13,4,0,0,14,15,0,0,16,24,0,134,37,0,0,192,115,5,0,13,14,16,0,2,37,0,0,84,159,0,0,1,38,4,0,1,36,0,0,134,17,0,0,24,55,6,0,37,38,36,0,33,18,17,0,2,36,0,0,80,159,0,0,1,38,4,0,1,37,0,0,134,19,0,0,24,55,6,0,36,38,37,0,33,20,19,0,1,37,1,0,125,21,18,37,20,0,0,0,38,37,21,1,0,22,37,0,0,3,22,0,0,23,3,0,137,34,0,0,139,23,0,0,140,0,38,0,0,0,0,0,2,32,0,0,64,162,0,0,2,33,0,0,0,0,32,0,2,34,0,0,80,162,0,0,2,35,0,0,76,162,0,0,1,30,0,0,136,36,0,0,0,31,36,0,136,36,0,0,25,36,36,16,137,36,0,0,130,36,0,0,136,37,0,0,49,36,36,37,144,83,5,0,135,36,0,0,1,29,0,0,0,0,29,0,34,1,0,2,120,1,2,0,119,0,81,0,1,28,0,0,0,12,28,0,1,36,4,0,1,37,0,0,134,20,0,0,24,55,6,0,35,36,37,0,15,21,12,20,120,21,2,0,119,0,52,0,1,27,0,0,0,22,27,0,1,37,4,0,1,36,0,0,134,23,0,0,24,55,6,0,34,37,36,0,15,24,22,23,120,24,2,0,119,0,38,0,0,25,27,0,0,26,28,0,1,36,4,0,1,37,0,0,134,2,0,0,24,55,6,0,32,36,37,0,25,3,2,44,1,37,4,0,1,36,0,0,134,4,0,0,24,55,6,0,3,37,36,0,41,36,26,2,3,5,4,36,1,36,4,0,1,37,0,0,134,6,0,0,24,55,6,0,5,36,37,0,41,37,25,2,3,7,6,37,1,37,4,0,1,36,0,0,134,8,0,0,24,55,6,0,7,37,36,0,21,36,8,33,0,9,36,0,1,37,4,0,134,36,0,0,116,78,6,0,7,9,37,0,0,10,27,0,25,11,10,1,0,27,11,0,119,0,211,255,0,13,28,0,25,14,13,1,0,28,14,0,119,0,197,255,1,36,4,0,1,37,0,0,134,15,0,0,24,55,6,0,32,36,37,0,134,37,0,0,124,212,4,0,15,0,0,0,0,16,29,0,33,17,16,0,120,17,5,0,1,36,50,0,134,37,0,0,112,90,6,0,36,0,0,0,0,18,29,0,25,19,18,1,0,29,19,0,119,0,173,255,137,31,0,0,1,37,0,0,139,37,0,0,140,4,35,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,32,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,36,85,5,0,135,32,0,0,0,5,0,0,0,16,1,0,0,22,2,0,0,23,3,0,2,32,0,0,76,159,0,0,1,33,4,0,1,34,0,0,134,24,0,0,24,55,6,0,32,33,34,0,33,25,24,0,121,25,12,0,2,34,0,0,76,159,0,0,1,33,4,0,1,32,0,0,134,26,0,0,24,55,6,0,34,33,32,0,0,4,26,0,0,21,4,0,137,31,0,0,139,21,0,0,1,29,0,0,0,27,29,0,0,28,22,0,15,6,27,28,120,6,3,0,1,30,8,0,119,0,19,0,0,7,23,0,0,8,29,0,0,9,16,0,41,32,8,3,3,10,9,32,1,32,4,0,1,33,0,0,134,11,0,0,24,55,6,0,10,32,33,0,13,12,7,11,121,12,3,0,1,30,6,0,119,0,5,0,0,17,29,0,25,18,17,1,0,29,18,0,119,0,233,255,32,33,30,6,121,33,18,0,0,13,5,0,0,14,29,0,134,33,0,0,156,47,5,0,13,14,0,0,2,33,0,0,76,159,0,0,1,32,4,0,1,34,0,0,134,15,0,0,24,55,6,0,33,32,34,0,0,4,15,0,0,21,4,0,137,31,0,0,139,21,0,0,119,0,19,0,32,34,30,8,121,34,17,0,0,19,5,0,1,32,255,255,134,34,0,0,156,47,5,0,19,32,0,0,2,34,0,0,76,159,0,0,1,32,4,0,1,33,0,0,134,20,0,0,24,55,6,0,34,32,33,0,0,4,20,0,0,21,4,0,137,31,0,0,139,21,0,0,1,33,0,0,139,33,0,0,140,3,33,0,0,0,0,0,1,28,0,0,136,30,0,0,0,29,30,0,32,6,2,0,121,6,3,0,1,3,0,0,119,0,76,0,42,30,0,0,1,31,1,0,1,32,0,0,134,7,0,0,24,55,6,0,30,31,32,0,41,32,7,24,42,32,32,24,32,15,32,0,121,15,4,0,1,11,0,0,0,26,1,0,119,0,49,0,0,5,2,0,0,19,7,0,0,23,0,0,0,27,1,0,26,4,5,1,42,32,27,0,1,31,1,0,1,30,0,0,134,16,0,0,24,55,6,0,32,31,30,0,41,30,16,24,42,30,30,24,33,17,30,0,33,18,4,0,19,30,18,17,0,24,30,0,41,30,19,24,42,30,30,24,41,31,16,24,42,31,31,24,13,20,30,31,19,31,20,24,0,25,31,0,120,25,4,0,0,11,19,0,0,26,27,0,119,0,21,0,25,21,23,1,25,22,27,1,42,31,21,0,1,30,1,0,1,32,0,0,134,8,0,0,24,55,6,0,31,30,32,0,41,32,8,24,42,32,32,24,32,9,32,0,121,9,4,0,1,11,0,0,0,26,22,0,119,0,6,0,0,5,4,0,0,19,8,0,0,23,21,0,0,27,22,0,119,0,213,255,1,32,255,0,19,32,11,32,0,10,32,0,42,32,26,0,1,30,1,0,1,31,0,0,134,12,0,0,24,55,6,0,32,30,31,0,1,31,255,0,19,31,12,31,0,13,31,0,4,14,10,13,0,3,14,0,139,3,0,0,140,1,33,0,0,0,0,0,1,28,0,0,136,30,0,0,0,29,30,0,25,2,0,76,1,30,4,0,1,31,0,0,134,3,0,0,24,55,6,0,2,30,31,0,1,31,255,255,15,14,31,3,121,14,4,0,134,31,0,0,152,111,6,0,0,0,0,0,1,31,4,0,1,30,0,0,134,21,0,0,24,55,6,0,0,31,30,0,38,30,21,1,0,22,30,0,33,23,22,0,120,23,59,0,2,31,0,0,88,194,0,0,135,30,41,0,31,0,0,0,25,24,0,52,1,30,4,0,1,31,0,0,134,25,0,0,24,55,6,0,24,30,31,0,1,31,0,0,13,26,25,31,0,27,25,0,25,1,0,56,120,26,11,0,1,31,4,0,1,30,0,0,134,4,0,0,24,55,6,0,1,31,30,0,25,5,25,56,1,31,4,0,134,30,0,0,116,78,6,0,5,4,31,0,1,30,4,0,1,31,0,0,134,6,0,0,24,55,6,0,1,30,31,0,1,31,0,0,13,7,6,31,0,8,6,0,120,7,6,0,25,9,6,52,1,30,4,0,134,31,0,0,116,78,6,0,9,27,30,0,2,31,0,0,84,194,0,0,1,30,4,0,1,32,0,0,134,10,0,0,24,55,6,0,31,30,32,0,13,11,10,0,121,11,7,0,2,30,0,0,84,194,0,0,1,31,4,0,134,32,0,0,116,78,6,0,30,8,31,0,2,31,0,0,88,194,0,0,135,32,42,0,31,0,0,0,134,12,0,0,116,193,4,0,0,0,0,0,25,13,0,12,1,32,4,0,1,31,0,0,134,15,0,0,24,55,6,0,13,32,31,0,135,16,43,0,15,0,0,0,20,31,16,12,0,17,31,0,25,18,0,92,1,31,4,0,1,32,0,0,134,19,0,0,24,55,6,0,18,31,32,0,1,32,0,0,13,20,19,32,120,20,3,0,135,32,6,0,19,0,0,0,120,23,3,0,135,32,6,0,0,0,0,0,139,17,0,0,140,2,37,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,16,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,204,89,5,0,135,33,0,0,25,29,32,12,0,3,0,0,0,14,1,0,42,34,29,0,1,35,0,0,1,36,1,0,134,33,0,0,116,78,6,0,34,35,36,0,2,33,0,0,80,159,0,0,1,36,4,0,1,35,0,0,134,22,0,0,24,55,6,0,33,36,35,0,33,23,22,0,2,35,0,0,84,159,0,0,1,36,4,0,1,33,0,0,134,24,0,0,24,55,6,0,35,36,33,0,33,25,24,0,20,33,23,25,0,30,33,0,121,30,27,0,2,33,0,0,84,159,0,0,1,36,4,0,1,35,0,0,134,26,0,0,24,55,6,0,33,36,35,0,33,27,26,0,2,35,0,0,80,159,0,0,1,36,4,0,1,33,0,0,134,28,0,0,24,55,6,0,35,36,33,0,33,4,28,0,1,33,1,0,125,5,27,33,4,0,0,0,38,33,5,1,0,6,33,0,0,2,6,0,0,21,2,0,137,32,0,0,139,21,0,0,119,0,52,0,0,7,3,0,1,36,1,0,134,33,0,0,192,115,5,0,7,29,36,0,42,33,29,0,1,36,1,0,1,35,0,0,134,8,0,0,24,55,6,0,33,36,35,0,1,35,255,0,19,35,8,35,0,9,35,0,33,10,9,0,38,35,10,1,0,11,35,0,1,35,255,0,19,35,11,35,0,12,35,0,0,13,14,0,42,36,13,0,1,33,1,0,134,35,0,0,116,78,6,0,36,12,33,0,2,35,0,0,84,159,0,0,1,33,4,0,1,36,0,0,134,15,0,0,24,55,6,0,35,33,36,0,33,16,15,0,2,36,0,0,80,159,0,0,1,33,4,0,1,35,0,0,134,17,0,0,24,55,6,0,36,33,35,0,33,18,17,0,1,35,1,0,125,19,16,35,18,0,0,0,38,35,19,1,0,20,35,0,0,2,20,0,0,21,2,0,137,32,0,0,139,21,0,0,1,35,0,0,139,35,0,0,140,0,36,0,0,0,0,0,2,31,0,0,192,117,0,0,1,29,0,0,136,32,0,0,0,30,32,0,136,32,0,0,25,32,32,16,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,180,91,5,0,135,32,0,0,134,0,0,0,56,80,6,0,0,28,0,0,1,33,0,0,1,34,0,0,1,35,1,0,134,32,0,0,12,35,4,0,33,31,34,35,134,1,0,0,248,24,4,0,31,0,0,0,1,32,20,107,1,35,4,0,1,34,0,0,134,12,0,0,24,55,6,0,32,35,34,0,13,21,1,12,120,21,240,255,119,0,1,0,0,22,28,0,1,34,1,0,134,23,0,0,24,191,5,0,34,0,0,0,134,34,0,0,8,13,3,0,22,23,31,0,1,34,232,106,1,35,2,0,1,32,0,0,134,24,0,0,24,55,6,0,34,35,32,0,41,32,24,16,42,32,32,16,0,25,32,0,1,32,0,64,19,32,25,32,0,26,32,0,33,27,26,0,38,32,27,1,0,2,32,0,1,32,255,0,19,32,2,32,0,3,32,0,41,32,3,24,42,32,32,24,33,4,32,0,120,4,8,0,0,19,28,0,25,20,19,8,134,32,0,0,36,182,5,0,20,0,0,0,137,30,0,0,139,0,0,0,134,32,0,0,116,105,6,0,1,32,232,106,1,35,2,0,1,34,0,0,134,5,0,0,24,55,6,0,32,35,34,0,41,34,5,16,42,34,34,16,0,6,34,0,1,34,0,8,19,34,6,34,0,7,34,0,33,8,7,0,38,34,8,1,0,9,34,0,1,34,255,0,19,34,9,34,0,10,34,0,41,34,10,24,42,34,34,24,33,11,34,0,121,11,10,0,1,34,26,0,134,17,0,0,20,36,6,0,34,0,0,0,25,18,17,65,134,34,0,0,172,88,6,0,18,0,0,0,119,0,15,0,0,13,28,0,25,14,13,17,42,34,14,0,1,35,1,0,1,32,0,0,134,15,0,0,24,55,6,0,34,35,32,0,41,32,15,24,42,32,32,24,0,16,32,0,134,32,0,0,172,88,6,0,16,0,0,0,134,32,0,0,92,106,6,0,0,19,28,0,25,20,19,8,134,32,0,0,36,182,5,0,20,0,0,0,137,30,0,0,139,0,0,0,140,3,36,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,32,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,176,93,5,0,135,33,0,0,0,29,32,0,0,4,0,0,0,15,1,0,0,22,2,0,2,33,0,0,80,159,0,0,1,34,4,0,1,35,0,0,134,23,0,0,24,55,6,0,33,34,35,0,33,24,23,0,2,35,0,0,84,159,0,0,1,34,4,0,1,33,0,0,134,25,0,0,24,55,6,0,35,34,33,0,33,26,25,0,20,33,24,26,0,30,33,0,121,30,27,0,2,33,0,0,84,159,0,0,1,34,4,0,1,35,0,0,134,27,0,0,24,55,6,0,33,34,35,0,33,28,27,0,2,35,0,0,80,159,0,0,1,34,4,0,1,33,0,0,134,5,0,0,24,55,6,0,35,34,33,0,33,6,5,0,1,33,1,0,125,7,28,33,6,0,0,0,38,33,7,1,0,8,33,0,0,3,8,0,0,21,3,0,137,32,0,0,139,21,0,0,119,0,44,0,0,9,4,0,134,33,0,0,100,182,4,0,9,29,0,0,0,10,15,0,1,33,4,0,1,34,0,0,134,11,0,0,24,55,6,0,29,33,34,0,134,12,0,0,240,255,5,0,10,11,0,0,0,13,22,0,1,33,4,0,134,34,0,0,116,78,6,0,13,12,33,0,2,34,0,0,84,159,0,0,1,33,4,0,1,35,0,0,134,14,0,0,24,55,6,0,34,33,35,0,33,16,14,0,2,35,0,0,80,159,0,0,1,33,4,0,1,34,0,0,134,17,0,0,24,55,6,0,35,33,34,0,33,18,17,0,1,34,1,0,125,19,16,34,18,0,0,0,38,34,19,1,0,20,34,0,0,3,20,0,0,21,3,0,137,32,0,0,139,21,0,0,1,34,0,0,139,34,0,0,140,1,33,0,0,0,0,0,1,28,0,0,136,30,0,0,0,29,30,0,136,30,0,0,25,30,30,16,137,30,0,0,130,30,0,0,136,31,0,0,49,30,30,31,92,95,5,0,135,30,0,0,0,1,0,0,0,2,1,0,32,13,2,3,121,13,77,0,1,30,196,106,1,31,4,0,1,32,0,0,134,21,0,0,24,55,6,0,30,31,32,0,1,32,0,0,14,22,21,32,121,22,30,0,1,32,196,106,1,31,4,0,1,30,0,0,134,23,0,0,24,55,6,0,32,31,30,0,25,24,23,52,1,30,4,0,1,31,0,0,134,25,0,0,24,55,6,0,24,30,31,0,32,26,25,0,121,26,16,0,1,31,196,106,1,30,4,0,1,32,0,0,134,27,0,0,24,55,6,0,31,30,32,0,25,3,27,64,1,32,4,0,1,30,0,0,134,4,0,0,24,55,6,0,3,32,30,0,0,5,1,0,4,6,5,4,0,1,6,0,1,30,200,106,1,32,4,0,1,31,0,0,134,7,0,0,24,55,6,0,30,32,31,0,1,31,0,0,14,8,7,31,121,8,30,0,1,31,200,106,1,32,4,0,1,30,0,0,134,9,0,0,24,55,6,0,31,32,30,0,25,10,9,52,1,30,4,0,1,32,0,0,134,11,0,0,24,55,6,0,10,30,32,0,32,12,11,0,121,12,16,0,1,32,200,106,1,30,4,0,1,31,0,0,134,14,0,0,24,55,6,0,32,30,31,0,25,15,14,64,1,31,4,0,1,30,0,0,134,16,0,0,24,55,6,0,15,31,30,0,0,17,1,0,4,18,17,16,0,1,18,0,0,19,1,0,1,30,208,106,134,20,0,0,148,37,6,0,19,30,0,0,137,29,0,0,139,20,0,0,140,1,33,0,0,0,0,0,1,28,0,0,136,30,0,0,0,29,30,0,136,30,0,0,25,30,30,16,137,30,0,0,130,30,0,0,136,31,0,0,49,30,30,31,236,96,5,0,135,30,0,0,0,1,0,0,1,30,232,106,1,31,2,0,1,32,0,0,134,2,0,0,24,55,6,0,30,31,32,0,41,32,2,16,42,32,32,16,0,13,32,0,38,32,13,8,0,19,32,0,33,20,19,0,38,32,20,1,0,21,32,0,1,32,255,0,19,32,21,32,0,22,32,0,41,32,22,24,42,32,32,24,33,23,32,0,121,23,3,0,137,29,0,0,139,0,0,0,1,32,220,106,1,31,4,0,1,30,0,0,134,24,0,0,24,55,6,0,32,31,30,0,1,30,216,106,1,31,4,0,1,32,0,0,134,25,0,0,24,55,6,0,30,31,32,0,134,3,0,0,212,193,5,0,24,25,0,0,0,27,3,0,2,32,0,0,252,208,0,0,42,32,32,0,1,31,1,0,1,30,0,0,134,4,0,0,24,55,6,0,32,31,30,0,41,30,4,24,42,30,30,24,33,5,30,0,121,5,7,0,0,6,27,0,134,30,0,0,204,47,6,0,6,0,0,0,137,29,0,0,139,0,0,0,0,7,1,0,41,30,7,24,42,30,30,24,0,8,30,0,32,26,8,42,120,26,8,0,1,31,0,0,1,32,0,0,134,30,0,0,180,155,1,0,31,32,0,0,137,29,0,0,139,0,0,0,0,9,27,0,1,30,0,0,13,10,9,30,121,10,3,0,137,29,0,0,139,0,0,0,0,11,27,0,25,12,11,64,1,30,4,0,1,32,0,0,134,14,0,0,24,55,6,0,12,30,32,0,134,32,0,0,136,63,5,0,14,0,0,0,0,15,27,0,1,30,112,3,134,32,0,0,36,53,5,0,30,15,0,0,0,16,27,0,134,32,0,0,100,97,6,0,16,0,0,0,1,32,20,107,1,30,4,0,1,31,0,0,134,17,0,0,24,55,6,0,32,30,31,0,25,18,17,24,1,30,0,0,1,32,4,0,134,31,0,0,116,78,6,0,18,30,32,0,137,29,0,0,139,0,0,0,140,4,35,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,32,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,216,98,5,0,135,32,0,0,0,5,0,0,0,16,1,0,0,22,2,0,0,23,3,0,2,32,0,0,76,159,0,0,1,33,4,0,1,34,0,0,134,24,0,0,24,55,6,0,32,33,34,0,33,25,24,0,121,25,12,0,2,34,0,0,76,159,0,0,1,33,4,0,1,32,0,0,134,26,0,0,24,55,6,0,34,33,32,0,0,4,26,0,0,21,4,0,137,31,0,0,139,21,0,0,1,29,0,0,0,27,29,0,0,28,22,0,15,6,27,28,120,6,3,0,1,30,8,0,119,0,19,0,0,7,23,0,0,8,29,0,0,9,16,0,41,32,8,2,3,10,9,32,1,32,4,0,1,33,0,0,134,11,0,0,24,55,6,0,10,32,33,0,13,12,7,11,121,12,3,0,1,30,6,0,119,0,5,0,0,17,29,0,25,18,17,1,0,29,18,0,119,0,233,255,32,33,30,6,121,33,11,0,0,13,5,0,0,14,29,0,134,15,0,0,156,47,5,0,13,14,0,0,0,4,15,0,0,21,4,0,137,31,0,0,139,21,0,0,119,0,12,0,32,33,30,8,121,33,10,0,0,19,5,0,1,33,255,255,134,20,0,0,156,47,5,0,19,33,0,0,0,4,20,0,0,21,4,0,137,31,0,0,139,21,0,0,1,33,0,0,139,33,0,0,140,1,33,0,0,0,0,0,1,28,0,0,136,30,0,0,0,29,30,0,136,30,0,0,25,30,30,16,137,30,0,0,130,30,0,0,136,31,0,0,49,30,30,31,52,100,5,0,135,30,0,0,0,27,29,0,0,2,0,0,1,30,232,106,1,31,2,0,1,32,0,0,134,13,0,0,24,55,6,0,30,31,32,0,41,32,13,16,42,32,32,16,0,20,32,0,38,32,20,64,0,21,32,0,33,22,21,0,38,32,22,1,0,23,32,0,1,32,255,0,19,32,23,32,0,24,32,0,41,32,24,24,42,32,32,24,33,25,32,0,121,25,51,0,1,32,8,0,134,26,0,0,20,36,6,0,32,0,0,0,1,32,0,3,1,31,4,0,1,30,0,0,134,3,0,0,24,55,6,0,32,31,30,0,3,4,3,26,1,31,0,3,1,32,4,0,134,30,0,0,116,78,6,0,31,4,32,0,1,30,232,106,1,32,2,0,1,31,0,0,134,5,0,0,24,55,6,0,30,32,31,0,41,31,5,16,42,31,31,16,0,6,31,0,1,31,191,223,19,31,6,31,0,7,31,0,2,31,0,0,255,255,0,0,19,31,7,31,0,8,31,0,1,32,232,106,1,30,2,0,134,31,0,0,116,78,6,0,32,8,30,0,1,30,26,0,134,31,0,0,184,73,6,0,30,0,0,0,2,30,0,0,143,17,1,0,134,31,0,0,144,18,6,0,30,27,0,0,1,1,0,0,0,19,1,0,137,29,0,0,139,19,0,0,1,31,232,106,1,30,2,0,1,32,0,0,134,9,0,0,24,55,6,0,31,30,32,0,41,32,9,16,42,32,32,16,0,10,32,0,39,32,10,64,0,11,32,0,2,32,0,0,255,255,0,0,19,32,11,32,0,12,32,0,1,30,232,106,1,31,2,0,134,32,0,0,116,78,6,0,30,12,31,0,0,14,2,0,41,32,14,24,42,32,32,24,33,15,32,0,121,15,15,0,1,32,4,0,134,16,0,0,20,36,6,0,32,0,0,0,25,17,16,4,1,32,2,0,134,18,0,0,148,77,6,0,32,0,0,0,1,31,26,0,1,30,0,0,134,32,0,0,172,13,6,0,31,30,17,18,1,1,1,0,0,19,1,0,137,29,0,0,139,19,0,0,140,1,35,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,16,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,56,102,5,0,135,32,0,0,0,2,0,0,2,32,0,0,80,159,0,0,1,33,4,0,1,34,0,0,134,13,0,0,24,55,6,0,32,33,34,0,33,21,13,0,2,34,0,0,84,159,0,0,1,33,4,0,1,32,0,0,134,22,0,0,24,55,6,0,34,33,32,0,33,23,22,0,20,32,21,23,0,29,32,0,121,29,26,0,2,32,0,0,84,159,0,0,1,33,4,0,1,34,0,0,134,24,0,0,24,55,6,0,32,33,34,0,33,25,24,0,2,34,0,0,80,159,0,0,1,33,4,0,1,32,0,0,134,26,0,0,24,55,6,0,34,33,32,0,33,27,26,0,1,32,1,0,125,3,25,32,27,0,0,0,38,32,3,1,0,4,32,0,0,1,4,0,0,20,1,0,137,31,0,0,139,20,0,0,1,28,0,0,0,5,28,0,34,6,5,14,120,6,2,0,119,0,20,0,0,7,2,0,1,32,116,113,1,33,4,0,1,34,0,0,134,8,0,0,24,55,6,0,32,33,34,0,0,9,28,0,1,34,96,25,41,33,9,2,3,10,34,33,1,34,8,113,134,33,0,0,12,226,4,0,7,34,8,10,0,11,28,0,25,12,11,1,0,28,12,0,119,0,234,255,2,33,0,0,84,159,0,0,1,34,4,0,1,32,0,0,134,14,0,0,24,55,6,0,33,34,32,0,33,15,14,0,2,32,0,0,80,159,0,0,1,34,4,0,1,33,0,0,134,16,0,0,24,55,6,0,32,34,33,0,33,17,16,0,1,33,1,0,125,18,15,33,17,0,0,0,38,33,18,1,0,19,33,0,0,1,19,0,0,20,1,0,137,31,0,0,139,20,0,0,140,1,35,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,16,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,228,103,5,0,135,32,0,0,0,2,0,0,2,32,0,0,80,159,0,0,1,33,4,0,1,34,0,0,134,13,0,0,24,55,6,0,32,33,34,0,33,21,13,0,2,34,0,0,84,159,0,0,1,33,4,0,1,32,0,0,134,22,0,0,24,55,6,0,34,33,32,0,33,23,22,0,20,32,21,23,0,29,32,0,121,29,26,0,2,32,0,0,84,159,0,0,1,33,4,0,1,34,0,0,134,24,0,0,24,55,6,0,32,33,34,0,33,25,24,0,2,34,0,0,80,159,0,0,1,33,4,0,1,32,0,0,134,26,0,0,24,55,6,0,34,33,32,0,33,27,26,0,1,32,1,0,125,3,25,32,27,0,0,0,38,32,3,1,0,4,32,0,0,1,4,0,0,20,1,0,137,31,0,0,139,20,0,0,1,28,0,0,0,5,28,0,34,6,5,14,120,6,2,0,119,0,20,0,0,7,2,0,1,32,72,114,1,33,4,0,1,34,0,0,134,8,0,0,24,55,6,0,32,33,34,0,0,9,28,0,1,34,152,25,41,33,9,2,3,10,34,33,1,34,120,113,134,33,0,0,196,219,4,0,7,34,8,10,0,11,28,0,25,12,11,1,0,28,12,0,119,0,234,255,2,33,0,0,84,159,0,0,1,34,4,0,1,32,0,0,134,14,0,0,24,55,6,0,33,34,32,0,33,15,14,0,2,32,0,0,80,159,0,0,1,34,4,0,1,33,0,0,134,16,0,0,24,55,6,0,32,34,33,0,33,17,16,0,1,33,1,0,125,18,15,33,17,0,0,0,38,33,18,1,0,19,33,0,0,1,19,0,0,20,1,0,137,31,0,0,139,20,0,0,140,2,24,0,0,0,0,0,1,19,0,0,136,21,0,0,0,20,21,0,136,21,0,0,25,21,21,32,137,21,0,0,130,21,0,0,136,22,0,0,49,21,21,22,144,105,5,0,135,21,0,0,25,16,20,16,0,15,20,0,42,21,1,0,1,22,1,0,1,23,0,0,134,3,0,0,24,55,6,0,21,22,23,0,41,23,3,24,42,23,23,24,0,4,23,0,2,23,0,0,109,82,1,0,1,22,4,0,134,14,0,0,232,220,3,0,23,4,22,0,1,22,0,0,13,6,14,22,121,6,10,0,134,7,0,0,4,85,6,0,1,23,22,0,1,21,4,0,134,22,0,0,116,78,6,0,7,23,21,0,1,2,0,0,119,0,49,0,134,8,0,0,52,225,5,0,1,0,0,0,2,22,0,0,0,128,0,0,20,22,8,22,0,9,22,0,1,21,4,0,134,22,0,0,116,78,6,0,15,0,21,0,25,17,15,4,1,21,4,0,134,22,0,0,116,78,6,0,17,9,21,0,25,18,15,8,1,21,182,1,1,23,4,0,134,22,0,0,116,78,6,0,18,21,23,0,1,22,5,0,135,10,53,0,22,15,0,0,134,11,0,0,40,91,6,0,10,0,0,0,34,12,11,0,121,12,3,0,1,2,0,0,119,0,17,0,134,13,0,0,68,129,3,0,11,1,0,0,1,22,0,0,13,5,13,22,121,5,10,0,1,23,4,0,134,22,0,0,116,78,6,0,16,11,23,0,1,23,6,0,135,22,54,0,23,16,0,0,1,2,0,0,119,0,2,0,0,2,13,0,137,20,0,0,139,2,0,0,140,1,31,0,0,0,0,0,1,26,0,0,136,28,0,0,0,27,28,0,25,2,0,74,42,28,2,0,1,29,1,0,1,30,0,0,134,3,0,0,24,55,6,0,28,29,30,0,41,30,3,24,42,30,30,24,0,14,30,0,1,30,255,0,3,19,14,30,20,30,19,14,0,20,30,0,1,30,255,0,19,30,20,30,0,21,30,0,42,29,2,0,1,28,1,0,134,30,0,0,116,78,6,0,29,21,28,0,25,22,0,20,1,30,4,0,1,28,0,0,134,23,0,0,24,55,6,0,22,30,28,0,25,24,0,44,1,28,4,0,1,30,0,0,134,25,0,0,24,55,6,0,24,28,30,0,16,4,25,23,121,4,11,0,25,5,0,36,1,30,4,0,1,28,0,0,134,6,0,0,24,55,6,0,5,30,28,0,1,30,0,0,1,29,0,0,135,28,49,0,6,0,30,29,25,7,0,16,1,29,0,0,1,30,4,0,134,28,0,0,116,78,6,0,7,29,30,0,25,8,0,28,1,30,0,0,1,29,4,0,134,28,0,0,116,78,6,0,8,30,29,0,1,29,0,0,1,30,4,0,134,28,0,0,116,78,6,0,22,29,30,0,1,28,4,0,1,30,0,0,134,9,0,0,24,55,6,0,0,28,30,0,38,30,9,20,0,10,30,0,32,11,10,0,121,11,18,0,1,30,4,0,1,28,0,0,134,16,0,0,24,55,6,0,24,30,28,0,25,17,0,8,1,30,4,0,134,28,0,0,116,78,6,0,17,16,30,0,25,18,0,4,1,30,4,0,134,28,0,0,116,78,6,0,18,16,30,0,1,1,0,0,119,0,14,0,38,28,9,4,0,12,28,0,32,13,12,0,121,13,3,0,1,1,255,255,119,0,8,0,39,28,9,32,0,15,28,0,1,30,4,0,134,28,0,0,116,78,6,0,0,15,30,0,1,1,255,255,139,1,0,0,140,2,34,0,0,0,0,0,1,29,0,0,136,31,0,0,0,30,31,0,136,31,0,0,25,31,31,16,137,31,0,0,130,31,0,0,136,32,0,0,49,31,31,32,176,108,5,0,135,31,0,0,0,3,0,0,0,14,1,0,2,31,0,0,68,162,0,0,1,32,4,0,1,33,0,0,134,20,0,0,24,55,6,0,31,32,33,0,1,33,0,0,13,21,20,33,0,22,14,0,34,23,22,0,20,33,21,23,0,27,33,0,0,24,3,0,34,25,24,0,20,33,27,25,0,28,33,0,120,28,62,0,0,26,14,0,2,33,0,0,68,162,0,0,1,32,4,0,1,31,0,0,134,4,0,0,24,55,6,0,33,32,31,0,25,5,4,12,1,31,4,0,1,32,0,0,134,6,0,0,24,55,6,0,5,31,32,0,17,7,6,26,120,7,46,0,0,8,3,0,2,32,0,0,68,162,0,0,1,31,4,0,1,33,0,0,134,9,0,0,24,55,6,0,32,31,33,0,25,10,9,8,1,33,4,0,1,31,0,0,134,11,0,0,24,55,6,0,10,33,31,0,17,12,11,8,120,12,30,0,0,13,14,0,2,31,0,0,68,162,0,0,1,33,4,0,1,32,0,0,134,15,0,0,24,55,6,0,31,33,32,0,25,16,15,4,1,33,4,0,134,32,0,0,116,78,6,0,16,13,33,0,0,17,3,0,2,32,0,0,68,162,0,0,1,33,4,0,1,31,0,0,134,18,0,0,24,55,6,0,32,33,31,0,1,33,4,0,134,31,0,0,116,78,6,0,18,17,33,0,1,2,0,0,0,19,2,0,137,30,0,0,139,19,0,0,1,2,255,255,0,19,2,0,137,30,0,0,139,19,0,0,140,2,36,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,16,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,56,110,5,0,135,32,0,0,0,28,31,0,0,3,0,0,0,14,1,0,2,32,0,0,80,159,0,0,1,33,4,0,1,34,0,0,134,21,0,0,24,55,6,0,32,33,34,0,33,22,21,0,2,34,0,0,84,159,0,0,1,33,4,0,1,32,0,0,134,23,0,0,24,55,6,0,34,33,32,0,33,24,23,0,20,32,22,24,0,29,32,0,121,29,26,0,2,32,0,0,84,159,0,0,1,33,4,0,1,34,0,0,134,25,0,0,24,55,6,0,32,33,34,0,33,26,25,0,2,34,0,0,80,159,0,0,1,33,4,0,1,32,0,0,134,27,0,0,24,55,6,0,34,33,32,0,33,4,27,0,1,32,1,0,125,5,26,32,4,0,0,0,38,32,5,1,0,6,32,0,0,2,6,0,0,20,2,0,137,31,0,0,139,20,0,0,0,7,3,0,134,8,0,0,100,182,4,0,7,28,0,0,32,9,8,0,121,9,16,0,0,10,14,0,1,32,4,0,1,33,0,0,134,11,0,0,24,55,6,0,28,32,33,0,14,12,10,11,121,12,8,0,2,32,0,0,84,159,0,0,1,34,1,0,1,35,4,0,134,33,0,0,116,78,6,0,32,34,35,0,2,33,0,0,84,159,0,0,1,35,4,0,1,34,0,0,134,13,0,0,24,55,6,0,33,35,34,0,33,15,13,0,2,34,0,0,80,159,0,0,1,35,4,0,1,33,0,0,134,16,0,0,24,55,6,0,34,35,33,0,33,17,16,0,1,33,1,0,125,18,15,33,17,0,0,0,38,33,18,1,0,19,33,0,0,2,19,0,0,20,2,0,137,31,0,0,139,20,0,0,140,3,27,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,32,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,224,111,5,0,135,25,0,0,0,20,24,0,25,12,24,16,1,26,4,0,134,25,0,0,116,78,6,0,12,2,26,0,1,25,4,0,1,26,0,0,134,13,0,0,24,55,6,0,12,25,26,0,0,3,13,0,1,26,0,0,25,4,26,4,0,16,4,0,26,15,16,1,3,5,3,15,1,26,0,0,25,6,26,4,0,19,6,0,26,18,19,1,40,26,18,255,0,17,26,0,19,26,5,17,0,7,26,0,0,8,7,0,1,26,4,0,1,25,0,0,134,9,0,0,24,55,6,0,8,26,25,0,25,14,8,4,1,26,4,0,134,25,0,0,116,78,6,0,12,14,26,0,1,26,4,0,134,25,0,0,116,78,6,0,20,0,26,0,25,21,20,4,1,26,4,0,134,25,0,0,116,78,6,0,21,1,26,0,25,22,20,8,1,26,4,0,134,25,0,0,116,78,6,0,22,9,26,0,1,25,54,0,135,10,40,0,25,20,0,0,134,11,0,0,40,91,6,0,10,0,0,0,137,24,0,0,139,11,0,0,140,2,33,0,0,0,0,0,1,28,0,0,136,30,0,0,0,29,30,0,136,30,0,0,25,30,30,16,137,30,0,0,130,30,0,0,136,31,0,0,49,30,30,31,252,112,5,0,135,30,0,0,0,26,29,0,0,3,0,0,0,14,1,0,2,30,0,0,80,159,0,0,1,31,4,0,1,32,0,0,134,19,0,0,24,55,6,0,30,31,32,0,33,20,19,0,2,32,0,0,84,159,0,0,1,31,4,0,1,30,0,0,134,21,0,0,24,55,6,0,32,31,30,0,33,22,21,0,20,30,20,22,0,27,30,0,121,27,27,0,2,30,0,0,84,159,0,0,1,31,4,0,1,32,0,0,134,23,0,0,24,55,6,0,30,31,32,0,33,24,23,0,2,32,0,0,80,159,0,0,1,31,4,0,1,30,0,0,134,25,0,0,24,55,6,0,32,31,30,0,33,4,25,0,1,30,1,0,125,5,24,30,4,0,0,0,38,30,5,1,0,6,30,0,0,2,6,0,0,18,2,0,137,29,0,0,139,18,0,0,119,0,44,0,0,7,3,0,134,30,0,0,100,182,4,0,7,26,0,0,1,30,4,0,1,31,0,0,134,8,0,0,24,55,6,0,26,30,31,0,1,31,36,107,1,30,132,0,5,30,8,30,3,9,31,30,0,10,14,0,1,31,4,0,134,30,0,0,116,78,6,0,10,9,31,0,2,30,0,0,84,159,0,0,1,31,4,0,1,32,0,0,134,11,0,0,24,55,6,0,30,31,32,0,33,12,11,0,2,32,0,0,80,159,0,0,1,31,4,0,1,30,0,0,134,13,0,0,24,55,6,0,32,31,30,0,33,15,13,0,1,30,1,0,125,16,12,30,15,0,0,0,38,30,16,1,0,17,30,0,0,2,17,0,0,18,2,0,137,29,0,0,139,18,0,0,1,30,0,0,139,30,0,0,140,4,35,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,32,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,164,114,5,0,135,32,0,0,0,5,0,0,0,16,1,0,0,21,2,0,0,22,3,0,0,23,21,0,2,32,0,0,76,162,0,0,1,33,4,0,1,34,0,0,134,24,0,0,24,55,6,0,32,33,34,0,17,25,24,23,120,25,54,0,0,26,22,0,2,34,0,0,80,162,0,0,1,33,4,0,1,32,0,0,134,27,0,0,24,55,6,0,34,33,32,0,17,6,27,26,0,7,21,0,34,8,7,0,20,32,6,8,0,28,32,0,0,9,22,0,34,10,9,0,20,32,28,10,0,29,32,0,120,29,36,0,0,11,21,0,0,12,22,0,134,32,0,0,112,46,3,0,11,12,0,0,0,13,21,0,2,32,0,0,60,162,0,0,1,33,4,0,1,34,0,0,134,14,0,0,24,55,6,0,32,33,34,0,25,15,14,16,1,33,4,0,134,34,0,0,116,78,6,0,15,13,33,0,0,17,22,0,2,34,0,0,60,162,0,0,1,33,4,0,1,32,0,0,134,18,0,0,24,55,6,0,34,33,32,0,25,19,18,20,1,33,4,0,134,32,0,0,116,78,6,0,19,17,33,0,1,4,0,0,0,20,4,0,137,31,0,0,139,20,0,0,1,4,255,255,0,20,4,0,137,31,0,0,139,20,0,0,140,3,37,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,16,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,244,115,5,0,135,33,0,0,0,4,0,0,0,15,1,0,0,23,2,0,2,33,0,0,80,159,0,0,1,34,4,0,1,35,0,0,134,24,0,0,24,55,6,0,33,34,35,0,33,25,24,0,2,35,0,0,84,159,0,0,1,34,4,0,1,33,0,0,134,26,0,0,24,55,6,0,35,34,33,0,33,27,26,0,20,33,25,27,0,30,33,0,121,30,26,0,2,33,0,0,84,159,0,0,1,34,4,0,1,35,0,0,134,28,0,0,24,55,6,0,33,34,35,0,33,29,28,0,2,35,0,0,80,159,0,0,1,34,4,0,1,33,0,0,134,5,0,0,24,55,6,0,35,34,33,0,33,6,5,0,1,33,1,0,125,7,29,33,6,0,0,0,38,33,7,1,0,8,33,0,0,3,8,0,0,22,3,0,137,32,0,0,139,22,0,0,0,9,15,0,0,10,23,0,0,11,4,0,134,12,0,0,72,110,4,0,9,10,11,0,0,13,23,0,14,14,12,13,121,14,8,0,2,34,0,0,80,159,0,0,1,35,1,0,1,36,4,0,134,33,0,0,116,78,6,0,34,35,36,0,2,33,0,0,84,159,0,0,1,36,4,0,1,35,0,0,134,16,0,0,24,55,6,0,33,36,35,0,33,17,16,0,2,35,0,0,80,159,0,0,1,36,4,0,1,33,0,0,134,18,0,0,24,55,6,0,35,36,33,0,33,19,18,0,1,33,1,0,125,20,17,33,19,0,0,0,38,33,20,1,0,21,33,0,0,3,21,0,0,22,3,0,137,32,0,0,139,22,0,0,140,1,36,0,0,0,0,0,1,30,0,0,136,32,0,0,0,31,32,0,136,32,0,0,25,32,32,16,137,32,0,0,130,32,0,0,136,33,0,0,49,32,32,33,136,117,5,0,135,32,0,0,0,1,0,0,0,2,1,0,1,32,4,0,1,33,0,0,134,13,0,0,24,55,6,0,2,32,33,0,41,33,13,5,0,22,33,0,0,23,1,0,25,24,23,4,1,33,4,0,1,32,0,0,134,25,0,0,24,55,6,0,24,33,32,0,3,26,22,25,1,32,192,26,41,33,26,3,3,27,32,33,0,29,27,0,0,28,29,0,25,3,28,1,42,33,3,0,1,32,1,0,1,34,0,0,134,4,0,0,24,55,6,0,33,32,34,0,41,34,4,24,42,34,34,24,0,5,34,0,1,34,128,0,20,34,5,34,0,6,34,0,1,34,255,0,19,34,6,34,0,7,34,0,42,32,3,0,1,33,1,0,134,34,0,0,116,78,6,0,32,7,33,0,1,34,10,0,134,8,0,0,20,36,6,0,34,0,0,0,25,9,8,1,1,34,200,2,1,33,4,0,1,32,0,0,134,10,0,0,24,55,6,0,34,33,32,0,15,11,9,10,121,11,30,0,1,32,40,0,134,12,0,0,20,36,6,0,32,0,0,0,32,14,12,0,121,14,24,0,0,15,29,0,25,16,15,1,42,32,16,0,1,33,1,0,1,34,0,0,134,17,0,0,24,55,6,0,32,33,34,0,41,34,17,24,42,34,34,24,0,18,34,0,38,34,18,239,0,19,34,0,1,34,255,0,19,34,19,34,0,20,34,0,42,33,16,0,1,32,1,0,134,34,0,0,116,78,6,0,33,20,32,0,137,31,0,0,139,0,0,0,0,21,29,0,42,32,21,0,1,33,35,0,1,35,1,0,134,34,0,0,116,78,6,0,32,33,35,0,137,31,0,0,139,0,0,0,140,1,27,0,0,0,0,0,1,22,0,0,136,24,0,0,0,23,24,0,25,2,0,20,1,24,4,0,1,25,0,0,134,3,0,0,24,55,6,0,2,24,25,0,25,14,0,28,1,25,4,0,1,24,0,0,134,15,0,0,24,55,6,0,14,25,24,0,16,16,15,3,121,16,23,0,25,17,0,36,1,24,4,0,1,25,0,0,134,18,0,0,24,55,6,0,17,24,25,0,1,24,0,0,1,26,0,0,135,25,49,0,18,0,24,26,1,25,4,0,1,26,0,0,134,19,0,0,24,55,6,0,2,25,26,0,1,26,0,0,13,20,19,26,121,20,3,0,1,1,255,255,119,0,4,0,1,22,3,0,119,0,2,0,1,22,3,0,32,26,22,3,121,26,54,0,25,21,0,4,1,26,4,0,1,25,0,0,134,4,0,0,24,55,6,0,21,26,25,0,25,5,0,8,1,25,4,0,1,26,0,0,134,6,0,0,24,55,6,0,5,25,26,0,16,7,4,6,121,7,13,0,25,8,0,40,1,26,4,0,1,25,0,0,134,9,0,0,24,55,6,0,8,26,25,0], eb + 348160);
  HEAPU8.set([0,10,4,0,0,11,6,0,4,12,10,11,1,26,1,0,135,25,49,0,9,0,12,26,25,13,0,16,1,26,0,0,1,24,4,0,134,25,0,0,116,78,6,0,13,26,24,0,1,24,0,0,1,26,4,0,134,25,0,0,116,78,6,0,14,24,26,0,1,26,0,0,1,24,4,0,134,25,0,0,116,78,6,0,2,26,24,0,1,24,0,0,1,26,4,0,134,25,0,0,116,78,6,0,5,24,26,0,1,26,0,0,1,24,4,0,134,25,0,0,116,78,6,0,21,26,24,0,1,1,0,0,139,1,0,0,140,1,34,0,0,0,0,0,1,29,0,0,136,31,0,0,0,30,31,0,136,31,0,0,25,31,31,16,137,31,0,0,130,31,0,0,136,32,0,0,49,31,31,32,188,120,5,0,135,31,0,0,0,2,0,0,2,31,0,0,80,159,0,0,1,32,4,0,1,33,0,0,134,13,0,0,24,55,6,0,31,32,33,0,33,20,13,0,2,33,0,0,84,159,0,0,1,32,4,0,1,31,0,0,134,21,0,0,24,55,6,0,33,32,31,0,33,22,21,0,20,31,20,22,0,28,31,0,121,28,26,0,2,31,0,0,84,159,0,0,1,32,4,0,1,33,0,0,134,23,0,0,24,55,6,0,31,32,33,0,33,24,23,0,2,33,0,0,80,159,0,0,1,32,4,0,1,31,0,0,134,25,0,0,24,55,6,0,33,32,31,0,33,26,25,0,1,31,1,0,125,3,24,31,26,0,0,0,38,31,3,1,0,4,31,0,0,1,4,0,0,19,1,0,137,30,0,0,139,19,0,0,1,27,0,0,0,5,27,0,34,6,5,18,120,6,2,0,119,0,13,0,0,7,2,0,0,8,27,0,1,31,208,25,41,32,8,2,3,9,31,32,134,32,0,0,232,22,5,0,7,9,0,0,0,10,27,0,25,11,10,1,0,27,11,0,119,0,241,255,2,32,0,0,84,159,0,0,1,31,4,0,1,33,0,0,134,12,0,0,24,55,6,0,32,31,33,0,33,14,12,0,2,33,0,0,80,159,0,0,1,31,4,0,1,32,0,0,134,15,0,0,24,55,6,0,33,31,32,0,33,16,15,0,1,32,1,0,125,17,14,32,16,0,0,0,38,32,17,1,0,18,32,0,0,1,18,0,0,19,1,0,137,30,0,0,139,19,0,0,140,1,32,0,0,0,0,0,1,27,0,0,136,29,0,0,0,28,29,0,136,29,0,0,25,29,29,16,137,29,0,0,130,29,0,0,136,30,0,0,49,29,29,30,76,122,5,0,135,29,0,0,0,1,0,0,1,26,76,1,0,2,26,0,1,29,124,2,18,13,2,29,120,13,2,0,119,0,60,0,0,19,1,0,0,20,26,0,1,29,4,0,1,30,0,0,134,21,0,0,24,55,6,0,20,29,30,0,13,22,19,21,121,22,47,0,0,23,26,0,25,24,23,12,1,30,4,0,1,29,0,0,134,25,0,0,24,55,6,0,24,30,29,0,1,29,0,0,15,3,29,25,121,3,37,0,0,4,26,0,25,5,4,12,1,29,4,0,1,30,0,0,134,6,0,0,24,55,6,0,5,29,30,0,26,7,6,1,1,29,4,0,134,30,0,0,116,78,6,0,5,7,29,0,32,8,7,0,121,8,23,0,0,9,26,0,1,29,0,0,1,31,4,0,134,30,0,0,116,78,6,0,9,29,31,0,0,10,26,0,25,11,10,4,1,30,4,0,1,31,0,0,134,12,0,0,24,55,6,0,11,30,31,0,0,14,26,0,25,15,14,8,1,31,4,0,1,30,0,0,134,16,0,0,24,55,6,0,15,31,30,0,135,30,50,0,12,16,0,0,0,17,26,0,25,18,17,16,0,26,18,0,119,0,193,255,137,28,0,0,139,0,0,0,140,3,28,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,32,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,144,123,5,0,135,25,0,0,25,22,24,16,25,21,24,8,0,20,24,0,0,3,0,0,0,4,1,0,0,12,2,0,2,25,0,0,6,209,0,0,42,25,25,0,1,26,1,0,1,27,0,0,134,13,0,0,24,55,6,0,25,26,27,0,41,27,13,24,42,27,27,24,33,14,27,0,121,14,3,0,137,24,0,0,139,0,0,0,0,15,3,0,25,16,15,8,1,27,4,0,1,26,0,0,134,17,0,0,24,55,6,0,16,27,26,0,32,18,17,41,121,18,26,0,0,19,3,0,25,5,19,52,1,26,4,0,1,27,0,0,134,6,0,0,24,55,6,0,5,26,27,0,1,27,100,20,27,26,6,20,3,7,27,26,1,26,4,0,1,27,0,0,134,8,0,0,24,55,6,0,7,26,27,0,1,26,4,0,134,27,0,0,116,78,6,0,20,8,26,0,2,26,0,0,85,251,0,0,134,27,0,0,112,85,6,0,26,20,0,0,119,0,6,0,2,26,0,0,98,251,0,0,134,27,0,0,112,85,6,0,26,21,0,0,0,9,4,0,1,26,4,0,134,27,0,0,116,78,6,0,22,9,26,0,2,26,0,0,219,50,1,0,134,27,0,0,112,85,6,0,26,22,0,0,0,10,12,0,41,27,10,24,42,27,27,24,33,11,27,0,121,11,3,0,137,24,0,0,139,0,0,0,134,27,0,0,120,187,4,0,137,24,0,0,139,0,0,0,140,3,34,0,0,0,0,0,1,28,0,0,136,30,0,0,0,29,30,0,136,30,0,0,25,30,30,16,137,30,0,0,130,30,0,0,136,31,0,0,49,30,30,31,4,125,5,0,135,30,0,0,0,4,0,0,0,5,1,0,0,16,2,0,0,21,16,0,1,30,50,0,15,22,30,21,1,30,50,0,125,3,22,30,2,0,0,0,0,16,3,0,0,23,16,0,26,24,23,1,0,16,24,0,33,25,23,0,120,25,2,0,119,0,53,0,0,26,5,0,42,30,26,0,1,31,1,0,1,32,0,0,134,27,0,0,24,55,6,0,30,31,32,0,41,32,27,24,42,32,32,24,0,6,32,0,134,7,0,0,228,105,6,0,6,0,0,0,33,8,7,0,121,8,3,0,1,28,5,0,119,0,14,0,0,9,5,0,42,32,9,0,1,31,1,0,1,30,0,0,134,10,0,0,24,55,6,0,32,31,30,0,41,30,10,24,42,30,30,24,0,11,30,0,32,12,11,32,121,12,2,0,1,28,5,0,32,30,28,5,121,30,17,0,1,28,0,0,0,13,5,0,42,30,13,0,1,31,1,0,1,32,0,0,134,14,0,0,24,55,6,0,30,31,32,0,0,15,4,0,25,17,15,1,0,4,17,0,42,31,15,0,1,30,1,0,134,32,0,0,116,78,6,0,31,14,30,0,0,18,5,0,25,19,18,1,0,5,19,0,119,0,199,255,0,20,4,0,42,30,20,0,1,31,0,0,1,33,1,0,134,32,0,0,116,78,6,0,30,31,33,0,137,29,0,0,139,0,0,0,140,2,36,0,0,0,0,0,1,32,0,0,136,34,0,0,0,33,34,0,136,34,0,0,25,34,34,16,137,34,0,0,130,34,0,0,136,35,0,0,49,34,34,35,108,126,5,0,135,34,0,0,0,2,0,0,0,3,1,0,0,14,3,0,2,34,0,0,0,0,255,255,19,34,14,34,0,24,34,0,0,31,24,0,0,25,31,0,2,34,0,0,0,0,0,255,19,34,25,34,0,26,34,0,33,27,26,0,120,27,12,0,0,28,2,0,25,29,28,28,1,34,4,0,1,35,0,0,134,30,0,0,24,55,6,0,29,34,35,0,0,4,31,0,20,35,4,30,0,5,35,0,0,31,5,0,0,6,31,0,2,35,0,0,0,0,0,255,19,35,6,35,0,7,35,0,33,8,7,0,0,9,2,0,25,10,9,32,1,35,4,0,1,34,0,0,134,11,0,0,24,55,6,0,10,35,34,0,121,8,22,0,2,34,0,0,0,0,255,0,19,34,11,34,0,16,34,0,0,17,31,0,20,34,17,16,0,18,34,0,0,31,18,0,0,19,3,0,2,34,0,0,255,255,0,0,19,34,19,34,0,20,34,0,0,21,31,0,20,34,20,21,0,22,34,0,0,3,22,0,0,23,3,0,137,33,0,0,139,23,0,0,119,0,21,0,2,34,0,0,0,0,255,255,19,34,11,34,0,12,34,0,0,13,31,0,20,34,13,12,0,15,34,0,0,31,15,0,0,19,3,0,2,34,0,0,255,255,0,0,19,34,19,34,0,20,34,0,0,21,31,0,20,34,20,21,0,22,34,0,0,3,22,0,0,23,3,0,137,33,0,0,139,23,0,0,1,34,0,0,139,34,0,0,140,0,24,0,0,0,0,0,1,19,0,0,136,21,0,0,0,20,21,0,136,21,0,0,25,21,21,32,137,21,0,0,130,21,0,0,136,22,0,0,49,21,21,22,236,127,5,0,135,21,0,0,25,18,20,16,25,17,20,8,0,16,20,0,134,0,0,0,8,44,6,0,41,21,0,24,42,21,21,24,33,1,21,0,121,1,3,0,137,20,0,0,139,0,0,0,1,21,216,106,1,22,4,0,1,23,0,0,134,8,0,0,24,55,6,0,21,22,23,0,41,23,8,5,0,9,23,0,1,23,220,106,1,22,4,0,1,21,0,0,134,10,0,0,24,55,6,0,23,22,21,0,3,11,9,10,1,21,192,26,41,22,11,3,3,12,21,22,42,22,12,0,1,21,1,0,1,23,0,0,134,13,0,0,24,55,6,0,22,21,23,0,41,23,13,24,42,23,23,24,0,14,23,0,32,15,14,37,120,15,8,0,2,21,0,0,245,205,0,0,134,23,0,0,144,18,6,0,21,18,0,0,137,20,0,0,139,0,0,0,2,23,0,0,241,208,0,0,42,23,23,0,1,21,1,0,1,22,0,0,134,2,0,0,24,55,6,0,23,21,22,0,41,22,2,24,42,22,22,24,33,3,22,0,120,3,8,0,2,21,0,0,215,205,0,0,134,22,0,0,144,18,6,0,21,17,0,0,137,20,0,0,139,0,0,0,1,22,200,2,1,21,4,0,1,23,0,0,134,4,0,0,24,55,6,0,22,21,23,0,26,5,4,1,1,21,200,2,1,22,4,0,134,23,0,0,116,78,6,0,21,5,22,0,1,23,200,2,1,22,4,0,1,21,0,0,134,6,0,0,24,55,6,0,23,22,21,0,32,7,6,0,121,7,3,0,134,21,0,0,124,10,2,0,134,21,0,0,16,53,3,0,2,22,0,0,172,205,0,0,134,21,0,0,144,18,6,0,22,16,0,0,137,20,0,0,139,0,0,0,140,2,31,0,0,0,0,0,1,26,0,0,136,28,0,0,0,27,28,0,1,28,0,0,13,2,0,28,121,2,5,0,135,3,5,0,1,0,0,0,0,25,3,0,139,25,0,0,1,28,191,255,16,14,28,1,121,14,10,0,134,18,0,0,4,85,6,0,1,29,12,0,1,30,4,0,134,28,0,0,116,78,6,0,18,29,30,0,1,25,0,0,139,25,0,0,35,19,1,11,25,20,1,11,38,28,20,248,0,21,28,0,1,28,16,0,125,22,19,28,21,0,0,0,26,23,0,8,134,24,0,0,232,233,1,0,23,22,0,0,1,28,0,0,13,4,24,28,120,4,4,0,25,5,24,8,0,25,5,0,139,25,0,0,135,6,5,0,1,0,0,0,1,28,0,0,13,7,6,28,121,7,3,0,1,25,0,0,139,25,0,0,26,8,0,4,1,28,4,0,1,30,0,0,134,9,0,0,24,55,6,0,8,28,30,0,38,30,9,248,0,10,30,0,38,30,9,3,0,11,30,0,32,12,11,0,1,30,8,0,1,28,4,0,125,13,12,30,28,0,0,0,4,15,10,13,16,16,15,1,125,17,16,15,1,0,0,0,135,28,26,0,6,0,17,0,135,28,6,0,0,0,0,0,0,25,6,0,139,25,0,0,140,1,27,0,0,0,0,0,1,22,0,0,136,24,0,0,0,23,24,0,136,24,0,0,25,24,24,32,137,24,0,0,130,24,0,0,136,25,0,0,49,24,24,25,200,130,5,0,135,24,0,0,25,21,23,8,0,20,23,0,0,2,0,0,0,12,2,0,1,24,0,0,13,13,12,24,121,13,5,0,1,1,0,0,0,11,1,0,137,23,0,0,139,11,0,0,0,14,2,0,1,24,192,106,1,25,4,0,1,26,0,0,134,15,0,0,24,55,6,0,24,25,26,0,13,16,14,15,120,16,32,0,0,17,2,0,1,26,204,106,1,25,4,0,1,24,0,0,134,18,0,0,24,55,6,0,26,25,24,0,13,19,17,18,120,19,23,0,0,3,2,0,1,24,196,106,1,25,4,0,1,26,0,0,134,4,0,0,24,55,6,0,24,25,26,0,13,5,3,4,120,5,14,0,0,6,2,0,1,26,200,106,1,25,4,0,1,24,0,0,134,7,0,0,24,55,6,0,26,25,24,0,13,8,6,7,120,8,5,0,1,1,0,0,0,11,1,0,137,23,0,0,139,11,0,0,2,24,0,0,5,209,0,0,42,24,24,0,1,25,1,0,1,26,0,0,134,9,0,0,24,55,6,0,24,25,26,0,41,26,9,24,42,26,26,24,33,10,26,0,120,10,6,0,2,25,0,0,171,17,1,0,134,26,0,0,112,85,6,0,25,20,0,0,2,25,0,0,187,17,1,0,134,26,0,0,144,18,6,0,25,21,0,0,1,1,1,0,0,11,1,0,137,23,0,0,139,11,0,0,140,2,30,0,0,0,0,0,1,25,0,0,136,27,0,0,0,26,27,0,1,27,255,3,15,5,27,1,121,5,27,0,62,27,0,0,0,0,0,0,0,0,224,127,65,6,0,27,1,27,255,3,4,16,1,27,1,27,255,3,15,17,27,16,121,17,15,0,62,27,0,0,0,0,0,0,0,0,224,127,65,18,6,27,1,27,254,7,4,19,1,27,1,27,255,3,15,20,27,19,1,27,255,3,125,2,20,27,19,0,0,0,0,3,2,0,58,24,18,0,119,0,35,0,0,3,16,0,58,24,6,0,119,0,32,0,1,27,2,252,15,21,1,27,121,21,27,0,62,27,0,0,0,0,0,0,0,0,16,0,65,22,0,27,1,27,254,3,3,23,1,27,1,27,2,252,15,7,23,27,121,7,15,0,62,27,0,0,0,0,0,0,0,0,16,0,65,8,22,27,1,27,252,7,3,9,1,27,1,27,2,252,15,10,9,27,1,27,2,252,125,4,10,27,9,0,0,0,0,3,4,0,58,24,8,0,119,0,6,0,0,3,23,0,58,24,22,0,119,0,3,0,0,3,1,0,58,24,0,0,1,27,255,3,3,11,3,27,1,27,0,0,1,28,52,0,135,12,1,0,11,27,28,0,128,28,0,0,0,13,28,0,127,27,0,0,1,29,4,0,134,28,0,0,116,78,6,0,27,12,29,0,127,29,0,0,25,29,29,4,1,27,4,0,134,28,0,0,116,78,6,0,29,13,27,0,127,28,0,0,1,27,8,0,134,14,0,0,208,90,6,0,28,27,0,0,65,15,24,14,139,15,0,0,140,1,25,0,0,0,0,0,1,20,0,0,136,22,0,0,0,21,22,0,1,14,0,0,2,22,0,0,246,73,1,0,3,3,22,14,42,22,3,0,1,23,1,0,1,24,0,0,134,6,0,0,24,55,6,0,22,23,24,0,1,24,255,0,19,24,6,24,0,7,24,0,13,8,7,0,121,8,4,0,0,15,14,0,1,20,2,0,119,0,11,0,25,9,14,1,32,10,9,87,121,10,6,0,1,16,87,0,2,18,0,0,78,74,1,0,1,20,5,0,119,0,3,0,0,14,9,0,119,0,230,255,32,24,20,2,121,24,10,0,32,2,15,0,121,2,4,0,2,17,0,0,78,74,1,0,119,0,5,0,0,16,15,0,2,18,0,0,78,74,1,0,1,20,5,0,32,24,20,5,121,24,27,0,1,20,0,0,0,19,18,0,42,24,19,0,1,23,1,0,1,22,0,0,134,11,0,0,24,55,6,0,24,23,22,0,41,22,11,24,42,22,22,24,32,12,22,0,25,13,19,1,121,12,3,0,0,1,13,0,119,0,3,0,0,19,13,0,119,0,242,255,26,4,16,1,32,5,4,0,121,5,3,0,0,17,1,0,119,0,5,0,0,16,4,0,0,18,1,0,1,20,5,0,119,0,231,255,139,17,0,0,140,2,30,0,0,0,0,0,1,25,0,0,136,27,0,0,0,26,27,0,136,27,0,0,25,27,27,16,137,27,0,0,130,27,0,0,136,28,0,0,49,27,27,28,192,134,5,0,135,27,0,0,0,3,0,0,0,14,1,0,1,24,0,0,2,27,0,0,76,159,0,0,1,28,4,0,1,29,0,0,134,17,0,0,24,55,6,0,27,28,29,0,33,18,17,0,121,18,12,0,2,29,0,0,76,159,0,0,1,28,4,0,1,27,0,0,134,19,0,0,24,55,6,0,29,28,27,0,0,2,19,0,0,16,2,0,137,26,0,0,139,16,0,0,0,20,3,0,2,28,0,0,9,0,205,171,134,27,0,0,72,32,6,0,20,28,0,0,0,21,14,0,134,22,0,0,32,64,6,0,21,0,0,0,0,24,22,0,0,23,3,0,0,4,24,0,134,27,0,0,156,47,5,0,23,4,0,0,0,5,24,0,34,6,5,1,121,6,12,0,2,27,0,0,76,159,0,0,1,28,4,0,1,29,0,0,134,7,0,0,24,55,6,0,27,28,29,0,0,2,7,0,0,16,2,0,137,26,0,0,139,16,0,0,0,8,14,0,1,29,0,0,14,9,8,29,120,9,2,0,119,0,14,0,0,10,3,0,0,11,14,0,134,29,0,0,108,138,3,0,10,11,0,0,0,12,14,0,1,29,4,0,1,28,0,0,134,13,0,0,24,55,6,0,12,29,28,0,0,14,13,0,119,0,239,255,2,28,0,0,76,159,0,0,1,29,4,0,1,27,0,0,134,15,0,0,24,55,6,0,28,29,27,0,0,2,15,0,0,16,2,0,137,26,0,0,139,16,0,0,140,3,28,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,32,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,60,136,5,0,135,25,0,0,25,22,24,16,25,21,24,8,0,20,24,0,0,3,0,0,0,4,1,0,0,12,2,0,2,25,0,0,6,209,0,0,42,25,25,0,1,26,1,0,1,27,0,0,134,13,0,0,24,55,6,0,25,26,27,0,41,27,13,24,42,27,27,24,33,14,27,0,121,14,3,0,137,24,0,0,139,0,0,0,0,15,3,0,25,16,15,8,1,27,4,0,1,26,0,0,134,17,0,0,24,55,6,0,16,27,26,0,32,18,17,41,121,18,26,0,0,19,3,0,25,5,19,52,1,26,4,0,1,27,0,0,134,6,0,0,24,55,6,0,5,26,27,0,1,27,100,20,27,26,6,20,3,7,27,26,1,26,4,0,1,27,0,0,134,8,0,0,24,55,6,0,7,26,27,0,1,26,4,0,134,27,0,0,116,78,6,0,20,8,26,0,2,26,0,0,145,251,0,0,134,27,0,0,112,85,6,0,26,20,0,0,119,0,6,0,2,26,0,0,160,251,0,0,134,27,0,0,112,85,6,0,26,21,0,0,0,9,4,0,134,27,0,0,112,85,6,0,9,22,0,0,0,10,12,0,41,27,10,24,42,27,27,24,33,11,27,0,121,11,3,0,137,24,0,0,139,0,0,0,134,27,0,0,120,187,4,0,137,24,0,0,139,0,0,0,140,1,23,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,32,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,152,137,5,0,135,20,0,0,25,17,19,16,25,16,19,8,0,15,19,0,0,1,0,0,1,14,0,0,2,20,0,0,5,209,0,0,42,20,20,0,1,21,1,0,1,22,0,0,134,2,0,0,24,55,6,0,20,21,22,0,41,22,2,24,42,22,22,24,33,5,22,0,121,5,9,0,2,21,0,0,42,225,0,0,2,20,0,0,144,52,1,0,134,22,0,0,248,82,6,0,21,20,15,0,119,0,8,0,2,20,0,0,42,225,0,0,2,21,0,0,152,52,1,0,134,22,0,0,248,82,6,0,20,21,16,0,0,6,1,0,41,22,6,24,42,22,22,24,0,7,22,0,33,8,7,42,120,8,5,0,137,19,0,0,2,22,0,0,42,225,0,0,139,22,0,0,2,22,0,0,42,225,0,0,135,9,22,0,22,0,0,0,2,22,0,0,42,225,0,0,3,10,22,9,0,13,10,0,0,11,1,0,41,22,11,24,42,22,22,24,0,12,22,0,1,22,33,0,1,21,31,0,138,12,22,21,252,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,8,139,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,248,138,5,0,20,139,5,0,248,138,5,0,32,139,5,0,119,0,13,0,2,14,0,0,80,54,1,0,119,0,10,0,2,14,0,0,180,52,1,0,119,0,7,0,2,14,0,0,119,54,1,0,119,0,4,0,2,14,0,0,87,54,1,0,119,0,1,0,0,3,13,0,0,4,14,0,1,21,4,0,134,22,0,0,116,78,6,0,17,4,21,0,2,21,0,0,186,52,1,0,134,22,0,0,248,82,6,0,3,21,17,0,137,19,0,0,2,22,0,0,42,225,0,0,139,22,0,0,140,1,33,0,0,0,0,0,1,29,0,0,136,31,0,0,0,30,31,0,136,31,0,0,25,31,31,16,137,31,0,0,130,31,0,0,136,32,0,0,49,31,31,32,156,139,5,0,135,31,0,0,0,1,0,0,0,2,1,0,25,13,2,28,25,21,13,8,1,31,4,0,1,32,0,0,134,22,0,0,24,55,6,0,21,31,32,0,32,23,22,1,0,24,1,0,25,25,24,28,25,26,25,36,1,32,4,0,1,31,0,0,134,27,0,0,24,55,6,0,26,32,31,0,121,23,6,0,28,31,27,8,38,31,31,255,0,3,31,0,0,28,3,0,119,0,5,0,28,31,27,6,38,31,31,255,0,4,31,0,0,28,4,0,0,5,1,0,25,6,5,28,25,7,6,8,1,31,4,0,1,32,0,0,134,8,0,0,24,55,6,0,7,31,32,0,1,32,9,0,15,9,32,8,121,9,7,0,0,10,28,0,27,11,10,20,0,28,11,0,0,20,28,0,137,30,0,0,139,20,0,0,0,12,1,0,25,14,12,28,25,15,14,8,1,32,4,0,1,31,0,0,134,16,0,0,24,55,6,0,15,32,31,0,1,31,6,0,15,17,31,16,120,17,4,0,0,20,28,0,137,30,0,0,139,20,0,0,0,18,28,0,41,31,18,2,0,19,31,0,0,28,19,0,0,20,28,0,137,30,0,0,139,20,0,0,140,3,35,0,0,0,0,0,1,31,0,0,136,33,0,0,0,32,33,0,136,33,0,0,25,33,33,16,137,33,0,0,130,33,0,0,136,34,0,0,49,33,33,34,216,140,5,0,135,33,0,0,0,4,0,0,0,15,1,0,0,22,2,0,0,23,4,0,1,33,0,0,13,24,23,33,0,25,22,0,34,26,25,0,20,33,24,26,0,29,33,0,0,27,15,0,34,28,27,0,20,33,29,28,0,30,33,0,120,30,38,0,0,5,22,0,0,6,4,0,25,7,6,12,1,33,4,0,1,34,0,0,134,8,0,0,24,55,6,0,7,33,34,0,17,9,8,5,120,9,28,0,0,10,15,0,0,11,4,0,25,12,11,8,1,34,4,0,1,33,0,0,134,13,0,0,24,55,6,0,12,34,33,0,17,14,13,10,120,14,18,0,0,16,22,0,0,17,4,0,25,18,17,4,1,34,4,0,134,33,0,0,116,78,6,0,18,16,34,0,0,19,15,0,0,20,4,0,1,34,4,0,134,33,0,0,116,78,6,0,20,19,34,0,1,3,0,0,0,21,3,0,137,32,0,0,139,21,0,0,1,3,255,255,0,21,3,0,137,32,0,0,139,21,0,0,140,2,28,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,16,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,236,141,5,0,135,25,0,0,25,13,24,12,25,22,24,14,0,3,0,0,1,26,2,0,134,25,0,0,116,78,6,0,13,1,26,0,0,21,13,0,2,25,0,0,76,159,0,0,1,26,4,0,1,27,0,0,134,14,0,0,24,55,6,0,25,26,27,0,33,15,14,0,121,15,12,0,2,27,0,0,76,159,0,0,1,26,4,0,1,25,0,0,134,16,0,0,24,55,6,0,27,26,25,0,0,2,16,0,0,12,2,0,137,24,0,0,139,12,0,0,2,25,0,0,88,159,0,0,42,25,25,0,1,26,1,0,1,27,0,0,134,17,0,0,24,55,6,0,25,26,27,0,41,27,17,24,42,27,27,24,0,18,27,0,32,19,18,1,121,19,28,0,0,20,21,0,42,27,20,0,1,26,1,0,1,25,0,0,134,4,0,0,24,55,6,0,27,26,25,0,25,5,22,1,42,26,5,0,1,27,1,0,134,25,0,0,116,78,6,0,26,4,27,0,0,6,21,0,25,7,6,1,42,25,7,0,1,27,1,0,1,26,0,0,134,8,0,0,24,55,6,0,25,27,26,0,42,27,22,0,1,25,1,0,134,26,0,0,116,78,6,0,27,8,25,0,0,21,22,0,0,9,3,0,0,10,21,0,1,25,2,0,134,26,0,0,72,4,6,0,9,10,25,0,2,26,0,0,76,159,0,0,1,25,4,0,1,27,0,0,134,11,0,0,24,55,6,0,26,25,27,0,0,2,11,0,0,12,2,0,137,24,0,0,139,12,0,0,140,2,24,0,0,0,0,0,1,19,0,0,136,21,0,0,0,20,21,0,127,22,0,0,1,23,8,0,134,21,0,0,56,86,6,0,22,0,23,0,127,21,0,0,1,23,4,0,1,22,0,0,134,4,0,0,24,55,6,0,21,23,22,0,127,22,0,0,25,22,22,4,1,23,4,0,1,21,0,0,134,5,0,0,24,55,6,0,22,23,21,0,1,21,52,0,135,10,3,0,4,5,21,0,128,21,0,0,0,11,21,0,1,21,255,7,19,21,10,21,0,12,21,0,1,21,0,0,1,23,0,8,138,12,21,23,72,176,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0,200,175,5,0], eb + 358400);
  HEAPU8.seteb + 368640);
  HEAPU8.set([130,34,0,0,136,35,0,0,49,34,34,35,20,200,5,0,135,34,0,0,0,2,0,0,0,3,1,0,0,14,2,0,0,31,14,0,0,22,3,0,0,23,2,0,27,34,22,20,3,24,23,34,0,29,24,0,1,34,100,0,134,25,0,0,20,36,6,0,34,0,0,0,0,30,25,0,0,26,2,0,0,27,29,0,16,28,26,27,120,28,2,0,119,0,15,0,0,4,30,0,0,5,2,0,25,6,5,4,1,34,4,0,1,35,0,0,134,7,0,0,24,55,6,0,6,34,35,0,15,8,4,7,120,8,5,0,0,9,2,0,25,10,9,20,0,2,10,0,119,0,238,255,0,11,2,0,0,12,29,0,13,13,11,12,121,13,3,0,0,15,31,0,0,2,15,0,0,16,2,0,0,17,31,0,0,18,16,0,0,19,17,0,4,20,18,19,28,35,20,20,38,35,35,255,0,21,35,0,137,33,0,0,139,21,0,0,140,3,31,0,0,0,0,0,1,26,0,0,136,28,0,0,0,27,28,0,136,28,0,0,25,28,28,32,137,28,0,0,130,28,0,0,136,29,0,0,49,28,28,29,12,201,5,0,135,28,0,0,0,4,0,0,0,15,1,0,0,18,2,0,2,28,0,0,76,159,0,0,1,29,4,0,1,30,0,0,134,19,0,0,24,55,6,0,28,29,30,0,33,20,19,0,121,20,12,0,2,30,0,0,76,159,0,0,1,29,4,0,1,28,0,0,134,21,0,0,24,55,6,0,30,29,28,0,0,3,21,0,0,17,3,0,137,27,0,0,139,17,0,0,0,22,4,0,2,29,0,0,11,0,205,171,134,28,0,0,72,32,6,0,22,29,0,0,0,23,4,0,0,24,18,0,134,28,0,0,156,47,5,0,23,24,0,0,1,25,0,0,0,5,25,0,0,6,18,0,15,7,5,6,120,7,2,0,119,0,14,0,0,8,4,0,0,9,25,0,0,10,15,0,27,28,9,52,3,11,10,28,25,12,11,12,134,28,0,0,104,31,5,0,8,12,0,0,0,13,25,0,25,14,13,1,0,25,14,0,119,0,239,255,2,28,0,0,76,159,0,0,1,29,4,0,1,30,0,0,134,16,0,0,24,55,6,0,28,29,30,0,0,3,16,0,0,17,3,0,137,27,0,0,139,17,0,0,140,1,28,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,25,2,0,74,42,25,2,0,1,26,1,0,1,27,0,0,134,3,0,0,24,55,6,0,25,26,27,0,41,27,3,24,42,27,27,24,0,14,27,0,1,27,255,0,3,16,14,27,20,27,16,14,0,17,27,0,1,27,255,0,19,27,17,27,0,18,27,0,42,26,2,0,1,25,1,0,134,27,0,0,116,78,6,0,26,18,25,0,1,27,4,0,1,25,0,0,134,19,0,0,24,55,6,0,0,27,25,0,38,25,19,8,0,20,25,0,32,21,20,0,121,21,44,0,25,4,0,8,1,27,0,0,1,26,4,0,134,25,0,0,116,78,6,0,4,27,26,0,25,5,0,4,1,26,0,0,1,27,4,0,134,25,0,0,116,78,6,0,5,26,27,0,25,6,0,44,1,25,4,0,1,27,0,0,134,7,0,0,24,55,6,0,6,25,27,0,25,8,0,28,1,25,4,0,134,27,0,0,116,78,6,0,8,7,25,0,25,9,0,20,1,25,4,0,134,27,0,0,116,78,6,0,9,7,25,0,0,10,7,0,25,11,0,48,1,27,4,0,1,25,0,0,134,12,0,0,24,55,6,0,11,27,25,0,3,13,10,12,25,15,0,16,1,27,4,0,134,25,0,0,116,78,6,0,15,13,27,0,1,1,0,0,119,0,8,0,39,25,19,32,0,22,25,0,1,27,4,0,134,25,0,0,116,78,6,0,0,22,27,0,1,1,255,255,139,1,0,0,140,0,15,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,136,11,0,0,25,11,11,32,137,11,0,0,130,11,0,0,136,12,0,0,49,11,11,12,156,203,5,0,135,11,0,0,25,8,10,16,25,7,10,8,0,6,10,0,2,11,0,0,76,162,0,0,1,12,4,0,1,13,0,0,134,0,0,0,24,55,6,0,11,12,13,0,26,1,0,1,1,12,0,0,134,13,0,0,124,108,5,0,1,12,0,0,134,13,0,0,224,106,6,0,134,13,0,0,196,101,6,0,134,13,0,0,132,92,6,0,1,12,10,0,134,13,0,0,20,105,6,0,12,0,0,0,2,12,0,0,247,208,0,0,42,12,12,0,1,11,1,0,1,14,1,0,134,13,0,0,116,78,6,0,12,11,14,0,2,14,0,0,38,217,0,0,42,14,14,0,1,11,0,0,1,12,1,0,134,13,0,0,116,78,6,0,14,11,12,0,2,13,0,0,60,195,0,0,1,12,4,0,1,11,0,0,134,2,0,0,24,55,6,0,13,12,11,0,134,11,0,0,116,193,4,0,2,0,0,0,134,11,0,0,24,116,6,0,2,12,0,0,167,37,1,0,134,11,0,0,144,18,6,0,12,6,0,0,2,12,0,0,189,16,1,0,134,11,0,0,192,79,6,0,12,7,0,0,2,11,0,0,60,195,0,0,1,12,4,0,1,13,0,0,134,3,0,0,24,55,6,0,11,12,13,0,134,13,0,0,116,193,4,0,3,0,0,0,134,13,0,0,244,103,6,0,134,13,0,0,60,100,6,0,2,13,0,0,68,162,0,0,1,12,4,0,1,11,0,0,134,4,0,0,24,55,6,0,13,12,11,0,1,12,1,0,134,11,0,0,132,62,6,0,4,12,0,0,134,11,0,0,20,96,6,0,2,12,0,0,247,208,0,0,42,12,12,0,1,13,0,0,1,14,1,0,134,11,0,0,116,78,6,0,12,13,14,0,1,14,10,0,134,11,0,0,112,14,6,0,14,0,0,0,2,14,0,0,166,51,1,0,134,11,0,0,144,18,6,0,14,8,0,0,2,11,0,0,68,162,0,0,1,14,4,0,1,13,0,0,134,5,0,0,24,55,6,0,11,14,13,0,1,14,1,0,134,13,0,0,0,62,6,0,5,14,0,0,137,10,0,0,139,0,0,0,140,2,26,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,16,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,176,205,5,0,135,23,0,0,0,2,0,0,0,3,1,0,0,13,2,0,1,23,4,0,1,24,0,0,134,14,0,0,24,55,6,0,13,23,24,0,1,24,0,0,14,15,14,24,121,15,40,0,0,16,2,0,1,24,4,0,1,23,0,0,134,17,0,0,24,55,6,0,16,24,23,0,0,18,3,0,1,24,4,0,134,23,0,0,116,78,6,0,18,17,24,0,0,19,3,0,0,20,2,0,1,23,4,0,1,24,0,0,134,4,0,0,24,55,6,0,20,23,24,0,25,5,4,4,1,23,4,0,134,24,0,0,116,78,6,0,5,19,23,0,0,6,3,0,25,7,6,4,1,23,0,0,1,25,4,0,134,24,0,0,116,78,6,0,7,23,25,0,0,11,3,0,0,12,2,0,1,25,4,0,134,24,0,0,116,78,6,0,12,11,25,0,137,22,0,0,139,0,0,0,119,0,22,0,0,8,3,0,1,25,0,0,1,23,4,0,134,24,0,0,116,78,6,0,8,25,23,0,0,9,3,0,25,10,9,4,1,23,0,0,1,25,4,0,134,24,0,0,116,78,6,0,10,23,25,0,0,11,3,0,0,12,2,0,1,25,4,0,134,24,0,0,116,78,6,0,12,11,25,0,137,22,0,0,139,0,0,0,139,0,0,0,140,1,29,0,0,0,0,0,1,24,0,0,136,26,0,0,0,25,26,0,136,26,0,0,25,26,26,16,137,26,0,0,130,26,0,0,136,27,0,0,49,26,26,27,4,207,5,0,135,26,0,0,0,2,0,0,0,13,2,0,34,14,13,0,0,15,2,0,1,26,2,0,15,16,26,15,20,26,14,16,0,21,26,0,121,21,5,0,1,1,255,255,0,12,1,0,137,25,0,0,139,12,0,0,0,17,2,0,134,18,0,0,100,251,5,0,17,0,0,0,0,23,18,0,0,19,2,0,32,20,19,0,0,3,23,0,33,4,3,0,20,26,20,4,0,22,26,0,120,22,30,0,2,26,0,0,60,162,0,0,1,27,4,0,1,28,0,0,134,5,0,0,24,55,6,0,26,27,28,0,25,6,5,16,1,28,4,0,1,27,0,0,134,7,0,0,24,55,6,0,6,28,27,0,2,27,0,0,60,162,0,0,1,28,4,0,1,26,0,0,134,8,0,0,24,55,6,0,27,28,26,0,25,9,8,20,1,26,4,0,1,28,0,0,134,10,0,0,24,55,6,0,9,26,28,0,134,28,0,0,112,46,3,0,7,10,0,0,0,11,23,0,0,1,11,0,0,12,1,0,137,25,0,0,139,12,0,0,140,3,23,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,80,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,36,208,5,0,135,19,0,0,0,14,18,0,25,13,18,12,25,3,0,36,1,20,15,0,1,21,4,0,134,19,0,0,116,78,6,0,3,20,21,0,1,19,4,0,1,21,0,0,134,4,0,0,24,55,6,0,0,19,21,0,38,21,4,64,0,5,21,0,32,6,5,0,121,6,34,0,25,7,0,60,1,21,4,0,1,19,0,0,134,8,0,0,24,55,6,0,7,21,19,0,1,21,4,0,134,19,0,0,116,78,6,0,14,8,21,0,25,15,14,4,1,21,1,84,1,20,4,0,134,19,0,0,116,78,6,0,15,21,20,0,25,16,14,8,1,20,4,0,134,19,0,0,116,78,6,0,16,13,20,0,1,19,54,0,135,9,40,0,19,14,0,0,32,10,9,0,120,10,8,0,25,11,0,75,42,20,11,0,1,21,255,255,1,22,1,0,134,19,0,0,116,78,6,0,20,21,22,0,134,12,0,0,64,100,3,0,0,1,2,0,137,18,0,0,139,12,0,0,140,1,29,0,0,0,0,0,1,24,0,0,136,26,0,0,0,25,26,0,136,26,0,0,25,26,26,16,137,26,0,0,130,26,0,0,136,27,0,0,49,26,26,27,52,209,5,0,135,26,0,0,0,2,0,0,0,13,2,0,1,26,0,0,14,16,13,26,120,16,5,0,1,1,255,255,0,15,1,0,137,25,0,0,139,15,0,0,1,23,0,0,0,17,23,0,0,18,2,0,25,19,18,8,1,26,4,0,1,27,0,0,134,20,0,0,24,55,6,0,19,26,27,0,15,21,17,20,120,21,2,0,119,0,35,0,0,22,23,0,0,3,2,0,25,4,3,48,1,27,4,0,1,26,0,0,134,5,0,0,24,55,6,0,4,27,26,0,41,26,22,2,3,6,5,26,1,27,255,255,1,28,4,0,134,26,0,0,116,78,6,0,6,27,28,0,0,7,23,0,0,8,2,0,25,9,8,52,1,26,4,0,1,28,0,0,134,10,0,0,24,55,6,0,9,26,28,0,41,28,7,2,3,11,10,28,1,26,255,255,1,27,4,0,134,28,0,0,116,78,6,0,11,26,27,0,0,12,23,0,25,14,12,1,0,23,14,0,119,0,212,255,1,1,0,0,0,15,1,0,137,25,0,0,139,15,0,0,140,2,27,0,0,0,0,0,1,22,0,0,136,24,0,0,0,23,24,0,136,24,0,0,25,24,24,16,137,24,0,0,130,24,0,0,136,25,0,0,49,24,24,25,84,210,5,0,135,24,0,0,0,3,0,0,0,14,1,0,0,15,3,0,0,16,14,0,134,17,0,0,124,108,5,0,15,16,0,0,32,18,17,255,121,18,6,0,1,2,255,255,0,13,2,0,137,23,0,0,139,13,0,0,119,0,57,0,2,24,0,0,68,162,0,0,1,25,4,0,1,26,0,0,134,19,0,0,24,55,6,0,24,25,26,0,25,20,19,4,1,26,4,0,1,25,0,0,134,21,0,0,24,55,6,0,20,26,25,0,2,25,0,0,68,162,0,0,1,26,4,0,1,24,0,0,134,4,0,0,24,55,6,0,25,26,24,0,1,24,4,0,1,26,0,0,134,5,0,0,24,55,6,0,4,24,26,0,2,26,0,0,68,162,0,0,1,24,4,0,1,25,0,0,134,6,0,0,24,55,6,0,26,24,25,0,25,7,6,44,1,25,4,0,1,24,0,0,134,8,0,0,24,55,6,0,7,25,24,0,41,24,5,2,3,9,8,24,1,24,4,0,1,25,0,0,134,10,0,0,24,55,6,0,9,24,25,0,41,25,21,2,3,11,10,25,1,25,4,0,1,24,0,0,134,12,0,0,24,55,6,0,11,25,24,0,0,2,12,0,0,13,2,0,137,23,0,0,139,13,0,0,1,24,0,0,139,24,0,0,140,1,27,0,0,0,0,0,1,22,0,0,136,24,0,0,0,23,24,0,136,24,0,0,25,24,24,16,137,24,0,0,130,24,0,0,136,25,0,0,49,24,24,25,168,211,5,0,135,24,0,0,0,2,0,0,2,24,0,0,76,159,0,0,1,25,4,0,1,26,0,0,134,13,0,0,24,55,6,0,24,25,26,0,33,14,13,0,121,14,12,0,2,26,0,0,76,159,0,0,1,25,4,0,1,24,0,0,134,15,0,0,24,55,6,0,26,25,24,0,0,1,15,0,0,12,1,0,137,23,0,0,139,12,0,0,1,21,0,0,0,16,21,0,34,17,16,18,120,17,2,0,119,0,18,0,0,18,2,0,0,19,21,0,1,24,208,25,41,25,19,2,3,20,24,25,1,25,4,0,1,24,0,0,134,3,0,0,24,55,6,0,20,25,24,0,134,24,0,0,136,235,5,0,18,3,0,0,0,4,21,0,25,5,4,1,0,21,5,0,119,0,236,255,2,24,0,0,84,159,0,0,1,25,4,0,1,26,0,0,134,6,0,0,24,55,6,0,24,25,26,0,33,7,6,0,2,26,0,0,80,159,0,0,1,25,4,0,1,24,0,0,134,8,0,0,24,55,6,0,26,25,24,0,33,9,8,0,1,24,1,0,125,10,7,24,9,0,0,0,38,24,10,1,0,11,24,0,0,1,11,0,0,12,1,0,137,23,0,0,139,12,0,0,140,1,22,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,16,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,236,212,5,0,135,19,0,0,0,16,18,0,0,2,0,0,0,8,2,0,25,9,8,68,1,19,4,0,1,20,0,0,134,10,0,0,24,55,6,0,9,19,20,0,38,20,10,2,0,11,20,0,33,12,11,0,120,12,6,0,2,1,0,0,166,51,1,0,0,7,1,0,137,18,0,0,139,7,0,0,0,13,2,0,25,14,13,52,1,20,4,0,1,19,0,0,134,15,0,0,24,55,6,0,14,20,19,0,1,19,0,0,1,21,9,0,138,15,19,21,152,213,5,0,12,214,5,0,128,213,5,0,128,213,5,0,128,213,5,0,128,213,5,0,128,213,5,0,16,214,5,0,20,214,5,0,2,1,0,0,166,51,1,0,0,7,1,0,137,18,0,0,139,7,0,0,119,0,33,0,0,3,2,0,25,4,3,64,1,19,4,0,1,20,0,0,134,5,0,0,24,55,6,0,4,19,20,0,1,20,0,0,1,19,61,0,134,6,0,0,136,232,5,0,5,20,19,0,1,20,4,0,134,19,0,0,116,78,6,0,16,6,20,0,2,20,0,0,151,37,1,0,2,21,0,0,161,37,1,0,134,19,0,0,248,82,6,0,20,21,16,0,2,1,0,0,151,37,1,0,0,7,1,0,137,18,0,0,139,7,0,0,119,0,4,0,119,0,227,255,119,0,226,255,119,0,225,255,1,19,0,0,139,19,0,0,140,2,33,0,0,0,0,0,1,27,0,0,136,29,0,0,0,28,29,0,136,29,0,0,25,29,29,16,137,29,0,0,130,29,0,0,136,30,0,0,49,29,29,30,84,214,5,0,135,29,0,0,0,2,0,0,0,3,1,0,0,14,2,0,25,19,14,4,1,29,4,0,1,30,0,0,134,20,0,0,24,55,6,0,19,29,30,0,25,21,20,1,0,26,21,0,0,22,26,0,0,23,2,0,25,24,23,8,25,25,24,4,1,30,4,0,1,29,0,0,134,4,0,0,24,55,6,0,25,30,29,0,0,5,2,0,25,6,5,4,1,29,4,0,1,30,0,0,134,7,0,0,24,55,6,0,6,29,30,0,3,8,4,7,26,9,8,1,17,10,22,9,120,10,2,0,119,0,19,0,0,11,3,0,41,30,11,5,0,12,30,0,0,13,26,0,3,15,12,13,1,30,192,26,41,29,15,3,3,16,30,29,42,30,16,0,1,31,124,0,1,32,1,0,134,29,0,0,116,78,6,0,30,31,32,0,0,17,26,0,25,18,17,1,0,26,18,0,119,0,218,255,137,28,0,0,139,0,0,0,140,0,19,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,16,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,88,215,5,0,135,13,0,0,134,0,0,0,224,115,6,0,1,13,176,4,17,1,0,13,121,1,25,0,2,14,0,0,5,209,0,0,42,14,14,0,1,15,1,0,1,16,1,0,134,13,0,0,116,78,6,0,14,15,16,0,2,16,0,0,249,208,0,0,42,16,16,0,1,15,1,0,1,14,1,0,134,13,0,0,116,78,6,0,16,15,14,0,2,14,0,0,3,209,0,0,42,14,14,0,1,15,0,0,1,16,1,0,134,13,0,0,116,78,6,0,14,15,16,0,134,2,0,0,164,117,6,0,33,3,2,0,121,3,7,0,1,16,196,2,1,15,2,0,1,14,4,0,134,13,0,0,116,78,6,0,16,15,14,0,2,13,0,0,12,12,1,0,135,4,14,0,13,0,0,0,0,10,4,0,1,13,0,0,14,5,4,13,121,5,5,0,0,6,10,0,134,13,0,0,128,235,2,0,6,0,0,0,1,14,176,26,1,16,216,106,1,17,4,0,1,18,0,0,134,15,0,0,24,55,6,0,16,17,18,0,1,18,4,0,134,13,0,0,116,78,6,0,14,15,18,0,1,18,176,26,25,18,18,4,1,14,216,106,25,14,14,4,1,17,4,0,1,16,0,0,134,15,0,0,24,55,6,0,14,17,16,0,1,16,4,0,134,13,0,0,116,78,6,0,18,15,16,0,1,13,216,106,134,7,0,0,248,24,4,0,13,0,0,0,1,16,32,107,1,15,4,0,134,13,0,0,116,78,6,0,16,7,15,0,2,13,0,0,255,208,0,0,42,13,13,0,1,15,1,0,1,16,0,0,134,8,0,0,24,55,6,0,13,15,16,0,41,16,8,24,42,16,16,24,33,9,16,0,120,9,2,0,119,0,4,0,134,16,0,0,188,193,0,0,119,0,241,255,1,15,0,0,134,16,0,0,244,92,6,0,15,0,0,0,137,12,0,0,139,0,0,0,140,3,29,0,0,0,0,0,1,24,0,0,136,26,0,0,0,25,26,0,136,26,0,0,25,26,26,32,137,26,0,0,130,26,0,0,136,27,0,0,49,26,26,27,52,217,5,0,135,26,0,0,0,4,0,0,0,15,1,0,0,16,2,0,1,23,0,0,2,26,0,0,76,159,0,0,1,27,4,0,1,28,0,0,134,17,0,0,24,55,6,0,26,27,28,0,33,18,17,0,121,18,12,0,2,28,0,0,76,159,0,0,1,27,4,0,1,26,0,0,134,19,0,0,24,55,6,0,28,27,26,0,0,3,19,0,0,14,3,0,137,25,0,0,139,14,0,0,0,20,4,0,0,21,16,0,134,26,0,0,156,47,5,0,20,21,0,0,1,23,0,0,0,22,23,0,0,5,16,0,15,6,22,5,120,6,2,0,119,0,14,0,0,7,4,0,0,8,23,0,0,9,15,0,1,26,132,0,5,26,8,26,3,10,9,26,134,26,0,0,180,227,2,0,7,10,0,0,0,11,23,0,25,12,11,1,0,23,12,0,119,0,239,255,2,26,0,0,76,159,0,0,1,27,4,0,1,28,0,0,134,13,0,0,24,55,6,0,26,27,28,0,0,3,13,0,0,14,3,0,137,25,0,0,139,14,0,0,140,0,22,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,16,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,84,218,5,0,135,19,0,0,25,14,18,6,25,13,18,4,2,19,0,0,159,54,1,0,42,19,19,0,1,20,1,0,1,21,0,0,134,0,0,0,24,55,6,0,19,20,21,0,1,21,255,0,19,21,0,21,0,1,21,0,32,5,1,0,2,21,0,0,94,72,1,0,42,21,21,0,1,20,1,0,1,19,0,0,134,6,0,0,24,55,6,0,21,20,19,0,41,19,6,24,42,19,19,24,33,7,19,0,20,19,5,7,0,16,19,0,121,16,12,0,1,20,255,255,1,21,2,0,134,19,0,0,116,78,6,0,13,20,21,0,1,21,255,255,1,20,2,0,134,19,0,0,116,78,6,0,14,21,20,0,119,0,11,0,1,20,7,0,1,21,2,0,134,19,0,0,116,78,6,0,14,20,21,0,1,21,0,0,1,20,2,0,134,19,0,0,116,78,6,0,13,21,20,0,134,19,0,0,92,41,5,0,14,13,0,0,1,15,0,0,0,8,15,0,1,19,0,1,15,9,8,19,120,9,2,0,119,0,23,0,0,10,15,0,2,19,0,0,255,255,0,0,19,19,10,19,0,11,19,0,1,19,2,0,1,20,0,0,134,12,0,0,24,55,6,0,14,19,20,0,1,20,2,0,1,19,0,0,134,2,0,0,24,55,6,0,13,20,19,0,134,19,0,0,84,43,6,0,11,12,2,0,0,3,15,0,25,4,3,1,0,15,4,0,119,0,230,255,137,18,0,0,139,0,0,0,140,2,28,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,32,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,208,219,5,0,135,25,0,0,0,3,0,0,0,13,1,0,1,22,255,255,2,25,0,0,76,159,0,0,1,26,4,0,1,27,0,0,134,14,0,0,24,55,6,0,25,26,27,0,33,15,14,0,121,15,12,0,2,27,0,0,76,159,0,0,1,26,4,0,1,25,0,0,134,16,0,0,24,55,6,0,27,26,25,0,0,2,16,0,0,12,2,0,137,24,0,0,139,12,0,0,1,21,0,0,0,17,21,0,34,18,17,9,120,18,2,0,119,0,15,0,0,19,21,0,1,25,36,107,1,26,132,0,5,26,19,26,3,20,25,26,0,4,13,0,13,5,20,4,121,5,3,0,0,6,21,0,0,22,6,0,0,7,21,0,25,8,7,1,0,21,8,0,119,0,239,255,0,9,3,0,0,10,22,0,134,26,0,0,156,47,5,0,9,10,0,0,2,26,0,0,76,159,0,0,1,25,4,0,1,27,0,0,134,11,0,0,24,55,6,0,26,25,27,0,0,2,11,0,0,12,2,0,137,24,0,0,139,12,0,0,140,3,29,0,0,0,0,0,1,25,0,0,136,27,0,0,0,26,27,0,136,27,0,0,25,27,27,16,137,27,0,0,130,27,0,0,136,28,0,0,49,27,27,28,236,220,5,0,135,27,0,0,0,4,0,0,0,15,1,0,0,18,2,0,0,19,4,0,0,20,15,0,0,21,18,0,134,22,0,0,164,140,5,0,19,20,21,0,32,23,22,255,121,23,6,0,1,3,255,255,0,17,3,0,137,26,0,0,139,17,0,0,119,0,39,0,0,24,4,0,25,5,24,4,1,27,4,0,1,28,0,0,134,6,0,0,24,55,6,0,5,27,28,0,0,7,4,0,1,28,4,0,1,27,0,0,134,8,0,0,24,55,6,0,7,28,27,0,0,9,4,0,25,10,9,44,1,27,4,0,1,28,0,0,134,11,0,0,24,55,6,0,10,27,28,0,41,28,8,2,3,12,11,28,1,28,4,0,1,27,0,0,134,13,0,0,24,55,6,0,12,28,27,0,41,27,6,2,3,14,13,27,1,27,4,0,1,28,0,0,134,16,0,0,24,55,6,0,14,27,28,0,0,3,16,0,0,17,3,0,137,26,0,0,139,17,0,0,1,28,0,0,139,28,0,0,140,1,20,0,0,0,0,0,1,14,0,0,136,16,0,0,0,15,16,0,136,16,0,0,25,16,16,16,137,16,0,0,130,16,0,0,136,17,0,0,49,16,16,17,0,222,5,0,135,16,0,0,25,13,15,8,0,12,15,0,0,1,0,0,0,2,1,0,25,4,2,68,1,16,4,0,1,17,0,0,134,5,0,0,24,55,6,0,4,16,17,0,38,17,5,2,0,6,17,0,33,7,6,0,120,7,13,0,2,16,0,0,71,50,1,0,42,16,16,0,1,18,0,0,1,19,1,0,134,17,0,0,116,78,6,0,16,18,19,0,137,15,0,0,2,17,0,0,71,50,1,0,139,17,0,0,2,17,0,0,5,209,0,0,42,17,17,0,1,19,1,0,1,18,0,0,134,8,0,0,24,55,6,0,17,19,18,0,41,18,8,24,42,18,18,24,33,9,18,0,0,10,1,0,25,11,10,64,1,18,4,0,1,19,0,0,134,3,0,0,24,55,6,0,11,18,19,0,121,9,17,0,1,18,4,0,134,19,0,0,116,78,6,0,12,3,18,0,2,18,0,0,71,50,1,0,2,17,0,0,91,50,1,0,134,19,0,0,248,82,6,0,18,17,12,0,137,15,0,0,2,19,0,0,71,50,1,0,139,19,0,0,119,0,16,0,1,17,4,0,134,19,0,0,116,78,6,0,13,3,17,0,2,17,0,0,71,50,1,0,2,18,0,0,97,50,1,0,134,19,0,0,248,82,6,0,17,18,13,0,137,15,0,0,2,19,0,0,71,50,1,0,139,19,0,0,1,19,0,0,139,19,0,0,140,1,25,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,16,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,108,223,5,0,135,23,0,0,0,2,0,0,0,12,2,0,1,23,0,0,14,13,12,23,121,13,38,0,1,20,0,0,0,14,20,0,0,15,2,0,25,16,15,8,1,23,4,0,1,24,0,0,134,17,0,0,24,55,6,0,16,23,24,0,15,18,14,17,120,18,2,0,119,0,26,0,0,19,20,0,0,3,2,0,25,4,3,48,1,24,4,0,1,23,0,0,134,5,0,0,24,55,6,0,4,24,23,0,41,23,19,2,3,6,5,23,1,23,4,0,1,24,0,0,134,7,0,0,24,55,6,0,6,23,24,0,33,8,7,255,120,8,5,0,0,9,20,0,25,10,9,1,0,20,10,0,119,0,225,255,1,1,1,0,0,11,1,0,137,22,0,0,139,11,0,0,1,1,0,0,0,11,1,0,137,22,0,0,139,11,0,0,140,2,31,0,0,0,0,0,1,27,0,0,136,29,0,0,0,28,29,0,136,29,0,0,25,29,29,16,137,29,0,0,130,29,0,0,136,30,0,0,49,29,29,30,88,224,5,0,135,29,0,0,0,2,0,0,0,3,1,0,0,14,2,0,1,29,4,0,1,30,0,0,134,20,0,0,24,55,6,0,14,29,30,0,0,21,2,0,25,22,21,8,1,30,4,0,1,29,0,0,134,23,0,0,24,55,6,0,22,30,29,0,26,24,23,2,134,25,0,0,20,36,6,0,24,0,0,0,3,26,20,25,25,4,26,1,0,5,3,0,1,30,4,0,134,29,0,0,116,78,6,0,5,4,30,0,0,6,2,0,25,7,6,4,1,29,4,0,1,30,0,0,134,8,0,0,24,55,6,0,7,29,30,0,0,9,2,0,25,10,9,8,25,11,10,4,1,30,4,0,1,29,0,0,134,12,0,0,24,55,6,0,11,30,29,0,26,13,12,2,134,15,0,0,20,36,6,0,13,0,0,0,3,16,8,15,25,17,16,1,0,18,3,0,25,19,18,4,1,30,4,0,134,29,0,0,116,78,6,0,19,17,30,0,137,28,0,0,139,0,0,0,140,1,29,0,0,0,0,0,1,24,0,0,136,26,0,0,0,25,26,0,1,26,43,0,134,3,0,0,160,89,6,0,0,26,0,0,1,26,0,0,13,4,3,26,42,26,0,0,1,27,1,0,1,28,0,0,134,10,0,0,24,55,6,0,26,27,28,0,41,28,10,24,42,28,28,24,33,23,28,114,38,28,23,1,0,1,28,0,1,28,2,0,125,18,4,1,28,0,0,0,1,28,120,0,134,11,0,0,160,89,6,0,0,28,0,0,1,28,0,0,13,12,11,28,1,28,128,0,20,28,18,28,0,13,28,0,125,19,12,18,13,0,0,0,1,28,101,0,134,14,0,0,160,89,6,0,0,28,0,0,1,28,0,0,13,15,14,28,2,28,0,0,0,0,8,0,20,28,19,28,0,16,28,0,125,20,15,19,16,0,0,0,41,28,10,24,42,28,28,24,32,17,28,114,39,28,20,64,0,5,28,0,125,21,17,20,5,0,0,0,41,28,10,24,42,28,28,24,32,6,28,119,1,28,0,2,20,28,21,28,0,7,28,0,125,22,6,7,21,0,0,0,41,28,10,24,42,28,28,24,32,8,28,97,1,28,0,4,20,28,22,28,0,9,28,0,125,2,8,9,22,0,0,0,139,2,0,0,140,2,26,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,42,23,0,0,1,24,1,0,1,25,0,0,134,6,0,0,24,55,6,0,23,24,25,0,42,25,1,0,1,24,1,0,1,23,0,0,134,7,0,0,24,55,6,0,25,24,23,0,41,23,6,24,42,23,23,24,41,24,7,24,42,24,24,24,14,11,23,24,41,24,6,24,42,24,24,24,32,12,24,0,20,24,12,11,0,20,24,0,121,20,4,0,0,4,6,0,0,5,7,0,119,0,34,0,0,2,0,0,0,3,1,0,25,13,2,1,25,14,3,1,42,24,13,0,1,23,1,0,1,25,0,0,134,15,0,0,24,55,6,0,24,23,25,0,42,25,14,0,1,23,1,0,1,24,0,0,134,16,0,0,24,55,6,0,25,23,24,0,41,24,15,24,42,24,24,24,41,23,16,24,42,23,23,24,14,17,24,23,41,23,15,24,42,23,23,24,32,18,23,0,20,23,18,17,0,19,23,0,121,19,4,0,0,4,15,0,0,5,16,0,119,0,4,0,0,2,13,0,0,3,14,0,119,0,226,255,1,23,255,0,19,23,4,23,0,8,23,0,1,23,255,0,19,23,5,23,0,9,23,0,4,10,8,9,139,10,0,0,140,0,24,0,0,0,0,0,1,19,0,0,136,21,0,0,0,20,21,0,136,21,0,0,25,21,21,16,137,21,0,0,130,21,0,0,136,22,0,0,49,21,21,22,168,227,5,0,135,21,0,0,0,18,20,0,1,21,232,106,1,22,2,0,1,23,0,0,134,0,0,0,24,55,6,0,21,22,23,0,41,23,0,16,42,23,23,16,0,1,23,0,38,23,1,4,0,10,23,0,33,11,10,0,38,23,11,1,0,12,23,0,1,23,255,0,19,23,12,23,0,13,23,0,41,23,13,24,42,23,23,24,33,14,23,0,120,14,3,0,137,20,0,0,139,0,0,0,1,22,11,0,134,23,0,0,184,73,6,0,22,0,0,0,1,23,232,106,1,22,2,0,1,21,0,0,134,15,0,0,24,55,6,0,23,22,21,0,41,21,15,16,42,21,21,16,0,16,21,0,38,21,16,251,0,17,21,0,2,21,0,0,255,255,0,0,19,21,17,21,0,2,21,0,1,22,232,106,1,23,2,0,134,21,0,0,116,78,6,0,22,2,23,0,1,21,20,107,1,23,4,0,1,22,0,0,134,3,0,0,24,55,6,0,21,23,22,0,25,4,3,28,1,22,2,0,1,23,0,0,134,5,0,0,24,55,6,0,4,22,23,0,41,23,5,16,42,23,23,16,0,6,23,0,38,23,6,2,0,7,23,0,33,8,7,0,120,8,5,0,1,22,216,106,134,23,0,0,204,169,3,0,22,0,0,0,2,23,0,0,8,207,0,0,2,22,0,0,49,207,0,0,134,9,0,0,224,49,6,0,23,22,0,0,134,22,0,0,144,18,6,0,9,18,0,0,137,20,0,0,139,0,0,0,140,2,25,0,0,0,0,0,1,20,0,0,136,22,0,0,0,21,22,0,136,22,0,0,25,22,22,16,137,22,0,0,130,22,0,0,136,23,0,0,49,22,22,23,40,229,5,0,135,22,0,0,0,3,0,0,0,12,1,0,2,22,0,0,76,159,0,0,1,23,4,0,1,24,0,0,134,13,0,0,24,55,6,0,22,23,24,0,33,14,13,0,121,14,12,0,2,24,0,0,76,159,0,0,1,23,4,0,1,22,0,0,134,15,0,0,24,55,6,0,24,23,22,0,0,2,15,0,0,11,2,0,137,21,0,0,139,11,0,0,0,16,3,0,2,23,0,0,7,0,205,171,134,22,0,0,72,32,6,0,16,23,0,0,0,17,3,0,0,18,12,0,134,19,0,0,32,64,6,0,18,0,0,0,134,22,0,0,156,47,5,0,17,19,0,0,0,4,12,0,1,22,0,0,14,5,4,22,120,5,2,0,119,0,14,0,0,6,3,0,0,7,12,0,134,22,0,0,124,44,4,0,6,7,0,0,0,8,12,0,1,22,4,0,1,23,0,0,134,9,0,0,24,55,6,0,8,22,23,0,0,12,9,0,119,0,239,255,2,23,0,0,76,159,0,0,1,22,4,0,1,24,0,0,134,10,0,0,24,55,6,0,23,22,24,0,0,2,10,0,0,11,2,0,137,21,0,0,139,11,0,0,140,4,20,0,0,0,0,0,136,15,0,0,0,14,15,0,136,15,0,0,25,15,15,16,137,15,0,0,0,4,14,0,42,15,1,31,34,17,1,0,1,18,255,255,1,19,0,0,125,16,17,18,19,0,0,0,41,16,16,1,20,15,15,16,0,5,15,0,34,16,1,0,1,19,255,255,1,18,0,0,125,15,16,19,18,0,0,0,42,15,15,31,34,19,1,0,1,16,255,255,1,17,0,0,125,18,19,16,17,0,0,0,41,18,18,1,20,15,15,18,0,6,15,0,42,15,3,31,34,17,3,0,1,16,255,255,1,19,0,0,125,18,17,16,19,0,0,0,41,18,18,1,20,15,15,18,0,7,15,0,34,18,3,0,1,19,255,255,1,16,0,0,125,15,18,19,16,0,0,0,42,15,15,31,34,19,3,0,1,18,255,255,1,17,0,0,125,16,19,18,17,0,0,0,41,16,16,1,20,15,15,16,0,8,15,0,21,15,5,0,21,16,6,1,134,9,0,0,240,98,6,0,15,16,5,6,128,16,0,0,0,10,16,0,21,16,7,2,21,15,8,3,134,11,0,0,240,98,6,0,16,15,7,8,128,16,0,0,134,15,0,0,156,101,2,0,9,10,11,16,4,0,0,0,1,16,4,0,1,17,0,0,134,15,0,0,24,55,6,0,4,16,17,0,21,15,15,5,25,16,4,4,1,18,4,0,1,19,0,0,134,17,0,0,24,55,6,0,16,18,19,0,21,17,17,6,134,12,0,0,240,98,6,0,15,17,5,6,128,17,0,0,0,13,17,0,137,14,0,0,129,13,0,0,139,12,0,0,140,2,25,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,32,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,208,231,5,0,135,23,0,0,0,3,0,0,0,10,1,0,1,18,0,0,0,11,3,0,0,20,11,0,0,12,20,0,1,23,0,0,14,13,12,23,120,13,3,0,1,21,6,0,119,0,21,0,0,14,20,0,0,19,14,0,0,15,10,0,0,16,19,0,25,17,16,12,13,4,15,17,0,5,18,0,121,4,3,0,1,21,4,0,119,0,11,0,25,6,5,1,0,18,6,0,0,7,20,0,1,23,4,0,1,24,0,0,134,8,0,0,24,55,6,0,7,23,24,0,0,20,8,0,119,0,231,255,32,24,21,4,121,24,6,0,0,2,5,0,0,9,2,0,137,22,0,0,139,9,0,0,119,0,7,0,32,24,21,6,121,24,5,0,1,2,255,255,0,9,2,0,137,22,0,0,139,9,0,0,1,24,0,0,139,24,0,0,140,3,25,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,32,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,188,232,5,0,135,23,0,0,25,20,22,8,0,19,22,0,0,3,0,0,0,4,1,0,0,11,2,0,0,12,3,0,34,13,12,0,2,23,0,0,101,53,1,0,2,24,0,0,104,53,1,0,125,14,13,23,24,0,0,0,0,15,3,0,1,23,4,0,134,24,0,0,116,78,6,0,19,15,23,0,2,23,0,0,108,53,1,0,134,24,0,0,248,82,6,0,23,14,19,0,0,16,11,0,41,24,16,24,42,24,24,24,0,17,24,0,32,18,17,41,120,18,5,0,137,22,0,0,2,24,0,0,108,53,1,0,139,24,0,0,2,24,0,0,108,53,1,0,135,5,22,0,24,0,0,0,2,24,0,0,108,53,1,0,3,6,24,5,0,7,4,0,34,8,7,0,2,24,0,0,118,53,1,0,2,23,0,0,122,53,1,0,125,9,8,24,23,0,0,0,0,10,4,0,1,24,4,0,134,23,0,0,116,78,6,0,20,10,24,0,134,23,0,0,248,82,6,0,6,9,20,0,137,22,0,0,2,23,0,0,108,53,1,0,139,23,0,0,140,2,25,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,32,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,224,233,5,0,135,23,0,0,0,3,0,0,0,10,1,0,1,18,0,0,0,11,3,0,0,19,11,0,0,12,19,0,1,23,0,0,14,13,12,23,120,13,3,0,1,21,6,0,119,0,21,0,0,14,19,0,0,20,14,0,0,15,10,0,0,16,20,0,25,17,16,8,13,4,15,17,0,5,18,0,121,4,3,0,1,21,4,0,119,0,11,0,25,6,5,1,0,18,6,0,0,7,19,0,1,23,4,0,1,24,0,0,134,8,0,0,24,55,6,0,7,23,24,0,0,19,8,0,119,0,231,255,32,24,21,4,121,24,6,0,0,2,5,0,0,9,2,0,137,22,0,0,139,9,0,0,119,0,7,0,32,24,21,6,121,24,5,0,1,2,255,255,0,9,2,0,137,22,0,0,139,9,0,0,1,24,0,0,139,24,0,0,140,1,25,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,16,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,204,234,5,0,135,23,0,0,0,1,0,0,1,20,76,1,0,2,20,0,1,23,124,2,18,12,2,23,120,12,2,0,119,0,39,0,0,13,20,0,1,23,4,0,1,24,0,0,134,14,0,0,24,55,6,0,13,23,24,0,0,15,1,0,13,16,14,15,121,16,26,0,0,17,20,0,25,18,17,12,1,24,4,0,1,23,0,0,134,19,0,0,24,55,6,0,18,24,23,0,32,3,19,255,121,3,17,0,0,4,20,0,25,5,4,4,1,23,4,0,1,24,0,0,134,6,0,0,24,55,6,0,5,23,24,0,0,7,20,0,25,8,7,8,1,24,4,0,1,23,0,0,134,9,0,0,24,55,6,0,8,24,23,0,135,23,50,0,6,9,0,0,0,10,20,0,25,11,10,16,0,20,11,0,119,0,214,255,137,22,0,0,139,0,0,0,140,2,27,0,0,0,0,0,1,22,0,0,136,24,0,0,0,23,24,0,136,24,0,0,25,24,24,16,137,24,0,0,130,24,0,0,136,25,0,0,49,24,24,25,188,235,5,0,135,24,0,0,0,3,0,0,0,13,1,0,1,21,0,0,2,24,0,0,76,159,0,0,1,25,4,0,1,26,0,0,134,14,0,0,24,55,6,0,24,25,26,0,33,15,14,0,121,15,12,0,2,26,0,0,76,159,0,0,1,25,4,0,1,24,0,0,134,16,0,0,24,55,6,0,26,25,24,0,0,2,16,0,0,12,2,0,137,23,0,0,139,12,0,0,0,17,13,0,1,24,0,0,13,18,17,24,121,18,3,0,1,5,0,0,119,0,6,0,0,19,13,0,135,20,22,0,19,0,0,0,25,4,20,1,0,5,4,0,0,21,5,0,0,6,3,0,0,7,21,0,134,24,0,0,156,47,5,0,6,7,0,0,0,8,3,0,0,9,13,0,0,10,21,0,134,24,0,0,56,10,6,0,8,9,10,0,2,24,0,0,76,159,0,0,1,25,4,0,1,26,0,0,134,11,0,0,24,55,6,0,24,25,26,0,0,2,11,0,0,12,2,0,137,23,0,0,139,12,0,0,140,1,25,0,0,0,0,0,1,19,0,0,136,21,0,0,0,20,21,0,136,21,0,0,25,21,21,16,137,21,0,0,130,21,0,0,136,22,0,0,49,21,21,22,212,236,5,0,135,21,0,0,0,2,0,0,0,9,2,0,2,21,0,0,255,255,0,0,19,21,9,21,0,10,21,0,0,17,10,0,0,11,17,0,1,21,32,0,18,12,21,11,0,13,17,0,33,14,13,127,19,21,12,14,0,18,21,0,121,18,25,0,0,15,17,0,1,21,255,0,19,21,15,21,0,16,21,0,2,22,0,0,62,73,1,0,42,22,22,0,1,23,1,0,134,21,0,0,116,78,6,0,22,16,23,0,2,23,0,0,63,73,1,0,42,23,23,0,1,22,0,0,1,24,1,0,134,21,0,0,116,78,6,0,23,22,24,0,2,1,0,0,62,73,1,0,0,8,1,0,137,20,0,0,139,8,0,0,2,24,0,0,62,73,1,0,42,24,24,0,1,22,94,0,1,23,1,0,134,21,0,0,116,78,6,0,24,22,23,0,0,3,17,0,32,4,3,127,121,4,10,0,2,23,0,0,63,73,1,0,42,23,23,0,1,22,63,0,1,24,1,0,134,21,0,0,116,78,6,0,23,22,24,0,119,0,13,0,0,5,17,0,25,6,5,64,1,21,255,0,19,21,6,21,0,7,21,0,2,24,0,0,63,73,1,0,42,24,24,0,1,22,1,0,134,21,0,0,116,78,6,0,24,7,22,0,2,1,0,0,62,73,1,0,0,8,1,0,137,20,0,0,139,8,0,0,140,1,22,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,16,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,56,238,5,0,135,20,0,0,0,2,0,0,1,17,76,1,0,9,17,0,1,20,124,2,18,10,9,20,120,10,3,0,1,18,7,0,119,0,25,0,0,11,17,0,1,20,4,0,1,21,0,0,134,12,0,0,24,55,6,0,11,20,21,0,33,13,12,0,121,13,13,0,0,14,2,0,0,15,17,0,25,16,15,4,1,21,4,0,1,20,0,0,134,3,0,0,24,55,6,0,16,21,20,0,13,4,14,3,121,4,3,0,1,18,5,0,119,0,5,0,0,6,17,0,25,7,6,16,0,17,7,0,119,0,227,255,32,20,18,5,121,20,7,0,0,5,17,0,0,1,5,0,0,8,1,0,137,19,0,0,139,8,0,0,119,0,7,0,32,20,18,7,121,20,5,0,1,1,0,0,0,8,1,0,137,19,0,0,139,8,0,0,1,20,0,0,139,20,0,0,140,0,16,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,44,239,5,0,135,12,0,0,0,9,11,0,1,12,196,2,1,13,4,0,1,14,0,0,134,0,0,0,24,55,6,0,12,13,14,0,33,1,0,1,121,1,57,0,2,14,0,0,28,161,0,0,1,13,4,0,1,12,0,0,134,2,0,0,24,55,6,0,14,13,12,0,33,3,2,1,2,12,0,0,143,52,1,0,42,12,12,0,1,13,1,0,1,14,0,0,134,4,0,0,24,55,6,0,12,13,14,0,41,14,4,24,42,14,14,24,33,5,14,0,20,14,3,5,0,8,14,0,121,8,7,0,1,13,0,0,1,12,0,0,134,14,0,0,140,159,2,0,13,12,0,0,119,0,29,0,1,12,204,2,1,13,0,0,1,15,4,0,134,14,0,0,116,78,6,0,12,13,15,0,2,14,0,0,36,161,0,0,1,15,4,0,1,13,0,0,134,6,0,0,24,55,6,0,14,15,13,0,2,13,0,0,40,161,0,0,1,15,4,0], eb + 378880);
  HEAPU8.set([1,14,0,0,134,7,0,0,24,55,6,0,13,15,14,0,1,15,4,0,134,14,0,0,116,78,6,0,9,7,15,0,134,14,0,0,144,18,6,0,6,9,0,0,119,0,1,0,2,15,0,0,28,161,0,0,1,13,0,0,1,12,4,0,134,14,0,0,116,78,6,0,15,13,12,0,2,12,0,0,143,52,1,0,42,12,12,0,1,13,0,0,1,15,1,0,134,14,0,0,116,78,6,0,12,13,15,0,137,11,0,0,139,0,0,0,140,3,26,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,32,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,168,240,5,0,135,23,0,0,0,4,0,0,0,12,1,0,0,13,2,0,2,23,0,0,76,159,0,0,1,24,4,0,1,25,0,0,134,14,0,0,24,55,6,0,23,24,25,0,33,15,14,0,121,15,12,0,2,25,0,0,76,159,0,0,1,24,4,0,1,23,0,0,134,16,0,0,24,55,6,0,25,24,23,0,0,3,16,0,0,11,3,0,137,22,0,0,139,11,0,0,0,17,13,0,1,23,0,0,13,18,17,23,121,18,7,0,0,19,4,0,1,24,255,255,134,23,0,0,156,47,5,0,19,24,0,0,119,0,12,0,0,5,12,0,0,6,13,0,134,7,0,0,168,2,6,0,5,6,0,0,0,20,7,0,0,8,4,0,0,9,20,0,134,23,0,0,156,47,5,0,8,9,0,0,2,23,0,0,76,159,0,0,1,24,4,0,1,25,0,0,134,10,0,0,24,55,6,0,23,24,25,0,0,3,10,0,0,11,3,0,137,22,0,0,139,11,0,0,140,1,23,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,16,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,184,241,5,0,135,20,0,0,0,2,0,0,2,20,0,0,76,159,0,0,1,21,4,0,1,22,0,0,134,9,0,0,24,55,6,0,20,21,22,0,33,10,9,0,121,10,12,0,2,22,0,0,76,159,0,0,1,21,4,0,1,20,0,0,134,11,0,0,24,55,6,0,22,21,20,0,0,1,11,0,0,8,1,0,137,19,0,0,139,8,0,0,1,17,0,0,0,12,17,0,34,13,12,14,120,13,2,0,119,0,25,0,0,14,2,0,1,20,116,113,1,21,4,0,1,22,0,0,134,15,0,0,24,55,6,0,20,21,22,0,0,16,17,0,1,22,96,25,41,21,16,2,3,3,22,21,1,21,4,0,1,22,0,0,134,4,0,0,24,55,6,0,3,21,22,0,1,21,8,113,134,22,0,0,164,98,5,0,14,21,15,4,0,5,17,0,25,6,5,1,0,17,6,0,119,0,229,255,2,22,0,0,76,159,0,0,1,21,4,0,1,20,0,0,134,7,0,0,24,55,6,0,22,21,20,0,0,1,7,0,0,8,1,0,137,19,0,0,139,8,0,0,140,1,23,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,16,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,224,242,5,0,135,20,0,0,0,2,0,0,2,20,0,0,76,159,0,0,1,21,4,0,1,22,0,0,134,9,0,0,24,55,6,0,20,21,22,0,33,10,9,0,121,10,12,0,2,22,0,0,76,159,0,0,1,21,4,0,1,20,0,0,134,11,0,0,24,55,6,0,22,21,20,0,0,1,11,0,0,8,1,0,137,19,0,0,139,8,0,0,1,17,0,0,0,12,17,0,34,13,12,14,120,13,2,0,119,0,25,0,0,14,2,0,1,20,72,114,1,21,4,0,1,22,0,0,134,15,0,0,24,55,6,0,20,21,22,0,0,16,17,0,1,22,152,25,41,21,16,2,3,3,22,21,1,21,4,0,1,22,0,0,134,4,0,0,24,55,6,0,3,21,22,0,1,21,120,113,134,22,0,0,240,84,5,0,14,21,15,4,0,5,17,0,25,6,5,1,0,17,6,0,119,0,229,255,2,22,0,0,76,159,0,0,1,21,4,0,1,20,0,0,134,7,0,0,24,55,6,0,22,21,20,0,0,1,7,0,0,8,1,0,137,19,0,0,139,8,0,0,140,1,22,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,16,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,8,244,5,0,135,19,0,0,0,2,0,0,2,16,0,0,212,161,0,0,0,8,16,0,42,19,8,0,1,20,1,0,1,21,0,0,134,9,0,0,24,55,6,0,19,20,21,0,41,21,9,24,42,21,21,24,33,10,21,0,120,10,3,0,1,17,6,0,119,0,20,0,0,11,2,0,0,12,16,0,42,21,12,0,1,20,1,0,1,19,0,0,134,13,0,0,24,55,6,0,21,20,19,0,41,19,13,24,42,19,19,24,0,14,19,0,13,15,11,14,0,3,16,0,121,15,3,0,1,17,4,0,119,0,4,0,25,6,3,12,0,16,6,0,119,0,225,255,32,19,17,4,121,19,12,0,25,4,3,4,1,19,4,0,1,20,0,0,134,5,0,0,24,55,6,0,4,19,20,0,0,1,5,0,0,7,1,0,137,18,0,0,139,7,0,0,119,0,7,0,32,20,17,6,121,20,5,0,1,1,0,0,0,7,1,0,137,18,0,0,139,7,0,0,1,20,0,0,139,20,0,0,140,2,29,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,16,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,28,245,5,0,135,25,0,0,0,2,0,0,0,3,1,0,0,14,2,0,1,25,4,0,1,26,0,0,134,15,0,0,24,55,6,0,14,25,26,0,0,22,15,0,0,16,22,0,0,17,2,0,1,26,4,0,1,25,0,0,134,18,0,0,24,55,6,0,17,26,25,0,0,19,2,0,25,20,19,8,1,25,4,0,1,26,0,0,134,21,0,0,24,55,6,0,20,25,26,0,3,4,18,21,26,5,4,1,17,6,16,5,120,6,2,0,119,0,19,0,0,7,22,0,41,26,7,5,0,8,26,0,0,9,3,0,3,10,8,9,1,26,192,26,41,25,10,3,3,11,26,25,42,26,11,0,1,27,45,0,1,28,1,0,134,25,0,0,116,78,6,0,26,27,28,0,0,12,22,0,25,13,12,1,0,22,13,0,119,0,220,255,137,24,0,0,139,0,0,0,140,3,24,0,0,0,0,0,1,20,0,0,136,22,0,0,0,21,22,0,136,22,0,0,25,22,22,32,137,22,0,0,130,22,0,0,136,23,0,0,49,22,22,23,16,246,5,0,135,22,0,0,0,4,0,0,0,11,1,0,0,12,2,0,1,19,0,0,1,19,0,0,0,13,19,0,0,14,12,0,15,15,13,14,120,15,3,0,1,20,6,0,119,0,16,0,0,16,19,0,0,17,4,0,1,22,132,0,5,22,16,22,3,18,17,22,25,5,18,16,0,6,11,0,13,7,5,6,0,8,19,0,121,7,3,0,1,20,4,0,119,0,4,0,25,9,8,1,0,19,9,0,119,0,236,255,32,22,20,4,121,22,6,0,0,3,8,0,0,10,3,0,137,21,0,0,139,10,0,0,119,0,7,0,32,22,20,6,121,22,5,0,1,3,255,255,0,10,3,0,137,21,0,0,139,10,0,0,1,22,0,0,139,22,0,0,140,1,21,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,2,18,0,0,52,195,0,0,1,19,4,0,1,20,0,0,134,1,0,0,24,55,6,0,18,19,20,0,134,2,0,0,4,85,6,0,1,20,4,0,1,19,0,0,134,8,0,0,24,55,6,0,2,20,19,0,134,9,0,0,104,133,5,0,8,0,0,0,25,10,1,76,1,19,4,0,1,20,0,0,134,11,0,0,24,55,6,0,10,19,20,0,1,20,255,255,15,12,20,11,121,12,6,0,134,13,0,0,152,111,6,0,1,0,0,0,0,6,13,0,119,0,2,0,1,6,0,0,1,20,0,0,13,14,0,20,120,14,25,0,42,20,0,0,1,19,1,0,1,18,0,0,134,15,0,0,24,55,6,0,20,19,18,0,41,18,15,24,42,18,18,24,32,3,18,0,120,3,15,0,135,4,22,0,0,0,0,0,1,19,1,0,134,18,0,0,228,17,6,0,0,4,19,1,1,19,58,0,134,18,0,0,12,222,4,0,19,1,0,0,1,19,32,0,134,18,0,0,12,222,4,0,19,1,0,0,135,5,22,0,9,0,0,0,1,19,1,0,134,18,0,0,228,17,6,0,9,5,19,1,1,19,10,0,134,18,0,0,12,222,4,0,19,1,0,0,32,7,6,0,120,7,4,0,134,18,0,0,128,111,6,0,1,0,0,0,139,0,0,0,140,0,19,0,0,0,0,0,1,13,0,0,136,15,0,0,0,14,15,0,136,15,0,0,25,15,15,16,137,15,0,0,130,15,0,0,136,16,0,0,49,15,15,16,40,248,5,0,135,15,0,0,0,12,14,0,134,0,0,0,8,44,6,0,41,15,0,24,42,15,15,24,33,1,15,0,121,1,3,0,137,14,0,0,139,0,0,0,1,15,216,106,1,16,4,0,1,17,0,0,134,4,0,0,24,55,6,0,15,16,17,0,41,17,4,5,0,5,17,0,1,17,220,106,1,16,4,0,1,15,0,0,134,6,0,0,24,55,6,0,17,16,15,0,3,7,5,6,1,15,192,26,41,16,7,3,3,8,15,16,42,16,8,0,1,15,1,0,1,17,0,0,134,9,0,0,24,55,6,0,16,15,17,0,41,17,9,24,42,17,17,24,0,10,17,0,33,11,10,37,121,11,9,0,2,15,0,0,154,205,0,0,134,17,0,0,144,18,6,0,15,12,0,0,137,14,0,0,139,0,0,0,119,0,25,0,1,17,200,2,1,15,4,0,1,16,0,0,134,2,0,0,24,55,6,0,17,15,16,0,25,3,2,1,1,15,200,2,1,17,4,0,134,16,0,0,116,78,6,0,15,3,17,0,2,17,0,0,40,217,0,0,42,17,17,0,1,15,0,0,1,18,1,0,134,16,0,0,116,78,6,0,17,15,18,0,134,16,0,0,16,53,3,0,137,14,0,0,139,0,0,0,139,0,0,0,140,2,28,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,16,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,120,249,5,0,135,25,0,0,0,2,0,0,0,3,1,0,0,14,3,0,41,25,14,5,0,15,25,0,0,16,2,0,3,17,15,16,1,25,192,26,41,26,17,3,3,18,25,26,0,22,18,0,0,19,22,0,42,26,19,0,1,25,1,0,1,27,0,0,134,20,0,0,24,55,6,0,26,25,27,0,41,27,20,24,42,27,27,24,0,21,27,0,32,4,21,43,121,4,9,0,1,12,1,0,38,27,12,1,0,11,27,0,1,27,255,0,19,27,11,27,0,13,27,0,137,24,0,0,139,13,0,0,0,5,22,0,25,6,5,1,42,27,6,0,1,25,1,0,1,26,0,0,134,7,0,0,24,55,6,0,27,25,26,0,41,26,7,24,42,26,26,24,0,8,26,0,1,26,144,0,19,26,8,26,0,9,26,0,1,26,144,0,13,10,9,26,0,12,10,0,38,26,12,1,0,11,26,0,1,26,255,0,19,26,11,26,0,13,26,0,137,24,0,0,139,13,0,0,140,1,23,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,16,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,136,250,5,0,135,20,0,0,0,1,0,0,1,20,200,2,1,21,4,0,1,22,0,0,134,2,0,0,24,55,6,0,20,21,22,0,1,22,152,26,1,21,4,0,1,20,0,0,134,10,0,0,24,55,6,0,22,21,20,0,17,11,10,2,120,11,3,0,137,19,0,0,139,0,0,0,1,20,100,0,134,12,0,0,20,36,6,0,20,0,0,0,0,13,1,0,25,14,13,17,42,20,14,0,1,21,1,0,1,22,0,0,134,15,0,0,24,55,6,0,20,21,22,0,41,22,15,24,42,22,22,24,0,16,22,0,26,17,16,65,1,22,88,10,27,21,17,52,3,3,22,21,25,4,3,4,1,21,4,0,1,22,0,0,134,5,0,0,24,55,6,0,4,21,22,0,15,6,12,5,120,6,3,0,137,19,0,0,139,0,0,0,0,7,1,0,25,8,7,72,134,9,0,0,80,249,2,0,134,22,0,0,124,205,5,0,8,9,0,0,137,19,0,0,139,0,0,0,140,1,21,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,136,18,0,0,25,18,18,16,137,18,0,0,130,18,0,0,136,19,0,0,49,18,18,19,152,251,5,0,135,18,0,0,0,1,0,0,2,18,0,0,60,162,0,0,1,19,4,0,1,20,0,0,134,2,0,0,24,55,6,0,18,19,20,0,25,7,2,24,1,20,4,0,1,19,0,0,134,8,0,0,24,55,6,0,7,20,19,0,0,15,8,0,0,9,1,0,2,19,0,0,60,162,0,0,1,20,4,0,1,18,0,0,134,10,0,0,24,55,6,0,19,20,18,0,25,11,10,24,1,20,4,0,134,18,0,0,116,78,6,0,11,9,20,0,2,18,0,0,60,162,0,0,1,20,4,0,1,19,0,0,134,12,0,0,24,55,6,0,18,20,19,0,25,13,12,16,1,19,4,0,1,20,0,0,134,14,0,0,24,55,6,0,13,19,20,0,2,20,0,0,60,162,0,0,1,19,4,0,1,18,0,0,134,3,0,0,24,55,6,0,20,19,18,0,25,4,3,20,1,18,4,0,1,19,0,0,134,5,0,0,24,55,6,0,4,18,19,0,134,19,0,0,112,46,3,0,14,5,0,0,0,6,15,0,137,17,0,0,139,6,0,0,140,1,25,0,0,0,0,0,1,20,0,0,136,22,0,0,0,21,22,0,136,22,0,0,25,22,22,16,137,22,0,0,130,22,0,0,136,23,0,0,49,22,22,23,188,252,5,0,135,22,0,0,0,1,0,0,0,2,1,0,25,10,2,76,1,22,4,0,1,23,0,0,134,11,0,0,24,55,6,0,10,22,23,0,34,12,11,0,121,12,3,0,137,21,0,0,139,0,0,0,1,23,116,3,1,22,4,0,1,24,0,0,134,13,0,0,24,55,6,0,23,22,24,0,0,14,1,0,25,15,14,76,1,24,4,0,1,22,0,0,134,16,0,0,24,55,6,0,15,24,22,0,134,17,0,0,240,255,5,0,13,16,0,0,0,18,17,0,0,3,18,0,1,22,0,0,14,4,3,22,120,4,3,0,137,21,0,0,139,0,0,0,0,5,18,0,0,19,5,0,0,6,19,0,25,7,6,8,0,8,1,0,25,9,8,20,1,24,4,0,134,22,0,0,116,78,6,0,9,7,24,0,137,21,0,0,139,0,0,0,140,2,20,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,32,3,0,0,121,3,3,0,1,15,0,0,119,0,18,0,5,4,1,0,20,18,1,0,0,7,18,0,2,18,0,0,255,255,0,0,16,8,18,7,121,8,10,0,7,18,4,0,38,18,18,255,0,9,18,0,13,10,9,1,1,18,255,255,125,2,10,4,18,0,0,0,0,15,2,0,119,0,2,0,0,15,4,0,135,11,5,0,15,0,0,0,1,18,0,0,13,12,11,18,121,12,2,0,139,11,0,0,26,13,11,4,1,18,4,0,1,19,0,0,134,14,0,0,24,55,6,0,13,18,19,0,38,19,14,3,0,5,19,0,32,6,5,0,121,6,2,0,139,11,0,0,1,18,0,0,135,19,4,0,11,18,15,0,139,11,0,0,140,1,22,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,16,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,104,254,5,0,135,20,0,0,0,2,0,0,0,10,2,0,1,20,0,0,14,11,10,20,121,11,40,0,0,12,2,0,25,13,12,4,1,20,4,0,1,21,0,0,134,14,0,0,24,55,6,0,13,20,21,0,0,15,2,0,1,21,4,0,1,20,0,0,134,16,0,0,24,55,6,0,15,21,20,0,0,17,2,0,25,3,17,44,1,20,4,0,1,21,0,0,134,4,0,0,24,55,6,0,3,20,21,0,41,21,16,2,3,5,4,21,1,21,4,0,1,20,0,0,134,6,0,0,24,55,6,0,5,21,20,0,41,20,14,2,3,7,6,20,1,20,4,0,1,21,0,0,134,8,0,0,24,55,6,0,7,20,21,0,0,1,8,0,0,9,1,0,137,19,0,0,139,9,0,0,119,0,5,0,1,1,255,255,0,9,1,0,137,19,0,0,139,9,0,0,1,21,0,0,139,21,0,0,140,5,26,0,0,0,0,0,1,22,0,0,136,24,0,0,0,23,24,0,136,24,0,0,25,24,24,48,137,24,0,0,130,24,0,0,136,25,0,0,49,24,24,25,100,255,5,0,135,24,0,0,25,20,23,8,0,6,0,0,0,12,1,0,0,13,2,0,0,14,3,0,0,15,6,0,0,16,12,0,0,17,13,0,134,18,0,0,164,140,5,0,15,16,17,0,32,19,18,255,121,19,6,0,1,5,255,255,0,11,5,0,137,23,0,0,139,11,0,0,119,0,16,0,1,25,4,0,134,24,0,0,116,78,6,0,20,4,25,0,0,7,6,0,0,8,14,0,134,9,0,0,200,42,6,0,7,8,20,0,0,21,9,0,0,10,21,0,0,5,10,0,0,11,5,0,137,23,0,0,139,11,0,0,1,24,0,0,139,24,0,0,140,2,21,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,16,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,36,0,6,0,135,19,0,0,0,3,0,0,0,8,1,0,1,16,0,0,0,9,3,0,1,19,0,0,14,10,9,19,120,10,3,0,1,17,6,0,119,0,18,0,0,11,16,0,0,12,8,0,13,13,11,12,121,13,3,0,1,17,4,0,119,0,12,0,0,15,16,0,25,4,15,1,0,16,4,0,0,5,3,0,1,19,4,0,1,20,0,0,134,6,0,0,24,55,6,0,5,19,20,0,0,3,6,0,119,0,234,255,32,20,17,4,121,20,7,0,0,14,3,0,0,2,14,0,0,7,2,0,137,18,0,0,139,7,0,0,119,0,7,0,32,20,17,6,121,20,5,0,1,2,0,0,0,7,2,0,137,18,0,0,139,7,0,0,1,20,0,0,139,20,0,0,140,3,23,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,32,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,0,1,6,0,135,20,0,0,0,4,0,0,0,9,1,0,0,10,2,0,2,20,0,0,76,159,0,0,1,21,4,0,1,22,0,0,134,11,0,0,24,55,6,0,20,21,22,0,33,12,11,0,121,12,13,0,2,22,0,0,76,159,0,0,1,21,4,0,1,20,0,0,134,13,0,0,24,55,6,0,22,21,20,0,0,3,13,0,0,8,3,0,137,19,0,0,139,8,0,0,119,0,23,0,0,14,9,0,0,15,10,0,134,16,0,0,168,2,6,0,14,15,0,0,0,17,16,0,0,5,4,0,0,6,17,0,134,20,0,0,156,47,5,0,5,6,0,0,2,20,0,0,76,159,0,0,1,21,4,0,1,22,0,0,134,7,0,0,24,55,6,0,20,21,22,0,0,3,7,0,0,8,3,0,137,19,0,0,139,8,0,0,1,22,0,0,139,22,0,0,140,0,20,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,244,1,6,0,135,17,0,0,135,0,56,0,0,13,0,0,1,17,8,0,135,1,30,0,17,0,0,0,0,14,1,0,0,5,14,0,33,6,5,0,120,6,29,0,0,7,13,0,2,17,0,0,168,164,0,0,1,18,4,0,1,19,0,0,134,8,0,0,24,55,6,0,17,18,19,0,16,9,7,8,120,9,19,0,0,10,13,0,2,19,0,0,168,164,0,0,1,18,4,0,1,17,0,0,134,11,0,0,24,55,6,0,19,18,17,0,4,12,10,11,1,17,30,0,16,2,17,12,120,2,7,0,0,3,14,0,1,17,255,0,19,17,3,17,0,4,17,0,137,16,0,0,139,4,0,0,134,17,0,0,216,46,6,0,0,3,14,0,1,17,255,0,19,17,3,17,0,4,17,0,137,16,0,0,139,4,0,0,140,2,20,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,136,18,0,0,25,18,18,16,137,18,0,0,130,18,0,0,136,19,0,0,49,18,18,19,220,2,6,0,135,18,0,0,0,3,0,0,0,7,1,0,1,15,0,0,0,8,3,0,1,18,0,0,14,9,8,18,120,9,3,0,1,16,6,0,119,0,18,0,0,10,3,0,0,11,7,0,13,12,10,11,0,13,15,0,121,12,3,0,1,16,4,0,119,0,11,0,25,14,13,1,0,15,14,0,0,4,3,0,1,18,4,0,1,19,0,0,134,5,0,0,24,55,6,0,4,18,19,0,0,3,5,0,119,0,234,255,32,19,16,4,121,19,6,0,0,2,13,0,0,6,2,0,137,17,0,0,139,6,0,0,119,0,7,0,32,19,16,6,121,19,5,0,1,2,255,255,0,6,2,0,137,17,0,0,139,6,0,0,1,19,0,0,139,19,0,0,140,2,24,0,0,0,0,0,1,20,0,0,136,22,0,0,0,21,22,0,136,22,0,0,25,22,22,16,137,22,0,0,130,22,0,0,136,23,0,0,49,22,22,23,180,3,6,0,135,22,0,0,0,2,0,0,0,3,1,0,0,11,2,0,0,12,3,0,27,22,12,20,3,13,11,22,0,19,13,0,0,14,2,0,25,15,14,20,0,2,15,0,0,16,19,0,16,17,15,16,120,17,2,0,119,0,22,0,0,18,2,0,26,4,18,20,25,5,4,4,1,22,4,0,1,23,0,0,134,6,0,0,24,55,6,0,5,22,23,0,0,7,2,0,25,8,7,4,1,23,4,0,1,22,0,0,134,9,0,0,24,55,6,0,8,23,22,0,3,10,9,6,1,23,4,0,134,22,0,0,116,78,6,0,8,10,23,0,119,0,229,255,137,21,0,0,139,0,0,0,140,3,24,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,16,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,124,4,6,0,135,20,0,0,0,4,0,0,0,10,1,0,0,11,2,0,2,20,0,0,76,159,0,0,1,21,4,0,1,22,0,0,134,12,0,0,24,55,6,0,20,21,22,0,33,13,12,0,121,13,12,0,2,22,0,0,76,159,0,0,1,21,4,0,1,20,0,0,134,14,0,0,24,55,6,0,22,21,20,0,0,3,14,0,0,9,3,0,137,19,0,0,139,9,0,0,0,15,10,0,0,16,11,0,0,17,4,0,134,5,0,0,228,156,4,0,15,16,17,0,0,6,11,0,14,7,5,6,121,7,8,0,2,21,0,0,76,159,0,0,1,22,1,0,1,23,4,0,134,20,0,0,116,78,6,0,21,22,23,0,2,20,0,0,76,159,0,0,1,23,4,0,1,22,0,0,134,8,0,0,24,55,6,0,20,23,22,0,0,3,8,0,0,9,3,0,137,19,0,0,139,9,0,0,140,2,21,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,136,18,0,0,25,18,18,16,137,18,0,0,130,18,0,0,136,19,0,0,49,18,18,19,120,5,6,0,135,18,0,0,25,15,17,12,0,3,0,0,0,7,1,0,0,8,7,0,32,9,8,0,1,18,0,0,1,19,1,0,125,10,9,18,19,0,0,0,1,19,255,0,19,19,10,19,0,11,19,0,42,18,15,0,1,20,1,0,134,19,0,0,116,78,6,0,18,11,20,0,2,19,0,0,76,159,0,0,1,20,4,0,1,18,0,0,134,12,0,0,24,55,6,0,19,20,18,0,33,13,12,0,121,13,13,0,2,18,0,0,76,159,0,0,1,20,4,0,1,19,0,0,134,14,0,0,24,55,6,0,18,20,19,0,0,2,14,0,0,6,2,0,137,17,0,0,139,6,0,0,119,0,17,0,0,4,3,0,1,20,1,0,134,19,0,0,72,4,6,0,4,15,20,0,2,19,0,0,76,159,0,0,1,20,4,0,1,18,0,0,134,5,0,0,24,55,6,0,19,20,18,0,0,2,5,0,0,6,2,0,137,17,0,0,139,6,0,0,1,18,0,0,139,18,0,0,140,1,19,0,0,0,0,0,1,14,0,0,136,16,0,0,0,15,16,0,136,16,0,0,25,16,16,16,137,16,0,0,130,16,0,0,136,17,0,0,49,16,16,17,140,6,6,0,135,16,0,0,0,13,15,0,25,2,0,8,1,16,4,0,1,17,0,0,134,3,0,0,24,55,6,0,2,16,17,0,1,17,0,0,13,5,3,17,121,5,10,0,134,6,0,0,204,106,5,0,0,0,0,0,32,7,6,0,121,7,3,0,1,14,3,0,119,0,4,0,1,1,255,255,119,0,2,0,1,14,3,0,32,17,14,3,121,17,24,0,25,8,0,32,1,17,4,0,1,16,0,0,134,9,0,0,24,55,6,0,8,17,16,0,1,16,1,0,135,10,49,0,9,0,13,16,32,11,10,1,121,11,12,0,42,16,13,0,1,17,1,0,1,18,0,0,134,12,0,0,24,55,6,0,16,17,18,0,1,18,255,0,19,18,12,18,0,4,18,0,0,1,4,0,119,0,2,0,1,1,255,255,137,15,0,0,139,1,0,0,140,0,21,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,136,18,0,0,25,18,18,16,137,18,0,0,130,18,0,0,136,19,0,0,49,18,18,19,124,7,6,0,135,18,0,0,1,18,20,107,1,19,4,0,1,20,0,0,134,1,0,0,24,55,6,0,18,19,20,0,25,8,1,28,1,20,2,0,1,19,0,0,134,9,0,0,24,55,6,0,8,20,19,0,41,19,9,16,42,19,19,16,0,10,19,0,38,19,10,3,0,11,19,0,32,12,11,1,121,12,34,0,1,19,232,106,1,20,2,0,1,18,0,0,134,13,0,0,24,55,6,0,19,20,18,0,41,18,13,16,42,18,18,16,0,14,18,0,38,18,14,4,0,15,18,0,33,2,15,0,38,18,2,1,0,3,18,0,1,18,255,0,19,18,3,18,0,4,18,0,41,18,4,24,42,18,18,24,33,5,18,0,120,5,13,0,2,18,0,0,3,209,0,0,42,18,18,0,1,20,1,0,1,19,0,0,134,6,0,0,24,55,6,0,18,20,19,0,0,0,6,0,0,7,0,0,137,17,0,0,139,7,0,0,1,0,1,0,0,7,0,0,137,17,0,0,139,7,0,0,140,4,24,0,0,0,0,0,1,19,0,0,136,21,0,0,0,20,21,0,136,21,0,0,25,21,21,48,137,21,0,0,130,21,0,0,136,22,0,0,49,21,21,22,144,8,6,0,135,21,0,0,25,17,20,8,0,5,0,0,0,9,1,0,0,10,2,0,0,11,5,0,0,12,9,0,134,13,0,0,124,108,5,0,11,12,0,0,32,14,13,255,121,14,6,0,1,4,255,255,0,8,4,0,137,20,0,0,139,8,0,0,119,0,22,0,1,22,4,0,134,21,0,0,116,78,6,0,17,3,22,0,2,21,0,0,68,162,0,0,1,22,4,0,1,23,0,0,134,15,0,0,24,55,6,0,21,22,23,0,0,16,10,0,134,6,0,0,200,42,6,0,15,16,17,0,0,18,6,0,0,7,18,0,0,4,7,0,0,8,4,0,137,20,0,0,139,8,0,0,1,23,0,0,139,23,0,0,140,2,19,0,0,0,0,0,1,14,0,0,136,16,0,0,0,15,16,0,136,16,0,0,25,16,16,16,137,16,0,0,130,16,0,0,136,17,0,0,49,16,16,17,96,9,6,0,135,16,0,0,0,3,0,0,2,16,0,0,76,159,0,0,1,17,4,0,1,18,0,0,134,6,0,0,24,55,6,0,16,17,18,0,33,7,6,0,121,7,13,0,2,18,0,0,76,159,0,0,1,17,4,0,1,16,0,0,134,8,0,0,24,55,6,0,18,17,16,0,0,2,8,0,0,5,2,0,137,15,0,0,139,5,0,0,119,0,31,0,0,9,3,0,1,16,4,0,1,17,0,0,134,10,0,0,24,55,6,0,1,16,17,0,134,17,0,0,156,47,5,0,9,10,0,0,0,11,3,0,25,12,1,4,1,17,4,0,1,16,0,0,134,13,0,0,24,55,6,0,12,17,16,0,134,16,0,0,156,47,5,0,11,13,0,0,2,16,0,0,76,159,0,0,1,17,4,0,1,18,0,0,134,4,0,0,24,55,6,0,16,17,18,0,0,2,4,0,0,5,2,0,137,15,0,0,139,5,0,0,1,18,0,0,139,18,0,0,140,3,22,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,16,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,108,10,6,0,135,19,0,0,0,4,0,0,0,9,1,0,0,10,2,0,2,19,0,0,76,159,0,0,1,20,4,0,1,21,0,0,134,11,0,0,24,55,6,0,19,20,21,0,33,12,11,0,121,12,13,0,2,21,0,0,76,159,0,0,1,20,4,0,1,19,0,0,134,13,0,0,24,55,6,0,21,20,19,0,0,3,13,0,0,8,3,0,137,18,0,0,139,8,0,0,119,0,23,0,0,14,4,0,0,15,10,0,134,19,0,0,156,47,5,0,14,15,0,0,0,16,4,0,0,5,9,0,0,6,10,0,134,19,0,0,72,4,6,0,16,5,6,0,2,19,0,0,76,159,0,0,1,20,4,0,1,21,0,0,134,7,0,0,24,55,6,0,19,20,21,0,0,3,7,0,0,8,3,0,137,18,0,0,139,8,0,0,1,21,0,0,139,21,0,0,140,1,19,0,0,0,0,0,1,14,0,0,136,16,0,0,0,15,16,0,136,16,0,0,25,16,16,16,137,16,0,0,130,16,0,0,136,17,0,0,49,16,16,17,96,11,6,0,135,16,0,0,0,1,0,0,1,16,120,3,1,17,4,0,1,18,0,0,134,2,0,0,24,55,6,0,16,17,18,0,0,13,2,0,0,5,13,0,1,17,0,0,1,16,0,0,134,18,0,0,164,140,5,0,5,17,16,0,0,6,13,0,0,7,1,0,134,18,0,0,144,86,6,0,6,7,0,0,0,8,13,0,134,18,0,0,164,179,5,0,8,0,0,0,0,9,13,0,1,18,220,106,1,16,4,0,1,17,0,0,134,10,0,0,24,55,6,0,18,16,17,0,1,17,216,106,1,16,4,0,1,18,0,0,134,11,0,0,24,55,6,0,17,16,18,0,134,18,0,0,164,140,5,0,9,10,11,0,0,12,13,0,134,18,0,0,124,212,4,0,12,0,0,0,1,16,32,0,134,18,0,0,112,14,6,0,16,0,0,0,2,18,0,0,64,162,0,0,1,16,4,0,1,17,0,0,134,3,0,0,24,55,6,0,18,16,17,0,1,16,1,0,134,17,0,0,0,62,6,0,3,16,0,0,2,17,0,0,68,162,0,0,1,16,4,0,1,18,0,0,134,4,0,0,24,55,6,0,17,16,18,0,134,18,0,0,164,179,5,0,4,0,0,0,137,15,0,0,139,0,0,0,140,4,20,0,0,0,0,0,42,15,1,31,34,17,1,0,1,18,255,255,1,19,0,0,125,16,17,18,19,0,0,0,41,16,16,1,20,15,15,16,0,4,15,0,34,16,1,0,1,19,255,255,1,18,0,0,125,15,16,19,18,0,0,0,42,15,15,31,34,19,1,0,1,16,255,255,1,17,0,0,125,18,19,16,17,0,0,0,41,18,18,1,20,15,15,18,0,5,15,0,42,15,3,31,34,17,3,0,1,16,255,255,1,19,0,0,125,18,17,16,19,0,0,0,41,18,18,1,20,15,15,18,0,6,15,0,34,18,3,0,1,19,255,255,1,16,0,0,125,15,18,19,16,0,0,0,42,15,15,31,34,19,3,0,1,18,255,255,1,17,0,0,125,16,19,18,17,0,0,0,41,16,16,1,20,15,15,16,0,7,15,0,21,15,4,0,21,16,5,1,134,8,0,0,240,98,6,0,15,16,4,5,128,16,0,0,0,9,16,0,21,16,6,2,21,15,7,3,134,10,0,0,240,98,6,0,16,15,6,7,21,15,6,4,0,11,15,0,21,15,7,5,0,12,15,0,128,15,0,0,1,16,0,0,134,13,0,0,156,101,2,0,8,9,10,15,16,0,0,0,21,16,13,11,128,15,0,0,21,15,15,12,134,14,0,0,240,98,6,0,16,15,11,12,139,14,0,0,140,4,25,0,0,0,0,0,1,21,0,0,136,23,0,0,0,22,23,0,136,23,0,0,25,23,23,32,137,23,0,0,130,23,0,0,136,24,0,0,49,23,23,24,224,13,6,0,135,23,0,0,0,4,0,0,0,5,1,0,0,12,2,0,0,13,3,0,134,14,0,0,100,28,6,0,0,20,14,0,0,15,13,0,0,16,20,0,1,24,4,0,134,23,0,0,116,78,6,0,16,15,24,0,0,17,4,0,0,18,20,0,25,19,18,4,1,24,4,0,134,23,0,0,116,78,6,0,19,17,24,0,0,6,5,0,0,7,20,0,25,8,7,8,1,24,4,0,134,23,0,0,116,78,6,0,8,6,24,0,0,9,12,0,0,10,20,0,25,11,10,12,1,24,4,0,134,23,0,0,116,78,6,0,11,9,24,0,137,22,0,0,139,0,0,0,140,1,19,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,164,14,6,0,135,17,0,0,0,1,0,0,0,2,1,0,32,6,2,10,120,6,12,0,134,13,0,0,24,71,6,0,41,17,13,24,42,17,17,24,0,3,17,0,0,4,1,0,14,5,3,4,120,5,249,255,119,0,1,0,137,16,0,0,139,0,0,0,134,7,0,0,24,71,6,0,0,14,7,0,41,17,7,24,42,17,17,24,0,8,17,0,33,9,8,10,120,9,3,0,1,15,5,0,119,0,9,0,0,10,14,0,41,17,10,24,42,17,17,24,0,11,17,0,33,12,11,13,120,12,241,255,1,15,5,0,119,0,1,0,32,17,15,5,121,17,3,0,137,16,0,0,139,0,0,0,139,0,0,0,140,3,22,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,25,3,0,84,1,20,4,0,1,21,0,0,134,4,0,0,24,55,6,0,3,20,21,0,1,21,0,1,3,8,2,21,1,21,0,0,134,9,0,0,232,220,3,0,4,21,8,0,1,21,0,0,13,10,9,21,0,11,9,0,0,12,4,0,4,13,11,12,125,16,10,8,13,0,0,0,16,14,16,2,125,17,14,16,2,0,0,0,135,21,26,0,1,4,17,0,3,15,4,17,25,5,0,4,1,20,4,0,134,21,0,0,116,78,6,0,5,15,20,0,3,6,4,16,25,7,0,8,1,20,4,0,134,21,0,0,116,78,6,0,7,6,20,0,1,20,4,0,134,21,0,0,116,78,6,0,3,6,20,0,139,17,0,0,140,2,19,0,0,0,0,0,1,13,0,0,136,15,0,0,0,14,15,0,136,15,0,0,25,15,15,16,137,15,0,0,130,15,0,0,136,16,0,0,49,15,15,16,40,16,6,0,135,15,0,0,0,2,0,0,0,3,1,0,2,16,0,0,141,252,0,0,42,16,16,0,1,17,0,0,1,18,1,0,134,15,0,0,116,78,6,0,16,17,18,0,0,5,2,0,1,15,0,0,13,6,5,15,121,6,8,0,2,18,0,0,141,252,0,0,2,17,0,0,141,0,1,0,135,15,24,0,18,17,0,0,119,0,6,0,0,7,2,0,2,17,0,0,141,252,0,0,135,15,24,0,17,7,0,0,0,8,3,0,41,15,8,24,42,15,15,24,33,9,15,0,120,9,5,0,137,14,0,0,2,15,0,0,141,252,0,0,139,15,0,0,2,15,0,0,141,252,0,0,42,15,15,0,1,17,1,0,1,18,0,0,134,10,0,0,24,55,6,0,15,17,18,0,41,18,10,24,42,18,18,24,0,11,18,0,134,12,0,0,36,102,6,0,11,0,0,0,1,18,255,0,19,18,12,18,0,4,18,0,2,17,0,0,141,252,0,0,42,17,17,0,1,15,1,0,134,18,0,0,116,78,6,0,17,4,15,0,137,14,0,0,2,18,0,0,141,252,0,0,139,18,0,0,140,2,21,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,25,2,0,104,1,20,4,0,134,19,0,0,116,78,6,0,2,1,20,0,25,3,0,8,1,19,4,0,1,20,0,0,134,8,0,0,24,55,6,0,3,19,20,0,25,9,0,4,1,20,4,0,1,19,0,0,134,10,0,0,24,55,6,0,9,20,19,0,0,11,8,0,0,12,10,0,4,13,11,12,25,14,0,108,1,20,4,0,134,19,0,0,116,78,6,0,14,13,20,0,33,15,1,0,15,4,1,13,19,19,15,4,0,16,19,0,121,16,8,0,3,5,10,1,25,6,0,100,1,20,4,0,134,19,0,0,116,78,6,0,6,5,20,0,119,0,6,0,25,7,0,100,1,20,4,0,134,19,0,0,116,78,6,0,7,11,20,0,139,0,0,0,140,4,20,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,5,4,2,1,25,5,3,76,1,18,4,0,1,19,0,0,134,7,0,0,24,55,6,0,5,18,19,0,1,19,255,255,15,8,19,7,121,8,16,0,134,10,0,0,152,111,6,0,3,0,0,0,32,15,10,0,134,11,0,0,192,117,4,0,0,4,3,0,121,15,3,0,0,12,11,0,119,0,10,0,134,19,0,0,128,111,6,0,3,0,0,0,0,12,11,0,119,0,5,0,134,9,0,0,192,117,4,0,0,4,3,0,0,12,9,0,13,13,12,4,121,13,3,0,0,6,2,0,119,0,5,0,7,19,12,1,38,19,19,255,0,14,19,0,0,6,14,0,139,6,0,0,140,2,18,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,32,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,196,18,6,0,135,14,0,0,0,11,13,0,0,3,0,0,0,4,3,0,42,14,4,0,1,15,1,0,1,16,0,0,134,5,0,0,24,55,6,0,14,15,16,0,41,16,5,24,42,16,16,24,0,6,16,0,32,7,6,0,121,7,19,0,1,15,0,0,1,14,0,0,134,16,0,0,124,108,5,0,15,14,0,0,134,16,0,0,160,106,6,0,1,14,204,2,1,15,0,0,1,17,4,0,134,16,0,0,116,78,6,0,14,15,17,0,1,2,228,255,0,10,2,0,137,13,0,0,139,10,0,0,119,0,15,0,1,17,4,0,134,16,0,0,116,78,6,0,11,1,17,0,0,8,3,0,134,16,0,0,92,45,6,0,8,11,0,0,134,9,0,0,120,187,4,0,0,2,9,0,0,10,2,0,137,13,0,0,139,10,0,0,1,16,0,0,139,16,0,0,140,3,23,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,16,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,184,19,6,0,135,20,0,0,0,3,0,0,0,4,1,0,0,9,2,0,134,10,0,0,100,28,6,0,0,17,10,0,0,11,9,0,0,12,17,0,1,21,4,0,134,20,0,0,116,78,6,0,12,11,21,0,0,13,3,0,0,14,17,0,25,15,14,4,1,21,4,0,134,20,0,0,116,78,6,0,15,13,21,0,0,16,4,0,0,5,17,0,25,6,5,8,1,21,4,0,134,20,0,0,116,78,6,0,6,16,21,0,0,7,17,0,25,8,7,12,1,21,255,255,1,22,4,0,134,20,0,0,116,78,6,0,8,21,22,0,137,19,0,0,139,0,0,0,140,1,18,0,0,0,0,0,1,10,0,0,136,14,0,0,0,11,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,120,20,6,0,135,14,0,0,0,1,0,0,0,2,1,0,2,14,0,0,224,189,0,0,27,15,2,92,3,3,14,15,42,14,3,0,1,16,1,0,1,17,1,0,134,15,0,0,116,78,6,0,14,16,17,0,0,4,1,0,2,15,0,0,224,189,0,0,27,17,4,92,3,5,15,17,25,6,5,4,2,17,0,0,60,162,0,0,1,15,4,0,1,16,0,0,134,7,0,0,24,55,6,0,17,15,16,0,0,9,6,0,0,12,7,0,25,13,9,88,1,17,4,0,1,14,0,0,134,15,0,0,24,55,6,0,12,17,14,0,1,14,4,0,134,16,0,0,116,78,6,0,9,15,14,0,25,9,9,4,25,12,12,4,54,16,9,13,232,20,6,0,0,8,1,0,134,16,0,0,132,101,6,0,8,0,0,0,137,11,0,0,139,0,0,0,140,3,21,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,16,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,104,21,6,0,135,19,0,0,0,3,0,0,0,4,1,0,0,9,2,0,0,10,3,0,41,19,10,16,42,19,19,16,0,11,19,0,2,19,0,0,30,199,0,0,41,20,11,2,3,12,19,20,1,20,2,0,1,19,0,0,134,13,0,0,24,55,6,0,12,20,19,0,0,14,4,0,1,20,2,0,134,19,0,0,116,78,6,0,14,13,20,0,0,15,3,0,41,19,15,16,42,19,19,16,0,16,19,0,2,19,0,0,30,199,0,0,41,20,16,2,3,5,19,20,25,6,5,2,1,20,2,0,1,19,0,0,134,7,0,0,24,55,6,0,6,20,19,0,0,8,9,0,1,20,2,0,134,19,0,0,116,78,6,0,8,7,20,0,137,18,0,0,1,19,0,0,139,19,0,0,140,3,16,0,0,0,0,0,1,10,0,0,136,13,0,0,0,11,13,0,136,13,0,0,25,13,13,112,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,72,22,6,0,135,13,0,0,0,8,11,0,0,9,8,0,25,12,9,112,1,14,0,0,1,15,4,0,134,13,0,0,116,78,6,0,9,14,15,0,25,9,9,4,54,13,9,12,84,22,6,0,25,3,8,32,1,15,32,0,1,14,4,0,134,13,0,0,116,78,6,0,3,15,14,0,25,4,8,44,1,14,4,0,134,13,0,0,116,78,6,0,4,0,14,0,25,5,8,76,1,14,255,255,1,15,4,0,134,13,0,0,116,78,6,0,5,14,15,0,25,6,8,84,1,15,4,0,134,13,0,0,116,78,6,0,6,0,15,0,134,7,0,0,8,148,0,0,8,1,2,0,137,11,0,0,139,7,0,0,140,1,16,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,16,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,20,23,6,0,135,13,0,0,0,1,0,0,0,2,1,0,25,3,2,0,0,1,3,0,2,13,0,0,60,195,0,0,1,14,4,0,1,15,0,0,134,4,0,0,24,55,6,0,13,14,15,0,2,14,0,0,189,12,1,0,134,15,0,0,12,103,6,0,4,14,0,0,134,5,0,0,232,67,6,0,41,15,5,24,42,15,15,24,33,6,15,0,121,6,11,0,1,14,10,0,134,15,0,0,20,105,6,0,14,0,0,0,1,14,0,0,134,15,0,0,20,99,6,0,14,0,0,0,137,12,0,0,139,0,0,0,2,15,0,0,80,162,0,0,1,14,4,0,1,13,0,0,134,7,0,0,24,55,6,0,15,14,13,0,26,8,7,1,2,13,0,0,76,162,0,0,1,14,4,0,1,15,0,0,134,9,0,0,24,55,6,0,13,14,15,0,26,10,9,1,1,14,0,0,1,13,0,0,134,15,0,0,112,114,5,0,14,8,10,13,134,15,0,0,196,101,6,0,1,13,10,0,134,15,0,0,20,105,6,0,13,0,0,0], eb + 389120);
  HEAPU8.set([1,13,0,0,134,15,0,0,20,99,6,0,13,0,0,0,137,12,0,0,139,0,0,0,140,1,20,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,76,24,6,0,135,17,0,0,0,1,0,0,1,17,232,106,1,18,2,0,1,19,0,0,134,2,0,0,24,55,6,0,17,18,19,0,41,19,2,16,42,19,19,16,0,7,19,0,1,19,0,8,19,19,7,19,0,8,19,0,33,9,8,0,38,19,9,1,0,10,19,0,1,19,255,0,19,19,10,19,0,11,19,0,1,19,255,0,19,19,11,19,0,12,19,0,33,13,12,0,121,13,17,0,1,19,27,0,134,14,0,0,20,36,6,0,19,0,0,0,1,19,8,113,41,18,14,2,3,3,19,18,1,18,4,0,1,19,0,0,134,4,0,0,24,55,6,0,3,18,19,0,0,6,4,0,137,16,0,0,139,6,0,0,119,0,5,0,0,5,1,0,0,6,5,0,137,16,0,0,139,6,0,0,1,19,0,0,139,19,0,0,140,4,27,0,0,0,0,0,1,23,0,0,136,25,0,0,0,24,25,0,136,25,0,0,25,25,25,16,137,25,0,0,130,25,0,0,136,26,0,0,49,25,25,26,56,25,6,0,135,25,0,0,0,4,0,0,0,5,1,0,0,15,2,0,0,16,3,0,0,17,16,0,0,18,5,0,4,19,17,18,0,20,16,0,0,21,5,0,4,22,20,21,5,6,19,22,0,7,15,0,0,8,4,0,4,9,7,8,0,10,15,0,0,11,4,0,4,12,10,11,5,13,9,12,3,14,6,13,137,24,0,0,139,14,0,0,140,2,18,0,0,0,0,0,1,13,0,0,136,15,0,0,0,14,15,0,136,15,0,0,25,15,15,16,137,15,0,0,130,15,0,0,136,16,0,0,49,15,15,16,192,25,6,0,135,15,0,0,0,2,0,0,0,3,1,0,0,5,3,0,0,6,2,0,1,15,4,0,1,16,0,0,134,7,0,0,24,55,6,0,6,15,16,0,3,8,7,5,1,15,4,0,134,16,0,0,116,78,6,0,6,8,15,0,35,9,8,3,0,10,2,0,121,9,8,0,1,15,3,0,1,17,4,0,134,16,0,0,116,78,6,0,10,15,17,0,137,14,0,0,139,0,0,0,1,16,4,0,1,17,0,0,134,11,0,0,24,55,6,0,10,16,17,0,1,17,31,0,16,12,17,11,120,12,3,0,137,14,0,0,139,0,0,0,0,4,2,0,1,16,31,0,1,15,4,0,134,17,0,0,116,78,6,0,4,16,15,0,137,14,0,0,139,0,0,0,140,2,15,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,127,13,0,0,1,14,8,0,134,12,0,0,56,86,6,0,13,0,14,0,127,12,0,0,1,14,4,0,1,13,0,0,134,2,0,0,24,55,6,0,12,14,13,0,127,13,0,0,25,13,13,4,1,14,4,0,1,12,0,0,134,3,0,0,24,55,6,0,13,14,12,0,127,14,0,0,1,13,8,0,134,12,0,0,56,86,6,0,14,1,13,0,127,12,0,0,1,13,4,0,1,14,0,0,134,4,0,0,24,55,6,0,12,13,14,0,127,14,0,0,25,14,14,4,1,13,4,0,1,12,0,0,134,5,0,0,24,55,6,0,14,13,12,0,2,12,0,0,255,255,255,127,19,12,3,12,0,6,12,0,2,12,0,0,0,0,0,128,19,12,5,12,0,7,12,0,20,12,7,6,0,8,12,0,127,13,0,0,1,14,4,0,134,12,0,0,116,78,6,0,13,2,14,0,127,14,0,0,25,14,14,4,1,13,4,0,134,12,0,0,116,78,6,0,14,8,13,0,127,12,0,0,1,13,8,0,134,9,0,0,208,90,6,0,12,13,0,0,139,9,0,0,140,2,16,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,16,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,172,27,6,0,135,13,0,0,25,4,12,8,0,3,0,0,42,14,4,0,1,15,1,0,134,13,0,0,116,78,6,0,14,1,15,0,2,13,0,0,76,159,0,0,1,15,4,0,1,14,0,0,134,5,0,0,24,55,6,0,13,15,14,0,33,6,5,0,121,6,13,0,2,14,0,0,76,159,0,0,1,15,4,0,1,13,0,0,134,7,0,0,24,55,6,0,14,15,13,0,0,2,7,0,0,10,2,0,137,12,0,0,139,10,0,0,119,0,17,0,0,8,3,0,1,15,1,0,134,13,0,0,72,4,6,0,8,4,15,0,2,13,0,0,76,159,0,0,1,15,4,0,1,14,0,0,134,9,0,0,24,55,6,0,13,15,14,0,0,2,9,0,0,10,2,0,137,12,0,0,139,10,0,0,1,14,0,0,139,14,0,0,140,0,14,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,152,28,6,0,135,12,0,0,1,9,76,1,0,1,9,0,1,12,124,2,18,2,1,12,120,2,3,0,1,10,6,0,119,0,15,0,0,3,9,0,1,12,4,0,1,13,0,0,134,4,0,0,24,55,6,0,3,12,13,0,32,5,4,0,0,6,9,0,121,5,3,0,1,10,4,0,119,0,4,0,25,7,6,16,0,9,7,0,119,0,237,255,32,13,10,4,121,13,6,0,0,0,6,0,0,8,0,0,137,11,0,0,139,8,0,0,119,0,7,0,32,13,10,6,121,13,5,0,1,0,0,0,0,8,0,0,137,11,0,0,139,8,0,0,1,13,0,0,139,13,0,0,140,2,20,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,92,29,6,0,135,17,0,0,0,3,0,0,0,7,1,0,0,8,3,0,1,17,0,0,14,9,8,17,121,9,25,0,0,10,7,0,0,11,3,0,25,12,11,37,42,18,12,0,1,19,1,0,134,17,0,0,116,78,6,0,18,10,19,0,0,13,7,0,41,17,13,24,42,17,17,24,33,14,17,0,40,17,14,1,0,4,17,0,38,17,4,1,0,5,17,0,134,17,0,0,208,206,5,0,5,0,0,0,1,2,0,0,0,6,2,0,137,16,0,0,139,6,0,0,119,0,5,0,1,2,255,255,0,6,2,0,137,16,0,0,139,6,0,0,1,17,0,0,139,17,0,0,140,0,18,0,0,0,0,0,1,13,0,0,136,15,0,0,0,14,15,0,136,15,0,0,25,15,15,16,137,15,0,0,130,15,0,0,136,16,0,0,49,15,15,16,32,30,6,0,135,15,0,0,1,15,20,107,1,16,4,0,1,17,0,0,134,1,0,0,24,55,6,0,15,16,17,0,25,5,1,28,1,17,2,0,1,16,0,0,134,6,0,0,24,55,6,0,5,17,16,0,41,16,6,16,42,16,16,16,0,7,16,0,38,16,7,2,0,8,16,0,33,9,8,0,121,9,6,0,1,0,35,0,0,4,0,0,137,14,0,0,139,4,0,0,119,0,18,0,134,10,0,0,72,7,6,0,1,16,255,0,19,16,10,16,0,11,16,0,33,12,11,0,1,16,46,0,1,17,32,0,125,2,12,16,17,0,0,0,1,17,255,0,19,17,2,17,0,3,17,0,0,0,3,0,0,4,0,0,137,14,0,0,139,4,0,0,1,17,0,0,139,17,0,0,140,4,22,0,0,0,0,0,1,18,0,0,136,20,0,0,0,19,20,0,136,20,0,0,25,20,20,32,137,20,0,0,130,20,0,0,136,21,0,0,49,20,20,21,0,31,6,0,135,20,0,0,0,5,0,0,0,10,1,0,0,11,2,0,0,12,3,0,0,13,5,0,0,14,10,0,0,15,11,0,134,16,0,0,164,140,5,0,13,14,15,0,32,17,16,255,121,17,6,0,1,4,255,255,0,9,4,0,137,19,0,0,139,9,0,0,119,0,10,0,0,6,5,0,0,7,12,0,134,8,0,0,64,245,1,0,6,7,0,0,0,4,8,0,0,9,4,0,137,19,0,0,139,9,0,0,1,20,0,0,139,20,0,0,140,2,17,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,164,31,6,0,135,14,0,0,0,3,0,0,0,4,1,0,2,14,0,0,76,159,0,0,1,15,4,0,1,16,0,0,134,5,0,0,24,55,6,0,14,15,16,0,33,6,5,0,121,6,13,0,2,16,0,0,76,159,0,0,1,15,4,0,1,14,0,0,134,7,0,0,24,55,6,0,16,15,14,0,0,2,7,0,0,11,2,0,137,13,0,0,139,11,0,0,119,0,17,0,0,8,3,0,0,9,4,0,134,14,0,0,164,45,5,0,8,9,0,0,2,14,0,0,76,159,0,0,1,15,4,0,1,16,0,0,134,10,0,0,24,55,6,0,14,15,16,0,0,2,10,0,0,11,2,0,137,13,0,0,139,11,0,0,1,16,0,0,139,16,0,0,140,2,17,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,124,32,6,0,135,14,0,0,0,3,0,0,0,4,1,0,2,14,0,0,76,159,0,0,1,15,4,0,1,16,0,0,134,5,0,0,24,55,6,0,14,15,16,0,33,6,5,0,121,6,13,0,2,16,0,0,76,159,0,0,1,15,4,0,1,14,0,0,134,7,0,0,24,55,6,0,16,15,14,0,0,2,7,0,0,11,2,0,137,13,0,0,139,11,0,0,119,0,17,0,0,8,3,0,0,9,4,0,134,14,0,0,156,47,5,0,8,9,0,0,2,14,0,0,76,159,0,0,1,15,4,0,1,16,0,0,134,10,0,0,24,55,6,0,14,15,16,0,0,2,10,0,0,11,2,0,137,13,0,0,139,11,0,0,1,16,0,0,139,16,0,0,140,1,15,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,84,33,6,0,135,12,0,0,0,8,11,0,0,1,0,0,1,12,120,3,1,13,4,0,1,14,0,0,134,2,0,0,24,55,6,0,12,13,14,0,0,3,1,0,25,4,3,4,1,14,4,0,1,13,0,0,134,5,0,0,24,55,6,0,4,14,13,0,0,6,1,0,1,13,4,0,1,14,0,0,134,7,0,0,24,55,6,0,6,13,14,0,1,13,4,0,134,14,0,0,116,78,6,0,8,5,13,0,25,9,8,4,1,13,4,0,134,14,0,0,116,78,6,0,9,7,13,0,2,13,0,0,222,25,1,0,134,14,0,0,164,57,6,0,2,13,8,0,137,11,0,0,139,0,0,0,140,1,18,0,0,0,0,0,1,14,0,0,136,16,0,0,0,15,16,0,136,16,0,0,25,16,16,96,137,16,0,0,130,16,0,0,136,17,0,0,49,16,16,17,28,34,6,0,135,16,0,0,0,13,15,0,0,2,0,0,0,5,2,0,134,6,0,0,32,54,6,0,5,13,0,0,34,7,6,0,121,7,6,0,1,1,0,0,0,4,1,0,137,15,0,0,139,4,0,0,119,0,23,0,25,8,13,12,1,16,4,0,1,17,0,0,134,9,0,0,24,55,6,0,8,16,17,0,2,17,0,0,0,240,0,0,19,17,9,17,0,10,17,0,2,17,0,0,0,128,0,0,14,11,10,17,38,17,11,1,0,12,17,0,1,17,255,0,19,17,12,17,0,3,17,0,0,1,3,0,0,4,1,0,137,15,0,0,139,4,0,0,1,17,0,0,139,17,0,0,140,3,23,0,0,0,0,0,1,19,0,0,136,21,0,0,0,20,21,0,136,21,0,0,25,21,21,32,137,21,0,0,130,21,0,0,136,22,0,0,49,21,21,22,228,34,6,0,135,21,0,0,0,3,0,0,0,4,1,0,0,9,2,0,1,21,20,0,134,10,0,0,20,36,6,0,21,0,0,0,0,18,10,0,0,11,3,0,1,21,20,0,4,12,21,11,0,13,4,0,4,14,12,13,0,17,14,0,0,15,18,0,0,16,9,0,3,5,15,16,0,6,17,0,17,7,6,5,38,21,7,1,0,8,21,0,137,20,0,0,139,8,0,0,140,0,17,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,116,35,6,0,135,14,0,0,1,14,216,106,1,15,4,0,1,16,0,0,134,0,0,0,24,55,6,0,14,15,16,0,41,16,0,5,0,1,16,0,1,16,220,106,1,15,4,0,1,14,0,0,134,3,0,0,24,55,6,0,16,15,14,0,3,4,1,3,1,14,192,26,41,15,4,3,3,5,14,15,42,15,5,0,1,14,1,0,1,16,0,0,134,6,0,0,24,55,6,0,15,14,16,0,0,11,6,0,0,7,11,0,41,16,7,24,42,16,16,24,0,8,16,0,32,9,8,46,120,9,4,0,0,2,11,0,137,13,0,0,139,2,0,0,134,10,0,0,236,29,6,0,0,11,10,0,0,2,11,0,137,13,0,0,139,2,0,0,140,1,18,0,0,0,0,0,1,13,0,0,136,15,0,0,0,14,15,0,136,15,0,0,25,15,15,16,137,15,0,0,130,15,0,0,136,16,0,0,49,15,15,16,72,36,6,0,135,15,0,0,0,1,0,0,0,2,1,0,32,5,2,0,121,5,4,0,1,4,0,0,137,14,0,0,139,4,0,0,1,15,164,26,1,16,4,0,1,17,0,0,134,6,0,0,24,55,6,0,15,16,17,0,1,17,101,43,5,7,6,17,1,17,25,54,3,8,7,17,1,16,164,26,1,15,4,0,134,17,0,0,116,78,6,0,16,8,15,0,42,17,8,16,0,9,17,0,2,17,0,0,255,255,0,0,19,17,9,17,0,10,17,0,135,11,10,0,10,0,0,0,0,12,1,0,8,17,11,12,38,17,17,255,0,3,17,0,0,4,3,0,137,14,0,0,139,4,0,0,140,3,20,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,16,37,6,0,135,17,0,0,0,4,0,0,0,7,1,0,0,8,2,0,0,9,4,0,0,10,7,0,134,11,0,0,124,108,5,0,9,10,0,0,32,12,11,255,121,12,6,0,1,3,255,255,0,6,3,0,137,16,0,0,139,6,0,0,119,0,17,0,2,17,0,0,68,162,0,0,1,18,4,0,1,19,0,0,134,13,0,0,24,55,6,0,17,18,19,0,0,14,8,0,1,19,255,255,134,5,0,0,48,60,5,0,13,14,19,0,0,3,5,0,0,6,3,0,137,16,0,0,139,6,0,0,1,19,0,0,139,19,0,0,140,2,21,0,0,0,0,0,1,17,0,0,136,19,0,0,0,18,19,0,136,19,0,0,25,19,19,16,137,19,0,0,130,19,0,0,136,20,0,0,49,19,19,20,200,37,6,0,135,19,0,0,0,2,0,0,0,3,1,0,0,8,2,0,25,9,8,14,0,10,3,0,25,11,10,28,25,12,11,8,1,19,4,0,1,20,0,0,134,13,0,0,24,55,6,0,12,19,20,0,28,20,13,2,38,20,20,255,0,14,20,0,4,15,9,14,0,16,15,0,1,20,1,0,1,19,20,0,134,4,0,0,212,44,6,0,20,19,0,0,0,5,16,0,17,6,5,4,38,19,6,1,0,7,19,0,137,18,0,0,139,7,0,0,140,1,15,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,25,1,0,76,1,12,4,0,1,13,0,0,134,2,0,0,24,55,6,0,1,12,13,0,1,13,255,255,15,3,13,2,121,3,26,0,134,4,0,0,152,111,6,0,0,0,0,0,32,9,4,0,1,12,0,0,1,14,0,0,134,13,0,0,144,29,5,0,0,12,14,0,1,13,4,0,1,14,0,0,134,5,0,0,24,55,6,0,0,13,14,0,38,14,5,223,0,6,14,0,1,13,4,0,134,14,0,0,116,78,6,0,0,6,13,0,120,9,21,0,134,14,0,0,128,111,6,0,0,0,0,0,119,0,17,0,1,13,0,0,1,12,0,0,134,14,0,0,144,29,5,0,0,13,12,0,1,14,4,0,1,12,0,0,134,7,0,0,24,55,6,0,0,14,12,0,38,12,7,223,0,8,12,0,1,14,4,0,134,12,0,0,116,78,6,0,0,8,14,0,139,0,0,0,140,1,17,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,76,39,6,0,135,14,0,0,0,2,0,0,0,3,2,0,34,4,3,1,0,5,2,0,1,14,255,0,15,6,14,5,20,14,4,6,0,11,14,0,121,11,6,0,1,1,255,255,0,10,1,0,137,13,0,0,139,10,0,0,119,0,18,0,0,7,2,0,2,14,0,0,60,162,0,0,1,15,4,0,1,16,0,0,134,8,0,0,24,55,6,0,14,15,16,0,25,9,8,68,1,15,4,0,134,16,0,0,116,78,6,0,9,7,15,0,1,1,0,0,0,10,1,0,137,13,0,0,139,10,0,0,1,16,0,0,139,16,0,0,140,3,20,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,4,40,6,0,135,17,0,0,0,4,0,0,0,7,1,0,0,8,2,0,0,9,4,0,0,10,7,0,134,11,0,0,124,108,5,0,9,10,0,0,32,12,11,255,121,12,6,0,1,3,255,255,0,6,3,0,137,16,0,0,139,6,0,0,119,0,16,0,2,17,0,0,68,162,0,0,1,18,4,0,1,19,0,0,134,13,0,0,24,55,6,0,17,18,19,0,0,14,8,0,134,5,0,0,64,245,1,0,13,14,0,0,0,3,5,0,0,6,3,0,137,16,0,0,139,6,0,0,1,19,0,0,139,19,0,0,140,2,19,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,184,40,6,0,135,17,0,0,0,2,0,0,0,3,1,0,0,7,2,0,25,8,7,4,1,17,4,0,1,18,0,0,134,9,0,0,24,55,6,0,8,17,18,0,0,10,2,0,1,18,4,0,1,17,0,0,134,11,0,0,24,55,6,0,10,18,17,0,0,12,3,0,25,13,12,4,1,17,4,0,1,18,0,0,134,14,0,0,24,55,6,0,13,17,18,0,0,4,3,0,1,18,4,0,1,17,0,0,134,5,0,0,24,55,6,0,4,18,17,0,134,6,0,0,4,25,6,0,9,11,14,5,137,16,0,0,139,6,0,0,140,1,16,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,112,41,6,0,135,14,0,0,0,1,0,0,0,2,1,0,1,14,4,0,1,15,0,0,134,3,0,0,24,55,6,0,2,14,15,0,1,15,0,0,14,4,3,15,120,4,2,0,119,0,24,0,0,5,1,0,1,15,4,0,1,14,0,0,134,6,0,0,24,55,6,0,5,15,14,0,0,11,6,0,0,7,11,0,1,14,4,0,1,15,0,0,134,8,0,0,24,55,6,0,7,14,15,0,0,9,1,0,1,14,4,0,134,15,0,0,116,78,6,0,9,8,14,0,0,10,11,0,134,15,0,0,100,97,6,0,10,0,0,0,119,0,224,255,137,13,0,0,139,0,0,0,140,1,17,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,52,42,6,0,135,14,0,0,0,1,0,0,0,2,1,0,25,4,2,40,42,14,4,0,1,15,1,0,1,16,0,0,134,5,0,0,24,55,6,0,14,15,16,0,41,16,5,24,42,16,16,24,33,6,16,0,121,6,5,0,0,7,1,0,134,16,0,0,124,212,4,0,7,0,0,0,0,8,1,0,25,9,8,41,42,16,9,0,1,15,1,0,1,14,0,0,134,10,0,0,24,55,6,0,16,15,14,0,41,14,10,24,42,14,14,24,33,11,14,0,120,11,3,0,137,13,0,0,139,0,0,0,0,3,1,0,134,14,0,0,20,57,6,0,3,0,0,0,137,13,0,0,139,0,0,0,140,3,20,0,0,0,0,0,1,16,0,0,136,18,0,0,0,17,18,0,136,18,0,0,1,19,32,2,3,18,18,19,137,18,0,0,130,18,0,0,136,19,0,0,49,18,18,19,0,43,6,0,135,18,0,0,25,15,17,16,0,3,0,0,0,4,1,0,0,6,2,0,0,7,4,0,0,8,6,0,134,9,0,0,76,103,6,0,15,7,8,0,0,14,9,0,0,10,3,0,134,11,0,0,144,86,6,0,10,15,0,0,32,12,11,255,0,13,14,0,1,18,255,255,125,5,12,18,13,0,0,0,137,17,0,0,139,5,0,0,140,3,19,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,136,43,6,0,135,17,0,0,0,3,0,0,0,4,1,0,0,7,2,0,0,8,4,0,0,9,3,0,41,17,9,16,42,17,17,16,0,10,17,0,2,17,0,0,30,199,0,0,41,18,10,2,3,11,17,18,1,17,2,0,134,18,0,0,116,78,6,0,11,8,17,0,0,12,7,0,0,13,3,0,41,18,13,16,42,18,18,16,0,14,18,0,2,18,0,0,30,199,0,0,41,17,14,2,3,5,18,17,25,6,5,2,1,18,2,0,134,17,0,0,116,78,6,0,6,12,18,0,137,16,0,0,139,0,0,0,140,0,15,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,60,44,6,0,135,12,0,0,0,9,11,0,1,12,232,106,1,13,2,0,1,14,0,0,134,1,0,0,24,55,6,0,12,13,14,0,41,14,1,16,42,14,14,16,0,2,14,0,38,14,2,8,0,3,14,0,33,4,3,0,38,14,4,1,0,5,14,0,1,14,255,0,19,14,5,14,0,6,14,0,41,14,6,24,42,14,14,24,33,7,14,0,121,7,11,0,2,13,0,0,5,206,0,0,134,14,0,0,144,18,6,0,13,9,0,0,1,0,1,0,0,8,0,0,137,11,0,0,139,8,0,0,119,0,5,0,1,0,0,0,0,8,0,0,137,11,0,0,139,8,0,0,1,14,0,0,139,14,0,0,140,2,18,0,0,0,0,0,1,14,0,0,136,16,0,0,0,15,16,0,136,16,0,0,25,16,16,16,137,16,0,0,130,16,0,0,136,17,0,0,49,16,16,17,8,45,6,0,135,16,0,0,0,2,0,0,0,3,1,0,1,13,0,0,0,5,2,0,26,6,5,1,0,2,6,0,33,7,5,0,120,7,2,0,119,0,10,0,0,8,3,0,134,9,0,0,20,36,6,0,8,0,0,0,25,10,9,1,0,11,13,0,3,12,11,10,0,13,12,0,119,0,242,255,0,4,13,0,137,15,0,0,139,4,0,0,140,2,16,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,16,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,144,45,6,0,135,13,0,0,0,2,0,0,0,3,1,0,0,4,2,0,0,5,3,0,2,14,0,0,183,6,1,0,134,13,0,0,76,103,6,0,14,4,5,0,2,13,0,0,183,6,1,0,135,6,22,0,13,0,0,0,1,13,124,117,1,14,4,0,1,15,0,0,134,7,0,0,24,55,6,0,13,14,15,0,3,8,6,7,1,15,71,0,18,9,15,8,121,9,3,0,134,15,0,0,120,187,4,0,2,14,0,0,183,10,1,0,2,13,0,0,183,6,1,0,135,15,23,0,14,13,0,0,2,15,0,0,183,10,1,0,135,10,22,0,15,0,0,0,1,13,124,117,1,14,4,0,134,15,0,0,116,78,6,0,13,10,14,0,137,12,0,0,139,0,0,0,140,2,17,0,0,0,0,0,1,13,0,0,136,15,0,0,0,14,15,0,136,15,0,0,25,15,15,16,137,15,0,0,130,15,0,0,136,16,0,0,49,15,15,16,108,46,6,0,135,15,0,0,0,2,0,0,0,3,1,0,0,4,2,0,134,5,0,0,4,238,5,0,4,0,0,0,0,12,5,0,1,15,0,0,13,6,5,15,121,6,3,0,137,14,0,0,139,0,0,0,0,7,3,0,0,8,12,0,25,9,8,12,1,15,4,0,1,16,0,0,134,10,0,0,24,55,6,0,9,15,16,0,3,11,10,7,1,15,4,0,134,16,0,0,116,78,6,0,9,11,15,0,137,14,0,0,139,0,0,0,140,0,13,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,2,9,0,0,88,177,0,0,1,10,4,0,1,11,0,0,134,0,0,0,24,55,6,0,9,10,11,0,33,1,0,0,120,1,2,0,139,0,0,0,2,11,0,0,88,177,0,0,1,10,4,0,1,9,0,0,134,2,0,0,24,55,6,0,11,10,9,0,1,9,200,0,13,3,2,9,2,9,0,0,176,164,0,0,1,10,4,0,1,11,0,0,134,4,0,0,24,55,6,0,9,10,11,0,121,3,4,0,135,11,57,0,4,0,0,0,119,0,12,0,2,11,0,0,88,177,0,0,1,10,4,0,1,9,0,0,134,5,0,0,24,55,6,0,11,10,9,0,2,10,0,0,92,177,0,0,135,9,58,0,4,5,10,0,135,6,56,0,2,10,0,0,168,164,0,0,1,11,4,0,134,9,0,0,116,78,6,0,10,6,11,0,2,11,0,0,88,177,0,0,1,10,0,0,1,12,4,0,134,9,0,0,116,78,6,0,11,10,12,0,139,0,0,0,140,1,13,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,0,48,6,0,135,10,0,0,25,7,9,8,0,6,9,0,0,1,0,0,2,10,0,0,5,209,0,0,42,10,10,0,1,11,1,0,1,12,0,0,134,2,0,0,24,55,6,0,10,11,12,0,41,12,2,24,42,12,12,24,33,3,12,0,120,3,6,0,2,11,0,0,86,27,1,0,134,12,0,0,112,85,6,0,11,6,0,0,0,4,1,0,1,12,1,0,134,5,0,0,208,181,1,0,4,12,0,0,1,11,4,0,134,12,0,0,116,78,6,0,7,5,11,0,2,11,0,0,91,27,1,0,134,12,0,0,144,18,6,0,11,7,0,0,137,9,0,0,139,0,0,0,140,0,17,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,16,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,196,48,6,0,135,13,0,0,2,10,0,0,8,209,0,0,0,0,10,0,42,13,0,0,1,14,1,0,1,15,0,0,134,1,0,0,24,55,6,0,13,14,15,0,41,15,1,24,42,15,15,24,33,2,15,0,0,3,10,0,120,2,2,0,119,0,4,0,25,4,3,1,0,10,4,0,119,0,241,255,42,14,3,0,1,13,1,0,1,16,1,0,134,15,0,0,116,78,6,0,14,13,16,0,0,5,10,0,0,6,5,0,2,15,0,0,8,209,0,0,4,7,6,15,25,8,7,97,1,15,255,0,19,15,8,15,0,9,15,0,137,12,0,0,139,9,0,0,140,3,18,0,0,0,0,0,1,14,0,0,136,16,0,0,0,15,16,0,25,3,0,16,1,16,4,0,1,17,0,0,134,4,0,0,24,55,6,0,3,16,17,0,25,5,0,20,1,17,4,0,1,16,0,0,134,6,0,0,24,55,6,0,5,17,16,0,0,7,4,0,0,8,6,0,4,9,7,8,16,10,2,9,125,13,10,2,9,0,0,0,135,16,26,0,6,1,13,0,1,16,4,0,1,17,0,0,134,11,0,0,24,55,6,0,5,16,17,0,3,12,11,13,1,16,4,0,134,17,0,0,116,78,6,0,5,12,16,0,139,2,0,0,140,2,20,0,0,0,0,0,1,15,0,0,136,17,0,0,0,16,17,0,136,17,0,0,25,17,17,16,137,17,0,0,130,17,0,0,136,18,0,0,49,17,17,18,20,50,6,0,135,17,0,0,0,2,0,0,0,3,1,0,1,17,232,106,1,18,2,0,1,19,0,0,134,7,0,0,24,55,6,0,17,18,19,0,41,19,7,16,42,19,19,16,0,8,19,0,1,19,0,8,19,19,8,19,0,9,19,0,33,10,9,0,38,19,10,1,0,11,19,0,1,19,255,0,19,19,11,19,0,12,19,0,1,19,255,0,19,19,12,19,0,13,19,0,33,14,13,0,0,4,2,0,0,5,3,0,125,6,14,4,5,0,0,0,137,16,0,0,139,6,0,0,140,4,14,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,25,4,0,75,42,11,4,0,1,12,255,255,1,13,1,0,134,10,0,0,116,78,6,0,11,12,13,0,1,10,1,0,1,11,2,0,138,2,10,11,212,50,6,0,240,50,6,0,119,0,15,0,42,12,4,0,1,13,10,0,1,11,1,0,134,10,0,0,116,78,6,0,12,13,11,0,119,0,8,0,25,5,0,48,1,13,0,0,1,12,4,0,134,10,0,0,116,78,6,0,5,13,12,0,119,0,1,0,1,10,4,0,1,11,0,0,134,6,0,0,24,55,6,0,0,10,11,0,39,11,6,64,0,7,11,0,1,10,4,0,134,11,0,0,116,78,6,0,0,7,10,0,1,11,0,0,139,11,0,0,140,1,12,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,116,51,6,0,135,9,0,0,0,2,0,0,0,3,2,0,42,9,3,0,1,10,1,0,1,11,0,0,134,4,0,0,24,55,6,0,9,10,11,0,41,11,4,24,42,11,11,24,0,5,11,0,1,11,65,0,1,10,53,0,138,5,11,10,140,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,144,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,148,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,152,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,156,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,160,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,172,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,176,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,180,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,128,52,6,0,184,52,6,0,2,1,0,0,166,51,1,0,119,0,13,0,119,0,5,0,119,0,4,0,119,0,3,0,119,0,2,0,119,0,1,0,2,1,0,0,169,17,1,0,119,0,5,0,119,0,253,255,119,0,252,255,119,0,251,255,119,0,250,255,0,6,1,0,137,8,0,0,139,6,0,0,140,4,11,0,0,0,0,0,0,4,0,0,0,5,2,0,134,6,0,0,168,71,6,0,4,5,0,0,128,9,0,0,0,7,9,0,5,8,1,5,5,9,3,4,3,9,9,8,3,9,9,7,38,10,7,0,20,9,9,10,129,9,0,0,38,9,6,255,39,9,9,0,139,9,0,0,140,2,16,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,72,53,6,0,135,14,0,0,0,3,0,0,0,4,1,0,0,5,3,0,1,14,0,0,14,6,5,14,121,6,14,0,0,7,4,0,2,14,0,0,0,0,255,255,19,14,7,14,0,8,14,0,0,9,3,0,25,10,9,28,1,15,4,0,134,14,0,0,116,78,6,0,10,8,15,0,1,2,0,0,119,0,2,0,1,2,255,255,0,11,2,0,137,13,0,0,139,11,0,0,140,2,10,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,216,53,6,0,135,8,0,0,0,4,7,0,1,9,4,0,134,8,0,0,116,78,6,0,4,0,9,0,25,5,4,4,1,9,4,0,134,8,0,0,116,78,6,0,5,1,9,0,1,8,15,0,135,2,59,0,8,4,0,0,134,3,0,0,40,91,6,0,2,0,0,0,137,7,0,0,139,3,0,0,140,2,10,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,84,54,6,0,135,8,0,0,0,4,7,0,1,9,4,0,134,8,0,0,116,78,6,0,4,0,9,0,25,5,4,4,1,9,4,0,134,8,0,0,116,78,6,0,5,1,9,0,1,8,196,0,135,2,60,0,8,4,0,0,134,3,0,0,40,91,6,0,2,0,0,0,137,7,0,0,139,3,0,0,140,2,10,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,208,54,6,0,135,8,0,0,0,4,7,0,1,9,4,0,134,8,0,0,116,78,6,0,4,0,9,0,25,5,4,4,1,9,4,0,134,8,0,0,116,78,6,0,5,1,9,0,1,8,195,0,135,2,61,0,8,4,0,0,134,3,0,0,40,91,6,0,2,0,0,0,137,7,0,0,139,3,0,0,140,3,5,0,0,0,0,0,36,3,0,0,121,3,2,0,135,3,62,0,130,3,2,0,3,4,0,1,47,3,3,4,64,55,6,0,135,3,62,0,32,3,1,4,121,3,7,0,38,3,0,3,121,3,2,0,135,3,63,0,82,3,0,0,139,3,0,0,119,0,9,0,32,3,1,1,121,3,7,0,121,2,4,0,79,3,0,0,139,3,0,0,119,0,3,0,78,3,0,0,139,3,0,0,38,3,0,1,121,3,2,0,135,3,63,0,121,2,3,0,81,3,0,0,139,3,0,0,80,3,0,0,139,3,0,0,140,0,11,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,212,55,6,0,135,8,0,0,0,5,7,0,1,8,232,106,1,9,2,0,1,10,0,0,134,0,0,0,24,55,6,0,8,9,10,0,41,10,0,16,42,10,10,16,0,1,10,0,1,10,255,253,19,10,1,10,0,2,10,0,2,10,0,0,255,255,0,0,19,10,2,10,0,3,10,0,1,9,232,106,1,8,2,0,134,10,0,0,116,78,6,0,9,3,8,0,2,10,0,0,227,206,0,0,2,8,0,0,234,206,0,0,134,4,0,0,224,49,6,0,10,8,0,0,1,10,4,0,134,8,0,0,116,78,6,0,5,4,10,0,2,10,0,0,243,206,0,0,134,8,0,0,144,18,6,0,10,5,0,0,137,7,0,0,139,0,0,0,140,0,14,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,168,56,6,0,135,12,0,0,1,12,9,0,134,0,0,0,20,36,6,0,12,0,0,0,0,9,0,0,0,1,9,0,1,12,36,107,1,13,132,0,5,13,1,13,3,2,12,13,25,3,2,28,1,13,2,0,1,12,0,0,134,4,0,0,24,55,6,0,3,13,12,0,41,12,4,16,42,12,12,16,0,5,12,0,38,12,5,2,0,6,12,0,33,7,6,0,120,7,234,255,119,0,1,0,0,8,9,0,137,11,0,0,139,8,0,0,140,1,14,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,72,57,6,0,135,12,0,0,0,1,0,0,0,2,1,0,0,9,2,0,0,3,9,0,1,12,0,0,14,4,3,12,120,4,2,0,119,0,14,0,0,5,9,0,134,12,0,0,164,179,5,0,5,0,0,0,0,6,9,0,25,7,6,76,1,12,4,0,1,13,0,0,134,8,0,0,24,55,6,0,7,12,13,0,0,9,8,0,119,0,239,255,137,11,0,0,139,0,0,0,140,3,15,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,32,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,216,57,6,0,135,13,0,0,25,9,12,8,0,3,0,0,0,4,1,0,1,14,4,0,134,13,0,0,116,78,6,0,9,2,14,0,0,5,3,0,0,6,4,0,134,7,0,0,200,42,6,0,5,6,9,0,0,10,7,0,0,8,10,0,137,12,0,0,139,8,0,0,140,1,11,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,76,58,6,0,135,7,0,0,0,4,6,0,0,1,0,0,2,8,0,0,2,209,0,0,42,8,8,0,1,9,0,0,1,10,1,0,134,7,0,0,116,78,6,0,8,9,10,0,1,10,244,2,1,9,0,0,1,8,4,0,134,7,0,0,116,78,6,0,10,9,8,0,0,2,1,0,134,3,0,0,160,236,5,0,2,0,0,0,1,8,4,0,134,7,0,0,116,78,6,0,4,3,8,0,2,8,0,0,248,204,0,0,134,7,0,0,144,18,6,0,8,4,0,0,2,8,0,0,2,209,0,0,42,8,8,0,1,9,1,0,1,10,1,0,134,7,0,0,116,78,6,0,8,9,10,0,137,6,0,0,139,0,0,0,140,1,14,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,28,59,6,0,135,12,0,0,0,2,0,0,0,3,2,0,1,12,32,0,1,13,93,0,138,3,12,13,208,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,216,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,164,60,6,0,220,60,6,0,0,4,2,0,134,5,0,0,196,103,6,0,4,0,0,0,33,6,5,0,40,12,6,1,0,7,12,0,38,12,7,1,0,8,12,0,0,1,8,0,119,0,5,0,1,1,0,0,119,0,3,0,119,0,254,255,119,0,253,255,0,9,1,0,137,11,0,0,139,9,0,0,140,1,13,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,136,11,0,0,25,11,11,16,137,11,0,0,130,11,0,0,136,12,0,0,49,11,11,12,32,61,6,0,135,11,0,0,0,1,0,0,0,2,1,0,0,8,2,0,0,3,8,0,1,11,0,0,14,4,3,11,120,4,2,0,119,0,13,0,0,5,8,0,134,11,0,0,136,252,5,0,5,0,0,0,0,6,8,0,1,11,4,0,1,12,0,0,134,7,0,0,24,55,6,0,6,11,12,0,0,8,7,0,119,0,240,255,137,10,0,0,139,0,0,0,140,2,14,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,136,11,0,0,25,11,11,32,137,11,0,0,130,11,0,0,136,12,0,0,49,11,11,12,172,61,6,0,135,11,0,0,25,7,10,8,0,2,0,0,1,12,4,0,134,11,0,0,116,78,6,0,7,1,12,0,2,11,0,0,68,162,0,0,1,12,4,0,1,13,0,0,134,3,0,0,24,55,6,0,11,12,13,0,0,4,2,0,134,5,0,0,200,42,6,0,3,4,7,0,0,8,5,0,0,6,8,0,137,10,0,0,139,6,0,0,140,2,16,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,16,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,52,62,6,0,135,13,0,0,0,3,0,0,0,4,1,0,0,5,3,0,1,13,0,0,14,6,5,13,121,6,11,0,0,7,4,0,0,8,3,0,25,9,8,36,42,14,9,0,1,15,1,0,134,13,0,0,116,78,6,0,14,7,15,0,1,2,0,0,119,0,2,0,1,2,255,255,0,10,2,0,137,12,0,0,139,10,0,0,140,2,16,0,0,0,0,0,1,11,0,0,136,13,0,0,0,12,13,0,136,13,0,0,25,13,13,16,137,13,0,0,130,13,0,0,136,14,0,0,49,13,13,14,184,62,6,0,135,13,0,0,0,3,0,0,0,4,1,0,0,5,3,0,1,13,0,0,14,6,5,13,121,6,11,0,0,7,4,0,0,8,3,0,25,9,8,42,42,14,9,0,1,15,1,0,134,13,0,0,116,78,6,0,14,7,15,0,1,2,0,0,119,0,2,0,1,2,255,255,0,10,2,0,137,12,0,0,139,10,0,0,140,0,13,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,60,63,6,0,135,10,0,0,1,10,116,3,1,11,4,0,1,12,0,0,134,0,0,0,24,55,6,0,10,11,12,0,0,7,0,0,0,1,7,0,1,12,0,0,14,2,1,12,120,2,2,0,119,0,14,0,0,3,7,0,25,4,3,8,134,12,0,0,36,182,5,0,4,0,0,0,0,5,7,0,1,12,4,0,1,11,0,0,134,6,0,0,24,55,6,0,5,12,11,0,0,7,6,0,119,0,239,255,137,9,0,0,139,0,0,0,140,3,16,0,0,0,0,0,1,12,0,0,136,14,0,0,0,13,14,0,136,14,0,0,25,14,14,16,137,14,0,0,130,14,0,0,136,15,0,0,49,14,14,15,220,63,6,0,135,14,0,0,0,3,0,0,0,4,1,0,0,5,2,0,0,6,3,0,0,7,4,0,0,8,5,0,134,9,0,0,24,223,1,0,6,7,8,0], eb + 399360);
  HEAPU8.set([1,14,0,0,14,10,9,14,1,14,0,0,1,15,255,255,125,11,10,14,15,0,0,0,137,13,0,0,139,11,0,0,140,1,13,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,136,11,0,0,25,11,11,16,137,11,0,0,130,11,0,0,136,12,0,0,49,11,11,12,84,64,6,0,135,11,0,0,0,1,0,0,1,8,0,0,0,2,1,0,1,11,0,0,14,3,2,11,0,4,8,0,120,3,2,0,119,0,11,0,25,5,4,1,0,8,5,0,0,6,1,0,1,11,4,0,1,12,0,0,134,7,0,0,24,55,6,0,6,11,12,0,0,1,7,0,119,0,241,255,137,10,0,0,139,4,0,0,140,1,16,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,216,64,6,0,135,12,0,0,0,2,0,0,0,3,2,0,1,12,0,0,14,4,3,12,121,4,15,0,0,5,2,0,25,6,5,36,42,13,6,0,1,14,1,0,1,15,1,0,134,12,0,0,116,78,6,0,13,14,15,0,0,7,2,0,134,8,0,0,56,73,6,0,7,0,0,0,0,1,8,0,119,0,2,0,1,1,255,255,0,9,1,0,137,11,0,0,139,9,0,0,140,0,13,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,1,9,140,2,1,10,4,0,1,11,0,0,134,0,0,0,24,55,6,0,9,10,11,0,25,1,0,1,1,10,140,2,1,9,4,0,134,11,0,0,116,78,6,0,10,1,9,0,1,11,4,0,17,2,11,1,120,2,2,0,139,0,0,0,1,11,1,0,1,9,6,0,134,3,0,0,212,44,6,0,11,9,0,0,32,4,3,4,121,4,20,0,134,9,0,0,120,91,5,0,1,11,19,0,134,9,0,0,56,74,6,0,11,0,0,0,1,9,70,0,134,5,0,0,148,77,6,0,9,0,0,0,1,9,1,0,134,6,0,0,148,77,6,0,9,0,0,0,1,11,20,0,1,10,0,0,134,9,0,0,172,13,6,0,11,10,5,6,1,10,140,2,1,11,0,0,1,12,4,0,134,9,0,0,116,78,6,0,10,11,12,0,139,0,0,0,140,0,13,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,64,66,6,0,135,10,0,0,1,10,200,2,1,11,4,0,1,12,0,0,134,0,0,0,24,55,6,0,10,11,12,0,1,12,26,0,17,1,12,0,121,1,7,0,1,12,10,0,134,2,0,0,20,36,6,0,12,0,0,0,0,7,2,0,119,0,6,0,1,12,9,0,134,3,0,0,20,36,6,0,12,0,0,0,0,7,3,0,0,4,7,0,2,12,0,0,8,18,1,0,3,5,12,4,42,12,5,0,1,11,1,0,1,10,0,0,134,6,0,0,24,55,6,0,12,11,10,0,137,9,0,0,139,6,0,0,140,3,15,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,244,66,6,0,135,12,0,0,0,3,0,0,0,4,1,0,0,5,2,0,0,6,3,0,2,13,0,0,56,161,0,0,1,14,4,0,134,12,0,0,116,78,6,0,13,6,14,0,0,7,4,0,2,14,0,0,52,161,0,0,1,13,4,0,134,12,0,0,116,78,6,0,14,7,13,0,0,8,5,0,2,12,0,0,52,161,0,0,1,13,1,0,134,9,0,0,112,0,3,0,12,8,13,0,137,11,0,0,139,9,0,0,140,1,12,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,144,67,6,0,135,10,0,0,0,1,0,0,0,2,1,0,1,10,0,0,14,3,2,10,120,3,3,0,137,9,0,0,139,0,0,0,0,4,1,0,25,5,4,68,1,10,4,0,1,11,0,0,134,6,0,0,24,55,6,0,5,10,11,0,38,11,6,254,0,7,11,0,1,10,4,0,134,11,0,0,116,78,6,0,5,7,10,0,137,9,0,0,139,0,0,0,140,0,14,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,2,11,0,0,60,162,0,0,1,12,4,0,1,13,0,0,134,0,0,0,24,55,6,0,11,12,13,0,1,13,0,0,14,1,0,13,120,1,6,0,1,8,0,0,1,13,255,0,19,13,8,13,0,7,13,0,139,7,0,0,2,13,0,0,60,162,0,0,1,12,4,0,1,11,0,0,134,2,0,0,24,55,6,0,13,12,11,0,42,11,2,0,1,12,1,0,1,13,0,0,134,3,0,0,24,55,6,0,11,12,13,0,41,13,3,24,42,13,13,24,33,4,13,0,40,13,4,1,0,5,13,0,38,13,5,1,0,6,13,0,0,8,6,0,1,13,255,0,19,13,8,13,0,7,13,0,139,7,0,0,140,1,10,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,208,68,6,0,135,8,0,0,0,5,7,0,25,1,0,60,1,8,4,0,1,9,0,0,134,2,0,0,24,55,6,0,1,8,9,0,1,8,4,0,134,9,0,0,116,78,6,0,5,2,8,0,1,9,6,0,135,3,54,0,9,5,0,0,134,4,0,0,40,91,6,0,3,0,0,0,137,7,0,0,139,4,0,0,140,0,11,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,80,69,6,0,135,8,0,0,0,5,7,0,1,8,232,106,1,9,2,0,1,10,0,0,134,0,0,0,24,55,6,0,8,9,10,0,41,10,0,16,42,10,10,16,0,1,10,0,38,10,1,247,0,2,10,0,2,10,0,0,255,255,0,0,19,10,2,10,0,3,10,0,1,9,232,106,1,8,2,0,134,10,0,0,116,78,6,0,9,3,8,0,2,10,0,0,179,208,0,0,2,8,0,0,210,208,0,0,134,4,0,0,224,49,6,0,10,8,0,0,134,8,0,0,144,18,6,0,4,5,0,0,137,7,0,0,139,0,0,0,140,1,12,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,8,70,6,0,135,9,0,0,0,1,0,0,1,9,120,3,1,10,4,0,1,11,0,0,134,2,0,0,24,55,6,0,9,10,11,0,0,3,1,0,1,11,4,0,1,10,0,0,134,4,0,0,24,55,6,0,3,11,10,0,1,10,144,2,41,11,4,2,3,5,10,11,1,11,4,0,1,10,0,0,134,6,0,0,24,55,6,0,5,11,10,0,134,10,0,0,144,86,6,0,2,6,0,0,137,8,0,0,139,0,0,0,140,1,13,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,164,70,6,0,135,10,0,0,0,1,0,0,1,10,120,3,1,11,4,0,1,12,0,0,134,2,0,0,24,55,6,0,10,11,12,0,0,3,1,0,42,12,3,0,1,11,1,0,1,10,0,0,134,4,0,0,24,55,6,0,12,11,10,0,1,10,255,0,19,10,4,10,0,5,10,0,33,6,5,0,2,10,0,0,185,21,1,0,2,11,0,0,190,21,1,0,125,7,6,10,11,0,0,0,134,11,0,0,144,86,6,0,2,7,0,0,137,9,0,0,139,0,0,0,140,0,13,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,136,11,0,0,25,11,11,16,137,11,0,0,130,11,0,0,136,12,0,0,49,11,11,12,76,71,6,0,135,11,0,0,134,1,0,0,52,57,2,0,1,11,255,0,19,11,1,11,0,2,11,0,0,8,2,0,0,3,8,0,41,11,3,24,42,11,11,24,0,4,11,0,32,5,4,3,121,5,7,0,1,12,0,0,134,11,0,0,212,36,5,0,12,0,0,0,1,0,27,0,119,0,3,0,0,6,8,0,0,0,6,0,0,7,0,0,137,10,0,0,139,7,0,0,140,2,11,0,0,0,0,0,2,9,0,0,255,255,0,0,19,9,0,9,0,2,9,0,2,9,0,0,255,255,0,0,19,9,1,9,0,3,9,0,5,4,3,2,43,9,0,16,0,5,9,0,43,9,4,16,5,10,3,5,3,6,9,10,43,10,1,16,0,7,10,0,5,8,7,2,43,10,6,16,5,9,7,5,3,10,10,9,2,9,0,0,255,255,0,0,19,9,6,9,3,9,9,8,43,9,9,16,3,10,10,9,129,10,0,0,3,10,6,8,41,10,10,16,2,9,0,0,255,255,0,0,19,9,4,9,20,10,10,9,39,10,10,0,139,10,0,0,140,2,10,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,112,72,6,0,135,8,0,0,0,5,7,0,1,9,4,0,134,8,0,0,116,78,6,0,5,1,9,0,1,8,1,84,134,3,0,0,172,111,5,0,0,8,5,0,33,4,3,0,41,8,4,31,42,8,8,31,0,2,8,0,137,7,0,0,139,2,0,0,140,0,12,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,224,72,6,0,135,9,0,0,1,6,0,0,0,0,6,0,2,9,0,0,68,177,0,0,1,10,4,0,1,11,0,0,134,1,0,0,24,55,6,0,9,10,11,0,15,2,0,1,120,2,2,0,119,0,9,0,0,3,6,0,134,11,0,0,60,51,4,0,3,0,0,0,0,4,6,0,25,5,4,1,0,6,5,0,119,0,238,255,137,8,0,0,139,0,0,0,140,1,13,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,136,11,0,0,25,11,11,16,137,11,0,0,130,11,0,0,136,12,0,0,49,11,11,12,108,73,6,0,135,11,0,0,0,2,0,0,0,3,2,0,1,11,0,0,1,12,0,0,134,4,0,0,164,140,5,0,3,11,12,0,32,5,4,255,121,5,3,0,1,1,255,255,119,0,6,0,0,6,2,0,134,7,0,0,116,236,4,0,6,0,0,0,0,1,7,0,0,8,1,0,137,10,0,0,139,8,0,0,140,1,12,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,236,73,6,0,135,9,0,0,0,1,0,0,0,2,1,0,134,3,0,0,4,238,5,0,2,0,0,0,0,6,3,0,1,9,0,0,13,4,3,9,121,4,3,0,137,8,0,0,139,0,0,0,0,5,6,0,1,10,0,0,1,11,4,0,134,9,0,0,116,78,6,0,5,10,11,0,137,8,0,0,139,0,0,0,140,1,12,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,108,74,6,0,135,9,0,0,0,1,0,0,0,2,1,0,134,3,0,0,4,238,5,0,2,0,0,0,0,6,3,0,1,9,0,0,13,4,3,9,121,4,3,0,137,8,0,0,139,0,0,0,0,5,6,0,1,10,0,0,1,11,4,0,134,9,0,0,116,78,6,0,5,10,11,0,137,8,0,0,139,0,0,0,140,1,12,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,236,74,6,0,135,10,0,0,0,1,0,0,0,2,1,0,1,10,0,0,14,3,2,10,121,3,10,0,0,4,1,0,25,5,4,12,1,10,4,0,1,11,0,0,134,6,0,0,24,55,6,0,5,10,11,0,0,7,6,0,119,0,2,0,1,7,255,255,137,9,0,0,139,7,0,0,140,1,12,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,100,75,6,0,135,10,0,0,0,1,0,0,0,2,1,0,1,10,0,0,14,3,2,10,121,3,10,0,0,4,1,0,25,5,4,8,1,10,4,0,1,11,0,0,134,6,0,0,24,55,6,0,5,10,11,0,0,7,6,0,119,0,2,0,1,7,255,255,137,9,0,0,139,7,0,0,140,1,12,0,0,0,0,0,1,8,0,0,136,10,0,0,0,9,10,0,136,10,0,0,25,10,10,16,137,10,0,0,130,10,0,0,136,11,0,0,49,10,10,11,220,75,6,0,135,10,0,0,0,1,0,0,0,2,1,0,1,10,0,0,14,3,2,10,121,3,10,0,0,4,1,0,25,5,4,4,1,10,4,0,1,11,0,0,134,6,0,0,24,55,6,0,5,10,11,0,0,7,6,0,119,0,2,0,1,7,255,255,137,9,0,0,139,7,0,0,140,0,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,84,76,6,0,135,7,0,0,0,4,6,0,1,7,232,106,1,8,2,0,1,9,0,0,134,0,0,0,24,55,6,0,7,8,9,0,41,9,0,16,42,9,9,16,0,1,9,0,38,9,1,191,0,2,9,0,2,9,0,0,255,255,0,0,19,9,2,9,0,3,9,0,1,8,232,106,1,7,2,0,134,9,0,0,116,78,6,0,8,3,7,0,2,7,0,0,76,207,0,0,134,9,0,0,144,18,6,0,7,4,0,0,137,6,0,0,139,0,0,0,140,1,6,0,0,0,0,0,130,2,3,0,1,3,255,0,19,3,0,3,3,2,2,3,1,3,1,0,1,4,0,0,134,1,0,0,24,55,6,0,2,3,4,0,34,4,1,8,121,4,2,0,139,1,0,0,130,4,3,0,42,3,0,8,1,2,255,0,19,3,3,2,3,4,4,3,1,3,1,0,1,2,0,0,134,1,0,0,24,55,6,0,4,3,2,0,34,2,1,8,121,2,3,0,25,2,1,8,139,2,0,0,130,2,3,0,42,3,0,16,1,4,255,0,19,3,3,4,3,2,2,3,1,3,1,0,1,4,0,0,134,1,0,0,24,55,6,0,2,3,4,0,34,4,1,8,121,4,3,0,25,4,1,16,139,4,0,0,130,3,3,0,43,2,0,24,3,3,3,2,1,2,1,0,1,5,0,0,134,4,0,0,24,55,6,0,3,2,5,0,25,4,4,24,139,4,0,0,140,1,14,0,0,0,0,0,1,10,0,0,136,12,0,0,0,11,12,0,136,12,0,0,25,12,12,16,137,12,0,0,130,12,0,0,136,13,0,0,49,12,12,13,200,77,6,0,135,12,0,0,0,1,0,0,0,2,1,0,0,3,1,0,28,12,3,20,38,12,12,255,0,4,12,0,4,5,2,4,0,6,1,0,28,12,6,10,38,12,12,255,0,7,12,0,134,8,0,0,20,36,6,0,7,0,0,0,3,9,5,8,137,11,0,0,139,9,0,0,140,4,10,0,0,0,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,0,4,5,0,134,6,0,0,156,101,2,0,0,1,2,3,4,0,0,0,137,5,0,0,25,7,4,4,1,8,4,0,1,9,0,0,134,6,0,0,24,55,6,0,7,8,9,0,129,6,0,0,1,9,4,0,1,8,0,0,134,6,0,0,24,55,6,0,4,9,8,0,139,6,0,0,140,3,5,0,0,0,0,0,36,3,0,0,121,3,2,0,135,3,62,0,130,3,2,0,3,4,0,2,47,3,3,4,156,78,6,0,135,3,62,0,32,3,2,4,121,3,6,0,38,3,0,3,121,3,2,0,135,3,63,0,85,0,1,0,119,0,9,0,32,3,2,1,121,3,3,0,83,0,1,0,119,0,5,0,38,3,0,1,121,3,2,0,135,3,63,0,84,0,1,0,139,0,0,0,140,1,13,0,0,0,0,0,1,9,0,0,136,11,0,0,0,10,11,0,136,11,0,0,25,11,11,16,137,11,0,0,130,11,0,0,136,12,0,0,49,11,11,12,16,79,6,0,135,11,0,0,0,2,0,0,0,3,2,0,34,4,3,0,121,4,3,0,1,1,255,255,119,0,7,0,0,5,2,0,1,11,0,0,15,6,11,5,38,11,6,1,0,7,11,0,0,1,7,0,0,8,1,0,137,10,0,0,139,8,0,0,140,1,11,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,128,79,6,0,135,9,0,0,0,1,0,0,0,2,1,0,1,9,0,0,14,3,2,9,121,3,9,0,0,4,1,0,1,9,4,0,1,10,0,0,134,5,0,0,24,55,6,0,4,9,10,0,0,6,5,0,119,0,2,0,1,6,255,255,137,8,0,0,139,6,0,0,140,2,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,244,79,6,0,135,7,0,0,0,4,6,0,1,8,4,0,134,7,0,0,116,78,6,0,4,1,8,0,2,7,0,0,60,195,0,0,1,8,4,0,1,9,0,0,134,2,0,0,24,55,6,0,7,8,9,0,134,3,0,0,24,38,4,0,2,0,4,0,137,6,0,0,139,3,0,0,140,0,11,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,108,80,6,0,135,8,0,0,1,8,1,0,1,9,80,0,134,0,0,0,120,253,5,0,8,9,0,0,0,5,0,0,0,1,5,0,1,8,0,0,1,10,4,0,134,9,0,0,116,78,6,0,1,8,10,0,0,2,5,0,25,3,2,4,1,10,0,0,1,8,4,0,134,9,0,0,116,78,6,0,3,10,8,0,0,4,5,0,137,7,0,0,139,4,0,0,140,1,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,130,6,0,0,136,7,0,0,49,6,6,7,248,80,6,0,135,6,0,0,0,3,5,0,1,7,4,0,134,6,0,0,116,78,6,0,3,0,7,0,1,6,10,0,135,1,64,0,6,3,0,0,134,2,0,0,40,91,6,0,1,0,0,0,137,5,0,0,139,2,0,0,140,0,8,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,2,5,0,0,34,217,0,0,42,5,5,0,1,6,1,0,1,7,0,0,134,0,0,0,24,55,6,0,5,6,7,0,2,6,0,0,36,217,0,0,42,6,6,0,1,5,1,0,134,7,0,0,116,78,6,0,6,0,5,0,2,7,0,0,35,217,0,0,42,7,7,0,1,5,1,0,1,6,0,0,134,1,0,0,24,55,6,0,7,5,6,0,2,5,0,0,37,217,0,0,42,5,5,0,1,7,1,0,134,6,0,0,116,78,6,0,5,1,7,0,1,6,104,3,1,7,4,0,1,5,0,0,134,2,0,0,24,55,6,0,6,7,5,0,1,7,108,3,1,6,4,0,134,5,0,0,116,78,6,0,7,2,6,0,139,0,0,0,140,1,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,28,82,6,0,135,7,0,0,0,1,0,0,2,7,0,0,76,162,0,0,1,8,4,0,1,9,0,0,134,2,0,0,24,55,6,0,7,8,9,0,26,3,2,2,0,4,1,0,1,8,0,0,134,9,0,0,220,36,6,0,3,8,4,0,134,9,0,0,224,106,6,0,134,9,0,0,196,101,6,0,1,8,0,0,134,9,0,0,20,99,6,0,8,0,0,0,137,6,0,0,139,0,0,0,140,0,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,64,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,176,82,6,0,135,7,0,0,0,4,6,0,1,8,0,0,134,7,0,0,60,72,6,0,8,4,0,0,25,0,4,17,25,1,0,10,42,7,1,0,1,8,1,0,1,9,0,0,134,2,0,0,24,55,6,0,7,8,9,0,1,9,255,0,19,9,2,9,0,3,9,0,137,6,0,0,139,3,0,0,140,3,9,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,44,83,6,0,135,7,0,0,0,4,6,0,1,8,4,0,134,7,0,0,116,78,6,0,4,2,8,0,134,3,0,0,76,103,6,0,0,1,4,0,137,6,0,0,139,3,0,0,140,3,9,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,136,83,6,0,135,7,0,0,0,4,6,0,1,8,4,0,134,7,0,0,116,78,6,0,4,2,8,0,134,3,0,0,24,38,4,0,0,1,4,0,137,6,0,0,139,3,0,0,140,3,9,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,228,83,6,0,135,7,0,0,0,4,6,0,1,8,4,0,134,7,0,0,116,78,6,0,4,2,8,0,134,3,0,0,20,22,6,0,0,1,4,0,137,6,0,0,139,3,0,0,140,2,11,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,64,84,6,0,135,9,0,0,0,2,0,0,0,3,1,0,0,4,2,0,0,5,3,0,134,6,0,0,164,53,6,0,4,5,0,0,137,8,0,0,139,6,0,0,140,1,9,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,136,5,0,0,25,5,5,16,137,5,0,0,130,5,0,0,136,6,0,0,49,5,5,6,152,84,6,0,135,5,0,0,0,1,0,0,2,6,0,0,1,209,0,0,42,6,6,0,1,7,1,0,1,8,1,0,134,5,0,0,116,78,6,0,6,7,8,0,2,8,0,0,38,217,0,0,42,8,8,0,1,7,0,0,1,6,1,0,134,5,0,0,116,78,6,0,8,7,6,0,0,2,1,0,2,6,0,0,42,233,0,0,42,6,6,0,1,7,1,0,134,5,0,0,116,78,6,0,6,2,7,0,137,4,0,0,139,0,0,0,140,0,11,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,2,8,0,0,60,194,0,0,1,9,4,0,1,10,0,0,134,1,0,0,24,55,6,0,8,9,10,0,1,10,0,0,13,2,1,10,121,2,4,0,2,0,0,0,68,195,0,0,119,0,9,0,135,3,65,0,25,4,3,60,1,10,4,0,1,9,0,0,134,5,0,0,24,55,6,0,4,10,9,0,0,0,5,0,139,0,0,0,140,2,9,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,32,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,164,85,6,0,135,7,0,0,0,4,6,0,0,2,0,0,1,8,4,0,134,7,0,0,116,78,6,0,4,1,8,0,0,3,2,0,134,7,0,0,92,45,6,0,3,4,0,0,137,6,0,0,139,0,0,0,140,1,11,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,8,86,6,0,135,9,0,0,0,1,0,0,0,2,1,0,135,3,22,0,2,0,0,0,25,4,3,1,28,9,4,2,38,9,9,255,0,5,9,0,1,9,28,0,4,6,9,5,137,8,0,0,139,6,0,0,140,3,5,0,0,0,0,0,36,3,0,0,121,3,2,0,135,3,62,0,130,3,2,0,3,4,0,2,47,3,3,4,96,86,6,0,135,3,62,0,32,3,2,8,121,3,6,0,38,3,0,7,121,3,2,0,135,3,63,0,87,0,1,0,119,0,5,0,38,3,0,3,121,3,2,0,135,3,63,0,89,0,1,0,139,0,0,0,140,2,11,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,136,9,0,0,25,9,9,16,137,9,0,0,130,9,0,0,136,10,0,0,49,9,9,10,196,86,6,0,135,9,0,0,0,2,0,0,0,3,1,0,0,4,2,0,0,5,3,0,1,9,255,255,134,6,0,0,48,60,5,0,4,5,9,0,137,8,0,0,139,6,0,0,140,1,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,32,87,6,0,135,7,0,0,0,1,0,0,2,7,0,0,68,162,0,0,1,8,4,0,1,9,0,0,134,2,0,0,24,55,6,0,7,8,9,0,0,3,1,0,1,9,255,255,134,4,0,0,48,60,5,0,2,3,9,0,137,6,0,0,139,4,0,0,140,0,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,1,7,244,106,1,8,4,0,1,9,0,0,134,0,0,0,24,55,6,0,7,8,9,0,26,1,0,1,1,9,20,3,41,8,1,2,3,2,9,8,1,8,4,0,1,9,0,0,134,3,0,0,24,55,6,0,2,8,9,0,25,4,3,1,1,8,240,106,1,7,4,0,134,9,0,0,116,78,6,0,8,4,7,0,134,9,0,0,0,55,5,0,139,0,0,0,140,0,9,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,2,6,0,0,60,162,0,0,1,7,4,0,1,8,0,0,134,0,0,0,24,55,6,0,6,7,8,0,25,1,0,6,42,8,1,0,1,7,1,0,1,6,0,0,134,2,0,0,24,55,6,0,8,7,6,0,41,6,2,24,42,6,6,24,33,3,6,0,121,3,6,0,134,6,0,0,100,119,6,0,1,6,0,0,139,6,0,0,119,0,5,0,134,6,0,0,60,83,5,0,1,6,0,0,139,6,0,0,1,6,0,0,139,6,0,0,140,2,10,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,136,8,0,0,25,8,8,16,137,8,0,0,130,8,0,0,136,9,0,0,49,8,8,9,140,88,6,0,135,8,0,0,0,2,0,0,0,3,1,0,0,4,2,0,134,5,0,0,196,80,6,0,4,0,0,0,137,7,0,0,139,5,0,0,140,1,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,224,88,6,0,135,7,0,0,0,1,0,0,2,7,0,0,68,162,0,0,1,8,4,0,1,9,0,0,134,2,0,0,24,55,6,0,7,8,9,0,0,3,1,0,134,4,0,0,64,245,1,0,2,3,0,0,137,6,0,0,139,4,0,0,140,0,10,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,2,6,0,0,60,162,0,0,1,7,4,0,1,8,0,0,134,0,0,0,24,55,6,0,6,7,8,0,25,1,0,2,42,7,1,0,1,6,0,0,1,9,1,0,134,8,0,0,116,78,6,0,7,6,9,0,2,8,0,0,60,162,0,0,1,9,4,0,1,6,0,0,134,2,0,0,24,55,6,0,8,9,6,0,25,3,2,68,1,9,0,0,1,8,4,0,134,6,0,0,116,78,6,0,3,9,8,0,1,6,0,0,139,6,0,0,140,2,12,0,0,0,0,0,1,7,0,0,136,9,0,0,0,8,9,0,134,2,0,0,156,95,4,0,0,1,0,0,42,9,2,0,1,10,1,0,1,11,0,0,134,3,0,0,24,55,6,0,9,10,11,0,1,11,255,0,19,11,1,11,0,4,11,0,41,11,3,24,42,11,11,24,41,10,4,24,42,10,10,24,13,5,11,10,1,10,0,0,125,6,5,2,10,0,0,0,139,6,0,0,140,1,9,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,130,6,0,0,136,7,0,0,49,6,6,7,60,90,6,0,135,6,0,0,0,1,0,0,1,6,120,3,1,7,4,0,1,8,0,0,134,2,0,0,24,55,6,0,6,7,8,0,0,3,1,0,134,8,0,0,144,86,6,0,2,3,0,0,137,5,0,0,139,0,0,0,140,1,9,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,136,7,0,0,25,7,7,16,137,7,0,0,130,7,0,0,136,8,0,0,49,7,7,8,164,90,6,0,135,7,0,0,0,1,0,0,0,2,1,0,33,3,2,0,121,3,5,0,0,4,1,0,134,7,0,0,84,93,6,0,4,0,0,0,137,6,0,0,1,7,0,0,139,7,0,0,140,2,4,0,0,0,0,0,36,2,0,0,121,2,2,0,135,2,62,0,130,2,2,0,3,3,0,1,47,2,2,3,248,90,6,0,135,2,62,0,32,2,1,8,121,2,6,0,38,2,0,7,121,2,2,0,135,2,63,0,86,2,0,0,139,2,0,0,38,2,0,3,121,2,2,0,135,2,63,0,88,2,0,0,139,2,0,0,140,1,9,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,1,7,0,240,16,2,7,0,121,2,11,0,1,7,0,0,4,3,7,0,134,4,0,0,4,85,6,0,1,8,4,0,134,7,0,0,116,78,6,0,4,3,8,0,1,1,255,255,119,0,2,0,0,1,0,0,139,1,0,0,140,0,10,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,2,7,0,0,60,162,0,0,1,8,4,0,1,9,0,0,134,0,0,0,24,55,6,0,7,8,9,0,25,1,0,40,1,9,4,0,1,8,0,0,134,2,0,0,24,55,6,0,1,9,8,0,33,3,2,0,1,8,1,0,1,9,0,0,125,4,3,8,9,0,0,0,135,9,48,0,4,0,0,0,1,9,0,0,139,9,0,0,140,1,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,130,6,0,0,136,7,0,0,49,6,6,7,24,92,6,0,135,6,0,0,0,1,0,0,0,2,1,0,0,3,1,0,135,6,66,0,2,3,0,0,137,5,0,0,139,0,0,0,140,1,10,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,1,8,0,0,13,1,0,8,121,1,3,0,1,5,1,0,119,0,8,0,1,8,4,0,1,9,0,0,134,2,0,0,24,55,6,0,0,8,9,0,32,3,2,0,0,5,3,0,38,9,5,1,0,4,9,0,139,4,0,0,140,0,8,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,2,5,0,0,245,208,0,0,42,5,5,0,1,6,1,0,1,7,0,0,134,0,0,0,24,55,6,0,5,6,7,0,41,7,0,24,42,7,7,24,33,1,7,0,120,1,2,0,139,0,0,0,1,7,136,26,1,6,4,0,1,5,0,0,134,2,0,0,24,55,6,0,7,6,5,0,134,5,0,0,148,94,6,0,2,0,0,0,139,0,0,0,140,1,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,130,6,0,0,136,7,0,0,49,6,6,7,40,93,6,0,135,6,0,0,0,1,0,0,0,2,1,0,25,3,2,0,0,1,3,0,2,7,0,0,131,12,1,0,134,6,0,0,232,81,6,0,7,0,0,0,137,5,0,0,139,0,0,0,140,1,7,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,136,5,0,0,25,5,5,16,137,5,0,0,130,5,0,0,136,6,0,0,49,5,5,6,136,93,6,0,135,5,0,0,0,1,0,0,134,5,0,0,216,46,6,0,0,2,1,0,135,5,67,0,2,0,0,0,137,4,0,0,139,0,0,0,140,1,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,130,6,0,0,136,7,0,0,49,6,6,7,220,93,6,0,135,6,0,0,0,1,0,0,0,2,1,0,134,3,0,0,196,80,6,0,2,0,0,0,137,5,0,0,139,3,0,0,140,0,6,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,136,4,0,0,25,4,4,16,137,4,0,0,130,4,0,0,136,5,0,0,49,4,4,5,44,94,6,0,135,4,0,0,0,1,3,0,1,4,20,0,135,0,68,0,4,1,0,0,137,3,0,0,139,0,0,0,140,1,11,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,26,1,0,1,1,2,56,0,0,3,2,0,1,9,4,0,134,8,0,0,116,78,6,0,3,1,9,0,25,4,2,4,0,5,4,0,1,9,0,0,1,10,4,0,134,8,0,0,116,78,6,0,5,9,10,0,139,0,0,0,140,1,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,130,6,0,0,136,7,0,0,49,6,6,7,200,94,6,0,135,6,0,0,0,1,0,0,0,2,1,0,25,3,2,0,0,1,3,0,137,5,0,0,1,6,0,0,139,6,0,0,140,1,7,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,136,5,0,0,25,5,5,16,137,5,0,0,130,5,0,0,136,6,0,0,49,5,5,6,24,95,6,0,135,5,0,0,0,1,0,0,0,2,1,0,0,1,2,0,137,4,0,0,2,5,0,0,166,51,1,0,139,5,0,0,140,0,7,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,1,6,1,0,134,0,0,0,148,77,6,0,6,0,0,0,134,6,0,0,152,234,5,0,0,0,0,0,1,6,1,0,134,1,0,0,148,77,6,0,6,0,0,0,134,6,0,0,24,122,5,0,1,0,0,0,1,6,2,0,134,2,0,0,148,77,6,0,6,0,0,0,134,6,0,0,152,234,5,0,2,0,0,0,1,6,2,0,134,3,0,0,148,77,6,0,6,0,0,0,134,6,0,0,24,122,5,0,3,0,0,0,139,0,0,0,140,0,9,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,2,6,0,0,60,162,0,0,1,7,4,0,1,8,0,0,134,0,0,0,24,55,6,0,6,7,8,0,25,1,0,56,1,8,4,0,1,7,0,0,134,2,0,0,24,55,6,0,1,8,7,0,134,3,0,0,96,152,2,0,2,0,0,0,139,3,0,0,140,0,8,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,2,5,0,0,245,208,0,0,42,5,5,0,1,6,1,0,1,7,0,0,134,0,0,0,24,55,6,0,5,6,7,0,41,7,0,24,42,7,7,24,33,1,7,0,120,1,2,0,139,0,0,0,134,2,0,0,124,82,6,0,134,7,0,0,148,94,6,0,2,0,0,0,139,0,0,0,140,0,8,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,5,0,0,245,208,0,0,42,5,5,0,1,6,1,0,1,7,1,0,134,4,0,0,116,78,6,0,5,6,7,0,134,0,0,0,192,117,6,0,1,7,136,26,1,6,4,0,134,4,0,0,116,78,6,0,7,0,6,0,134,1,0,0,124,82,6,0,134,4,0,0,148,94,6,0,1,0,0,0,139,0,0,0,140,2,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,136,6,0,0,25,6,6,16,137,6,0,0,130,6,0,0,136,7,0,0,49,6,6,7,16,97,6,0,135,6,0,0,0,2,0,0,0,3,1,0,137,5,0,0,1,6,0,0,139,6,0,0,140,2,8,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,1,7,0,0,13,3,0,7,121,3,3,0,1,2,0,0,119,0,6,0,1,7,0,0,134,4,0,0,192,151,4,0,0,1,7,0,0,2,4,0,139,2,0,0,140,1,7,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,136,5,0,0,25,5,5,16,137,5,0,0,130,5,0,0,136,6,0,0,49,5,5,6,152,97,6,0,135,5,0,0,0,1,0,0,0,2,1,0,135,5,6,0,2,0,0,0,137,4,0,0,139,0,0,0,140,0,8,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,2,5,0,0,200,164,0,0,1,6,4,0,1,7,0,0,134,0,0,0,24,55,6,0,5,6,7,0,2,7,0,0,216,164,0,0,1,6,4,0,1,5,0,0,134,1,0,0,24,55,6,0,7,6,5,0,6,5,0,1,38,5,5,255,0,2,5,0,139,2,0,0,140,1,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,25,1,0,68,1,6,4,0,1,7,0,0,134,2,0,0,24,55,6,0,1,6,7,0,32,3,2,0,121,3,4,0,134,7,0,0,128,111,6,0,0,0,0,0,139,0,0,0,140,1,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,25,1,0,68,1,6,4,0,1,7,0,0,134,2,0,0,24,55,6,0,1,6,7,0,32,3,2,0,121,3,4,0,134,7,0,0,128,111,6,0,0,0,0,0,139,0,0,0,140,0,8,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,2,5,0,0,196,164,0,0,1,6,4,0,1,7,0,0,134,0,0,0,24,55,6,0,5,6,7,0,2,7,0,0,212,164,0,0,1,6,4,0,1,5,0,0,134,1,0,0,24,55,6,0,7,6,5,0,6,5,0,1,38,5,5,255,0,2,5,0,139,2,0,0,140,4,8,0,0,0,0,0,4,4,0,2,4,5,1,3,4,6,1,3,16,7,0,2,4,5,6,7,129,5,0,0,139,4,0,0,140,1,7,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,136,5,0,0,25,5,5,16,137,5,0,0,130,5,0,0,136,6,0,0,49,5,5,6,72,99,6,0,135,5,0,0,0,1,0,0,134,5,0,0,132,92,6,0,0,2,1,0,135,5,7,0,2,0,0,0,139,0,0,0,140,1,9,0,0,0,0,0,1,6,0,0,136,8,0,0,0,7,8,0,32,1,0,32,26,2,0,9,35,3,2,5,20,8,1,3,0,4,8,0,38,8,4,1,0,5,8,0,139,5,0,0,140,0,5,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,3,160,15,1,4,7,0,134,2,0,0,128,3,6,0,3,4,0,0,1,4,204,16,1,3,14,0,134,2,0,0,128,3,6,0,4,3,0,0,1,3,252,18,1,4,18,0,134,2,0,0,128,3,6,0,3,4,0,0,1,4,228,17,1,3,14,0,134,2,0,0,128,3,6,0,4,3,0,0,1,3,44,21,1,4,14,0,134,2,0,0,128,3,6,0,3,4,0,0,1,4,100,20,1,3,9,0,134,2,0,0,128,3,6,0,4,3,0,0,1,3,44,16,1,4,8,0,134,2,0,0,128,3,6,0,3,4,0,0,139,0,0,0,140,0,8,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,1,5,1,0,134,4,0,0,160,100,6,0,5,0,0,0,2,4,0,0,60,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,25,1,0,4,42,5,1,0,1,4,1,0,1,7,1,0,134,6,0,0,116,78,6,0,5,4,7,0,1,6,0,0,139,6,0,0,140,1,6,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,136,4,0,0,25,4,4,16,137,4,0,0,130,4,0,0,136,5,0,0,49,4,4,5,212,100,6,0,135,4,0,0,0,1,0,0,137,3,0,0,139,0,0,0,140,1,6,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,136,4,0,0,25,4,4,16,137,4,0,0,130,4,0,0,136,5,0,0,49,4,4,5,20,101,6,0,135,4,0,0,0,1,0,0,137,3,0,0,139,0,0,0,140,0,6,0,0,0,0,0,1,1,0,0,136,3,0,0,0,2,3,0,134,3,0,0,200,115,6,0,134,3,0,0,60,100,6,0,134,3,0,0,244,103,6,0,2,3,0,0,68,162,0,0,1,4,4,0,1,5,0,0,134,0,0,0,24,55,6,0,3,4,5,0,1,4,1,0,134,5,0,0,132,62,6,0,0,4,0,0,134,5,0,0,116,96,6,0,139,0,0,0,140,1,6,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,136,4,0,0,25,4,4,16,137,4,0,0,130,4,0,0,136,5,0,0,49,4,4,5,184,101,6,0,135,4,0,0,0,1,0,0,137,3,0,0,139,0,0,0,140,0,7,0,0,0,0,0,1,1,0,0,136,3,0,0,0,2,3,0,134,3,0,0,192,110,6,0,134,3,0,0,92,118,6,0,2,3,0,0,60,162,0,0,1,4,4,0,1,5,0,0,134,0,0,0,24,55,6,0,3,4,5,0,42,4,0,0,1,3,0,0,1,6,1,0,134,5,0,0,116,78,6,0,4,3,6,0,1,5,0,0,139,5,0,0,140,1,8,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,134,2,0,0,12,106,6,0,0,0,0,0,32,3,2,0,38,7,0,95,0,4,7,0,125,1,3,0,4,0,0,0,139,1,0,0,140,1,8,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,134,2,0,0,188,105,6,0,0,0,0,0,32,3,2,0,39,7,0,32,0,4,7,0,125,1,3,0,4,0,0,0,139,1,0,0,140,0,6,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,134,2,0,0,224,104,6,0,2,3,0,0,36,169,0,0,1,4,1,0,1,5,4,0,134,2,0,0,116,78,6,0,3,4,5,0,2,5,0,0,40,169,0,0,1,4,0,0,1,3,4,0,134,2,0,0,116,78,6,0,5,4,3,0,2,3,0,0,32,165,0,0,1,4,0,0,1,5,4,0,134,2,0,0,116,78,6,0,3,4,5,0,1,2,0,0,139,2,0,0,140,2,8,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,1,6,0,0,14,2,1,6,1,6,0,0,1,7,2,0,125,3,2,6,7,0,0,0,1,6,0,4,134,7,0,0,140,50,6,0,0,1,3,6,139,0,0,0,140,3,7,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,2,6,0,0,255,255,255,127,134,3,0,0,252,245,4,0,0,6,1,2,139,3,0,0,140,0,8,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,1,5,32,0,134,0,0,0,20,36,6,0,5,0,0,0,2,5,0,0,150,41,1,0,3,1,5,0,42,5,1,0,1,6,1,0,1,7,0,0,134,2,0,0,24,55,6,0,5,6,7,0,139,2,0,0,140,1,8,0,0,0,0,0,1,5,0,0,136,7,0,0,0,6,7,0,39,7,0,32,0,1,7,0,26,2,1,97,35,3,2,26,38,7,3,1,0,4,7,0,139,4,0,0,140,0,8,0,0,0,0,0,1,2,0,0], eb + 409600);
  HEAPU8.set([136,4,0,0,0,3,4,0,2,4,0,0,60,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,25,1,0,3,42,5,1,0,1,4,0,0,1,7,1,0,134,6,0,0,116,78,6,0,5,4,7,0,1,6,0,0,139,6,0,0,140,0,8,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,4,0,0,60,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,25,1,0,2,42,5,1,0,1,4,1,0,1,7,1,0,134,6,0,0,116,78,6,0,5,4,7,0,1,6,0,0,139,6,0,0,140,4,6,0,0,0,0,0,1,5,0,0,134,4,0,0,156,101,2,0,0,1,2,3,5,0,0,0,139,4,0,0,140,3,7,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,134,3,0,0,60,15,6,0,0,1,2,0,139,3,0,0,140,0,5,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,134,0,0,0,192,1,6,0,41,4,0,24,42,4,4,24,33,1,4,0,120,1,251,255,119,0,1,0,139,0,0,0,140,1,8,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,2,5,0,0,60,195,0,0,1,6,4,0,1,7,0,0,134,1,0,0,24,55,6,0,5,6,7,0,134,2,0,0,12,222,4,0,0,1,0,0,139,2,0,0,140,4,8,0,0,0,0,0,3,4,0,2,3,6,1,3,16,7,4,0,3,5,6,7,129,5,0,0,139,4,0,0,140,0,7,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,4,0,0,68,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,2,6,0,0,0,0,160,0,134,1,0,0,20,53,6,0,0,6,0,0,139,1,0,0,140,1,7,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,26,1,0,65,35,2,1,26,38,6,2,1,0,3,6,0,139,3,0,0,140,1,7,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,26,1,0,32,35,2,1,95,38,6,2,1,0,3,6,0,139,3,0,0,140,1,7,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,26,1,0,97,35,2,1,26,38,6,2,1,0,3,6,0,139,3,0,0,140,1,7,0,0,0,0,0,1,4,0,0,136,6,0,0,0,5,6,0,26,1,0,48,35,2,1,10,38,6,2,1,0,3,6,0,139,3,0,0,140,0,7,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,4,0,0,68,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,1,6,0,0,134,1,0,0,20,53,6,0,0,6,0,0,139,1,0,0,140,0,7,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,4,0,0,68,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,134,1,0,0,156,81,4,0,0,0,0,0,139,1,0,0,140,0,7,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,4,0,0,68,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,134,1,0,0,124,212,4,0,0,0,0,0,139,1,0,0,140,0,7,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,4,0,0,68,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,134,1,0,0,164,64,6,0,0,0,0,0,139,1,0,0,140,0,7,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,2,4,0,0,68,162,0,0,1,5,4,0,1,6,0,0,134,0,0,0,24,55,6,0,4,5,6,0,134,1,0,0,52,254,5,0,0,0,0,0,139,1,0,0,140,2,4,0,0,0,0,0,19,3,0,1,0,2,3,0,46,3,2,0,188,107,6,0,135,3,69,0,139,2,0,0,140,2,2,0,0,0,0,0,137,0,0,0,132,0,0,1,139,0,0,0,140,2,6,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,134,2,0,0,104,26,6,0,0,1,0,0,139,2,0,0,140,2,6,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,134,2,0,0,252,131,5,0,0,1,0,0,139,2,0,0,140,2,6,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,134,2,0,0,64,143,5,0,0,1,0,0,139,2,0,0,140,0,5,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,134,2,0,0,224,104,6,0,1,3,244,1,1,4,30,0,135,2,70,0,3,4,0,0,139,0,0,0,140,2,6,0,0,0,0,0,1,3,0,0,136,5,0,0,0,4,5,0,134,2,0,0,232,120,2,0,0,1,0,0,139,2,0,0,140,0,4,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,3,1,0,134,2,0,0,40,28,4,0,3,0,0,0,134,2,0,0,64,108,6,0,1,2,0,0,139,2,0,0,140,0,6,0,0,0,0,0,1,1,0,0,136,3,0,0,0,2,3,0,1,3,1,0,134,0,0,0,148,77,6,0,3,0,0,0,1,4,19,0,1,5,0,0,134,3,0,0,132,19,6,0,4,5,0,0,139,0,0,0,140,1,5,0,0,0,0,0,1,2,0,0,136,4,0,0,0,3,4,0,38,4,0,127,0,1,4,0,139,1,0,0,140,0,5,0,0,0,0,0,1,1,0,0,136,3,0,0,0,2,3,0,1,3,0,0,1,4,0,0,134,0,0,0,88,108,2,0,3,4,0,0,139,0,0,0,140,0,6,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,3,248,2,1,4,0,0,1,5,4,0,134,2,0,0,116,78,6,0,3,4,5,0,139,0,0,0,140,0,4,0,0,0,0,0,1,1,0,0,136,3,0,0,0,2,3,0,134,0,0,0,248,93,6,0,139,0,0,0,140,3,4,0,0,0,0,0,134,3,0,0,164,131,4,0,0,1,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,108,175,4,0,0,1,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,12,60,3,0,0,1,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,36,178,5,0,0,1,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,156,68,6,0,0,0,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,204,221,5,0,0,0,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,184,212,5,0,0,0,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,212,119,4,0,0,0,0,0,139,3,0,0,140,3,4,0,0,0,0,0,134,3,0,0,228,94,6,0,0,0,0,0,139,3,0,0,140,0,4,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,3,0,0,134,2,0,0,68,20,6,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,0,0,134,2,0,0,240,207,5,0,0,1,3,0,139,2,0,0,140,0,4,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,3,1,0,134,2,0,0,68,20,6,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,0,0,134,2,0,0,64,100,3,0,0,1,3,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,0,0,134,2,0,0,20,2,4,0,0,1,3,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,0,0,134,2,0,0,208,188,5,0,0,1,3,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,134,2,0,0,52,116,6,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,134,2,0,0,148,102,6,0,139,0,0,0,140,1,4,0,0,0,0,0,1,1,0,0,136,3,0,0,0,2,3,0,139,0,0,0,140,1,4,0,0,0,0,0,1,1,0,0,136,3,0,0,0,2,3,0,1,3,0,0,139,3,0,0,140,2,4,0,0,0,0,0,1,3,0,0,134,2,0,0,80,49,6,0,0,1,3,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,0,0,134,2,0,0,188,104,6,0,0,1,3,0,139,2,0,0,140,3,5,0,0,0,0,0,1,4,63,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,62,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,61,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,60,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,59,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,58,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,57,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,56,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,55,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,54,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,53,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,52,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,51,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,50,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,49,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,48,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,47,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,46,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,45,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,44,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,43,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,42,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,41,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,40,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,39,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,38,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,37,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,36,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,3,5,0,0,0,0,0,1,4,35,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,2,2,0,0,217,16,1,0,139,2,0,0,140,3,5,0,0,0,0,0,1,4,0,0,135,3,71,0,4,0,0,0,1,3,0,0,139,3,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,2,2,0,0,222,16,1,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,2,2,0,0,242,73,1,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,134,2,0,0,156,68,6,0,0,0,0,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,2,2,0,0,255,255,255,127,139,2,0,0,140,2,3,0,0,0,0,0,134,2,0,0,204,221,5,0,0,0,0,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,0,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,2,3,0,0,0,0,0,134,2,0,0,184,212,5,0,0,0,0,0,139,2,0,0,140,2,3,0,0,0,0,0,134,2,0,0,212,119,4,0,0,0,0,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,2,3,0,0,0,0,0,134,2,0,0,228,94,6,0,0,0,0,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,1,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,0,0,139,2,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,3,4,0,0,0,0,0,1,3,0,0,139,3,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,42,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,21,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,8,0,139,2,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,1,2,1,0,139,2,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,240,207,5,0,0,2,3,0,139,1,0,0,140,0,3,0,0,0,0,0,1,0,0,0,136,2,0,0,0,1,2,0,139,0,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,64,100,3,0,0,2,3,0,139,1,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,20,2,4,0,0,2,3,0,139,1,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,208,188,5,0,0,2,3,0,139,1,0,0,140,2,4,0,0,0,0,0,1,3,63,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,62,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,61,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,60,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,59,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,58,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,57,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,56,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,55,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,54,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,53,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,52,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,51,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,50,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,49,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,48,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,47,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,46,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,45,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,44,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,43,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,42,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,41,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,40,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,39,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,38,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,37,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,36,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,35,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,2,4,0,0,0,0,0,1,3,0,0,135,2,72,0,3,0,0,0,1,2,0,0,139,2,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,80,49,6,0,0,2,3,0,139,1,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,240,207,5,0,0,2,3,0,139,0,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,188,104,6,0,0,2,3,0,139,1,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,64,100,3,0,0,2,3,0,139,0,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,20,2,4,0,0,2,3,0,139,0,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,208,188,5,0,0,2,3,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,164,131,4,0,0,2,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,108,175,4,0,0,2,0,0,139,1,0,0,140,1,1,0,0,0,0,0,132,2,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,12,60,3,0,0,2,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,36,178,5,0,0,2,0,0,139,1,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,80,49,6,0,0,2,3,0,139,0,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,1,4,0,0,0,0,0,1,2,0,0,1,3,0,0,134,1,0,0,188,104,6,0,0,2,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,156,68,6,0,0,0,0,0,139,0,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,2,3,0,0,0,0,0,1,2,0,0,139,2,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,164,131,4,0,0,2,0,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,204,221,5,0,0,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,108,175,4,0,0,2,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,12,60,3,0,0,2,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,0,0,134,1,0,0,36,178,5,0,0,2,0,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,184,212,5,0,0,0,0,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,212,119,4,0,0,0,0,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,228,94,6,0,0,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,63,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,62,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,61,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,60,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,59,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,58,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,57,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,56,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,55,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,54,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,53,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,52,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,51,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,50,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,49,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,48,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,47,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,46,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,45,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,44,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,43,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,42,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,41,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,40,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,39,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,38,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,37,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,36,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,35,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,0,0,135,1,73,0,2,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,134,1,0,0,156,89,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,160,55,6,0,139,0,0,0,140,1,2,0,0,0,0,0,135,1,74,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,52,65,6,0,139,0,0,0,140,0,4,0,0,0,0,0,1,1,0,0,1,2,0,0,1,3,0,0,134,0,0,0,240,207,5,0,1,2,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,32,76,6,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,72,237,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,196,211,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,132,191,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,200,108,6,0,139,0,0,0,140,0,4,0,0,0,0,0,1,1,0,0,1,2,0,0,1,3,0,0,134,0,0,0,64,100,3,0,1,2,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,116,138,4,0,139,0,0,0,140,0,4,0,0,0,0,0,1,1,0,0,1,2,0,0,1,3,0,0,134,0,0,0,20,2,4,0,1,2,3,0,139,0,0,0,140,0,4,0,0,0,0,0,1,1,0,0,1,2,0,0,1,3,0,0,134,0,0,0,208,188,5,0,1,2,3,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,116,227,5,0,139,0,0,0,140,1,2,0,0,0,0,0,134,1,0,0,152,65,5,0,139,0,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,134,1,0,0,28,69,6,0,139,0,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,2,0,0,0,0,0,1,1,0,0,139,1,0,0,140,1,3,0,0,0,0,0,1,2,63,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,62,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,61,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,60,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,59,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,58,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,57,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,56,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,55,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,54,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,53,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,52,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,51,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,50,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,49,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,48,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,47,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,46,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,45,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,44,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,43,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,42,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,41,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,40,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,39,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,38,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,37,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,36,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,35,0,135,1,75,0,2,0,0,0,139,0,0,0,140,1,3,0,0,0,0,0,1,2,0,0,135,1,75,0,2,0,0,0,139,0,0,0,140,0,4,0,0,0,0,0,1,1,0,0,1,2,0,0,1,3,0,0,134,0,0,0,80,49,6,0,1,2,3,0,139,0,0,0,140,0,4,0,0,0,0,0,1,1,0,0,1,2,0,0,1,3,0,0,134,0,0,0,188,104,6,0,1,2,3,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,156,68,6,0,1,0,0,0,139,0,0,0,140,0,3,0,0,0,0,0,1,1,0,0,1,2,0,0,134,0,0,0,164,131,4,0,1,2,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,204,221,5,0,1,0,0,0,139,0,0,0,140,0,3,0,0,0,0,0,1,1,0,0,1,2,0,0,134,0,0,0,108,175,4,0,1,2,0,0,139,0,0,0,140,0,3,0,0,0,0,0,1,1,0,0,1,2,0,0,134,0,0,0,12,60,3,0,1,2,0,0,139,0,0,0,140,0,3,0,0,0,0,0,1,1,0,0,1,2,0,0,134,0,0,0,36,178,5,0,1,2,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,184,212,5,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,212,119,4,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,228,94,6,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,12,98,6,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,80,98,6,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,212,69,6,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,112,70,6,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,8,90,6,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,134,0,0,0,224,22,6,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,63,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,62,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,61,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,60,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,59,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,58,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,57,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,56,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,55,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,54,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,53,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,52,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,51,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,50,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,49,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,48,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,47,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,46,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,45,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,44,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,43,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,42,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,41,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,40,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,39,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,38,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,37,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,36,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,35,0,135,0,76,0,1,0,0,0,139,0,0,0,140,0,2,0,0,0,0,0,1,1,0,0,135,0,76,0,1,0,0,0,139,0,0,0], eb + 419840);

  var relocations = [];
  relocations = relocations.concat([80,100,104,108,268,424,428,432,512,740,836,1040,1044,1048,1052,1056,1060,1256,1376,1628,1632,1636,1640,1676,1844,1976,2104,2228,2232,2236,2412,2588,2752,4000,4364,4452,4868,4988,5572,6244,6248,6252,6380,6496,6552,6732,8100,8728,9204,9476,9520,9812,9940,10016,12424,13132,13648,13672,13780,13880,14448,14696,15528,15660,15852,16020,16244,16516,16704,16872,17192,17360,17516,17632,17716,17876,18200,18204,18208,18212,18216,18220,18224,18228,18232,18236,18240,18244,18248,18252,18256,18260,18264,18268,18272,18276,18280,18284,18288,18292,18296,18300,18304,18308,18312,18316,18320,18324,18328,18332,18336,18340,18344,18348,18692,20044,21276,21516,21908,21972,22192,22196,22200,22204,22208,22212,22216,22220,22224,22228,22232,22236,22240,22244,22248,22252,22256,22260,22264,22268,22272,22276,22280,22284,22288,22292,22296,22300,22304,22308,22312,22316,22320,22324,22328,22332,22336,22340,22344,22348,22352,22356,22360,22364,22368,22372,22376,22380,22384,22388,22392,22396,22400,22404,22408,22412,24260,25916,26636,27372,27756,27928,28320,28440,28472,28884,29112,29360,31156,31248,31340,31472,31692,31764,32188,32600,33620,33624,33628,33632,33636,33640,33644,33648,35820,37532,37544,37976,38016,38276,38280,38284,38288,38292,38296,39268,39272,39276,39280,39284,39288,39292,39296,39300,39304,39308,39312,39316,39320,39324,39328,39332,39336,39340,39344,39348,39352,39356,39360,39364,39368,39372,39376,39380,39384,39388,39392,39396,39400,39404,39408,39412,39416,39420,39424,39428,39432,39436,39440,39444,39448,39452,39456,39460,39464,39468,39472,39476,39480,39484,39488,39492,39496,40040,40044,40048,40052,40056,40060,40064,40068,40072,40076,40080,40084,40088,40092,40096,40100,40104,40108,40112,40116,40188,40348,40652,40656,40660,40664,40668,40672,41308,41524,41528,41532,41536,41540,41544,41548,41552,41556,41560,41564,41568,41572,41576,41580,41584,41588,41592,41596,41600,41604,41608,41612,41616,41620,41624,41628,41632,41636,41640,41644,41648,41652,41656,41660,41664,41668,41672,41676,41680,41684,41688,41692,41696,41700,41704,41708,41712,41716,41720,41724,41728,41732,41736,41740,41744,41908,42032,42036,42040,42840,42844,42848,42852,42856,42860,42864,42868,42872,42876,42880,42884,42888,42892,42896,42900,42904,42908,42912,42916,42920,42924,42928,42932,42936,42940,42944,42948,42952,42956,42960,42964,42968,42972,42976,42980,42984,42988,42992,42996,43000,43004,43008,43012,43016,43020,43024,43028,43032,43332,43336,43340,43344,43348,43352,43356,43360,43364,43368,43372,43376,43380,43384,43388,43392,43396,43400,43404,43408,43412,43416,43420,43424,43428,43432,43436,43440,43444,43448,43452,43456,43460,43464,43468,43472,43476,43480,43484,43488,43492,43496,43500,43504,43508,43512,43516,43520,43524,43528,43532,43536,43540,43544,43548,43552,43556,43560,43564,43568,43572,43576,43580,43584,43588,43592,43596,43600,43604,43608,43612,43616,43620,43624,43628,43632,43636,43640,43644,43648,43652,43656,43660,43664,43668,43672,43676,43680,43684,43688,43692,43696,43700,43704,43840,43844,43848,43852,43856,43860,43864,43868,43872,43876,43880,43884,43888,43892,43896,43900,43904,43908,43912,43916,43920,43924,43928,43932,43936,43940,43944,43948,43952,43956,43960,43964,43968,43972,43976,43980,43984,43988,43992,43996,44000,44004,44008,44012,44016,44020,44024,44028,44032,44036,44040,44044,44048,44052,44056,44060,44064,44068,44072,44076,44080,44084,44088,44092,44096,44100,44104,44108,44112,44116,44120,44124,44128,44132,44136,44140,44144,44148,44152,44156,44160,44164,44168,44172,44176,44180,44184,44188,44192,44196,44200,44204,44208,44212,44288,44376,44568,44812,45060,45064,45312,45564,45708,46000,46712,47272,47404,47612,47616,47620,47624,47628,47632,48292,48688,48848,49180,49324,49448,49668,51204,51332,51336,51340,51344,51348,51352,51356,51360,51364,51368,51372,51376,51380,51384,51388,51392,51396,51400,51404,51408,51412,51416,51420,51424,51428,51432,51436,51440,51444,51448,51452,51456,51460,51464,51468,51472,51476,51480,51484,51488,51492,51496,51500,51504,51508,51512,51516,51520,51524,51528,51532,51536,51540,51544,51548,51552,51556,51560,51564,51568,51572,51576,51580,51584,51588,51592,51596,51600,51604,51608,51612,51616,51620,51624,51628,51632,51636,51640,51644,51648,51652,51656,51660,51664,51668,51672,51676,51680,51684,51688,51692,51696,51700,51704,51708,51712,51716,51720,51724,51728,51732,51736,51740,51744,51748,51752,51756,51760,51764,51768,51772,51776,51780,51784,51788,51792,51796,51800,51804,51808,51812,52524,52528,52532,52536,52540,52544,52548,52552,52556,52560,52564,52568,52572,52576,52580,52584,52588,52592,52596,52600,52604,52608,52612,52616,52620,52624,52628,52632,52636,52640,52644,52648,52652,52656,52660,52664,52668,52672,52676,52680,52684,52688,52692,52696,52700,52704,52708,52712,52716,52720,52724,52728,52732,52736,52740,52744,52748,52752,52756,52760,52764,52768,52772,52776,52780,52784,52788,52792,52796,52800,52804,52808,52812,52816,52820,52824,52828,52832,52836,52840,52844,52848,52852,52856,52860,52864,52868,52872,52876,52880,52884,52888,52892,52896,52900,52904,52908,52912,52916,52920,52924,52928,52932,52936,52940,52944,52948,52952,52956,52960,52964,52968,52972,52976,52980,52984,52988,52992,52996,53000,53004,54368,54732,54736,54740,54744,54748,54752,54756,54760,54764,54768,54772,54776,54780,54784,54788,54792,54796,54800,54804,54808,54812,54816,54820,54824,54828,54832,54836,54840,54844,54848,54852,54856,54860,54864,54868,54872,54876,54880,54884,54888,54892,54896,54900,54904,54908,54912,54916,54920,54924,54928,54932,54936,54940,54944,54948,54952,54956,54960,54964,54968,54972,54976,54980,54984,54988,54992,54996,55000,55004,55008,55012,55016,55020,55024,55028,55032,55036,55040,55044,55048,55052,55056,55060,55064,55068,55072,55076,55080,55084,55088,55092,55096,55100,55104,55108,55112,55116,55120,55180,55248,55308,59296,59388,59424,59548,59656,59852,59904,60096,60236,60240,60244,60248,60252,60256,60260,60264,60268,60272,60276,60280,60284,60288,60292,60296,60300,60304,60604,60608,60612,60616,60620,60624,60628,60632,60636,60640,60644,60648,60652,60656,60660,60664,60668,60672,60676,60680,60684,60688,60692,60696,60700,60704,60708,60712,60716,60720,60724,60728,60732,60736,60740,60744,60748,60752,60756,60760,60764,60768,60772,60776,60780,60784,60788,60792,60796,60800,60804,60808,60812,60816,60820,60824,60828,60832,60836,60840,60844,60848,60852,60856,60860,60864,60868,60872,60876,60880,60884,60888,60892,60896,60900,60904,60908,60912,60916,60920,60924,60928,60932,60936,60940,60944,60948,60952,60956,60960,60964,60968,60972,61756,61804,62000,62100,62196,62540,62908,63516,63892,63960,64508,64584,64620,64656,64748,65468,65936,65976,66160,66248,66256,66292,66304,66396,66412,66448,66580,66628,66672,66756,66804,66836,66912,66948,66984,67048,67136,67288,67324,67488,67496,67596,67636,67736,67820,68064,68212,68292,68300,68340,68352,68436,68452,68492,68612,68652,68692,68764,68812,68844,68916,68956,68996,69060,69136,69280,69320,69468,69476,69568,69596,70032,70824,70924,71240,71336,71456,71460,71464,71540,71736,71932,72056,72092,72188,72340,72396,72612,72988,73496,73900,74232,74768,75112,75396,75792,75884,75936,76548,76600,76728,76760,76940,77080,77112,77348,77928,77960,78128,78180,78404,78408,78412,78416,78420,78424,78428,78432,78436,78440,78444,78448,78452,78456,78460,78464,78468,78472,78476,78480,78484,78488,78492,78496,78548,78568,78588,78608,78676,78712,78736,78740,78744,78748,78752,78756,78760,78764,78768,78772,78776,78780,78784,78788,78792,78796,78800,78804,78808,78812,78816,78820,78824,78828,78832,78836,78840,78844,78848,78852,78856,78860,78864,78868,78872,78876,78880,78884,78888,78892,78896,78900,78904,78908,78912,78916,78920,78924,78928,78932,78936,78940,78944,78948,78952,78956,78960,78964,78968,78972,78976,78980,78984,78988,78992,78996,79000,79004,79008,79012,79016,79020,79024,79028,79032,79036,79040,79044,79048,79052,79056,79060,79064,79068,79072,79076,79080,79084,79088,79092,79096,79100,79104,79176,79208,79256,79288,79748,79788,79992,79996,80000,80004,80008,80012,80016,80020,80024,80028,80032,80036,80040,80044,80540,80828,80996,81000,81004,81008,81012,81016,81020,81024,81028,81032,81036,81040,81044,81856,81916,82908,83160,83488,83776,84520,85624,85700,85860,85864,85868,85872,85876,85880,85884,85888,85892,85896,85900,85904,85908,85912,85916,85920,85924,85928,85932,85936,85940,85944,85948,86572,87080,87164,87204,87240,87276,87308,87428,87732,87840,88252,89324,89480,89864,89912,90364,90412,90684,91300,91304,91308,91312,91316,91320,91324,91328,91332,91336,91340,91344,91348,91352,91356,91360,91364,91368,91372,91376,91380,91384,91388,91392,91396,91400,91404,91408,91412,91416,91420,91424,91428,91432,91436,91440,91444,91448,91452,91456,91460,91464,91468,91472,91476,91480,91484,91488,91492,91496,91500,91504,91508,91512,91516,91520,91524,91528,91532,91536,91540,91544,91548,91552,91556,91560,91564,91568,91572,91576,91580,91584,91588,91592,91596,91600,91604,91608,91612,91616,91620,91624,91628,91632,91636,91640,91644,91648,91652,91656,91660,91664,91668,92020,92024,92028,92032,92036,93512,93996,94020,94036,94068,96960,96980,97212,97264,97440,97484,97668,97852,97856,97860,97864,97868,97872,97876,97880,97884,97888,97892,97896,97900,97904,98212,98316,98848,99192,99264,99528,99580,100160,100240,100536,100684,100852,100924,101064,101424,101496,101796,101928,102024,103360,103456,103580,103700,104216,105456,105484,105556,106032,106184,106252,106376,106444,106492,106592,106656,106900,106968,107036,107084,107180,107248,107316,107636,107824,107992,108040,108576,108808,108812,108816,108820,108824,109040,109412,109572,109576,109580,109584,109588,109592,109596,109600,109604,109608,109612,109616,109620,109624,109628,109632,109636,109640,109644,109648,109652,109656,109660,109664,109668,109672,109676,109680,109684,109688,109692,109696,109700,109704,109708,109712,109716,109720,109724,109728,109732,109736,109740,109744,109748,109752,109756,109760,109764,109768,109772,109776,109780,109784,109788,109792,109796,109800,109804,109808,109812,109816,109820,109824,109828,109832,109836,109840,109844,109848,109852,109856,109860,109864,109868,109872,109876,109880,109884,109888,109892,109896,109900,109904,109908,109912,109916,109920,109924,109928,109932,109936,109940,110000,110048,110428,111000,111264,111312,111492,111888,112168,112244,112248,112252,112256,112260,112264,112268,112272,112276,112280,112284,112288,112292,112296,112300,112304,112308,112312,112316,112320,112324,112328,112332,112336,112340,112344,112348,112352,112356,112360,112364,112368,112372,112376,112380,112384,112388,112392,112396,112400,112404,112408,112412,112416,112420,112424,112428,112432,112436,112440,112444,112448,112452,112456,112460,112464,112468,112472,112476,112480,112484,112640,113040,113096,114076,114696,114856,114908,114960,115016,115564,115752,115960,116032,116088,116576,116628,116752,117512,117564,117668,117748,117792,117840,118292,118376,118520,122700,122716,122872,123032,123100,123292,123368,123492,123624,123720,123848,123996,124068,124140,124656,124776,124876,125384,125628,125652,125700,125728,125748,125956,126000,126188,126232,126256,126604,126624,126712,126720,126756,126768,126852,126868,126904,127028,127072,127116,127196,127244,127276,127352,127388,127424,127488,127556,127676,127712,127864,127872,127968,127996,128380,128396,128500,128764,128768,128772,128776,128780,128784,128788,128792,128796,128800,128804,128808,128812,128816,128820,128824,128828,128832,128836,128840,128844,128848,128852,128856,128860,128864,128868,128872,128876,128880,128884,128888,128892,128896,128900,128904,128908,128912,128916,128920,128924,128928,128932,128936,128940,128944,128948,128952,128956,128960,128964,128968,128972,128976,128980,128984,128988,128992,128996,129000,129004,129008,129012,129016,129020,129024,129028,129032,129036,129040,129044,129048,129052,129056,129060,129064,129068,129072,129076,129080,129084,129088,129092,129096,129100,129104,129108,129112,129116,129120,129124,129128,129132,129136,129140,129144,129148,129152,129156,129160,129164,129168,129172,129176,129180,129184,129188,129192,129196,129200,129204,129208,129212,129216,129220,129224,129228,129232,129236,129240,129420,129704,130212,130456,130568,130756,130804,131172,131196,131464,131584,131632,132136,132176,132264,132328,132412,132448,132508,132528,133024,133084,133604,133656,133824,134296,134344,134348,134352,134356,134360,134364,134368,134372,134376,134380,134384,134388,134392,134396,134400,134404,134408,134412,134416,134420,134424,134428,134432,134436,134440,134444,134448,134452,134456,134460,134464,134468,134472,134476,134480,134484,134488,134492,134496,134500,134504,134508,134512,134516,134520,134524,134528,134532,134536,134540,134544,134548,134552,134556,134560,134564,134568,134572,134576,134580,134584,135660,136848,136924,137056,137632,137736,138804,139300,139472,139476,139480,139484,139488,139492,139496,139500,139504,139508,141356,141376,141408,141460,141528,141560,141720,141856,141996,142264,142540,142576,142660,142796,142916,143028,143388,143508,145800,146028,146032,146036,146040,146044,146048,146052,146056,146060,146064,146068,146072,146076,146080,146084,146088,146092,146096,146100,146104,146108,146112,146116,146120,146124,146128,146132,146136,146140,146144,146148,146152,146156,146160,146164,146168,146172,146176,146180,146184,146188,146192,146196,146200,146204,146208,146212,146216,146220,146224,146228,146232,146236,146240,146244,146248,146252,146256,146260,146264,146268,146272,146276,146280,146284,146288,146292,146296,146300,146304,146308,146312,146316,146320,146324,146328,146332,146336,146340,146344,146348,146352,146356,146360,146364,146368,146372,146376,146380,146384,146388,146392,146396,146400,146404,146408,146412,146416,146420,146424,146428,146432,146436,146440,146444,146448,146452,146456,146460,146464,146468,146472,146476,146480,146484,146488,146492,146496,146500,146504,146508,146512,146516,146520,146524,146528,146532,146536,146540,146544,146548,146552,146556,146560,146564,146568,146572,146576,146580,146584,146588,146592,146596,146600,146604,146608,146612,146616,146620,146624,146628,146632,146636,146640,146644,146648,146652,146656,146660,146664,146668,146672,146676,146680,146684,146688,146692,146696,146700,146704,146708,146712,146716,146720,146724,146728,146732,146736,146740,146744,146748,146752,146756,146760,146764,146768,146772,146776,146780,146784,146788,146792,146796,146800,146804,146808,146812,146816,146820,146824,146828,146832,146836,146840,146844,146848,146852,146856,146860,146864,146868,146872,146876,146880,146884,146888,146892,146896,146900,146904,146908,146912,146916,146920,146924,146928,146932,146936,146940,146944,146948,146952,146956,146960,146964,146968,146972,146976,146980,146984,146988,146992,146996,147000,147004,147008,147012,147016,147020,147024,147028,147032,147036,147040,147044,147048,147052,147056,147060,147064,147068,147072,147076,147584,147588,147592,147596,147600,147604,147608,147612,147616,147620,147624,147628,147632,147636,147640,147644,147648,147652,147656,147660,147664,147668,147672,147676,147680,147684,147688,147692,147696,147700,147704,147708,147712,147716,147720,147724,147728,147732,147736,147740,147744,147748,147752,147756,147760,147764,147768,147772,147776,147780,147784,147788,147792,147796,147800,147804,147808,147812,147816,147820,147824,147828,147832,147836,147840,147844,147848,147852,147856,147860,147864,147868,147872,147876,147880,147884,147888,147892,147896,147900,147904,147908,147912,147916,147920,147924,147928,147932,147936,147940,147944,147948,147952,147956,147960,147964,147968,147972,147976,147980,147984,148080,148084,148088,148092,148096,148100,148104,148108,148112,148116,148120,148124,148128,148132,148136,148140,148144,148148,148152,148156,148160,148164,148168,148172,148176,148180,148184,148188,148192,148196,148200,148204,148208,148212,148216,148220,148224,148228,148232,148236,148240,148244,148248,148252,148256,148260,148264,148268,148272,148276,148280,148284,148288,148292,148296,148300,148304,148308,148312,148316,148320,148324,148328,148332,148336,148340,148344,148348,148352,148356,148360,148364,148368,148372,148376,148380,148384,148388,148392,148396,148400,148404,148408,148412,148416,148420,148424,148428,148432,148436,148440,148444,148448,148452,148456,148460,148464,148468,148472,148476,148480,148484,148488,148492,148496,148500,148504,148508,148512,148516,148520,148524,148528,148532,148536,148540,148544,148548,148552,148556,148560,148564,148568,148572,148576,148580,148584,148588,148592,148596,148600,148604,148608,148612,148616,148620,148624,148628,148632,148636,148640,148644,148648,148652,148656,148660,148664,148668,148672,148676,148680,148684,148688,148692,148696,148700,148704,148708,148712,148716,148720,148724,148728,148732,148736,148740,148744,148748,148752,148756,148760,148764,148768,148772,148776,148780,148784,148788,148792,148796,148800,148804,148808,148812,148816,148820,148824,148828,148832,148836,148840,148844,148848,148852,148856,148860,148864,148868,148872,148876,148880,148884,148888,148892,148896,148900,148904,148908,148912,148916,148920,148924,148928,148932,148936,148940,148944,148948,148952,148956,148960,148964,148968,148972,148976,148980,148984,148988,148992,148996,149000,149004,149008,149012,149016,149020,149024,149028,149032,149036,149040,149044,149048,149052,149056,149060,149064,149068,149072,149076,149080,149084,149088,149092,149096,149100,149104,149108,149112,149116,149120,149124,149128,149132,149136,149140,149144,149148,149152,149156,149160,149164,149168,149172,149176,149180,149184,149188,149192,149196,149200,149204,149208,149212,149216,149220,149224,149228,149232,149236,149240,149872,149932,150228,150320,150880,151856,152416,152420,152424,152428,152432,152436,152440,152444,153896,153900,153904,153908,153912,153916,153920,153924,153928,153932,153936,154608,158876,163792,164248,164252,164256,164260,164264,164268,164272,164276,164280,164284,164288,164292,164296,164300,164304,164308,165808,167840,168032,168036,168040,168044,170132,171984,174336,176840,177132,177136,177140,177144,177148,177152,177156,179104,181444,184312,186556,187952,189412,191428,192988,193652,193656,193660,193664,193668,193672,193676,193680,193684,193688,193692,193696,193700,193704,193708,193712,193716,193720,193724,193728,193732,193736,193740,193744,193748,193752,193756,193760,193764,193768,193772,193776,193780,193784,193788,193792,193796,193800,193804,193808,193812,193816,193820,193824,193828,193832,193836,193840,193844,193848,193852,193856,193860,193864,193868,193872,193876,193880,193884,193888,193892,193896,193900,193904,193908,193912,193916,193920,193924,193928,193932,193936,193940,193944,193948,193952,193956,193960,193964,193968,193972,193976,193980,193984,193988,193992,193996,194000,194004,194008,194012,194016,194020,194940,195264,195268,195272,195276,195280,195284,195288,196356,196360,196364,196368,196372,196376,196380,196384,196388,196392,196396,196400,196788,198684,198688,198692,199988,201580,203264,204656,205708,206960,207092,207096,207100,207104,207108,207112,207116,207120,207124,207128,207132,207136,207140,207144,207148,207152,207156,207160,207164,207168,207172,207176,207180,207184,207188,207192,207196,207200,207204,207208,207212,208540,210276,212048,213264,213808,213812,213816,213820,213824,213828,213832,213836,213840,214620,216648,218028,219624,220992,222324,223492,224700,226084,226504,226508,226512,226516,226520,226524,226528,226532,226536,226540,226544,226548,226552,226556,226560,226564,226568,226572,226576,226580,226584,226588,226592,226596,226600,226604,226608,226612,226616,226620,226624,226628,226632,226636,226640,226644,226648,226652,226656,226660,226664,226668,226672,226676,226680,226684,226688,226692,226696,226700,226704,226708,226712,226716,226720,226724,226728,226732,226736,226740,226744,226748,226752,226756,226760,226764,226768,226772,226776,226780,226784,226788,226792,226796,226800,226804,226808,226812,226816,226820,226824,226828,226832,226836,226840,226844,226848,226852,226856,226860,226864,226868,226872,226876,226880,228028,229744,229948,231004,232088,233440,234512,235564,235732,235736,235740,235744,235748,235752,235756,236840,238372,240160,241328,242344,243264,244404,245680,246928,248000,249808,250928,251908,253912,254788,255812,256804,257444,258576,259392,260280,261164,261984,262720,263568,264632,265280,265284,265288,265292,265296,265300,265648,265700,265704,265708,265712,265716,265720,265724,265728,265732,265736,265740,265744,265748,265752,265756,265760,265764,265768,265772,265776,265780,265784,265788,265792,265796,265800,265804,265808,265812,265816,265820,265824,265828,265832,265836,265840,265844,265848,265852,265856,265860,265864,265868,265872,265876,265880,265884,265888,265892,265896,265900,265904,265908,265912,265916,265920,265924,265928,265932,265936,265940,265944,265948,265952,265956,265960,265964,265968,265972,265976,265980,265984,265988,265992,265996,266000,266004,266008,266012,266016,266020,266024,266028,266032,266036,266040,266044,266048,266052,266056,266060,266064,266068,266072,266076,266080,266084,266088,266092,266096,266100,266104,266108,266112,266116,266120,266124,266128,266132,266136,266140,266144,266148,266152,266156,266160,266164,266168,266172,266176,266180,266184,266188,266192,266196,266200,266204,266208,266212,266216,266220,266224,266228,266232,266236,266240,266244,266248,266252,266256,266260,266264,266268,266272,266276,266280,266284,266288,266292,266296,266300,266304,266308,266312,266316,266320,266324,266328,266332,266336,266340,266344,266348,266352,266356,266360,266364,266368,266372,266376,266380,266384,266388,266392,266396,266400,266404,266408,266412,266416,266420,266424,266428,266432,266436,266440,266444,266448,266452,266456,266460,266464,266468,266472,266476,266480,266484,266488,266492,266496,266500,266504,266508,266512,266516,266520,266524,266528,266532,266536,266540,266544,266548,266552,266556,266560,266564,266568,266572,266576,266580,266584,266588,266592,266596,266600,266604,266608,266612,266616,266620,266624,266628,266632,266636,266640,266644,266648,266652,266656,266660,266664,266668,266672,266676,266680,266684,266688,266692,266696,266700,266704,266708,266712,266716,266720,266724,266728,266732,266736,266740,266744,266748,266752,266756,266760,266764,266768,266772,266776,266780,266784,266788,266792,266796,266800,266804,266808,266812,266816,266820,266824,266828,266832,266836,266840,266844,266848,266852,266856,266860,266864,266868,266872,266876,266880,266884,266888,266892,266896,266900,266904,266908,266912,266916,266920,266924,266928,266932,266936,266940,266944,266948,266952,266956,266960,266964,266968,266972,266976,266980,266984,266988,266992,266996,267000,267004,267008,267012,267016,267020,267024,267028,267032,267036,267040,267044,267048,267052,267056,267060,267064,267068,267072,267076,267080,267084,267088,267092,267096,267100,267104,267108,267112,267116,267120,267124,267128,267132,267136,267140,267144,267148,267152,267156,267160,267164,267168,267172,267176,267180,267184,267188,267192,267196,267200,267204,267208,267212,267216,267220,267224,267228,267232,267236,267240,267244,267248,267252,267256,267260,267264,267268,267272,267276,267280,267284,267288,267292,267296,267300,267304,267308,267312,267316,267320,267324,267328,267332,267336,267340,267344,267348,267352,267356,267360,267364,267368,267372,267376,267380,267384,267388,267392,267396,267400,267404,267408,267412,267416,267420,267424,267428,267432,267436,267440,267444,267448,267452,267456,267460,267464,267468,267472,267476,267480,267484,267488,267492,267496,267500,267504,267508,267512,267516,267520,267524,267528,267532,267536,267540,267544,267548,267552,267556,267560,267564,267568,267572,267576,267580,267584,267588,267592,267596,267600,267604,267608,267612,267616,267620,267624,267628,267632,267636,267640,267644,267648,267652,267656,267660,267664,267668,267672,267676,267680,267684,267688,267692,267696,267700,267704,267708,267712,267716,267720,267724,267728,267732,267736,267740,267744,267748,267752,267840,267844,267896,267920,268580,269404,269652,270268,271160,271944,272008,272780,273576,274448,275304,275532,275536,276220,276396,276988,277896,277964,278840,279348,279352,279356,279360,279364,279368,279372,279376,279380,279384,279388,279392,279396,279400,279404,279408,279412,279416,279420,279424,279428,279432,279436,279440,279444,279448,279452,279456,279460,279464,279468,279472,279476,279480,279484,279488,279492,279496,279500,279504,279508,279512,279516,279520,279524,279528,279532,279536,279540,279544,279548,279552,279556,279560,279564,279568,279572,279576,279580,279584,279588,279860,280752,282276,283080,283780,284444,285252,285948,287852,288720,288960,288964,288968,288972,288976,288980,288984,288988,288992,288996,289000,289004,289008,289012,289016,289020,289024,289028,289032,289036,289040,289044,289048,289052,289056,289060,289064,289068,289072,289076,289080,289084,289088,289092,289096,289100,289104,289632,290428,291644,291984,292864,293636,294496,295200,295888,296132,296136,296140,296144,296148,296152,296156,296160,296164,296168,296172,296176,296180,296184,296188,296192,296196,296200,296204,296208,296212,296216,296220,296224,296228,296232,296236,296240,296244,296248,296252,296256,296260,296264,296268,296272,296276,296280,296284,296288,296292,296296,296300,296304,296308,296312,296316,296320,296324,296328,296332,296336,296340,296344,296348,296352,296356,296360,296364,296368,296372,296376,296380,296384,296388,296392,296396,296400,296404,296408,296412,296416,296420,296424,296428,296432,296436,296440,296444,296448,296452,296456,296460,296464,296468,296472,296476,296480,296484,296488,296492,296496,296500,296504,296508,296512,296516,296520,296524,296528,296532,296536,296540,296544,296548,296552,296992,297640,298420,298940,298944,298948,298952,299124,299684,300288,301768,302360,302996,303640,304348,304892,305040,305088,305092,305096,305100,305104,305108,305112,305116,305120,305124,305128,305132,305136,305140,305144,305148,305152,305156,305160,305164,305168,305172,305176,305180,305184,305188,305192,305196,305200,305204,305208,305856,306452,307096,307348,307352,307356,307360,307364,307368,307372,307376,307380,307384,307388,307392,307396,307400,307404,307408,307412,307416,307420,307424,307428,307432,307436,307440,307444,307448,307452,307456,307460,307464,307468,307472,307476,307480,307484,307488,307492,307496,307500,307504,307508,307512,307516,307520,307524,307528,307532,307536,307540,307544,307548,307552,307556,307560,307564,307568,307572,307576,307580,307584,307588,307592,307596,307600,307604,307608,307612,307616,307620,307624,307628,307632,307636,307640,307644,307648,307652,307656,307660,307664,307668,307672,307676,307680,307684,307688,307692,307696,307700,307704,307708,307712,307716,307720,307724,307728,307732,307736,307740,307744,307748,307752,307756,307760,307764,307768,307772,308188,308880,309624,310196,311028,312256,312928,313484,314032,314676,315376,315960,316584,317164,317788,318448,320056,320620,321132,321632,322208,322720,323232,323776,324220,324620,325164,325244,325644,326168,326736,327232,327772,328292,328864,328916,328920,328924,328928,328932,328936,328940,328944,328948,328952,328956,328960,328964,328968,328972,328976,328980,328984,328988,328992,328996,329000,329004,329008,329012,329016,329020,329024,329028,329032,329036,329040,329044,329048,329052,329056,329060,329064,329068,329072,329076,329080,329084,329088,329092,329096,329100,329104,329108,329112,329116,329120,329124,329128,329132,329136,329140,329144,329148,329152,329156,329684,329688,329692,329972,330508,330992,331624,332180,333588,334144,334712,335764,336660,337152,337848,338312,338852,339408,339912,340432,340884,341328,341812,342276,342704,343132,343516,343988,344524,345004,345324,345796,346260,346712,347072,347252,347256,347260,347264,347268,347272,347276,347280,347284,347288,347292,347296,347300,347304,347308,347312,347316,347320,347324,347328,347332,347336,347340,347344,347348,347352,347356,347360,347364,347368,347372,347376,347380,347384,347388,347392,347396,347400,347404,347408,347412,347416,347420,347424,347428,347432,347436,347440,347444,347448,347452,347456,347460,347464,347468,347472,347476,347480,347484,347488,347492,347496,347500,347504,347508,347512,347516,347520,347524,347528,347532,347536,347540,347544,347548,347552,347556,347560,347564,347568,347572,347576,347580,347584,347588,347592,347596,347600,347604,347608,347612,347616,347620,347860,348220,348568,349064,349468,350660,351148,351656,352084,352484,352976,353324,353840,354268,354696,355496,355888,356312,356596,357020,357356,357760,358580,358980,359304,359676,360036,360420,361152,362168,362548,362896,363132,363136,363140,363144,363148,363152,363156,363160,363164,363168,363172,363176,363180,363184,363188,363192,363196,363200,363204,363208,363212,363216,363220,363224,363228,363232,363236,363240,363244,363248,363252,363412,363728,364004,364488,364492,364496,364500,364504,364508,364512,364516,364520,364524,364528,364532,364536,364540,364544,364548,364552,364556,364560,364564,364568,364572,364576,364580,364584,364588,364592,364596,364600,364604,364608,364612,364616,364620,364624,364628,364632,364636,364640,364644,364648,364652,364656,364660,364664,364668,364672,364676,364680,364684,364688,364692,364696,364700,364704,364708,364712,364716,364720,364724,364728,364732,364736,364740,364744,364748,364752,364756,364760,364764,364768,364772,364776,364780,364784,364788,364792,364796,364800,364804,364808,364812,364816,364820,364824,364828,364832,364836,364840,364844,364848,364852,364856,364860,364864,364868,364872,364876,364880,364884,364888,364892,364896,364900,364904,364908,364912,364916,364920,364924,364928,364932,364936,364940,364944,364948,364952,364956,364960,364964,364968,364972,364976,364980,364984,364988,364992,364996,365000,365004,365008,365012,365016,365020,365024,365028,365032,365036,365040,365044,365048,365052,365056,365060,365064,365068,365072,365076,365080,365084,365088,365092,365096,365100,365104,365108,365112,365116,365120,365124,365128,365132,365136,365140,365144,365148,365152,365156,365160,365164,365168,365172,365176,365180,365184,365188,365192,365196,365200,365204,365208,365212,365216,365220,365224,365228,365232,365236,365240,365244,365248,365252,365256,365260,365264,365268,365272,365276,365280,365284,365288,365292,365296,365300,365304,365308,365312,365316,365320,365324,365328,365332,365336,365340,365344,365348,365352,365356,365360,365364,365368,365372,365376,365380,365384,365388,365392,365396,365400,365404,365408,365412,365416,365420,365424,365428,365432,365436,365440,365444,365448,365452,365456,365460,365464,365468,365472,365476,365480,365484,365488,365492,365496,365500,365504,365508,365512,365516,365520,365524,365528,365532,365536,365540,365544,365548,365552,365556,365560,365564,365568,365572,365576,365580,365584,365588,365592,365596,365600,365604,365608,365612,365616,365620,365624,365628,365632,365636,365640,365644,365648,365652,365656,365660,365664,365668,365672,365676,365680,365684,365688,365692,365696,365700,365704,365708,365712,365716,365720,365724,365728,365732,365736,365740,365744,365748,365752,365756,365760,365764,365768,365772,365776,365780,365784,365788,365792,365796,365800,365804,365808,365812,365816,365820,365824,365828,365832,365836,365840,365844,365848,365852,365856,365860,365864,365868,365872,365876,365880,365884,365888,365892,365896,365900,365904,365908,365912,365916,365920,365924,365928,365932,365936,365940,365944,365948,365952,365956,365960,365964,365968,365972,365976,365980,365984,365988,365992,365996,366000,366004,366008,366012,366016,366020,366024,366028,366032,366036,366040,366044,366048,366052,366056,366060,366064,366068,366072,366076,366080,366084,366088,366092,366096,366100,366104,366108,366112,366116,366120,366124,366128,366132,366136,366140,366144,366148,366152,366156,366160,366164,366168,366172,366176,366180,366184,366188,366192,366196,366200,366204,366208,366212,366216,366220,366224,366228,366232,366236,366240,366244,366248,366252,366256,366260,366264,366268,366272,366276,366280,366284,366288,366292,366296,366300,366304,366308,366312,366316,366320,366324,366328,366332,366336,366340,366344,366348,366352,366356,366360,366364,366368,366372,366376,366380,366384,366388,366392,366396,366400,366404,366408,366412,366416,366420,366424,366428,366432,366436,366440,366444,366448,366452,366456,366460,366464,366468,366472,366476,366480,366484,366488,366492,366496,366500,366504,366508,366512,366516,366520,366524,366528,366532,366536,366540,366544,366548,366552,366556,366560,366564,366568,366572,366576,366580,366584,366588,366592,366596,366600,366604,366608,366612,366616,366620,366624,366628,366632,366636,366640,366644,366648,366652,366656,366660,366664,366668,366672,366676,366680,366684,366688,366692,366696,366700,366704,366708,366712,366716,366720,366724,366728,366732,366736,366740,366744,366748,366752,366756,366760,366764,366768,366772,366776,366780,366784,366788,366792,366796,366800,366804,366808,366812,366816,366820,366824,366828,366832,366836,366840,366844,366848,366852,366856,366860,366864,366868,366872,366876,366880,366884,366888,366892,366896,366900,366904,366908,366912,366916,366920,366924,366928,366932,366936,366940,366944,366948,366952,366956,366960,366964,366968,366972,366976,366980,366984,366988,366992,366996,367000,367004,367008,367012,367016,367020,367024,367028,367032,367036,367040,367044,367048,367052,367056,367060,367064,367068,367072,367076,367080,367084,367088,367092,367096,367100,367104,367108,367112,367116,367120,367124,367128,367132,367136,367140,367144,367148,367152,367156,367160,367164,367168,367172,367176,367180,367184,367188,367192,367196,367200,367204,367208,367212,367216,367220,367224,367228,367232,367236,367240,367244,367248,367252,367256,367260,367264,367268,367272,367276,367280,367284,367288,367292,367296,367300,367304,367308,367312,367316,367320,367324,367328,367332,367336,367340,367344,367348,367352,367356,367360,367364,367368,367372,367376,367380,367384,367388,367392,367396,367400,367404,367408,367412,367416,367420,367424,367428,367432,367436,367440,367444,367448,367452,367456,367460,367464,367468,367472,367476,367480,367484,367488,367492,367496,367500,367504,367508,367512,367516,367520,367524,367528,367532,367536,367540,367544,367548,367552,367556,367560,367564,367568,367572,367576,367580,367584,367588,367592,367596,367600,367604,367608,367612,367616,367620,367624,367628,367632,367636,367640,367644,367648,367652,367656,367660,367664,367668,367672,367676,367680,367684,367688,367692,367696,367700,367704,367708,367712,367716,367720,367724,367728,367732,367736,367740,367744,367748,367752,367756,367760,367764,367768,367772,367776,367780,367784,367788,367792,367796,367800,367804,367808,367812,367816,367820,367824,367828,367832,367836,367840,367844,367848,367852,367856,367860,367864,367868,367872,367876,367880,367884,367888,367892,367896,367900,367904,367908,367912,367916,367920,367924,367928,367932,367936,367940,367944,367948,367952,367956,367960,367964,367968,367972,367976,367980,367984,367988,367992,367996,368000,368004,368008,368012,368016,368020,368024,368028,368032,368036,368040,368044,368048,368052,368056,368060,368064,368068,368072,368076,368080,368084,368088,368092,368096,368100,368104,368108,368112,368116,368120,368124,368128,368132,368136,368140,368144,368148,368152,368156,368160,368164,368168,368172,368176,368180,368184,368188,368192,368196,368200,368204,368208,368212,368216,368220,368224,368228,368232,368236,368240,368244,368248,368252,368256,368260,368264,368268,368272,368276,368280,368284,368288,368292,368296,368300,368304,368308,368312,368316,368320,368324,368328,368332,368336,368340,368344,368348,368352,368356,368360,368364,368368,368372,368376,368380,368384,368388,368392,368396,368400,368404,368408,368412,368416,368420,368424,368428,368432,368436,368440,368444,368448,368452,368456,368460,368464,368468,368472,368476,368480,368484,368488,368492,368496,368500,368504,368508,368512,368516,368520,368524,368528,368532,368536,368540,368544,368548,368552,368556,368560,368564,368568,368572,368576,368580,368584,368588,368592,368596,368600,368604,368608,368612,368616,368620,368624,368628,368632,368636,368640,368644,368648,368652,368656,368660,368664,368668,368672,368676,368680,368684,368688,368692,368696,368700,368704,368708,368712,368716,368720,368724,368728,368732,368736,368740,368744,368748,368752,368756,368760,368764,368768,368772,368776,368780,368784,368788,368792,368796,368800,368804,368808,368812,368816,368820,368824,368828,368832,368836,368840,368844,368848,368852,368856,368860,368864,368868,368872,368876,368880,368884,368888,368892,368896,368900,368904,368908,368912,368916,368920,368924,368928,368932,368936,368940,368944,368948,368952,368956,368960,368964,368968,368972,368976,368980,368984,368988,368992,368996,369000,369004,369008,369012,369016,369020,369024,369028,369032,369036,369040,369044,369048,369052,369056,369060,369064,369068,369072,369076,369080,369084,369088,369092,369096,369100,369104,369108,369112,369116,369120,369124,369128,369132,369136,369140,369144,369148,369152,369156,369160,369164,369168,369172,369176,369180,369184,369188,369192,369196,369200,369204,369208,369212,369216,369220,369224,369228,369232,369236,369240,369244,369248,369252,369256,369260,369264,369268,369272,369276,369280,369284,369288,369292,369296,369300,369304,369308,369312,369316,369320,369324,369328,369332,369336,369340,369344,369348,369352,369356,369360,369364,369368,369372,369376,369380,369384,369388,369392,369396,369400,369404,369408,369412,369416,369420,369424,369428,369432,369436,369440,369444,369448,369452,369456,369460,369464,369468,369472,369476,369480,369484,369488,369492,369496,369500,369504,369508,369512,369516,369520,369524,369528,369532,369536,369540,369544,369548,369552,369556,369560,369564,369568,369572,369576,369580,369584,369588,369592,369596,369600,369604,369608,369612,369616,369620,369624,369628,369632,369636,369640,369644,369648,369652,369656,369660,369664,369668,369672,369676,369680,369684,369688,369692,369696,369700,369704,369708,369712,369716,369720,369724,369728,369732,369736,369740,369744,369748,369752,369756,369760,369764,369768,369772,369776,369780,369784,369788,369792,369796,369800,369804,369808,369812,369816,369820,369824,369828,369832,369836,369840,369844,369848,369852,369856,369860,369864,369868,369872,369876,369880,369884,369888,369892,369896,369900,369904,369908,369912,369916,369920,369924,369928,369932,369936,369940,369944,369948,369952,369956,369960,369964,369968,369972,369976,369980,369984,369988,369992,369996,370000,370004,370008,370012,370016,370020,370024,370028,370032,370036,370040,370044,370048,370052,370056,370060,370064,370068,370072,370076,370080,370084,370088,370092,370096,370100,370104,370108,370112,370116,370120,370124,370128,370132,370136,370140,370144,370148,370152,370156,370160,370164,370168,370172,370176,370180,370184,370188,370192,370196,370200,370204,370208,370212,370216,370220,370224,370228,370232,370236,370240,370244,370248,370252,370256,370260,370264,370268,370272,370276,370280,370284,370288,370292,370296,370300,370304,370308,370312,370316,370320,370324,370328,370332,370336,370340,370344,370348,370352,370356,370360,370364,370368,370372,370376,370380,370384,370388,370392,370396,370400,370404,370408,370412,370416,370420,370424,370428,370432,370436,370440,370444,370448,370452,370456,370460,370464,370468,370472,370476,370480,370484,370488,370492,370496,370500,370504,370508,370512,370516,370520,370524,370528,370532,370536,370540,370544,370548,370552,370556,370560,370564,370568,370572,370576,370580,370584,370588,370592,370596,370600,370604,370608,370612,370616,370620,370624,370628,370632,370636,370640,370644,370648,370652,370656,370660,370664,370668,370672,370676,370680,370684,370688,370692,370696,370700,370704,370708,370712,370716,370720,370724,370728,370732,370736,370740,370744,370748,370752,370756,370760,370764,370768,370772,370776,370780,370784,370788,370792,370796,370800,370804,370808,370812,370816,370820,370824,370828,370832,370836,370840,370844,370848,370852,370856,370860,370864,370868,370872,370876,370880,370884,370888,370892,370896,370900,370904,370908,370912,370916,370920,370924,370928,370932,370936,370940,370944,370948,370952,370956,370960,370964,370968,370972,370976,370980,370984,370988,370992,370996,371000,371004,371008,371012,371016,371020,371024,371028,371032,371036,371040,371044,371048,371052,371056,371060,371064,371068,371072,371076,371080,371084,371088,371092,371096,371100,371104,371108,371112,371116,371120,371124,371128,371132,371136,371140,371144,371148,371152,371156,371160,371164,371168,371172,371176,371180,371184,371188,371192,371196,371200,371204,371208,371212,371216,371220,371224,371228,371232,371236,371240,371244,371248,371252,371256,371260,371264,371268,371272,371276,371280,371284,371288,371292,371296,371300,371304,371308,371312,371316,371320,371324,371328,371332,371336,371340,371344,371348,371352,371356,371360,371364,371368,371372,371376,371380,371384,371388,371392,371396,371400,371404,371408,371412,371416,371420,371424,371428,371432,371436,371440,371444,371448,371452,371456,371460,371464,371468,371472,371476,371480,371484,371488,371492,371496,371500,371504,371508,371512,371516,371520,371524,371528,371532,371536,371540,371544,371548,371552,371556,371560,371564,371568,371572,371576,371580,371584,371588,371592,371596,371600,371604,371608,371612,371616,371620,371624,371628,371632,371636,371640,371644,371648,371652,371656,371660,371664,371668,371672,371676,371680,371684,371688,371692,371696,371700,371704,371708,371712,371716,371720,371724,371728,371732,371736,371740,371744,371748,371752,371756,371760,371764,371768,371772,371776,371780,371784,371788,371792,371796,371800,371804,371808,371812,371816,371820,371824,371828,371832,371836,371840,371844,371848,371852,371856,371860,371864,371868,371872,371876,371880,371884,371888,371892,371896,371900,371904,371908,371912,371916,371920,371924,371928,371932,371936,371940,371944,371948,371952,371956,371960,371964,371968,371972,371976,371980,371984,371988,371992,371996,372000,372004,372008,372012,372016,372020,372024,372028,372032,372036,372040,372044,372048,372052,372056,372060,372064,372068,372072,372076,372080,372084,372088,372092,372096,372100,372104,372108,372112,372116,372120,372124,372128,372132,372136,372140,372144,372148,372152,372156,372160,372164,372168,372172,372176,372180,372184,372188,372192,372196,372200,372204,372208,372212,372216,372220,372224,372228,372232,372236,372240,372244,372248,372252,372256,372260,372264,372268,372272,372276,372280,372284,372288,372292,372296,372300,372304,372308,372312,372316,372320,372324,372328,372332,372336,372340,372344,372348,372352,372356,372360,372364,372368,372372,372376,372380,372384,372388,372392,372396,372400,372404,372408,372412,372416,372420,372424,372428,372432,372436,372440,372444,372448,372452,372456,372460,372464,372468,372472,372476,372480,372484,372488,372492,372496,372500,372504,372508,372512,372516,372520,372524,372528,372532,372536,372540,372544,372548,372552,372556,372560,372564,372568,372572,372576,372580,372584,372588,372592,372596,372600,372604,372608,372612,372616,372620,372624,372628,372632,372636,372640,372644,372648,372652,372656,372660,372664,372668,372672,372676,372976,373336,373712,374028,374352,374728,375064,375436,375748,376060,376336,376644,376976,377344,377644,378016,378448,378892,379140,379796,380328,380668,380956,381228,381516,381856,382180,382300,382304,382308,382312,382316,382320,382324,382328,382332,382540,382800,383276,383564,383944,384228,384504,384868,385104,385952,386336,387016,387252,387544,387780,388020,388300,388656,388900,389280,389552,389848,390144,390420,390664,391200,391536,391808,392080,392372,392800,393052,393244,393464,393708,393940,394156,394356,394608,394884,395124,395400,395608,395876,396120,396760,396956,397344,398012,398256,398448,398616,398688,398912,398960,399116,399428,399664,399800,400292,400528,400724,400920,401144,401308,401524,401740,401940,402140,402284,402496,402696,402880,403268,403452,403632,403816,404012,404216,404352,404532,404736,404872,405092,405496,405692,406028,406216,406220,406380,406444,406448,406452,406456,406460,406464,406468,406472,406476,406480,406484,406488,406492,406496,406500,406504,406508,406512,406516,406520,406524,406528,406532,406536,406540,406544,406548,406552,406556,406560,406564,406568,406572,406576,406580,406584,406588,406592,406596,406600,406604,406608,406612,406616,406620,406624,406628,406632,406636,406640,406644,406648,406652,406848,406992,407116,407240,407352,407500,407712,407872,408016,408132,408340,408368,408372,408376,408380,408384,408388,408392,408396,408400,408404,408408,408412,408416,408420,408424,408428,408432,408436,408440,408444,408448,408452,408456,408460,408464,408468,408472,408476,408480,408484,408488,408492,408496,408500,408504,408508,408512,408516,408520,408524,408528,408532,408536,408540,408544,408548,408552,408556,408560,408564,408568,408572,408576,408580,408584,408588,408592,408596,408600,408604,408608,408612,408616,408620,408624,408628,408632,408636,408640,408644,408648,408652,408656,408660,408664,408668,408672,408676,408680,408684,408688,408692,408696,408700,408704,408708,408712,408716,408720,408724,408728,408732,408736,408856,408996,409132,409264,409396,409556,409676,409808,410168,410348,410504,410824,410952,411136,411292,411460,411752,411864,412004,412132,412260,412388,412508,412628,412748,413120,413332,413448,413560,413676,413796,413936,414228,414376,414500,414592,414684,414776,414864,415132,415232,415320,415420,415512,415876,415960,416308,416412,416496,416784,417056,417152,417236,417316,417472,417552,418056,418192,418624,419020,419084,419248,420788,232,256,288,312,352,384,476,500,532,556,612,720,800,824,856,880,912,1224,1324,1352,1400,1428,1468,1660,1696,1720,1732,1748,1764,1808,1832,1864,1888,1916,1960,2008,2032,2068,2092,2124,2148,2188,2376,2400,2432,2456,2496,2552,2576,2608,2632,2664,2716,2740,2772,2796,2824,2848,3824,3964,3988,4020,4044,4188,4348,4384,4408,4432,4472,4496,4532,4656,4764,4820,4852,4900,4924,4972,5020,5044,5092,5112,5208,5224,5340,5356,5540,5728,5748,5940,5964,6144,6160,6172,6344,6368,6400,6424,6460,6516,6540,6572,6596,6624,6664,6696,6720,6752,6776,6812,6956,7384,7568,7608,7820,7876,8048,8076,8124,8152,8188,9076,9148,9180,9244,9276,9348,9496,9648,9680,9948,9972,9988,10036,10412,10436,10612,10636,10792,10900,11048,11132,11192,11272,11380,11592,11728,11784,12140,12404,12564,12632,12728,12776,12864,13172,13220,13276,13352,13628,13760,14072,14120,14488,14536,14620,14744,14892,14992,15064,15244,15268,15296,15320,15500,15884,16324,16348,16420,16464,16492,16540,16568,16608,16680,16744,16776,16820,16848,16896,16924,16964,17168,17212,17236,17256,17272,17288,17380,17404,17492,17536,17568,17652,17684,18012,18028,18104,18444,18512,18596,18708,18740,18856,18924,19088,19428,19656,19724,19792,19820,19876,19908,20104,20180,20208,20528,20732,20780,20912,21016,21068,21124,21148,21188,21212,21292,21360,21380,21488,21588,21780,21812,21836,21856,21880,21936,22040,22504,22532,22556,22588,22616,22688,22768,22796,22840,22932,22960,22988,23016,23040,23240,23268,23288,23312,23340,23508,23532,23560,23648,23704,23740,24000,24124,24224,24296,24392,24444,24520,24592,24736,25016,25040,25080,25128,25152,25208,25272,25296,25344,25388,25556,25592,25660,25784,25900,26076,26144,26184,26224,26248,26392,26492,26568,26608,26904,26956,27084,27192,27236,27444,27484,27644,28144,28620,28732,28860,28940,29000,29052,29084,29224,29652,29908,30528,30604,30740,30796,30900,30924,30964,31004,31088,31112,31204,31316,31388,31444,31516,31556,31640,31664,31740,31824,31896,32036,32144,32168,32220,32308,32348,32408,32460,32576,32660,32752,32888,32912,32976,33012,33224,33248,33280,33300,33368,33408,33548,33564,33576,33712,33732,33800,33820,33896,33916,33944,34032,34048,34132,34152,34220,34240,34316,34336,34364,34432,34460,34540,34888,34956,34984,35116,35144,35292,35336,35412,35440,35652,35764,35956,36004,36064,36240,36300,36340,36404,36468,36504,36616,36780,36808,37188,37212,37252,37304,37340,37364,37412,37460,37608,37676,37788,38000,38024,38060,38164,38200,38248,38340,38376,38408,38460,38528,38556,38628,38704,38732,38816,38948,39140,39672,39796,39948,40128,40152,40176,40208,40232,40256,40272,40308,40332,40376,40404,40428,40768,40872,40960,41048,41140,41168,41248,41272,41296,41328,41348,41440,41480,41504,41820,41844,41868,41892,42096,42156,42216,42420,42464,42488,42516,42544,42572,42600,42664,42784,42812,43128,43224,43304,43812,44268,44336,44360,44476,44668,44700,44776,44800,44832,44856,44880,44924,45004,45040,45168,45208,45296,45436,45672,45696,45728,45752,45776,45820,45920,45984,46148,46180,46204,46228,46272,46340,46384,46416,46440,46464,46508,46608,46632,46672,46696,46740,46768,46792,46984,47012,47116,47204,47304,47340,47364,47388,47496,47696,47768,47828,47888,47952,47972,48036,48060,48084,48232,48256,48280,48312,48336,48360,48388,48560,48576,48628,48652,48676,48708,48732,48756,48772,48808,48832,48876,48904,48928,49032,49164,49200,49224,49572,49696,49760,49772,49788,49800,49852,49884,49912,49940,49964,50036,50068,50116,50128,50148,50168,50192,50216,50228,50260,50280,50332,50380,50408,50432,50456,50504,50548,50580,50620,50640,50672,50696,50728,50764,50792,50824,50848,50884,50932,50956,50992,51016,51044,51076,51100,51132,51172,51192,51252,51264,51300,51968,51988,52020,52064,52084,52156,52176,52228,52272,52300,52332,52360,52384,52404,52436,52468,52492,53036,53108,53140,53160,53192,53272,53308,53496,53660,53716,53752,53864,53876,53928,53964,53992,54096,54140,54164,54188,54212,54236,54260,54284,54308,54352,54384,54424,54496,54548,54572,54596,54644,54676,54708,55156,55212,55236,55272,55296,55336,55384,55424,55440,55476,55516,55540,55572,55612,55624,55640,55664,55692,55720,55748,55776,55804,55832,55860,55884,55908,55932,55956,55980,56004,56028,56052,56084,56124,56164,56188,56212,56232,56268,56292,56304,56332,56364,56388,56408,56436,56468,56484,56516,56548,56572,56588,56620,56632,56648,56664,56680,56696,56712,56728,56744,56760,56776,56796,56816,56836,56868,56880,56908,56920,56948,56960,56988,57000,57016,57032,57056,57080,57112,57124,57152,57176,57208,57236,57252,57280,57292,57324,57352,57372,57396,57428,57440,57468,57500,57512,57548,57572,57596,57620,57644,57668,57692,57716,57772,57812,57836,57860,57904,57944,57972,58032,58064,58080,58108,58152,58168,58192,58228,58268,58288,58312,58344,58376,58408,58432,58464,58488,58520,58552,58604,58628,58660,58712,58752,58764,58792,58816,58848,58872,58908,58956,58988,59036,59048,59080,59128,59152,59216,59228,59244,59256,59280,59316,59340,59360,59408,59444,59468,59492,59512,59532,59568,59592,59612,59640,59684,59708,59740,59768,59880,59936,59976,60016,60048,60084,60116,60144,60184,60216,60328,60364,60384,60404,60428,60460,60484,60572,61004,61060,61100,61124,61180,61224,61256,61296,61328,61384,61412,61452,61500,61576,61620,61648,61688,61736,61784,61824,61900,61952,61984,62052,62084,62176,62220,62288,62328,62356,62396,62484,62512,62560,62584,62628,62640,62664,62696,62712,62724,62748,62776,62800,62840,62864,62892,62928,62952,62976,63000,63024,63048,63068,63088,63112,63144,63184,63212,63244,63264,63288,63316,63352,63376,63424,63456,63468,63492,63544,63580,63612,63640,63652,63676,63692,63716,63772,63792,63820,63848,63860,63880,63916,63944,63980,64004,64036,64060,64084,64100,64124,64156,64180,64208,64232,64256,64280,64312,64332,64352,64376,64400,64428,64460,64492,64532,64564,64608,64644,64724,64784,64812,64860,64908,64956,64980,65012,65048,65076,65132,65148,65168,65188,65216,65228,65252,65264,65288,65300,65324,65336,65364,65384,65400,65424,65452,65488,65512,65536,65556,65580,65608,65640,65664,65676,65700,65724,65768,65844,65876,65924,65964,66000,66052,66080,66116,66140,66188,66220,66280,66320,66356,66436,66476,66492,66536,66568,66612,66656,66740,66788,66860,66900,66936,66972,67000,67020,67088,67124,67164,67204,67244,67276,67312,67340,67364,67408,67440,67472,67520,67540,67580,67624,67660,67680,67720,67764,67804,67844,67872,67896,67920,67948,67988,68016,68048,68088,68116,68140,68164,68184,68236,68264,68324,68368,68404,68476,68520,68536,68568,68596,68636,68676,68748,68796,68868,68904,68940,68980,69012,69032,69084,69120,69164,69204,69244,69268,69304,69336,69360,69392,69424,69452,69500,69520,69552,69584,69620,69640,69668,69688,69716,69748,69792,69820,69840,69884,69932,70000,70020,70072,70092,70112,70144,70436,70464,70484,70512,70564,70580,70600,70620,70640,70664,70688,70808,70860,70912,70940,70960,70980,71000,71028,71048,71088,71104,71124,71144,71168,71248,71264,71300,71324,71356,71380,71404,71420,71504,71528,71560,71584,71628,71700,71724,71756,71780,71804,71896,71920,71952,71976,72000,72036,72076,72112,72136,72160,72220,72244,72324,72380,72416,72440,72456,72468,72484,72576,72600,72632,72656,72680,72812,72920,72952,72976,73008,73032,73056,73348,73380,73460,73484,73516,73540,73564,73600,73864,73888,73920,73944,73968,74004,74132,74196,74220,74252,74276,74304,74348,74492,74600,74700,74732,74756,74788,74812,74840,74884,75040,75076,75100,75132,75156,75184,75228,75256,75272,75380,75416,75440,75512,75528,75548,75604,75620,75692,75828,75852,75872,75904,75924,75976,75992,76016,76032,76064,76080,76100,76120,76140,76160,76180,76212,76244,76304,76336,76356,76380,76400,76424,76444,76492,76524,76652,76716,76748,76812,76896,76964,77064,77096,77128,77176,77196,77228,77272,77292,77332,77368,77400,77464,77536,77568,77628,77668,77680,77720,77780,77816,77856,77916,77948,77976,78000,78024,78056,78148,78208,78240,78272,78332,78376,79132,79164,79196,79244,79276,79320,79392,79424,79504,79536,79568,79628,79648,79664,79772,79816,79856,79876,79908,79940,79972,80072,80096,80120,80164,80192,80216,80260,80272,80296,80328,80364,80384,80408,80420,80440,80464,80516,80576,80604,80652,80680,80716,80748,80808,80856,80904,80952,80976,81072,81120,81140,81200,81220,81252,81272,81288,81360,81380,81412,81436,81460,81480,81524,81540,81588,81616,81640,81656,81684,81736,81764,81800,81824,81844,81884,81904,81940,81964,81992,82012,82036,82060,82084,82112,82160,82180,82216,82260,82288,82336,82368,82396,82412,82472,82492,82524,82568,82620,82644,82684,82728,82756,82812,82840,82868,82892,82928,82952,82976,83000,83024,83044,83072,83100,83140,83176,83212,83240,83260,83296,83336,83364,83388,83412,83464,83524,83552,83600,83628,83664,83696,83756,83796,83824,83860,83964,84012,84044,84132,84188,84220,84244,84268,84284,84316,84336,84360,84408,84432,84556,84580,84604,84636,84680,84760,84792,84824,84872,84912,84988,85012,85092,85120,85136,85152,85168,85188,85220,85252,85300,85352,85372,85404,85432,85452,85492,85504,85540,85576,85612,85644,85664,85688,85728,85756,85832,85972,85984,86012,86060,86084,86108,86132,86160,86180,86200,86232,86260,86308,86332,86364,86396,86432,86456,86468,86480,86504,86532,86556,86588,86612,86636,86656,86676,86700,86716,86748,86768,86792,86812,86836,86856,86880,86900,86920,86968,86988,87016,87044,87068,87104,87140,87192,87228,87264,87296,87320,87360,87400,87460,87492,87536,87556,87584,87604,87624,87648,87664,87684,87716,87752,87776,87824,87856,87880,87904,87936,87976,88004,88040,88088,88128,88156,88180,88212,88284,88324,88348,88372,88396,88432,88456,88484,88520,88544,88564,88592,88620,88640,88668,88692,88712,88740,88764,88804,88816,88840,88892,88932,88964,88996,89036,89056,89076,89096,89136,89148,89168,89200,89232,89276,89296,89308,89520,89544,89576,89600,89620,89652,89708,89732,89752,89768,89796,89812,89832,89852,89880,89900,89940,89964,89996,90052,90076,90096,90120,90140,90160,90180,90200,90252,90300,90332,90352,90380,90400,90432,90464,90484,90504,90548,90568,90588,90628,90648,90668,90720,90748,90796,90892,90956,90976,91016,91036,91056,91100,91156,91200,91756,91800,91844,91868,91920,91992,92060,92088,92108,92124,92176,92204,92224,92240,92352,92384,92404,92428,92456,92476,92492,92544,92572,92592,92608,92720,92752,92772,92824,92848,92892,92936,92968,93012,93032,93052,93096,93132,93156,93240,93260,93304,93348,93384,93408,93436,93456,93496,93564,93592,93608,93636,93656,93668,93684,93732,93756,93796,93824,93844,93860,93888,93904,94172,94196,94216,94236,94260,94280,94304,94324,94352,94372,94396,94436,94460,94476,94504,94528,94556,94584,94608,94656,94680,94728,94788,94832,94860,94876,94904,94932,94980,95004,95052,95108,95132,95168,95192,95216,95252,95276,95300,95392,95416,95436,95456,95480,95500,95524,95544,95572,95592,95616,95656,95680,95708,95732,95760,95776,95804,95828,95876,95900,95948,96008,96056,96088,96104,96132,96160,96208,96232,96280,96336,96360,96400,96424,96460,96480,96504,96528,96564,96588,96624,96644,96672,96708,96732,96756,96772,96796,96812,96840,96860,96880,96904,96924,96944,97008,97028,97048,97068,97088,97108,97128,97144,97176,97200,97228,97252,97288,97468,97512,97552,97592,97624,97656,97688,97708,97768,97808,97832,97948,97988,98052,98068,98088,98100,98124,98144,98176,98196,98228,98252,98300,98332,98356,98380,98404,98420,98432,98456,98488,98504,98528,98560,98592,98612,98664,98696,98704,98732,98756,98772,98792,98812,98832,98864,98884,98904,98916,98936,98960,99004,99020,99044,99060,99104,99124,99148,99176,99208,99220,99240,99280,99320,99352,99380,99392,99412,99428,99452,99476,99504,99556,99596,99636,99668,99696,99708,99728,99744,99768,99800,99852,99872,99904,99924,99948,99980,100004,100016,100044,100068,100084,100104,100124,100144,100176,100196,100220,100256,100276,100296,100316,100336,100348,100356,100376,100408,100440,100456,100496,100520,100552,100576,100604,100628,100648,100668,100700,100724,100752,100776,100796,100816,100840,100872,100888,100908,100940,100964,100992,101016,101028,101048,101080,101104,101132,101156,101168,101192,101216,101240,101256,101276,101300,101340,101444,101460,101480,101536,101584,101616,101696,101716,101736,101780,101884,101912,101980,102008,102048,102072,102116,102140,102164,102184,102228,102248,102276,102304,102424,102444,102472,102524,102556,102612,102640,102660,102684,102704,102728,102756,102784,102812,102836,102868,102896,102920,102952,102972,103000,103044,103068,103092,103112,103140,103172,103200,103316,103344,103412,103440,103480,103524,103592,103632,103660,103712,103752,103780,103808,103836,103880,103912,103948,103972,104000,104028,104056,104092,104116,104144,104172,104200,104240,104264,104288,104324,104352,104380,104460,104528,104596,104660,104728,104796,104856,104880,104916,104956,104996,105040,105076,105104,105148,105176,105188,105204,105224,105236,105252,105272,105292,105316,105336,105364,105376,105504,105524,105536,105600,105636,105672,105704,105728,105748,105760,105776,105800,105824,105876,105900,105948,105964,105984,106016,106052,106064,106088,106108,106128,106160,106212,106240,106288,106336,106364,106404,106432,106476,106512,106552,106580,106616,106644,106680,106724,106768,106812,106860,106888,106928,106956,106996,107024,107068,107104,107140,107168,107208,107236,107276,107304,107344,107372,107396,107416,107436,107456,107508,107552,107576,107604,107652,107688,107712,107736,107756,107784,107808,107848,107868,107892,107920,107944,107968,108020,108060,108084,108120,108160,108216,108256,108292,108332,108364,108384,108416,108440,108608,108636,108692,108720,108740,108764,108784,108864,108924,108940,108968,108984,109092,109112,109132,109152,109172,109192,109216,109232,109260,109276,109296,109316,109356,109376,109396,109448,109476,109524,109968,109988,110016,110036,110172,110200,110220,110244,110268,110288,110352,110372,110412,110480,110500,110540,110564,110580,110616,110632,110668,110684,110716,110752,110784,110808,110848,110860,110880,110900,110916,110968,111008,111032,111068,111092,111108,111128,111152,111176,111232,111252,111280,111300,111360,111388,111404,111428,111448,111468,111504,111528,111552,111592,111620,111632,111664,111700,111724,111748,111772,111796,111816,111840,111852,111916,111940,111964,111992,112032,112052,112200,112224,112516,112552,112592,112620,112660,112680,112704,112724,112744,112768,112804,112844,112868,112884,112908,112932,112956,112984,113000,113024,113080,113132,113152,113168,113196,113216,113240,113300,113332,113360,113392,113424,113444,113468,113492,113520,113540,113564,113588,113644,113664,113688,113724,113760,113792,113856,113872,113892,113944,113984,114004,114028,114056,114096,114116,114140,114176,114196,114220,114256,114284,114332,114356,114380,114404,114428,114452,114484,114560,114588,114612,114640,114656,114680,114732,114752,114768,114804,114844,114896,114948,115004,115072,115092,115124,115144,115172,115204,115260,115292,115312,115352,115384,115404,115432,115464,115596,115624,115688,115716,115740,115772,115804,115816,115844,115872,115916,116004,116056,116072,116112,116128,116160,116176,116240,116268,116316,116384,116408,116424,116456,116472,116500,116544,116564,116596,116616,116652,116672,116708,116728,116768,116800,116856,116884,116912,116928,116948,116968,116992,117008,117024,117056,117084,117104,117136,117160,117184,117208,117244,117312,117344,117376,117420,117480,117500,117532,117552,117572,117612,117636,117656,117688,117712,117736,117768,117816,117864,117896,117916,117940,117964,118024,118056,118100,118112,118132,118160,118196,118236,118260,118280,118316,118340,118364,118396,118444,118548,118584,118636,118652,118684,118700,118724,118736,118768,118784,118816,118832,118864,118880,118912,118928,118960,118976,119008,119024,119056,119072,119104,119120,119152,119168,119200,119216,119248,119264,119296,119312,119344,119360,119392,119408,119440,119456,119488,119504,119536,119552,119584,119600,119632,119648,119680,119696,119728,119744,119776,119792,119824,119840,119872,119888,119904,119928,119960,119972,119996,120020,120032,120056,120068,120096,120108,120140,120152,120164,120196,120208,120232,120244,120268,120280,120304,120328,120348,120380,120392,120424,120436,120468,120480,120512,120524,120544,120568,120580,120604,120616,120640,120652,120676,120688,120712,120724,120748,120760,120784,120796,120820,120832,120856,120868,120888,120912,120924,120948,120960,120984,120996,121020,121032,121056,121068,121092,121104,121128,121140,121164,121176,121200,121212,121236,121248,121268,121296,121312,121348,121364,121380,121408,121424,121460,121476,121492,121520,121536,121572,121588,121604,121620,121644,121668,121680,121704,121728,121740,121764,121788,121800,121824,121848,121860,121884,121908,121920,121944,121968,121980,122004,122016,122040,122052,122072,122088,122108,122132,122144,122164,122184,122204,122224,122244,122264,122284,122304,122324,122344,122360,122384,122396,122424,122440,122476,122492,122508,122536,122548,122576,122588,122616,122752,122788,122812,122836,122848,122912,122948,122972,122996,123008,123064,123088,123116,123140,123160,123184,123220,123248,123272,123328,123356,123388,123424,123452,123480,123508,123544,123576,123604,123652,123680,123708,123740,123776,123808,123836,123868,123904,123944,123984,124024,124052,124096,124124,124164,124192,124236,124260,124284,124308,124336,124364,124392,124420,124448,124476,124504,124532,124560,124588,124612,124640,124684,124712,124736,124760,124800,124832,124860,124896,124932,124964,124988,125012,125040,125068,125096,125124,125148,125172,125196,125216,125240,125272,125304,125348,125364,125492,125520,125584,125676,125784,125820,125852,125884,125908,125944,125980,126036,126076,126104,126140,126176,126212,126284,126316,126340,126368,126396,126440,126468,126496,126528,126552,126652,126684,126744,126784,126820,126892,126932,126948,126984,127016,127056,127100,127180,127228,127300,127340,127376,127412,127440,127460,127516,127544,127576,127608,127640,127664,127700,127728,127752,127784,127816,127848,127896,127916,127952,127984,128020,128040,128088,128116,128144,128188,128220,128248,128276,128296,128432,128456,128488,128524,128584,128612,129256,129300,129368,129388,129444,129484,129596,129624,129656,129688,129728,129784,129832,129928,129968,130076,130140,130168,130196,130236,130264,130304,130328,130356,130380,130408,130436,130476,130500,130528,130556,130596,130620,130656,130684,130708,130740,130788,130824,130844,130884,130904,130932,130960,130988,131016,131184,131220,131248,131260,131284,131308,131320,131336,131348,131372,131384,131412,131424,131448,131484,131496,131520,131556,131612,131644,131684,131716,131740,131780,131800,131824,131864,131884,131908,131952,131972,131996,132032,132072,132100,132120,132164,132204,132252,132288,132356,132436,132472,132584,132632,132664,132688,132716,132740,132772,132792,132824,132848,132880,132932,132956,132980,133004,133052,133092,133120,133152,133184,133212,133248,133272,133300,133324,133348,133372,133400,133444,133496,133516,133536,133560,133584,133612,133624,133672,133720,133732,133840,133848,133864,133884,133904,133924,133944,133964,133984,134004,134024,134044,134056,134072,134092,134112,134140,134168,134180,134192,134204,134228,134248,134272,134324,134612,134644,134676,134716,134756,134820,134852,134888,134920,134948,134976,135028,135052,135092,135132,135164,135204,135260,135284,135316,135348,135388,135428,135460,135504,135548,135592,135644,135684,135736,135792,135816,135848,135880,135912,135944,135984,136024,136088,136120,136156,136188,136236,136268,136296,136340,136364,136416,136440,136464,136484,136504,136524,136548,136568,136592,136620,136644,136656,136672,136692,136708,136872,136900,136952,136980,137008,137036,137068,137096,137140,137204,137236,137268,137296,137324,137364,137388,137404,137432,137452,137480,137496,137528,137556,137588,137616,137656,137700,137720,137760,137796,137812,137848,137876,137920,137948,137976,138008,138028,138048,138080,138100,138124,138160,138184,138216,138244,138272,138288,138316,138344,138360,138392,138412,138436,138464,138480,138504,138524,138552,138584,138600,138628,138656,138688,138704,138736,138772,138792,138816,138832,138852,138880,138904,138936,138968,138984,139020,139036,139064,139096,139136,139160,139184,139208,139220,139236,139264,139308,139332,139348,139364,139376,139528,139608,139628,139644,139668,139748,139768,139808,139832,139856,139936,139956,139980,140008,140032,140120,140148,140168,140192,140216,140240,140320,140340,140400,140424,140448,140528,140548,140580,140608,140632,140712,140732,140792,140816,140840,140920,140940,140972,141000,141024,141100,141120,141136,141160,141236,141256,141272,141436,141488,141516,141544,141576,141600,141628,141652,141704,141736,141760,141788,141812,141840,141872,141896,141924,141948,141980,142012,142036,142064,142088,142140,142160,142204,142228,142252,142284,142308,142336,142360,142396,142432,142516,142560,142596,142620,142644,142676,142700,142728,142752,142780,142812,142836,142864,142888,142948,142988,143008,143056,143084,143116,143148,143164,143184,143212,143244,143316,143344,143368,143560,143636,143704,143740,143788,143824,143860,143892,143908,143940,143956,143984,144044,144104,144168,144196,144248,144268,144336,144400,144428,144460,144516,144568,144628,144668,144700,144752,144812,144860,144916,144940,144952,145004,145020,145056,145072,145124,145160,145176,145212,145228,145292,145316,145332,145364,145380,145400,145420,145456,145512,145576,145600,145632,145656,145844,145856,147384,147416,147424,147464,147504,147536,149756,149764,149916,149940,149968,149992,150048,150080,150144,150212,150248,150272,150304,150340,150364,150392,150452,150476,150512,150548,150608,150676,150740,150804,150864,150900,150964,150984,150996,151032,151068,151084,151112,151128,151188,151208,151228,151248,151284,151296,151312,151332,151352,151384,151408,151432,151504,151580,151616,151640,151664,151696,151720,151756,151988,152096,152120,152144,152180,152228,152260,152328,152380,152468,152492,152504,152520,152548,152576,152592,152612,152632,152660,152692,152708,152740,152756,152776,152796,152820,152844,152868,152892,152920,152936,152960,152980,153004,153028,153052,153112,153132,153152,153176,153200,153220,153236,153260,153284,153300,153328,153356,153372,153400,153424,153448,153472,153496,153524,153540,153564,153600,153624,153672,153704,153728,153752,153776,153796,153820,153844,153856,153876,153956,153980,153992,154020,154036,154056,154080,154104,154128,154140,154168,154184,154204,154228,154252,154264,154292,154308,154328,154352,154376,154400,154424,154436,154464,154480,154500,154516,154668,154692,154720,154744,154788,154824,154892,154940,154992,155020,155044,155068,155104,155128,155152,155176,155212,155252,155280,155316,155344,155380,155416,155444,155480,155508,155552,155572,155608,155636,155672,155708,155736,155748,155780]);
  relocations = relocations.concat([155804,155848,155896,155980,155996,156016,156044,156092,156144,156192,156220,156260,156288,156328,156356,156396,156424,156460,156476,156496,156524,156572,156600,156656,156688,156716,156736,156776,156796,156828,156988,157016,157052,157152,157176,157236,157260,157320,157344,157396,157420,157484,157516,157532,157680,157708,157884,157912,158144,158168,158224,158348,158456,158580,158700,158720,158928,158960,158984,159040,159076,159096,159128,159156,159176,159204,159224,159252,159272,159300,159320,159348,159368,159396,159416,159444,159464,159488,159508,159536,159556,159580,159600,159624,159644,159668,159688,159712,159732,159756,159776,159800,159812,159828,159848,159868,159892,159908,159928,159952,159968,159988,160012,160056,160076,160096,160112,160132,160152,160184,160204,160224,160248,160288,160308,160340,160360,160380,160404,160444,160464,160504,160520,160548,160560,160572,160588,160612,160632,160652,160692,160756,160804,160824,160848,160872,160892,160924,160948,160968,160988,161008,161036,161060,161080,161100,161120,161168,161188,161208,161228,161252,161268,161292,161332,161352,161392,161404,161424,161452,161492,161508,161536,161548,161576,161604,161632,161660,161692,161704,161728,161756,161784,161812,161840,161868,161888,161912,161924,161932,161944,161972,162000,162080,162104,162132,162152,162176,162204,162992,163144,163524,163644,163668,163688,163900,163932,163960,163992,164020,164056,164088,164116,164128,164156,164172,164220,164332,164360,164388,164468,164508,164576,164612,164672,164712,164740,164768,164868,164912,164940,164996,165060,165096,165164,165228,165288,165368,165428,165464,165524,165556,165588,165620,165644,165676,165700,165732,165828,165868,165892,165920,165944,165968,165996,166036,166060,166128,166152,166180,166228,166252,166280,166316,166340,166368,166424,166460,166484,166512,166540,166564,166592,166736,166780,166880,166928,167008,167132,167168,167220,167244,167272,167296,167320,167348,167384,167412,167440,167464,167492,167512,167532,167556,167568,167588,167608,167636,167656,167676,167700,167728,167748,167872,167900,167928,167948,167984,168012,168088,168120,168140,168192,168212,168264,168284,168296,168324,168344,168368,168388,168408,168440,168468,168488,168520,168548,168576,168616,168644,168672,168700,168728,168756,168776,168816,168844,168864,168896,168924,168944,168976,169004,169024,169044,169056,169112,169144,169164,169216,169236,169292,169312,169324,169380,169412,169432,169488,169528,169564,169592,169616,169644,169672,169700,169728,169752,169780,169808,169836,169856,169924,169956,169976,170024,170044,170056,170180,170224,170256,170304,170348,170376,170416,170444,170472,170496,170524,170572,170600,170636,170664,170724,170760,170844,170880,171048,171072,171100,171140,171164,171192,171244,171268,171292,171320,171344,171372,171408,171432,171456,171488,171516,171548,171576,171636,171684,171716,171756,171784,171800,171828,171856,171876,172032,172060,172072,172096,172128,172152,172188,172232,172244,172288,172308,172332,172368,172388,172416,172472,172536,172580,172608,172628,172648,172664,172684,172696,172712,172740,172756,172776,172788,172816,172828,172852,172864,172880,172904,172936,172956,172980,173008,173032,173064,173084,173108,173144,173180,173208,173244,173264,173276,173332,173348,173368,173396,173428,173460,173500,173520,173556,173576,173596,173620,173640,173656,173672,173684,173704,173724,173740,173756,173784,173796,173828,173848,173876,173912,173948,173988,174008,174028,174052,174068,174092,174104,174128,174140,174164,174196,174224,174252,174368,174404,174428,174460,174492,174516,174548,174572,174604,174628,174660,174696,174720,174752,174776,174808,174832,174868,174924,174952,174964,174996,175008,175036,175056,175084,175108,175128,175148,175204,175224,175252,175272,175296,175316,175340,175360,175384,175404,175428,175448,175472,175492,175524,175560,175584,175608,175628,175652,175672,175692,175716,175740,175764,175796,175820,175844,175876,175892,175912,175932,175952,175972,175992,176012,176032,176052,176072,176092,176112,176132,176156,176180,176204,176224,176248,176268,176288,176312,176336,176360,176392,176416,176440,176472,176488,176508,176528,176548,176568,176588,176608,176628,176648,176668,176688,176708,176728,176740,176756,176872,176900,176928,176952,176992,177020,177064,177084,177112,177316,177332,177360,177388,177428,177484,177516,177540,177592,177624,177648,177704,177736,177760,177816,177848,177884,177928,177952,178016,178088,178132,178192,178256,178296,178360,178400,178460,178532,178556,178592,178648,178752,178780,178856,178884,178960,178988,179140,179172,179204,179236,179268,179476,179512,179540,179576,179600,179628,179664,179688,179724,179752,179788,179816,179844,179888,179988,180024,180048,180112,180184,180308,180336,180388,180508,180532,180568,180592,180604,180640,180680,180756,180784,180820,180844,180872,180908,181020,181064,181120,181136,181180,181196,181240,181256,181300,181316,181360,181376,181480,181512,181556,181588,181656,181680,181700,181724,181748,181772,181796,181820,181844,181868,181892,181916,181940,181964,181988,182012,182036,182060,182084,182108,182132,182156,182180,182204,182228,182252,182276,182292,182320,182344,182372,182400,182416,182444,182460,182484,182508,182524,182548,182576,182592,182612,182640,182668,182692,182716,182740,182764,182788,182812,182832,182852,182872,182892,182912,182932,182952,182972,182992,183016,183036,183056,183076,183096,183116,183136,183156,183176,183196,183216,183240,183260,183280,183300,183320,183348,183364,183392,183408,183436,183452,183480,183496,183524,183540,183568,183584,183604,183624,183640,183664,183676,183700,183720,183744,183764,183788,183812,183836,183860,183884,183908,183932,183956,183980,184004,184020,184040,184060,184084,184116,184128,184156,184188,184360,184384,184400,184420,184440,184460,184480,184516,184540,184560,184596,184616,184636,184656,184676,184704,184724,184752,184792,184808,184836,184852,184880,184896,184924,184940,184960,184988,185008,185040,185064,185096,185120,185148,185180,185200,185224,185264,185292,185316,185344,185364,185400,185416,185444,185460,185488,185504,185532,185548,185600,185620,185656,185672,185700,185716,185744,185760,185788,185804,185824,185844,185904,185924,186048,186088,186136,186164,186220,186240,186288,186312,186340,186368,186420,186440,186460,186480,186608,186648,186704,186744,186792,186820,186872,186900,186952,187008,187052,187112,187136,187164,187188,187220,187248,187280,187308,187340,187368,187400,187428,187460,187488,187520,187548,187576,187604,187632,187688,187716,187760,187784,187840,187864,188032,188080,188120,188168,188196,188248,188276,188328,188384,188428,188488,188512,188544,188572,188604,188632,188664,188692,188724,188752,188780,188844,188872,188916,188940,188984,189012,189040,189068,189096,189124,189160,189200,189228,189264,189304,189512,189548,189596,189612,189640,189656,189668,189700,189716,189744,189760,189772,189804,189820,189848,189864,189876,189908,189920,189952,189964,189996,190008,190040,190056,190084,190100,190112,190148,190164,190192,190208,190220,190256,190272,190300,190316,190328,190364,190380,190408,190424,190436,190472,190488,190516,190532,190544,190580,190596,190624,190640,190652,190688,190704,190732,190748,190760,190796,190812,190840,190856,190868,190904,190920,190948,190964,190976,191012,191028,191056,191072,191084,191120,191136,191164,191180,191192,191228,191244,191272,191288,191300,191328,191460,191516,191540,191640,191656,191688,191740,191780,191800,191876,191900,191944,192008,192052,192092,192144,192212,192264,192332,192384,192416,192440,192476,192500,192536,192584,192616,192680,192724,192748,192776,192824,192848,193028,193060,193092,193192,193300,193352,193408,193444,193540,193620,194040,194100,194128,194188,194220,194256,194280,194356,194384,194396,194428,194476,194488,194516,194564,194588,194648,194668,194704,194752,194776,194808,194880,194952,194980,195008,195092,195120,195148,195176,195200,195240,195316,195336,195360,195392,195412,195436,195468,195492,195508,195544,195568,195596,195608,195624,195664,195688,195704,195736,195756,195788,195820,195840,195872,195892,195916,195944,195976,196000,196016,196056,196080,196096,196128,196148,196180,196212,196232,196264,196284,196308,196336,196436,196460,196492,196516,196552,196580,196604,196636,196656,196680,196696,196840,196876,196916,196944,196968,196984,197020,197072,197112,197200,197220,197296,197344,197372,197400,197428,197440,197492,197524,197572,197648,197676,197748,197760,197792,197808,197828,197916,197972,197992,198044,198056,198084,198104,198120,198140,198172,198200,198244,198320,198340,198400,198412,198444,198460,198552,198576,198604,198628,198656,198732,198752,198780,198804,198832,198884,198928,198948,199008,199056,199076,199132,199152,199180,199204,199232,199352,199396,199416,199444,199464,199492,199516,199544,199680,199700,199728,199752,199780,199820,199852,199872,199896,200024,200072,200104,200136,200168,200184,200212,200228,200256,200280,200292,200304,200356,200372,200396,200424,200460,200496,200528,200592,200628,200660,200676,200704,200732,200764,200800,200860,200884,200916,200944,200976,201004,201028,201052,201092,201144,201176,201204,201228,201264,201288,201348,201384,201408,201444,201488,201512,201616,201628,201652,201696,201728,201776,201876,201904,201928,201956,201972,201992,202012,202044,202092,202108,202128,202172,202220,202348,202388,202416,202428,202464,202512,202548,202608,202644,202672,202708,202736,202760,202772,202792,202820,202832,202900,202928,202948,202968,202988,203008,203020,203036,203064,203080,203100,203128,203140,203168,203180,203308,203324,203356,203372,203400,203424,203464,203488,203552,203580,203592,203628,203680,203720,203756,203796,203844,203872,203888,203924,203944,203976,203996,204024,204064,204100,204136,204176,204216,204244,204276,204308,204368,204396,204408,204444,204500,204528,204556,204568,204580,204808,204840,204972,205000,205056,205084,205152,205176,205208,205268,205288,205396,205428,205452,205492,205524,205552,205584,205804,205852,205888,205932,205992,206048,206088,206156,206200,206260,206336,206376,206416,206460,206500,206572,206628,206668,206796,206836,206876,206904,207016,207072,207252,207288,207332,207364,207404,207448,207480,207512,207552,207596,207628,207668,207712,207744,207812,207848,207896,207936,207988,208028,208064,208084,208104,208136,208172,208196,208288,208308,208348,208384,208440,208464,208584,208612,208664,208688,208720,208744,208788,208812,208840,208868,208896,208920,208972,208996,209024,209052,209088,209192,209224,209248,209280,209316,209344,209364,209400,209428,209460,209484,209516,209548,209568,209624,209644,209700,209732,209756,209784,209812,209840,209916,209940,209964,209992,210028,210044,210072,210088,210116,210132,210160,210176,210300,210360,210384,210408,210440,210460,210512,210544,210572,210600,210620,210664,210688,210712,210728,210740,210748,210768,210792,210804,210816,210840,210872,210896,210916,210936,210972,210992,211044,211064,211092,211128,211172,211200,211248,211296,211312,211340,211388,211416,211436,211464,211500,211532,211556,211600,211624,211648,211684,211700,211724,211748,211764,211788,211864,211888,211968,212084,212104,212124,212144,212276,212348,212372,212420,212464,212512,212576,212632,212704,212776,212808,212820,212840,212856,212872,212904,212940,212972,212992,213012,213036,213080,213104,213308,213328,213356,213388,213432,213464,213528,213544,213564,213604,213648,213680,213696,213732,213768,213788,213876,213920,213964,214008,214052,214096,214140,214184,214228,214272,214332,214380,214420,214460,214488,214520,214656,214664,214776,214832,214876,214884,214908,214940,214956,214976,214996,215008,215016,215024,215060,215080,215112,215136,215176,215196,215220,215236,215256,215276,215296,215328,215344,215368,215380,215388,215396,215404,215428,215464,215480,215512,215536,215556,215584,215596,215608,215624,215636,215644,215652,215660,215668,215676,215684,215708,215740,215784,215812,215832,215852,215880,215896,215920,215936,215948,215960,215980,215996,216016,216032,216048,216068,216084,216104,216116,216144,216168,216188,216200,216212,216240,216268,216288,216308,216336,216352,216376,216392,216404,216416,216436,216452,216472,216488,216504,216524,216540,216560,216572,216680,216712,216748,216792,216824,216864,216932,216956,217024,217076,217096,217140,217212,217252,217288,217336,217376,217416,217472,217528,217552,217624,217656,217680,217712,217736,217788,217828,217868,217888,217916,217928,217948,218120,218148,218168,218200,218228,218244,218288,218300,218336,218356,218384,218420,218436,218456,218476,218488,218512,218528,218548,218576,218596,218612,218628,218648,218676,218692,218712,218748,218776,218796,218812,218828,218848,218876,218892,218912,218956,218984,219004,219024,219036,219048,219068,219096,219136,219164,219180,219204,219240,219256,219296,219316,219332,219364,219384,219432,219448,219460,219468,219488,219508,219520,219648,219732,219752,219808,219828,219916,219972,220000,220012,220060,220088,220116,220128,220152,220180,220252,220308,220336,220348,220380,220408,220420,220464,220540,220624,220664,220700,220724,220760,220784,220820,220848,220872,220884,220904,220932,221028,221048,221076,221108,221152,221184,221248,221264,221284,221320,221352,221416,221440,221464,221488,221512,221528,221544,221572,221592,221620,221656,221680,221704,221740,221760,221784,221808,221840,221860,221872,221936,221960,221988,222032,222064,222092,222116,222140,222164,222192,222224,222360,222376,222404,222428,222448,222468,222520,222552,222568,222588,222608,222628,222668,222684,222704,222724,222744,222828,222856,222872,222888,222924,222972,222992,223048,223068,223092,223136,223160,223184,223204,223220,223260,223280,223300,223320,223344,223384,223520,223552,223616,223680,223728,223820,223856,223896,223952,223980,224020,224048,224088,224124,224148,224184,224196,224296,224328,224340,224368,224436,224460,224472,224532,224588,224632,224736,224768,224788,224804,224824,224844,224868,224888,224912,224936,224960,224988,225000,225020,225040,225060,225088,225108,225132,225152,225176,225188,225224,225252,225280,225292,225328,225348,225372,225392,225416,225428,225464,225476,225504,225532,225552,225576,225608,225632,225652,225676,225704,225716,225744,225768,225788,225808,225832,225844,225856,225864,225908,225920,225948,225960,226124,226176,226220,226236,226260,226276,226308,226328,226384,226440,226456,226472,226900,226916,226984,227004,227028,227048,227072,227092,227116,227136,227160,227180,227204,227224,227248,227268,227292,227312,227388,227400,227436,227460,227492,227516,227548,227572,227600,227620,227640,227660,227680,227704,227788,227812,227832,227848,227868,227888,227912,227960,228096,228132,228156,228184,228200,228236,228280,228308,228328,228396,228412,228432,228460,228476,228496,228516,228544,228564,228576,228596,228628,228676,228696,228724,228736,228764,228788,228804,228860,228888,228936,228948,228968,228988,229068,229088,229120,229140,229164,229188,229204,229232,229252,229268,229288,229316,229340,229368,229396,229424,229444,229456,229476,229508,229556,229576,229604,229616,229644,229668,229684,229788,229824,229848,229864,229932,229960,230016,230032,230068,230092,230116,230152,230188,230212,230272,230296,230316,230348,230376,230404,230428,230452,230476,230504,230536,230560,230580,230624,230648,230672,230696,230720,230748,230780,230824,230844,230876,230900,231040,231064,231100,231184,231580,231604,231680,231704,231724,231788,231812,231832,231884,231912,231924,231960,232132,232168,232208,232244,232272,232304,232336,232352,232380,232396,232408,232444,232468,232504,232516,232552,232564,232600,232612,232640,232672,232692,232724,232756,232776,232804,232832,232844,232884,232904,232932,232960,232972,233012,233032,233064,233084,233124,233144,233164,233184,233220,233232,233256,233288,233300,233332,233344,233372,233488,233524,233564,233584,233648,233708,233768,233828,233888,233948,234008,234068,234128,234188,234256,234268,234288,234332,234344,234388,234400,234444,234588,234636,234676,234700,234724,234744,234764,234792,234832,234856,234876,234896,234924,234960,234988,235016,235048,235068,235088,235116,235180,235224,235260,235280,235300,235320,235356,235408,235444,235464,235484,235504,235620,235644,235668,235700,235780,235840,235864,235924,235940,235984,236008,236028,236056,236080,236100,236128,236144,236176,236196,236224,236244,236276,236296,236328,236348,236384,236404,236428,236448,236480,236532,236568,236600,236636,236672,236692,236708,236720,236748,236784,236880,236904,236936,236964,237068,237128,237176,237200,237228,237260,237288,237336,237384,237416,237456,237504,237572,237600,237656,237764,237796,237852,237908,237972,238000,238020,238048,238104,238140,238168,238188,238216,238240,238448,238484,238528,238576,238608,238644,238688,238740,238820,238848,238888,238908,238948,238976,239000,239028,239048,239088,239116,239140,239156,239180,239200,239224,239244,239256,239276,239420,239440,239640,239712,239788,239956,239976,240180,240200,240220,240248,240304,240396,240436,240464,240508,240520,240544,240580,240604,240672,240728,240760,240836,240864,240900,240916,240964,240988,241012,241080,241108,241132,241144,241172,241388,241412,241448,241468,241480,241512,241612,241664,241676,241728,241740,241764,241792,241804,241840,241860,241884,241904,241916,242012,242032,242044,242056,242076,242104,242120,242132,242144,242204,242244,242280,242400,242460,242508,242540,242576,242608,242680,242708,242780,242808,242840,242864,242920,242944,242980,243024,243088,243116,243144,243164,243180,243296,243324,243360,243392,243452,243480,243512,243536,243552,243576,243596,243624,243656,243696,243736,243768,243792,243816,243848,243864,243892,243908,243936,243972,244008,244036,244060,244072,244088,244136,244160,244192,244276,244304,244328,244340,244436,244484,244508,244536,244564,244588,244608,244632,244664,244688,244716,244744,244764,244788,244808,244828,244848,244880,244904,244924,244948,244972,245000,245024,245048,245072,245096,245112,245132,245156,245176,245196,245220,245248,245264,245300,245332,245356,245388,245428,245452,245476,245520,245544,245564,245584,245608,245620,245712,245768,245820,245872,245928,245956,245968,246016,246044,246056,246076,246100,246140,246180,246204,246216,246260,246284,246296,246316,246340,246416,246472,246500,246512,246528,246576,246628,246660,246680,246700,246716,246752,246764,246780,246792,246812,246988,247020,247056,247096,247128,247156,247196,247224,247240,247264,247300,247320,247332,247352,247408,247452,247472,247488,247532,247588,247648,247708,247724,247736,247760,247788,247808,247868,248036,248052,248080,248112,248128,248152,248192,248232,248276,248344,248408,248436,248468,248528,248584,248644,248684,248716,248768,248820,248836,248864,248880,248948,248972,249024,249076,249096,249128,249200,249220,249248,249320,249340,249392,249424,249448,249480,249544,249632,249716,249748,249960,250028,250068,250092,250124,250180,250240,250360,250432,250484,250520,250552,250572,250604,250628,250656,250708,250732,250756,250780,250804,250952,251000,251032,251120,251208,251224,251256,251272,251300,251360,251396,251472,251500,251544,251572,251604,251636,251672,251716,251740,251784,251820,251848,251972,252020,252048,252128,252188,252240,252300,252352,252400,252424,252440,252460,252480,252520,252568,252588,252644,252684,252708,252728,252768,252808,252856,252908,252956,253000,253020,253092,253116,253144,253276,253472,253568,253764,254000,254044,254100,254136,254164,254192,254240,254308,254348,254388,254416,254464,254492,254548,254572,254608,254636,254680,254704,254720,254816,254920,255012,255120,255152,255188,255212,255224,255260,255284,255340,255364,255460,255496,255528,255580,255604,255648,255688,255712,255824,255872,255904,255964,256024,256036,256064,256080,256108,256124,256144,256172,256204,256236,256272,256292,256360,256392,256452,256476,256528,256560,256580,256592,256620,256676,256692,256720,256744,256908,256948,256988,257056,257096,257304,257484,257508,257532,257556,257584,257604,257636,257668,257692,257712,257732,257756,257800,257812,257840,257852,257876,257892,257932,257968,257988,258008,258052,258080,258092,258116,258160,258184,258228,258240,258272,258284,258308,258352,258412,258444,258476,258500,258624,258724,258768,258864,258952,259128,259200,259216,259244,259276,259288,259304,259436,259500,259548,259584,259640,259684,259744,259764,259796,259824,259844,259868,259888,259900,259940,259976,260012,260048,260068,260112,260172,260212,260316,260396,260480,260520,260600,260640,260676,260740,260768,260796,260824,260852,260884,260924,260988,261020,261048,261076,261092,261200,261232,261276,261308,261372,261396,261420,261444,261468,261492,261516,261544,261572,261600,261628,261656,261684,261712,261740,261768,261796,261824,261852,261884,262020,262072,262112,262136,262160,262204,262260,262296,262348,262376,262400,262436,262488,262528,262584,262748,262776,262808,262836,262852,262872,262900,262936,262952,262972,262996,263020,263064,263080,263100,263124,263148,263208,263232,263256,263280,263308,263340,263360,263388,263408,263444,263468,263496,263600,263632,263672,263756,263776,263808,263848,263904,263948,263992,264044,264068,264096,264132,264164,264200,264224,264256,264300,264352,264384,264400,264432,264448,264476,264516,264536,264552,264572,264680,264736,264776,264812,264844,264868,264916,264948,264980,265024,265068,265120,265156,265188,265232,265260,265328,265340,265356,265368,265400,265436,265456,265488,265516,265536,265556,265672,267788,267796,267956,268004,268032,268072,268104,268132,268172,268208,268232,268256,268280,268300,268328,268364,268392,268436,268456,268480,268500,268612,268648,268700,268760,268864,268888,268916,268952,268976,269012,269040,269072,269112,269140,269240,269264,269280,269300,269320,269444,269500,269568,269616,269632,269692,269720,269732,269760,269800,269844,269884,269944,269984,269996,270036,270048,270088,270128,270140,270176,270304,270328,270368,270396,270444,270476,270500,270512,270568,270592,270724,270784,270808,270868,270896,270944,270996,271032,271072,271100,271264,271400,271444,271520,271544,271580,271648,271716,271760,271784,271992,272024,272040,272056,272100,272124,272156,272192,272232,272256,272288,272304,272324,272344,272364,272388,272400,272448,272484,272520,272540,272560,272580,272600,272620,272648,272696,272716,272828,272860,272904,272936,272992,273012,273040,273056,273072,273100,273144,273172,273252,273264,273332,273364,273444,273476,273616,273652,273696,273728,273740,273772,273788,273816,273832,273844,273876,273888,273924,273936,273964,273992,274024,274036,274068,274080,274112,274124,274156,274168,274200,274212,274244,274256,274288,274300,274332,274344,274372,274480,274588,274612,274624,274656,274680,274696,274724,274760,274900,274960,274996,275028,275080,275104,275148,275188,275212,275340,275396,275436,275472,275512,275560,275612,275676,275728,275752,275780,275812,275852,275864,275900,275940,275964,276048,276088,276120,276248,276288,276300,276332,276380,276432,276448,276484,276524,276564,276604,276664,276708,276724,276744,276764,276784,276804,276824,276844,276864,276880,276916,276928,277020,277064,277088,277120,277140,277172,277192,277212,277244,277272,277312,277352,277388,277428,277464,277508,277528,277556,277584,277668,277696,277728,277756,277796,277836,277928,277944,277984,277996,278024,278052,278072,278084,278112,278140,278164,278192,278220,278244,278272,278296,278316,278328,278348,278376,278404,278432,278456,278476,278500,278512,278532,278560,278588,278612,278632,278644,278664,278680,278708,278736,278760,278780,278888,278920,278952,279004,279056,279104,279160,279196,279220,279236,279256,279328,279608,279640,279664,279688,279712,279736,279764,279776,279880,279892,279928,279956,279984,280012,280028,280064,280084,280120,280148,280176,280196,280264,280308,280340,280360,280380,280432,280460,280480,280500,280520,280540,280552,280568,280596,280612,280640,280652,280684,280784,280820,280856,280904,280940,280968,280984,281012,281028,281056,281076,281088,281132,281172,281212,281236,281268,281288,281316,281328,281352,281416,281444,281472,281500,281532,281548,281568,281584,281724,281744,281840,281920,281940,282080,282100,282164,282184,282312,282332,282372,282388,282416,282432,282460,282520,282556,282592,282620,282644,282680,282708,282752,282780,282812,282864,282900,282932,282984,283020,283140,283172,283204,283252,283280,283324,283360,283424,283452,283500,283528,283584,283608,283636,283672,283696,283712,283812,283844,283884,283920,283956,283980,284016,284044,284076,284112,284152,284176,284208,284244,284284,284308,284480,284508,284564,284612,284656,284692,284720,284744,284772,284800,284828,284856,284884,284912,284936,284972,285004,285032,285060,285088,285112,285152,285180,285284,285328,285360,285372,285400,285428,285448,285480,285492,285524,285556,285576,285604,285644,285676,285720,285756,285784,285856,285984,286016,286060,286092,286160,286184,286208,286232,286256,286284,286312,286336,286360,286384,286408,286432,286456,286480,286504,286532,286564,286756,286880,287016,287120,287232,287272,287312,287348,287380,287420,287444,287480,287520,287568,287604,287640,287668,287696,287756,287792,287892,287940,287980,287996,288024,288040,288064,288104,288120,288156,288192,288232,288260,288284,288316,288340,288360,288388,288468,288508,288540,288572,288604,288624,288636,288776,288812,288832,288856,288892,288912,288924,289124,289152,289176,289200,289224,289248,289260,289356,289404,289428,289444,289468,289484,289508,289524,289536,289560,289572,289680,289712,289744,289764,289800,289816,289832,289852,289892,289944,289968,289980,290020,290052,290128,290180,290232,290248,290268,290288,290320,290336,290356,290472,290588,290628,290708,290756,290792,290864,290944,291000,291104,291128,291168,291228,291252,291276,291340,291408,291444,291528,291584,291696,291728,291772,291804,291868,291884,291912,291936,291968,292008,292048,292068,292156,292180,292208,292240,292324,292348,292376,292436,292480,292524,292608,292664,292716,292780,292800,292896,292952,292980,292992,293008,293084,293108,293128,293148,293228,293244,293280,293304,293336,293380,293428,293492,293556,293680,293732,293772,293808,293840,293872,293904,293920,293952,293976,294016,294040,294068,294100,294128,294160,294180,294200,294232,294252,294280,294296,294316,294328,294356,294372,294392,294420,294564,294608,294652,294700,294736,294768,294792,294820,294852,294876,294912,294932,294964,295000,295032,295072,295116,295252,295320,295372,295396,295432,295472,295508,295580,295616,295652,295704,295740,295776,295812,295928,295948,295980,296012,296024,296076,296092,296104,296576,296600,296668,296700,296732,296828,296860,296876,296896,297032,297088,297148,297244,297276,297312,297344,297424,297456,297508,297520,297540,297664,297688,297716,297740,297772,297824,297844,297880,297904,297924,297948,297984,298008,298036,298056,298080,298116,298140,298168,298188,298212,298248,298272,298304,298320,298344,298484,298520,298552,298588,298640,298676,298720,298752,298780,298800,298816,298844,298892,298920,298980,299000,299016,299028,299164,299204,299244,299280,299320,299352,299436,299500,299536,299560,299716,299780,299816,299848,299888,299920,299948,300016,300080,300108,300140,300168,300196,300364,300424,300452,300464,300492,300528,300604,300620,300648,300676,300688,300700,300732,300756,300812,300840,300860,300876,300892,300920,300948,300960,300972,301076,301148,301192,301300,301356,301400,301488,301544,301600,301644,301664,301680,301796,301836,301848,301880,301932,301948,301968,301984,302124,302144,302164,302184,302204,302224,302244,302280,302292,302456,302496,302544,302604,302656,302728,302808,302864,303040,303072,303116,303148,303212,303228,303248,303288,303316,303364,303400,303436,303472,303516,303548,303664,303688,303700,303712,303756,303780,303812,303836,303884,303916,303956,303988,304036,304144,304244,304384,304408,304444,304500,304532,304584,304604,304640,304668,304688,304716,304748,304772,304816,304856,304872,304912,304940,304968,305272,305300,305328,305388,305428,305488,305524,305592,305624,305648,305672,305692,305756,305772,305884,305924,305948,305992,306016,306040,306068,306116,306160,306192,306228,306260,306288,306504,306536,306580,306612,306676,306692,306720,306744,306772,306812,306832,306920,306944,306972,307004,307132,307152,307188,307240,307280,307308,307320,307796,307820,307888,307924,308024,308076,308096,308212,308244,308280,308304,308324,308368,308392,308412,308436,308468,308488,308508,308532,308556,308584,308616,308640,308660,308680,308708,308732,308752,308776,308804,308916,308948,308980,309024,309056,309116,309148,309196,309220,309252,309276,309308,309332,309364,309384,309412,309432,309460,309492,309668,309716,309760,309788,309848,309904,309936,309976,310016,310064,310096,310228,310280,310304,310324,310348,310360,310388,310420,310436,310512,310532,310556,310580,310620,310644,310680,310736,310780,310804,310836,310856,310868,310888,310904,310928,310952,310964,311076,311108,311152,311184,311244,311276,311324,311348,311380,311404,311436,311460,311492,311512,311540,311560,311588,311620,311728,311768,311780,311820,311872,311896,311932,311956,311976,312016,312040,312112,312136,312156,312172,312196,312276,312316,312412,312492,312588,312616,312628,312640,312648,312668,312708,312748,312784,312832,312992,313024,313108,313132,313244,313272,313324,313360,313396,313548,313600,313644,313672,313720,313748,313792,313820,313872,313908,313944,314072,314104,314156,314192,314224,314256,314300,314332,314372,314408,314448,314472,314516,314548,314576,314596,314616,314720,314744,314796,314820,314844,314856,314876,314900,314924,315000,315032,315068,315116,315152,315172,315204,315240,315252,315284,315308,315416,315476,315532,315580,315656,315692,315760,315776,315804,315872,316028,316072,316112,316132,316164,316196,316228,316244,316264,316284,316316,316352,316372,316384,316416,316436,316456,316492,316512,316524,316632,316680,316716,316752,316780,316800,316852,316880,316904,316940,316968,316992,317028,317056,317068,317196,317224,317256,317300,317332,317408,317428,317464,317492,317528,317556,317584,317620,317664,317696,317848,317872,317920,317944,317972,317996,318024,318048,318072,318096,318128,318140,318192,318204,318260,318288,318320,318348,318368,318388,318488,318516,318548,318592,318624,318680,318700,318740,318764,318796,318828,318848,318876,318908,318940,319032,319060,319104,319156,319180,319216,319236,319276,319292,319332,319376,319400,319436,319456,319484,319544,319572,319616,319668,319692,319728,319748,319788,319804,319844,319888,319912,319948,319968,319996,320104,320136,320180,320212,320268,320288,320328,320352,320384,320416,320436,320464,320496,320528,320660,320696,320736,320756,320824,320836,320880,320892,320936,320948,320996,321020,321064,321168,321204,321236,321256,321284,321304,321324,321404,321416,321500,321556,321668,321696,321708,321744,321780,321824,321852,321872,321908,321936,321968,322004,322040,322068,322088,322108,322148,322252,322284,322328,322360,322456,322492,322520,322552,322596,322628,322748,322780,322840,322872,322908,322932,322952,322980,323004,323032,323056,323076,323104,323132,323148,323164,323268,323300,323332,323376,323408,323472,323488,323508,323548,323608,323652,323684,323832,323884,323936,323960,324008,324032,324068,324100,324132,324280,324328,324404,324432,324460,324496,324520,324656,324688,324732,324764,324832,324852,324876,324900,324924,324948,324976,325000,325028,325060,325208,325224,325296,325312,325384,325404,325424,325448,325468,325480,325516,325536,325580,325684,325712,325744,325788,325820,325876,325896,325936,325992,326044,326076,326208,326248,326300,326336,326388,326440,326468,326488,326532,326572,326632,326660,326768,326780,326816,326848,326872,326920,326968,327020,327084,327104,327124,327144,327164,327256,327312,327336,327388,327464,327504,327596,327624,327656,327680,327704,327812,327840,327872,327916,327948,328004,328024,328064,328116,328168,328200,328340,328372,328416,328448,328508,328540,328588,328612,328644,328664,328692,328712,328740,328772,328896,329220,329264,329356,329408,329436,329468,329572,329596,329652,329760,329844,330008,330040,330072,330116,330148,330204,330224,330264,330292,330340,330384,330416,330540,330580,330620,330672,330700,330728,330768,330808,330852,330880,330896,330932,331032,331124,331152,331184,331212,331240,331276,331304,331348,331376,331400,331424,331452,331480,331504,331532,331556,331664,331696,331740,331772,331828,331848,331876,331908,331960,331980,332004,332028,332056,332088,332224,332256,332300,332332,332388,332408,332448,332504,332556,332588,332672,332696,332708,332728,332760,332780,332804,332828,332860,332876,332916,332932,332948,332984,333000,333040,333056,333072,333096,333120,333136,333160,333248,333272,333304,333316,333340,333400,333424,333468,333492,333524,333536,333620,333652,333684,333728,333760,333816,333836,333872,333928,333956,333968,333992,334020,334052,334192,334216,334232,334256,334292,334316,334348,334372,334392,334416,334452,334476,334508,334532,334552,334572,334596,334632,334652,334756,334804,334836,334868,334904,334916,334944,334980,335008,335028,335052,335076,335096,335124,335156,335192,335212,335232,335292,335316,335368,335392,335424,335460,335524,335544,335564,335588,335636,335660,335680,335704,335800,335836,335880,335908,335920,335952,335964,335996,336008,336040,336052,336084,336096,336124,336156,336168,336196,336320,336368,336388,336564,336692,336792,336848,336900,336976,337032,337084,337208,337248,337276,337288,337320,337332,337356,337368,337412,337436,337464,337480,337504,337532,337552,337564,337584,337604,337620,337652,337664,337672,337688,337700,337720,337744,337776,337888,337924,337948,337960,338012,338108,338144,338168,338344,338392,338420,338468,338492,338552,338576,338632,338660,338708,338732,338792,338896,338944,338976,339012,339044,339076,339088,339136,339168,339204,339228,339260,339292,339308,339328,339348,339436,339468,339504,339552,339600,339624,339656,339680,339712,339736,339768,339788,339816,339844,339940,339972,340008,340056,340104,340128,340160,340184,340216,340240,340272,340292,340320,340348,340456,340480,340532,340608,340644,340680,340724,340764,340776,340936,340988,341024,341092,341124,341156,341192,341232,341252,341360,341396,341416,341444,341480,341508,341524,341548,341584,341612,341648,341672,341692,341716,341744,341852,341896,341920,341980,342008,342060,342092,342116,342144,342168,342188,342208,342308,342332,342356,342384,342444,342488,342528,342548,342580,342624,342748,342784,342868,342880,342928,342940,342968,343008,343020,343064,343236,343352,343388,343560,343592,343636,343668,343724,343744,343776,343804,343816,343836,343864,343896,344028,344052,344076,344100,344112,344132,344156,344180,344256,344288,344324,344380,344416,344436,344456,344548,344600,344676,344724,344752,344784,344808,344832,344864,344920,345092,345140,345160,345256,345356,345392,345464,345484,345512,345540,345572,345588,345608,345636,345668,345684,345728,345852,345896,345908,345940,345980,346048,346060,346092,346128,346144,346164,346204,346316,346360,346372,346404,346448,346516,346536,346568,346604,346616,346656,346772,346804,346860,346892,346944,346972,346988,347108,347208,347676,347712,347748,347784,347928,347988,348032,348072,348108,348144,348312,348368,348404,348484,348508,348604,348632,348664,348708,348740,348796,348816,348856,348880,348908,348940,349112,349152,349192,349216,349244,349272,349296,349348,349360,349388,349512,349548,349632,349692,349720,349768,349796,349880,349952,350052,350136,350204,350228,350248,350304,350344,350364,350384,350420,350448,350480,350508,350532,350572,350696,350724,350756,350800,350832,350896,350920,350980,351008,351040,351160,351184,351196,351220,351252,351264,351288,351372,351392,351412,351492,351508,351544,351568,351580,351596,351700,351732,351776,351808,351868,351892,351904,351924,351952,351984,352124,352160,352184,352216,352240,352276,352312,352336,352368,352392,352424,352512,352604,352628,352640,352676,352708,352760,352820,352832,352852,352868,352892,352916,353020,353056,353140,353200,353248,353356,353432,353456,353480,353504,353564,353580,353600,353640,353696,353732,353752,353772,353872,353904,353948,353980,354068,354100,354144,354176,354300,354332,354376,354408,354496,354528,354572,354604,354728,354764,354788,354804,354824,354856,354876,354900,354924,354952,354980,355060,355120,355144,355168,355200,355240,355264,355284,355304,355340,355360,355380,355436,355532,355608,355632,355672,355696,355736,355756,355788,355804,355928,355960,356004,356036,356092,356124,356160,356188,356220,356336,356356,356436,356456,356472,356492,356512,356536,356636,356668,356712,356744,356804,356824,356860,356888,356920,357068,357108,357168,357200,357220,357252,357272,357396,357428,357472,357504,357568,357608,357636,357668,357788,357824,357876,357932,357948,357976,358000,358040,358092,358128,358180,358204,358236,358272,358336,358360,358392,358440,358460,358480,358500,358520,358612,358644,358688,358720,358812,358856,358888,359036,359072,359112,359132,359164,359192,359220,359360,359412,359448,359480,359496,359516,359540,359560,359580,359620,359768,359792,359836,359900,359932,359976,360124,360192,360444,360488,360520,360560,360600,360640,360676,360708,360732,360756,360776,360784,360800,360880,360896,360948,361024,361224,361260,361296,361332,361388,361424,361444,361772,361796,361816,361884,362040,362208,362244,362284,362300,362324,362364,362420,362444,362480,362604,362656,362692,362724,362740,362760,362784,362800,362840,362948,362992,363024,363324,363344,363448,363484,363556,363624,363820,363860,363896,363920,364032,364064,364100,364148,364196,364220,364252,364272,364300,364328,364384,364408,364436,372696,372748,372772,372792,372836,372856,372896,373028,373080,373116,373184,373220,373252,373376,373400,373472,373516,373548,373576,373600,373616,373640,373784,373828,373856,373884,373920,373944,374072,374108,374144,374208,374232,374284,374380,374416,374456,374488,374544,374572,374628,374644,374668,374764,374804,374832,374856,374884,374928,374972,375004,375096,375128,375148,375264,375288,375316,375344,375372,375480,375516,375552,375616,375628,375680,375792,375828,375864,375928,375940,375992,376092,376108,376132,376152,376172,376192,376216,376244,376272,376376,376436,376468,376504,376548,376720,376736,376776,376812,376856,376916,377012,377044,377088,377120,377184,377212,377244,377376,377436,377476,377520,377680,377712,377756,377788,377856,377884,377916,378040,378072,378124,378192,378236,378252,378264,378288,378304,378336,378388,378488,378520,378544,378560,378572,378580,378600,378644,378672,378700,378716,378736,378756,378776,378792,378808,378824,378944,379000,379180,379216,379256,379276,379336,379380,379444,379504,379524,379564,379588,379612,379632,379652,379680,379704,379736,379836,379856,379868,379876,379884,379896,379928,379960,379988,380000,380012,380028,380048,380076,380088,380100,380108,380132,380148,380160,380188,380204,380224,380252,380268,380360,380396,380416,380444,380464,380492,380516,380552,380580,380604,380736,380796,380820,380848,380872,380884,380988,381008,381048,381064,381088,381108,381156,381168,381300,381344,381372,381404,381432,381544,381600,381624,381652,381672,381700,381724,381752,381780,381888,381924,382000,382012,382056,382088,382216,382280,382380,382400,382416,382444,382576,382620,382648,382724,382812,382852,382884,382916,382928,382956,383004,383032,383048,383084,383100,383116,383136,383168,383200,383216,383320,383356,383392,383452,383496,383604,383652,383696,383716,383740,383760,383772,383836,383856,383868,383984,384020,384132,384160,384264,384320,384344,384372,384400,384428,384544,384592,384640,384680,384700,384728,384764,384792,384924,384968,384996,385136,385164,385180,385208,385236,385268,385284,385316,385360,385392,385440,385484,385656,385680,385776,385800,385980,386064,386088,386144,386168,386192,386236,386264,386276,386372,386408,386448,386468,386480,386520,386544,386580,386832,386860,386876,386900,386928,386944,387132,387324,387344,387464,387476,387660,387832,387872,387908,387936,388060,388096,388180,388204,388232,388404,388436,388488,388532,388584,388712,388752,388928,388964,389000,389044,389072,389100,389128,389144,389156,389188,389220,389320,389356,389408,389432,389456,389484,389584,389620,389684,389720,389736,389780,389880,389916,389980,390016,390032,390076,390184,390240,390316,390452,390484,390512,390588,390876,390888,390904,390916,390940,390964,391012,391052,391068,391084,391108,391124,391144,391216,391260,391292,391332,391372,391408,391432,391464,391476,391608,391692,391836,391860,391892,391924,391976,392012,392020,392112,392136,392172,392192,392220,392244,392272,392296,392308,392404,392444,392472,392484,392552,392712,392848,392872,392900,392928,392956,393096,393140,393160,393340,393504,393540,393580,393604,393632,393776,393816,393868,394036,394244,394272,394292,394396,394432,394472,394512,394540,394676,394704,394740,394780,394808,394912,394936,394996,395040,395148,395172,395224,395316,395436,395480,395508,395524,395640,395676,395720,395732,395760,395772,395800,395916,395952,395992,396016,396044,396148,396176,396196,396212,396240,396264,396276,396292,396308,396336,396352,396380,396392,396612,396640,396676,396704,396788,396812,396840,396868,396896,396984,397028,397152,397176,397248,397272,397288,397384,397516,397540,397580,397636,397660,397684,397716,397760,397784,397836,397860,397876,397900,397920,398048,398088,398100,398120,398156,398172,398184,398280,398304,398332,398360,398388,398496,398548,398580,398596,398628,398752,398772,398828,398848,398944,398980,399000,399024,399044,399056,399160,399180,399192,399220,399236,399272,399304,399328,399340,399352,399368,399456,399540,399572,399836,399856,399888,399916,399960,400008,400032,400060,400080,400104,400132,400192,400216,400236,400320,400348,400384,400424,400452,400580,400780,400824,400944,400968,401028,401184,401232,401344,401380,401420,401448,401560,401596,401636,401664,401772,401800,401824,401840,401860,401880,401964,402016,402168,402308,402340,402380,402432,402548,402584,402728,402784,402804,402928,402968,403036,403060,403084,403104,403128,403144,403168,403188,403212,403356,403376,403484,403540,403556,403668,403692,403720,403744,403756,403844,403884,403912,403932,403948,404048,404080,404112,404152,404252,404272,404416,404472,404560,404640,404788,404908,404948,404976,405032,405116,405172,405192,405248,405288,405324,405368,405412,405440,405540,405576,405596,405612,405632,405728,405788,405876,405900,405952,405972,406060,406196,406244,406272,406296,406320,406412,406748,406916,407012,407032,407056,407136,407156,407180,407260,407280,407304,407528,407588,407616,407632,407652,407728,407776,407920,407948,408044,408064,408172,408196,408212,408228,408248,408280,408748,408904,408928,409020,409048,409064,409188,409320,409420,409464,409488,409592,409740,409860,409876,409944,409968,410004,410024,410036,410052,410068,410088,410112,410192,410220,410244,410288,410388,410416,410444,410560,410584,410640,410700,410724,410852,410868,410892,410980,411036,411064,411076,411164,411188,411220,411232,411320,411348,411400,411472,411524,411772,411788,411900,411928,412032,412064,412152,412200,412280,412328,412436,412556,412676,412776,412832,412852,412904,412956,413012,413060,413176,413232,413264,413288,413604,413696,413724,413736,413816,413844,413872,413956,413980,414040,414068,414100,414128,414152,414172,414260,414284,414296,414304,414316,414396,414428,414520,414532,414612,414624,414704,414716,414804,414900,414932,414964,415020,415072,415156,415172,415452,415544,415564,415616,415652,415676,415688,415736,415764,415792,415812,415900,415992,416008,416064,416092,416120,416144,416184,416208,416336,416352,416444,416596,416608,416672,416696,416872,416944,416988,417000,417092,417168,417256,417388,417416,417616,417628,417644,417656,417672,417684,417700,417712,417764,417788,417800,417856,417888,417896,417952,417964,417980,417992,418000,418132,418264,418292,418352,418372,418420,418440,418492,418520,418640,418744,418764,418784,418804,418824,418844,418864,418904,418932,418960,419128,419136,419144,419168,419184,419196,419292,419300,419324,419348,419388,419444,419500,419524,419552,419580,419648,419692,419732,419768,419868,419896,419952,419980,420012,420052,420088,420156,420168,420252,420272,420484,420500,420552,420564,420616,420628,420680,420692,420744,420756,420844,420880,420916,420952,421000,421040,421052,421092,421112,421188,421236,421272,421292,421316,421340,421364,421388,421412,421436,421460,421484,421524,421556,421596,421628,421656,421684,421720,421752,421828,421856,422844,422924,423000,423024,423320,423768,423824,423856,423888,424760,424792,424824,424856,424888,424920,424948,424976,425020,425048,425080,425336,425360,425468,425492,425520,425548,425576,425600,425624,425648,426512,426532,426568,426600,426624,426644,426664,426684,426704,426736,426760,426792,426828,426852,426872,427116,427948,427984,428012,428044,428072,428104,428136,428168,428196,428224,428252,428280,428308,428336,428364,428392,428420]);

  for (var i = 0; i < relocations.length; i++) {
    assert(relocations[i] % 4 === 0);
    assert(relocations[i] >= 0 && relocations[i] < eb + 429152); // in range
    assert(HEAPU32[eb + relocations[i] >> 2] + eb < (-1 >>> 0), [i, relocations[i]]); // no overflows
    HEAPU32[eb + relocations[i] >> 2] = HEAPU32[eb + relocations[i] >> 2] + eb;
  }
});



  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) SAFE_HEAP_STORE(((Module['___errno_location']())|0), ((value)|0), 4);
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        flags &= ~0100000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 0777, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        console.error('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {
        if (!window['setImmediate']) {
          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
          var setImmediates = [];
          var emscriptenMainLoopMessageId = '__emcc';
          function Browser_setImmediate_messageHandler(event) {
            if (event.source === window && event.data === emscriptenMainLoopMessageId) {
              event.stopPropagation();
              setImmediates.shift()();
            }
          }
          window.addEventListener("message", Browser_setImmediate_messageHandler, true);
          window['setImmediate'] = function Browser_emulated_setImmediate(func) {
            setImmediates.push(func);
            window.postMessage(emscriptenMainLoopMessageId, "*");
          }
        }
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
          window['setImmediate'](Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'immediate';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
          // and we have no viable fallback.
          assert((typeof scrollX !== 'undefined') && (typeof scrollY !== 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = ((SAFE_HEAP_LOAD(((SDL.screen+Runtime.QUANTUM_SIZE*0)|0), 4, 1))|0);
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	SAFE_HEAP_STORE(((SDL.screen+Runtime.QUANTUM_SIZE*0)|0), ((flags)|0), 4)
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = ((SAFE_HEAP_LOAD(((SDL.screen+Runtime.QUANTUM_SIZE*0)|0), 4, 1))|0);
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	SAFE_HEAP_STORE(((SDL.screen+Runtime.QUANTUM_SIZE*0)|0), ((flags)|0), 4)
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};
  
  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      Runtime.warnOnce('using stub malloc (reference it from C to have the real one included)');
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;
  
  function _free() {
      Runtime.warnOnce('using stub free (reference it from C to have the real one included)');
  }
  Module["_free"] = _free;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  var _environ=allocate(1, "i32*", ALLOC_STATIC);var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        SAFE_HEAP_STORE(((envPtr)|0), ((poolPtr)|0), 4);
        SAFE_HEAP_STORE(((_environ)|0), ((envPtr)|0), 4);
      } else {
        envPtr = ((SAFE_HEAP_LOAD(((_environ)|0), 4, 0))|0);
        poolPtr = ((SAFE_HEAP_LOAD(((envPtr)|0), 4, 0))|0);
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        SAFE_HEAP_STORE((((envPtr)+(i * ptrSize))|0), ((poolPtr)|0), 4);
        poolPtr += line.length + 1;
      }
      SAFE_HEAP_STORE((((envPtr)+(strings.length * ptrSize))|0), ((0)|0), 4);
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }
  
  function _putenv(string) {
      // int putenv(char *string);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/putenv.html
      // WARNING: According to the standard (and the glibc implementation), the
      //          string is taken by reference so future changes are reflected.
      //          We copy it instead, possibly breaking some uses.
      if (string === 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      string = Pointer_stringify(string);
      var splitPoint = string.indexOf('=')
      if (string === '' || string.indexOf('=') === -1) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      var name = string.slice(0, splitPoint);
      var value = string.slice(splitPoint + 1);
      if (!(name in ENV) || ENV[name] !== value) {
        ENV[name] = value;
        ___buildEnvironment(ENV);
      }
      return 0;
    }
  
  function _SDL_RWFromConstMem(mem, size) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      SDL.rwops.push({ bytes: mem, count: size });
      return id;
    }function _TTF_FontHeight(font) {
      var fontData = SDL.fonts[font];
      return fontData.size;
    }function _TTF_SizeText(font, text, w, h) {
      var fontData = SDL.fonts[font];
      if (w) {
        SAFE_HEAP_STORE(((w)|0), ((SDL.estimateTextWidth(fontData, Pointer_stringify(text)))|0), 4);
      }
      if (h) {
        SAFE_HEAP_STORE(((h)|0), ((fontData.size)|0), 4);
      }
      return 0;
    }function _TTF_RenderText_Solid(font, text, color) {
      // XXX the font and color are ignored
      text = Pointer_stringify(text) || ' '; // if given an empty string, still return a valid surface
      var fontData = SDL.fonts[font];
      var w = SDL.estimateTextWidth(fontData, text);
      var h = fontData.size;
      var color = SDL.loadColorToCSSRGB(color); // XXX alpha breaks fonts?
      var fontString = h + 'px ' + fontData.name;
      var surf = SDL.makeSurface(w, h, 0, false, 'text:' + text); // bogus numbers..
      var surfData = SDL.surfaces[surf];
      surfData.ctx.save();
      surfData.ctx.fillStyle = color;
      surfData.ctx.font = fontString;
      surfData.ctx.textBaseline = 'top';
      surfData.ctx.fillText(text, 0, 0);
      surfData.ctx.restore();
      return surf;
    }function _Mix_HaltMusic() {
      var audio = SDL.music.audio;
      if (audio) {
        audio.src = audio.src; // rewind <media> element
        audio.currentPosition = 0; // rewind Web Audio graph playback.
        audio.pause();
      }
      SDL.music.audio = null;
      if (SDL.hookMusicFinished) {
        Runtime.dynCall('v', SDL.hookMusicFinished);
      }
      return 0;
    }function _Mix_PlayMusic(id, loops) {
      // Pause old music if it exists.
      if (SDL.music.audio) {
        if (!SDL.music.audio.paused) Module.printErr('Music is already playing. ' + SDL.music.source);
        SDL.music.audio.pause();
      }
      var info = SDL.audios[id];
      var audio;
      if (info.webAudio) { // Play via Web Audio API
        // Create an instance of the WebAudio object.
        audio = {};
        audio.resource = info; // This new webAudio object is an instance that refers to this existing resource.
        audio.paused = false;
        audio.currentPosition = 0;
        audio.play = function() { SDL.playWebAudio(this); }
        audio.pause = function() { SDL.pauseWebAudio(this); }
      } else if (info.audio) { // Play via the <audio> element
        audio = info.audio;
      }
      audio['onended'] = function() { if (SDL.music.audio == this) _Mix_HaltMusic(); } // will send callback
      audio.loop = loops != 0; // TODO: handle N loops for finite N
      audio.volume = SDL.music.volume;
      SDL.music.audio = audio;
      audio.play();
      return 0;
    }function _Mix_FreeChunk(id) {
      SDL.audios[id] = null;
    }function _Mix_LoadWAV_RW(rwopsID, freesrc) {
      var rwops = SDL.rwops[rwopsID];
  
  
      if (rwops === undefined)
        return 0;
  
      var filename = '';
      var audio;
      var webAudio;
      var bytes;
  
      if (rwops.filename !== undefined) {
        filename = PATH.resolve(rwops.filename);
        var raw = Module["preloadedAudios"][filename];
        if (!raw) {
          if (raw === null) Module.printErr('Trying to reuse preloaded audio, but freePreloadedMediaOnUse is set!');
          if (!Module.noAudioDecoding) Runtime.warnOnce('Cannot find preloaded audio ' + filename);
  
          // see if we can read the file-contents from the in-memory FS
          try {
            bytes = FS.readFile(filename);
          } catch (e) {
            Module.printErr('Couldn\'t find file for: ' + filename);
            return 0;
          }
        }
        if (Module['freePreloadedMediaOnUse']) {
          Module["preloadedAudios"][filename] = null;
        }
        audio = raw;
      }
      else if (rwops.bytes !== undefined) {
        // For Web Audio context buffer decoding, we must make a clone of the audio data, but for <media> element,
        // a view to existing data is sufficient.
        if (SDL.webAudioAvailable()) bytes = HEAPU8.buffer.slice(rwops.bytes, rwops.bytes + rwops.count);
        else bytes = HEAPU8.subarray(rwops.bytes, rwops.bytes + rwops.count);
      }
      else {
        return 0;
      }
  
      var arrayBuffer = bytes ? bytes.buffer || bytes : bytes;
  
      // To allow user code to work around browser bugs with audio playback on <audio> elements an Web Audio, enable
      // the user code to hook in a callback to decide on a file basis whether each file should use Web Audio or <audio> for decoding and playback.
      // In particular, see https://bugzilla.mozilla.org/show_bug.cgi?id=654787 and ?id=1012801 for tradeoffs.
      var canPlayWithWebAudio = Module['SDL_canPlayWithWebAudio'] === undefined || Module['SDL_canPlayWithWebAudio'](filename, arrayBuffer);
  
      if (bytes !== undefined && SDL.webAudioAvailable() && canPlayWithWebAudio) {
        audio = undefined;
        webAudio = {};
        // The audio decoding process is asynchronous, which gives trouble if user code plays the audio data back immediately
        // after loading. Therefore prepare an array of callback handlers to run when this audio decoding is complete, which
        // will then start the playback (with some delay).
        webAudio.onDecodeComplete = []; // While this member array exists, decoding hasn't finished yet.
        function onDecodeComplete(data) {
          webAudio.decodedBuffer = data;
          // Call all handlers that were waiting for this decode to finish, and clear the handler list.
          webAudio.onDecodeComplete.forEach(function(e) { e(); });
          webAudio.onDecodeComplete = undefined; // Don't allow more callback handlers since audio has finished decoding.
        }
  
        SDL.audioContext['decodeAudioData'](arrayBuffer, onDecodeComplete);
      } else if (audio === undefined && bytes) {
        // Here, we didn't find a preloaded audio but we either were passed a filepath for
        // which we loaded bytes, or we were passed some bytes
        var blob = new Blob([bytes], {type: rwops.mimetype});
        var url = URL.createObjectURL(blob);
        audio = new Audio();
        audio.src = url;
        audio.mozAudioChannelType = 'content'; // bugzilla 910340
      }
  
      var id = SDL.audios.length;
      // Keep the loaded audio in the audio arrays, ready for playback
      SDL.audios.push({
        source: filename,
        audio: audio, // Points to the <audio> element, if loaded
        webAudio: webAudio // Points to a Web Audio -specific resource object, if loaded
      });
      return id;
    }function _Mix_PlayChannel(channel, id, loops) {
      // TODO: handle fixed amount of N loops. Currently loops either 0 or infinite times.
  
      // Get the audio element associated with the ID
      var info = SDL.audios[id];
      if (!info) return -1;
      if (!info.audio && !info.webAudio) return -1;
  
      // If the user asks us to allocate a channel automatically, get the first
      // free one.
      if (channel == -1) {
        for (var i = SDL.channelMinimumNumber; i < SDL.numChannels; i++) {
          if (!SDL.channels[i].audio) {
            channel = i;
            break;
          }
        }
        if (channel == -1) {
          Module.printErr('All ' + SDL.numChannels + ' channels in use!');
          return -1;
        }
      }
      var channelInfo = SDL.channels[channel];
      var audio;
      if (info.webAudio) {
        // Create an instance of the WebAudio object.
        audio = {};
        audio.resource = info; // This new object is an instance that refers to this existing resource.
        audio.paused = false;
        audio.currentPosition = 0;
        // Make our instance look similar to the instance of a <media> to make api simple.
        audio.play = function() { SDL.playWebAudio(this); }
        audio.pause = function() { SDL.pauseWebAudio(this); }
      } else {
        // We clone the audio node to utilize the preloaded audio buffer, since
        // the browser has already preloaded the audio file.
        audio = info.audio.cloneNode(true);
        audio.numChannels = info.audio.numChannels;
        audio.frequency = info.audio.frequency;
      }
      audio['onended'] = function SDL_audio_onended() { // TODO: cache these
        if (channelInfo.audio == this) { channelInfo.audio.paused = true; channelInfo.audio = null; }
        if (SDL.channelFinished) Runtime.getFuncWrapper(SDL.channelFinished, 'vi')(channel);
      }
      channelInfo.audio = audio;
      // TODO: handle N loops. Behavior matches Mix_PlayMusic
      audio.loop = loops != 0;
      audio.volume = channelInfo.volume;
      audio.play();
      return channel;
    }function _SDL_PauseAudio(pauseOn) {
      if (!SDL.audio) {
        return;
      }
      if (pauseOn) {
        if (SDL.audio.timer !== undefined) {
          clearTimeout(SDL.audio.timer);
          SDL.audio.numAudioTimersPending = 0;
          SDL.audio.timer = undefined;
        }
      } else if (!SDL.audio.timer) {
        // Start the audio playback timer callback loop.
        SDL.audio.numAudioTimersPending = 1;
        SDL.audio.timer = Browser.safeSetTimeout(SDL.audio.caller, 1);
      }
      SDL.audio.paused = pauseOn;
    }function _SDL_CloseAudio() {
      if (SDL.audio) {
        EmterpreterAsync.yieldCallbacks = EmterpreterAsync.yieldCallbacks.filter(function(callback) {
          return callback !== SDL.audio.yieldCallback;
        });
        _SDL_PauseAudio(1);
        _free(SDL.audio.buffer);
        SDL.audio = null;
        SDL.allocateChannels(0);
      }
    }function _SDL_LockSurface(surf) {
      var surfData = SDL.surfaces[surf];
  
      surfData.locked++;
      if (surfData.locked > 1) return 0;
  
      if (!surfData.buffer) {
        surfData.buffer = _malloc(surfData.width * surfData.height * 4);
        SAFE_HEAP_STORE((((surf)+(20))|0), ((surfData.buffer)|0), 4);
      }
  
      // Mark in C/C++-accessible SDL structure
      // SDL_Surface has the following fields: Uint32 flags, SDL_PixelFormat *format; int w, h; Uint16 pitch; void *pixels; ...
      // So we have fields all of the same size, and 5 of them before us.
      // TODO: Use macros like in library.js
      SAFE_HEAP_STORE((((surf)+(20))|0), ((surfData.buffer)|0), 4);
  
      if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  
      if (SDL.defaults.discardOnLock) {
        if (!surfData.image) {
          surfData.image = surfData.ctx.createImageData(surfData.width, surfData.height);
        }
        if (!SDL.defaults.opaqueFrontBuffer) return;
      } else {
        surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      }
  
      // Emulate desktop behavior and kill alpha values on the locked surface. (very costly!) Set SDL.defaults.opaqueFrontBuffer = false
      // if you don't want this.
      if (surf == SDL.screen && SDL.defaults.opaqueFrontBuffer) {
        var data = surfData.image.data;
        var num = data.length;
        for (var i = 0; i < num/4; i++) {
          data[i*4+3] = 255; // opacity, as canvases blend alpha
        }
      }
  
      if (SDL.defaults.copyOnLock && !SDL.defaults.discardOnLock) {
        // Copy pixel data to somewhere accessible to 'C/C++'
        if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
          // If this is neaded then
          // we should compact the data from 32bpp to 8bpp index.
          // I think best way to implement this is use
          // additional colorMap hash (color->index).
          // Something like this:
          //
          // var size = surfData.width * surfData.height;
          // var data = '';
          // for (var i = 0; i<size; i++) {
          //   var color = SDL.translateRGBAToColor(
          //     surfData.image.data[i*4   ], 
          //     surfData.image.data[i*4 +1], 
          //     surfData.image.data[i*4 +2], 
          //     255);
          //   var index = surfData.colorMap[color];
          //   SAFE_HEAP_STORE((((surfData.buffer)+(i))|0), ((index)|0), 1);
          // }
          throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + new Error().stack;
        } else {
          HEAPU8.set(surfData.image.data, surfData.buffer);
        }
      }
  
      return 0;
    }
  
  function _SDL_FreeRW(rwopsID) {
      SDL.rwops[rwopsID] = null;
      while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length-1] === null) {
        SDL.rwops.pop();
      }
    }function _IMG_Load_RW(rwopsID, freeSrc) {
      try {
        // stb_image integration support
        function cleanup() {
          if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
        };
        function addCleanup(func) {
          var old = cleanup;
          cleanup = function added_cleanup() {
            old();
            func();
          }
        }
        function callStbImage(func, params) {
          var x = Module['_malloc'](4);
          var y = Module['_malloc'](4);
          var comp = Module['_malloc'](4);
          addCleanup(function() {
            Module['_free'](x);
            Module['_free'](y);
            Module['_free'](comp);
            if (data) Module['_stbi_image_free'](data);
          });
          var data = Module['_' + func].apply(null, params.concat([x, y, comp, 0]));
          if (!data) return null;
          return {
            rawData: true,
            data: data,
            width: ((SAFE_HEAP_LOAD(((x)|0), 4, 0))|0),
            height: ((SAFE_HEAP_LOAD(((y)|0), 4, 0))|0),
            size: ((SAFE_HEAP_LOAD(((x)|0), 4, 0))|0) * ((SAFE_HEAP_LOAD(((y)|0), 4, 0))|0) * ((SAFE_HEAP_LOAD(((comp)|0), 4, 0))|0),
            bpp: ((SAFE_HEAP_LOAD(((comp)|0), 4, 0))|0)
          };
        }
  
        var rwops = SDL.rwops[rwopsID];
        if (rwops === undefined) {
          return 0;
        }
  
        var filename = rwops.filename;
        if (filename === undefined) {
          Runtime.warnOnce('Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js), or package files with --use-preload-plugins');
          return 0;
        }
  
        if (!raw) {
          filename = PATH.resolve(filename);
          var raw = Module["preloadedImages"][filename];
          if (!raw) {
            if (raw === null) Module.printErr('Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!');
            Runtime.warnOnce('Cannot find preloaded image ' + filename);
            Runtime.warnOnce('Cannot find preloaded image ' + filename + '. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js), or package files with --use-preload-plugins');
            return 0;
          } else if (Module['freePreloadedMediaOnUse']) {
            Module["preloadedImages"][filename] = null;
          }
        }
  
        var surf = SDL.makeSurface(raw.width, raw.height, 0, false, 'load:' + filename);
        var surfData = SDL.surfaces[surf];
        surfData.ctx.globalCompositeOperation = "copy";
        if (!raw.rawData) {
          surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
        } else {
          var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
          if (raw.bpp == 4) {
            // rgba
            imageData.data.set(HEAPU8.subarray((raw.data),(raw.data+raw.size)));
          } else if (raw.bpp == 3) {
            // rgb
            var pixels = raw.size/3;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              data[destPtr++] = ((SAFE_HEAP_LOAD(((sourcePtr++)|0), 1, 1))|0);
              data[destPtr++] = ((SAFE_HEAP_LOAD(((sourcePtr++)|0), 1, 1))|0);
              data[destPtr++] = ((SAFE_HEAP_LOAD(((sourcePtr++)|0), 1, 1))|0);
              data[destPtr++] = 255;
            }
          } else if (raw.bpp == 1) {
            // grayscale
            var pixels = raw.size;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              var value = ((SAFE_HEAP_LOAD(((sourcePtr++)|0), 1, 1))|0);
              data[destPtr++] = value;
              data[destPtr++] = value;
              data[destPtr++] = value;
              data[destPtr++] = 255;
            }
          } else {
            Module.printErr('cannot handle bpp ' + raw.bpp);
            return 0;
          }
          surfData.ctx.putImageData(imageData, 0, 0);
        }
        surfData.ctx.globalCompositeOperation = "source-over";
        // XXX SDL does not specify that loaded images must have available pixel data, in fact
        //     there are cases where you just want to blit them, so you just need the hardware
        //     accelerated version. However, code everywhere seems to assume that the pixels
        //     are in fact available, so we retrieve it here. This does add overhead though.
        _SDL_LockSurface(surf);
        surfData.locked--; // The surface is not actually locked in this hack
        if (SDL.GL) {
          // After getting the pixel data, we can free the canvas and context if we do not need to do 2D canvas blitting
          surfData.canvas = surfData.ctx = null;
        }
        return surf;
      } finally {
        cleanup();
      }
    }
  
  function _SDL_RWFromFile(_name, mode) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      var name = Pointer_stringify(_name)
      SDL.rwops.push({ filename: name, mimetype: Browser.getMimetype(name) });
      return id;
    }function _IMG_Load(filename){
      var rwops = _SDL_RWFromFile(filename);
      var result = _IMG_Load_RW(rwops, 1);
      return result;
    }function _SDL_UpperBlitScaled(src, srcrect, dst, dstrect) {
      return SDL.blitSurface(src, srcrect, dst, dstrect, true);
    }function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
      return SDL.blitSurface(src, srcrect, dst, dstrect, false);
    }function _SDL_GetTicks() {
      return (Date.now() - SDL.startTime)|0;
    }var SDL={defaults:{width:320,height:200,copyOnLock:true,discardOnLock:false,opaqueFrontBuffer:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},TOUCH_DEFAULT_ID:0,eventHandler:null,eventHandlerContext:null,eventHandlerTemp:0,keyCodes:{16:1249,17:1248,18:1250,20:1081,33:1099,34:1102,35:1101,36:1098,37:1104,38:1106,39:1103,40:1105,44:316,45:1097,46:127,91:1251,93:1125,96:1122,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,106:1109,107:1111,109:1110,110:1123,111:1108,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,124:1128,125:1129,126:1130,127:1131,128:1132,129:1133,130:1134,131:1135,132:1136,133:1137,134:1138,135:1139,144:1107,160:94,161:33,162:34,163:35,164:36,165:37,166:38,167:95,168:40,169:41,170:42,171:43,172:124,173:45,174:123,175:125,176:126,181:127,182:129,183:128,188:44,190:46,191:47,192:96,219:91,220:92,221:93,222:39,224:1251},scanCodes:{8:42,9:43,13:40,27:41,32:44,35:204,39:53,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,58:203,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,127:76,305:224,308:226,316:70},loadRect:function (rect) {
        return {
          x: ((SAFE_HEAP_LOAD(((rect + 0)|0), 4, 0))|0),
          y: ((SAFE_HEAP_LOAD(((rect + 4)|0), 4, 0))|0),
          w: ((SAFE_HEAP_LOAD(((rect + 8)|0), 4, 0))|0),
          h: ((SAFE_HEAP_LOAD(((rect + 12)|0), 4, 0))|0)
        };
      },updateRect:function (rect, r) {
        SAFE_HEAP_STORE(((rect)|0), ((r.x)|0), 4);
        SAFE_HEAP_STORE((((rect)+(4))|0), ((r.y)|0), 4);
        SAFE_HEAP_STORE((((rect)+(8))|0), ((r.w)|0), 4);
        SAFE_HEAP_STORE((((rect)+(12))|0), ((r.h)|0), 4);
      },intersectionOfRects:function (first, second) {
        var leftX = Math.max(first.x, second.x);
        var leftY = Math.max(first.y, second.y);
        var rightX = Math.min(first.x + first.w, second.x + second.w);
        var rightY = Math.min(first.y + first.h, second.y + second.h);
  
        return {
          x: leftX,
          y: leftY,
          w: Math.max(leftX, rightX) - leftX,
          h: Math.max(leftY, rightY) - leftY
        }
      },checkPixelFormat:function (fmt) {
        // Canvas screens are always RGBA.
        var format = ((SAFE_HEAP_LOAD(((fmt)|0), 4, 0))|0);
        if (format != -2042224636) {
          Runtime.warnOnce('Unsupported pixel format!');
        }
      },loadColorToCSSRGB:function (color) {
        var rgba = ((SAFE_HEAP_LOAD(((color)|0), 4, 0))|0);
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = ((SAFE_HEAP_LOAD(((color)|0), 4, 0))|0);
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var is_SDL_HWSURFACE = flags & 0x00000001;
        var is_SDL_HWPALETTE = flags & 0x00200000;
        var is_SDL_OPENGL = flags & 0x04000000;
  
        var surf = _malloc(60);
        var pixelFormat = _malloc(44);
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        var buffer = 0;
  
        // preemptively initialize this for software surfaces,
        // otherwise it will be lazily initialized inside of SDL_LockSurface
        if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
          buffer = _malloc(width * height * 4);
        }
  
        SAFE_HEAP_STORE(((surf)|0), ((flags)|0), 4);
        SAFE_HEAP_STORE((((surf)+(4))|0), ((pixelFormat)|0), 4);
        SAFE_HEAP_STORE((((surf)+(8))|0), ((width)|0), 4);
        SAFE_HEAP_STORE((((surf)+(12))|0), ((height)|0), 4);
        SAFE_HEAP_STORE((((surf)+(16))|0), ((width * bpp)|0), 4);  // assuming RGBA or indexed for now,
                                                                                          // since that is what ImageData gives us in browsers
        SAFE_HEAP_STORE((((surf)+(20))|0), ((buffer)|0), 4);
  
        SAFE_HEAP_STORE((((surf)+(36))|0), ((0)|0), 4);
        SAFE_HEAP_STORE((((surf)+(40))|0), ((0)|0), 4);
        SAFE_HEAP_STORE((((surf)+(44))|0), ((Module["canvas"].width)|0), 4);
        SAFE_HEAP_STORE((((surf)+(48))|0), ((Module["canvas"].height)|0), 4);
  
        SAFE_HEAP_STORE((((surf)+(56))|0), ((1)|0), 4);
  
        SAFE_HEAP_STORE(((pixelFormat)|0), ((-2042224636)|0), 4);
        SAFE_HEAP_STORE((((pixelFormat)+(4))|0), ((0)|0), 4);// TODO
        SAFE_HEAP_STORE((((pixelFormat)+(8))|0), ((bpp * 8)|0), 1);
        SAFE_HEAP_STORE((((pixelFormat)+(9))|0), ((bpp)|0), 1);
  
        SAFE_HEAP_STORE((((pixelFormat)+(12))|0), ((rmask || 0x000000ff)|0), 4);
        SAFE_HEAP_STORE((((pixelFormat)+(16))|0), ((gmask || 0x0000ff00)|0), 4);
        SAFE_HEAP_STORE((((pixelFormat)+(20))|0), ((bmask || 0x00ff0000)|0), 4);
        SAFE_HEAP_STORE((((pixelFormat)+(24))|0), ((amask || 0xff000000)|0), 4);
  
        // Decide if we want to use WebGL or not
        SDL.GL = SDL.GL || is_SDL_OPENGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
  
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0)
        };
        
        var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
              
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
  
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
  
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
  
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        
        var buffer  = surfData.buffer;
  
        if (!surfData.image.data32) {
          surfData.image.data32 = new Uint32Array(surfData.image.data.buffer);
        }
        var data32   = surfData.image.data32;
  
        var colors32 = surfData.colors32;
  
        for (var y = startY; y < endY; ++y) {
          var base = y * fullWidth;
          for (var x = startX; x < endX; ++x) {
            data32[base + x] = colors32[((SAFE_HEAP_LOAD(((buffer + base + x)|0), 1, 1))|0)];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = ((SAFE_HEAP_LOAD(((refcountPointer)|0), 4, 0))|0);
        if (refcount > 1) {
          SAFE_HEAP_STORE(((refcountPointer)|0), ((refcount - 1)|0), 4);
          return;
        }
  
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        if (info.buffer) _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
  
        if (surf === SDL.screen) {
          SDL.screen = null;
        }
      },blitSurface__deps:["SDL_LockSurface"],blitSurface:function (src, srcrect, dst, dstrect, scale) {
        var srcData = SDL.surfaces[src];
        var dstData = SDL.surfaces[dst];
        var sr, dr;
        if (srcrect) {
          sr = SDL.loadRect(srcrect);
        } else {
          sr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
        }
        if (dstrect) {
          dr = SDL.loadRect(dstrect);
        } else {
          dr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
        }
        if (dstData.clipRect) {
          var widthScale = (!scale || sr.w === 0) ? 1 : sr.w / dr.w;
          var heightScale = (!scale || sr.h === 0) ? 1 : sr.h / dr.h;
          
          dr = SDL.intersectionOfRects(dstData.clipRect, dr);
          
          sr.w = dr.w * widthScale;
          sr.h = dr.h * heightScale;
          
          if (dstrect) {
            SDL.updateRect(dstrect, dr);
          }
        }
        var blitw, blith;
        if (scale) {
          blitw = dr.w; blith = dr.h;
        } else {
          blitw = sr.w; blith = sr.h;
        }
        if (sr.w === 0 || sr.h === 0 || blitw === 0 || blith === 0) {
          return 0;
        }
        var oldAlpha = dstData.ctx.globalAlpha;
        dstData.ctx.globalAlpha = srcData.alpha/255;
        dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, blitw, blith);
        dstData.ctx.globalAlpha = oldAlpha;
        if (dst != SDL.screen) {
          // XXX As in IMG_Load, for compatibility we write out |pixels|
          Runtime.warnOnce('WARNING: copying canvas data to memory for compatibility');
          _SDL_LockSurface(dst);
          dstData.locked--; // The surface is not actually locked in this hack
        }
        return 0;
      },downFingers:{},savedKeydown:null,receiveEvent:function (event) {
        function unpressAllPressedKeys() {
          // Un-press all pressed keys: TODO
          for (var code in SDL.keyboardMap) {
            SDL.events.push({
              type: 'keyup',
              keyCode: SDL.keyboardMap[code]
            });
          }
        };
        switch(event.type) {
          case 'touchstart': case 'touchmove': {
            event.preventDefault();
  
            var touches = [];
            
            // Clear out any touchstart events that we've already processed
            if (event.type === 'touchstart') {
              for (var i = 0; i < event.touches.length; i++) {
                var touch = event.touches[i];
                if (SDL.downFingers[touch.identifier] != true) {
                  SDL.downFingers[touch.identifier] = true;
                  touches.push(touch);
                }
              }
            } else {
              touches = event.touches;
            }
            
            var firstTouch = touches[0];
            if (event.type == 'touchstart') {
              SDL.DOMButtons[0] = 1;
            }
            var mouseEventType;
            switch(event.type) {
              case 'touchstart': mouseEventType = 'mousedown'; break;
              case 'touchmove': mouseEventType = 'mousemove'; break;
            }
            var mouseEvent = {
              type: mouseEventType,
              button: 0,
              pageX: firstTouch.clientX,
              pageY: firstTouch.clientY
            };
            SDL.events.push(mouseEvent);
  
            for (var i = 0; i < touches.length; i++) {
              var touch = touches[i];
              SDL.events.push({
                type: event.type,
                touch: touch
              });
            };
            break;
          }
          case 'touchend': {
            event.preventDefault();
            
            // Remove the entry in the SDL.downFingers hash
            // because the finger is no longer down.
            for(var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              if (SDL.downFingers[touch.identifier] === true) {
                delete SDL.downFingers[touch.identifier];
              }
            }
  
            var mouseEvent = {
              type: 'mouseup',
              button: 0,
              pageX: event.changedTouches[0].clientX,
              pageY: event.changedTouches[0].clientY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(mouseEvent);
            
            for (var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              SDL.events.push({
                type: 'touchend',
                touch: touch
              });
            };
            break;
          }
          case 'DOMMouseScroll': case 'mousewheel': case 'wheel':
            var delta = -Browser.getMouseWheelDelta(event); // Flip the wheel direction to translate from browser wheel direction (+:down) to SDL direction (+:up)
            delta = (delta == 0) ? 0 : (delta > 0 ? Math.max(delta, 1) : Math.min(delta, -1)); // Quantize to integer so that minimum scroll is at least +/- 1.
  
            // Simulate old-style SDL events representing mouse wheel input as buttons
            var button = delta > 0 ? 3 /*SDL_BUTTON_WHEELUP-1*/ : 4 /*SDL_BUTTON_WHEELDOWN-1*/; // Subtract one since JS->C marshalling is defined to add one back.
            SDL.events.push({ type: 'mousedown', button: button, pageX: event.pageX, pageY: event.pageY });
            SDL.events.push({ type: 'mouseup', button: button, pageX: event.pageX, pageY: event.pageY });
  
            // Pass a delta motion event.
            SDL.events.push({ type: 'wheel', deltaX: 0, deltaY: delta });
            event.preventDefault(); // If we don't prevent this, then 'wheel' event will be sent again by the browser as 'DOMMouseScroll' and we will receive this same event the second time.
            break;
          case 'mousemove':
            if (SDL.DOMButtons[0] === 1) {
              SDL.events.push({
                type: 'touchmove',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            }
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (!SDL.unicode && !SDL.textInput) || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
  
            if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
              SDL.events.push({
                type: 'touchstart',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
  
              SDL.events.push({
                type: 'touchend',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
              SDL.DOMButtons[event.button] = 0;
            }
  
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown' || event.type === 'mousedown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup' || event.type === 'mouseup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
  
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
  
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'focus':
            SDL.events.push(event);
            event.preventDefault();
            break;
          case 'blur':
            SDL.events.push(event);
            unpressAllPressedKeys();
            event.preventDefault();
            break;
          case 'visibilitychange':
            SDL.events.push({
              type: 'visibilitychange',
              visible: !document.hidden
            });
            unpressAllPressedKeys();
            event.preventDefault();
            break;
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        // If we have a handler installed, this will push the events to the app
        // instead of the app polling for them.
        SDL.flushEventsToHandler();
        return;
      },lookupKeyCodeForEvent:function (event) {
          var code = event.keyCode;
          if (code >= 65 && code <= 90) {
            code += 32; // make lowercase for SDL
          } else {
            code = SDL.keyCodes[event.keyCode] || event.keyCode;
            // If this is one of the modifier keys (224 | 1<<10 - 227 | 1<<10), and the event specifies that it is
            // a right key, add 4 to get the right key SDL key code.
            if (event.location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT && code >= (224 | 1<<10) && code <= (227 | 1<<10)) {
              code += 4;
            }
          }
          return code;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
  
        switch (event.type) {
          case 'touchstart': case 'touchend': case 'touchmove': {
            Browser.calculateMouseEvent(event);
            break;
          }
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = SDL.lookupKeyCodeForEvent(event);
            SAFE_HEAP_STORE((((SDL.keyboardState)+(code))|0), ((down)|0), 1);
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (((SAFE_HEAP_LOAD((((SDL.keyboardState)+(1248))|0), 1, 0))|0) ? 0x0040 : 0) | // KMOD_LCTRL
              (((SAFE_HEAP_LOAD((((SDL.keyboardState)+(1249))|0), 1, 0))|0) ? 0x0001 : 0) | // KMOD_LSHIFT
              (((SAFE_HEAP_LOAD((((SDL.keyboardState)+(1250))|0), 1, 0))|0) ? 0x0100 : 0) | // KMOD_LALT
              (((SAFE_HEAP_LOAD((((SDL.keyboardState)+(1252))|0), 1, 0))|0) ? 0x0080 : 0) | // KMOD_RCTRL
              (((SAFE_HEAP_LOAD((((SDL.keyboardState)+(1253))|0), 1, 0))|0) ? 0x0002 : 0) | // KMOD_RSHIFT
              (((SAFE_HEAP_LOAD((((SDL.keyboardState)+(1254))|0), 1, 0))|0) ? 0x0200 : 0); //  KMOD_RALT
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
  
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },flushEventsToHandler:function () {
        if (!SDL.eventHandler) return;
  
        while (SDL.pollEvent(SDL.eventHandlerTemp)) {
          Runtime.dynCall('iii', SDL.eventHandler, [SDL.eventHandlerContext, SDL.eventHandlerTemp]);
        }
      },pollEvent:function (ptr) {
        if (SDL.initFlags & 0x200 && SDL.joystickEventState) {
          // If SDL_INIT_JOYSTICK was supplied AND the joystick system is configured
          // to automatically query for events, query for joystick events.
          SDL.queryJoysticks();
        }
        if (ptr) {
          while (SDL.events.length > 0) {
            if (SDL.makeCEvent(SDL.events.shift(), ptr) !== false) return 1;
          }
          return 0;
        } else {
          // XXX: somewhat risky in that we do not check if the event is real or not (makeCEvent returns false) if no pointer supplied
          return SDL.events.length > 0;
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a copy of a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28);
          _free(event); // the copy is no longer needed
          return;
        }
  
        SDL.handleEvent(event);
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = SDL.lookupKeyCodeForEvent(event);
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
  
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(8))|0), ((down ? 1 : 0)|0), 1);
            SAFE_HEAP_STORE((((ptr)+(9))|0), ((0)|0), 1); // TODO
            SAFE_HEAP_STORE((((ptr)+(12))|0), ((scan)|0), 4);
            SAFE_HEAP_STORE((((ptr)+(16))|0), ((key)|0), 4);
            SAFE_HEAP_STORE((((ptr)+(20))|0), ((SDL.modState)|0), 2);
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            SAFE_HEAP_STORE((((ptr)+(24))|0), ((event.keypressCharCode || key)|0), 4);
  
            break;
          }
          case 'keypress': {
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              SAFE_HEAP_STORE((((ptr)+(8 + i))|0), ((cStr[i])|0), 1);
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
              SAFE_HEAP_STORE((((ptr)+(4))|0), ((0)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(8))|0), ((0)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(12))|0), ((0)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(16))|0), ((event.button+1)|0), 1); // DOM buttons are 0-2, SDL 1-3
              SAFE_HEAP_STORE((((ptr)+(17))|0), ((down ? 1 : 0)|0), 1);
              SAFE_HEAP_STORE((((ptr)+(20))|0), ((Browser.mouseX)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(24))|0), ((Browser.mouseY)|0), 4);
            } else {
              SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
              SAFE_HEAP_STORE((((ptr)+(4))|0), ((0)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(8))|0), ((0)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(12))|0), ((0)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(16))|0), ((SDL.buttonState)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(20))|0), ((Browser.mouseX)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(24))|0), ((Browser.mouseY)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(28))|0), ((Browser.mouseMovementX)|0), 4);
              SAFE_HEAP_STORE((((ptr)+(32))|0), ((Browser.mouseMovementY)|0), 4);
            }
            break;
          }
          case 'wheel': {
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(16))|0), ((event.deltaX)|0), 4);
            SAFE_HEAP_STORE((((ptr)+(20))|0), ((event.deltaY)|0), 4); 
            break;       
          }
          case 'touchstart': case 'touchend': case 'touchmove': {
            var touch = event.touch;
            if (!Browser.touches[touch.identifier]) break;
            var w = Module['canvas'].width;
            var h = Module['canvas'].height;
            var x = Browser.touches[touch.identifier].x / w;
            var y = Browser.touches[touch.identifier].y / h;
            var lx = Browser.lastTouches[touch.identifier].x / w;
            var ly = Browser.lastTouches[touch.identifier].y / h;
            var dx = x - lx;
            var dy = y - ly;
            if (touch['deviceID'] === undefined) touch.deviceID = SDL.TOUCH_DEFAULT_ID;
            if (dx === 0 && dy === 0 && event.type === 'touchmove') return false; // don't send these if nothing happened
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(4))|0), ((_SDL_GetTicks())|0), 4);
            (tempI64 = [touch.deviceID>>>0,(tempDouble=touch.deviceID,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],SAFE_HEAP_STORE((((ptr)+(8))|0), ((tempI64[0])|0), 4),SAFE_HEAP_STORE((((ptr)+(12))|0), ((tempI64[1])|0), 4));
            (tempI64 = [touch.identifier>>>0,(tempDouble=touch.identifier,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],SAFE_HEAP_STORE((((ptr)+(16))|0), ((tempI64[0])|0), 4),SAFE_HEAP_STORE((((ptr)+(20))|0), ((tempI64[1])|0), 4));
            SAFE_HEAP_STORE_D((((ptr)+(24))|0), (+(x)), 4);
            SAFE_HEAP_STORE_D((((ptr)+(28))|0), (+(y)), 4);
            SAFE_HEAP_STORE_D((((ptr)+(32))|0), (+(dx)), 4);
            SAFE_HEAP_STORE_D((((ptr)+(36))|0), (+(dy)), 4);
            if (touch.force !== undefined) {
              SAFE_HEAP_STORE_D((((ptr)+(40))|0), (+(touch.force)), 4);
            } else { // No pressure data, send a digital 0/1 pressure.
              SAFE_HEAP_STORE_D((((ptr)+(40))|0), (+(event.type == "touchend" ? 0 : 1)), 4);
            }
            break;
          }
          case 'unload': {
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            break;
          }
          case 'resize': {
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(4))|0), ((event.w)|0), 4);
            SAFE_HEAP_STORE((((ptr)+(8))|0), ((event.h)|0), 4);
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(4))|0), ((event.index)|0), 1);
            SAFE_HEAP_STORE((((ptr)+(5))|0), ((event.button)|0), 1);
            SAFE_HEAP_STORE((((ptr)+(6))|0), ((state)|0), 1);
            break;
          }
          case 'joystick_axis_motion': {
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(4))|0), ((event.index)|0), 1);
            SAFE_HEAP_STORE((((ptr)+(5))|0), ((event.axis)|0), 1);
            SAFE_HEAP_STORE((((ptr)+(8))|0), ((SDL.joystickAxisValueConversion(event.value))|0), 4);
            break;
          }
          case 'focus': {
            var SDL_WINDOWEVENT_FOCUS_GAINED = 12 /* SDL_WINDOWEVENT_FOCUS_GAINED */;
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(4))|0), ((0)|0), 4);
            SAFE_HEAP_STORE((((ptr)+(8))|0), ((SDL_WINDOWEVENT_FOCUS_GAINED)|0), 1);
            break;
          }
          case 'blur': {
            var SDL_WINDOWEVENT_FOCUS_LOST = 13 /* SDL_WINDOWEVENT_FOCUS_LOST */;
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(4))|0), ((0)|0), 4);
            SAFE_HEAP_STORE((((ptr)+(8))|0), ((SDL_WINDOWEVENT_FOCUS_LOST)|0), 1);
            break;
          }
          case 'visibilitychange': {
            var SDL_WINDOWEVENT_SHOWN  = 1 /* SDL_WINDOWEVENT_SHOWN */;
            var SDL_WINDOWEVENT_HIDDEN = 2 /* SDL_WINDOWEVENT_HIDDEN */;
            var visibilityEventID = event.visible ? SDL_WINDOWEVENT_SHOWN : SDL_WINDOWEVENT_HIDDEN;
            SAFE_HEAP_STORE(((ptr)|0), ((SDL.DOMEventToSDLEvent[event.type])|0), 4);
            SAFE_HEAP_STORE((((ptr)+(4))|0), ((0)|0), 4);
            SAFE_HEAP_STORE((((ptr)+(8))|0), ((visibilityEventID)|0), 1);
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        assert(tempCtx, 'TTF_Init must have been called');
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = Math.min(Math.max(volume, 0), 128) / 128;
          if (info.audio) {
            try {
              info.audio.volume = info.volume; // For <audio> element
              if (info.audio.webAudioGainNode) info.audio.webAudioGainNode['gain']['value'] = info.volume; // For WebAudio playback
            } catch(e) {
              Module.printErr('setGetVolume failed to set audio volume: ' + e);
            }
          }
        }
        return ret;
      },setPannerPosition:function (info, x, y, z) {
        if (!info) return;
        if (info.audio) {
          if (info.audio.webAudioPannerNode) {
            info.audio.webAudioPannerNode['setPosition'](x, y, z);
          }
        }
      },playWebAudio:function (audio) {
        if (!audio) return;
        if (audio.webAudioNode) return; // This instance is already playing, don't start again.
        if (!SDL.webAudioAvailable()) return;
        try {
          var webAudio = audio.resource.webAudio;
          audio.paused = false;
          if (!webAudio.decodedBuffer) {
            if (webAudio.onDecodeComplete === undefined) abort("Cannot play back audio object that was not loaded");
            webAudio.onDecodeComplete.push(function() { if (!audio.paused) SDL.playWebAudio(audio); });
            return;
          }
          audio.webAudioNode = SDL.audioContext['createBufferSource']();
          audio.webAudioNode['buffer'] = webAudio.decodedBuffer;
          audio.webAudioNode['loop'] = audio.loop;
          audio.webAudioNode['onended'] = function() { audio['onended'](); } // For <media> element compatibility, route the onended signal to the instance.
  
          audio.webAudioPannerNode = SDL.audioContext['createPanner']();
          audio.webAudioPannerNode['panningModel'] = 'equalpower';
  
          // Add an intermediate gain node to control volume.
          audio.webAudioGainNode = SDL.audioContext['createGain']();
          audio.webAudioGainNode['gain']['value'] = audio.volume;
  
          audio.webAudioNode['connect'](audio.webAudioPannerNode);
          audio.webAudioPannerNode['connect'](audio.webAudioGainNode);
          audio.webAudioGainNode['connect'](SDL.audioContext['destination']);
  
          audio.webAudioNode['start'](0, audio.currentPosition);
          audio.startTime = SDL.audioContext['currentTime'] - audio.currentPosition;
        } catch(e) {
          Module.printErr('playWebAudio failed: ' + e);
        }
      },pauseWebAudio:function (audio) {
        if (!audio) return;
        if (audio.webAudioNode) {
          try {
            // Remember where we left off, so that if/when we resume, we can restart the playback at a proper place.
            audio.currentPosition = (SDL.audioContext['currentTime'] - audio.startTime) % audio.resource.webAudio.decodedBuffer.duration;
            // Important: When we reach here, the audio playback is stopped by the user. But when calling .stop() below, the Web Audio
            // graph will send the onended signal, but we don't want to process that, since pausing should not clear/destroy the audio
            // channel.
            audio.webAudioNode['onended'] = undefined;
            audio.webAudioNode.stop();
            audio.webAudioNode = undefined;
          } catch(e) {
            Module.printErr('pauseWebAudio failed: ' + e);
          }
        }
        audio.paused = true;
      },openAudioContext:function () {
        // Initialize Web Audio API if we haven't done so yet. Note: Only initialize Web Audio context ever once on the web page,
        // since initializing multiple times fails on Chrome saying 'audio resources have been exhausted'.
        if (!SDL.audioContext) {
          if (typeof(AudioContext) !== 'undefined') SDL.audioContext = new AudioContext();
          else if (typeof(webkitAudioContext) !== 'undefined') SDL.audioContext = new webkitAudioContext();
        }
      },webAudioAvailable:function () { return !!SDL.audioContext; },fillWebAudioBufferFromHeap:function (heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
        // The input audio data is interleaved across the channels, i.e. [L, R, L, R, L, R, ...] and is either 8-bit or 16-bit as
        // supported by the SDL API. The output audio wave data for Web Audio API must be in planar buffers of [-1,1]-normalized Float32 data,
        // so perform a buffer conversion for the data.
        var numChannels = SDL.audio.channels;
        for(var c = 0; c < numChannels; ++c) {
          var channelData = dstAudioBuffer['getChannelData'](c);
          if (channelData.length != sizeSamplesPerChannel) {
            throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + ' samples!';
          }
          if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              channelData[j] = (((SAFE_HEAP_LOAD((((heapPtr)+((j*numChannels + c)*2))|0), 2, 0))|0)) / 0x8000;
            }
          } else if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              var v = (((SAFE_HEAP_LOAD((((heapPtr)+(j*numChannels + c))|0), 1, 0))|0));
              channelData[j] = ((v >= 0) ? v-128 : v+128) /128;
            }
          }
        }
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
  
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
  
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};function _SDL_Flip(surf) {
      // We actually do this in Unlock, since the screen surface has as its canvas
      // backing the page canvas element
    }

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        SAFE_HEAP_STORE(((buf)|0), ((stat.dev)|0), 4);
        SAFE_HEAP_STORE((((buf)+(4))|0), ((0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(8))|0), ((stat.ino)|0), 4);
        SAFE_HEAP_STORE((((buf)+(12))|0), ((stat.mode)|0), 4);
        SAFE_HEAP_STORE((((buf)+(16))|0), ((stat.nlink)|0), 4);
        SAFE_HEAP_STORE((((buf)+(20))|0), ((stat.uid)|0), 4);
        SAFE_HEAP_STORE((((buf)+(24))|0), ((stat.gid)|0), 4);
        SAFE_HEAP_STORE((((buf)+(28))|0), ((stat.rdev)|0), 4);
        SAFE_HEAP_STORE((((buf)+(32))|0), ((0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(36))|0), ((stat.size)|0), 4);
        SAFE_HEAP_STORE((((buf)+(40))|0), ((4096)|0), 4);
        SAFE_HEAP_STORE((((buf)+(44))|0), ((stat.blocks)|0), 4);
        SAFE_HEAP_STORE((((buf)+(48))|0), (((stat.atime.getTime() / 1000)|0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(52))|0), ((0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(56))|0), (((stat.mtime.getTime() / 1000)|0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(60))|0), ((0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(64))|0), (((stat.ctime.getTime() / 1000)|0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(68))|0), ((0)|0), 4);
        SAFE_HEAP_STORE((((buf)+(72))|0), ((stat.ino)|0), 4);
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
        ret = ret.slice(0, Math.max(0, bufsize));
        writeStringToMemory(ret, buf, true);
        return ret.length;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = ((SAFE_HEAP_LOAD((((iov)+(i*8))|0), 4, 0))|0);
          var len = ((SAFE_HEAP_LOAD((((iov)+(i*8 + 4))|0), 4, 0))|0);
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = ((SAFE_HEAP_LOAD((((iov)+(i*8))|0), 4, 0))|0);
          var len = ((SAFE_HEAP_LOAD((((iov)+(i*8 + 4))|0), 4, 0))|0);
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = ((SAFE_HEAP_LOAD((((SYSCALLS.varargs)-(4))|0), 4, 0))|0);
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall195(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // SYS_stat64
      var path = SYSCALLS.getStr(), buf = SYSCALLS.get();
      return SYSCALLS.doStat(FS.stat, path, buf);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall196(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // SYS_lstat64
      var path = SYSCALLS.getStr(), buf = SYSCALLS.get();
      return SYSCALLS.doStat(FS.lstat, path, buf);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:[],currentContext:null,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = ((SAFE_HEAP_LOAD((((length)+(i*4))|0), 4, 0))|0);
            if (len < 0) {
              frag = Pointer_stringify(((SAFE_HEAP_LOAD((((string)+(i*4))|0), 4, 0))|0));
            } else {
              frag = Pointer_stringify(((SAFE_HEAP_LOAD((((string)+(i*4))|0), 4, 0))|0), len);
            }
          } else {
            frag = Pointer_stringify(((SAFE_HEAP_LOAD((((string)+(i*4))|0), 4, 0))|0));
          }
          source += frag;
        }
        return source;
      },createContext:function (canvas, webGLContextAttributes) {
        if (typeof webGLContextAttributes.majorVersion === 'undefined' && typeof webGLContextAttributes.minorVersion === 'undefined') {
          webGLContextAttributes.majorVersion = 1;
          webGLContextAttributes.minorVersion = 0;
        }
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
          try {
            if (webGLContextAttributes.majorVersion == 1 && webGLContextAttributes.minorVersion == 0) {
              ctx = canvas.getContext("webgl", webGLContextAttributes) || canvas.getContext("experimental-webgl", webGLContextAttributes);
            } else if (webGLContextAttributes.majorVersion == 2 && webGLContextAttributes.minorVersion == 0) {
              ctx = canvas.getContext("webgl2", webGLContextAttributes) || canvas.getContext("experimental-webgl2", webGLContextAttributes);
            } else {
              throw 'Unsupported WebGL context version ' + majorVersion + '.' + minorVersion + '!'
            }
          } finally {
            canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e, JSON.stringify(webGLContextAttributes)]);
          return 0;
        }
        // possible GL_DEBUG entry point: ctx = wrapDebugGL(ctx);
  
        if (!ctx) return 0;
        return GL.registerContext(ctx, webGLContextAttributes);
      },registerContext:function (ctx, webGLContextAttributes) {
        var handle = GL.getNewId(GL.contexts);
        var context = {
          handle: handle,
          version: webGLContextAttributes.majorVersion,
          GLctx: ctx
        };
        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.
        if (ctx.canvas) ctx.canvas.GLctxObject = context;
        GL.contexts[handle] = context;
        if (typeof webGLContextAttributes['enableExtensionsByDefault'] === 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {
          GL.initExtensions(context);
        }
        return handle;
      },makeContextCurrent:function (contextHandle) {
        var context = GL.contexts[contextHandle];
        if (!context) return false;
        GLctx = Module.ctx = context.GLctx; // Active WebGL context object.
        GL.currentContext = context; // Active Emscripten GL layer context object.
        return true;
      },getContext:function (contextHandle) {
        return GL.contexts[contextHandle];
      },deleteContext:function (contextHandle) {
        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;
        if (typeof JSEvents === 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.
        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.
        GL.contexts[contextHandle] = null;
      },initExtensions:function (context) {
        // If this function is called without a specific context object, init the extensions of the currently active context.
        if (!context) context = GL.currentContext;
  
        if (context.initExtensionsDone) return;
        context.initExtensionsDone = true;
  
        var GLctx = context.GLctx;
  
        context.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
  
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
  
        if (context.version < 2) {
          // Extension available from Firefox 26 and Google Chrome 30
          var instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
          if (instancedArraysExt) {
            GLctx['vertexAttribDivisor'] = function(index, divisor) { instancedArraysExt['vertexAttribDivisorANGLE'](index, divisor); };
            GLctx['drawArraysInstanced'] = function(mode, first, count, primcount) { instancedArraysExt['drawArraysInstancedANGLE'](mode, first, count, primcount); };
            GLctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { instancedArraysExt['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };
          }
  
          // Extension available from Firefox 25 and WebKit
          var vaoExt = GLctx.getExtension('OES_vertex_array_object');
          if (vaoExt) {
            GLctx['createVertexArray'] = function() { return vaoExt['createVertexArrayOES'](); };
            GLctx['deleteVertexArray'] = function(vao) { vaoExt['deleteVertexArrayOES'](vao); };
            GLctx['bindVertexArray'] = function(vao) { vaoExt['bindVertexArrayOES'](vao); };
            GLctx['isVertexArray'] = function(vao) { return vaoExt['isVertexArrayOES'](vao); };
          }
  
          var drawBuffersExt = GLctx.getExtension('WEBGL_draw_buffers');
          if (drawBuffersExt) {
            GLctx['drawBuffers'] = function(n, bufs) { drawBuffersExt['drawBuffersWEBGL'](n, bufs); };
          }
        }
  
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources",
                                               "EXT_shader_texture_lod" ];
  
        function shouldEnableAutomatically(extension) {
          var ret = false;
          automaticallyEnabledExtensions.forEach(function(include) {
            if (ext.indexOf(include) != -1) {
              ret = true;
            }
          });
          return ret;
        }
  
        var exts = GLctx.getSupportedExtensions();
        if (exts && exts.length > 0) {
          GLctx.getSupportedExtensions().forEach(function(ext) {
            if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
              GLctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
            }
          });
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
  
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = GLctx.getActiveUniform(p, i);
  
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
  
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
  
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = GLctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
  
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = GLctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
  
            GL.uniforms[id] = loc;
          }
        }
      }};function _SDL_SetVideoMode(width, height, depth, flags) {
      ['touchstart', 'touchend', 'touchmove', 'mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'wheel', 'mouseout'].forEach(function(event) {
        Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
      });
  
      var canvas = Module['canvas'];
  
      // (0,0) means 'use fullscreen' in native; in Emscripten, use the current canvas size.
      if (width == 0 && height == 0) {
        width = canvas.width;
        height = canvas.height;
      }
  
      if (!SDL.addedResizeListener) {
        SDL.addedResizeListener = true;
        Browser.resizeListeners.push(function(w, h) {
          if (!SDL.settingVideoMode) {
            SDL.receiveEvent({
              type: 'resize',
              w: w,
              h: h
            });
          }
        });
      }
  
      if (width !== canvas.width || height !== canvas.height) {
        SDL.settingVideoMode = true; // SetVideoMode itself should not trigger resize events
        Browser.setCanvasSize(width, height);
        SDL.settingVideoMode = false;
      }
  
      // Free the old surface first if there is one
      if (SDL.screen) {
        SDL.freeSurface(SDL.screen);
        assert(!SDL.screen);
      }
  
      if (SDL.GL) flags = flags | 0x04000000; // SDL_OPENGL - if we are using GL, then later calls to SetVideoMode may not mention GL, but we do need it. Once in GL mode, we never leave it.
  
      SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
  
      return SDL.screen;
    }

  function _SDL_ShowCursor(toggle) {
      switch (toggle) {
        case 0: // SDL_DISABLE
          if (Browser.isFullScreen) { // only try to lock the pointer when in full screen mode
            Module['canvas'].requestPointerLock();
            return 0;
          } else { // else return SDL_ENABLE to indicate the failure
            return 1;
          }
          break;
        case 1: // SDL_ENABLE
          Module['canvas'].exitPointerLock();
          return 1;
          break;
        case -1: // SDL_QUERY
          return !Browser.pointerLock;
          break;
        default:
          console.log( "SDL_ShowCursor called with unknown toggle parameter value: " + toggle + "." );
          break;
      }
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _SDL_PollEvent(ptr) {
      return SDL.pollEvent(ptr);
    }



  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  function _SDL_GetError() {
      if (!SDL.errorMessage) {
        SDL.errorMessage = allocate(intArrayFromString("unknown SDL-emscripten error"), 'i8', ALLOC_NORMAL);
      }
      return SDL.errorMessage;
    }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          SAFE_HEAP_STORE(((argp)|0), ((0)|0), 4);
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  var ___tm_current=allocate(44, "i8", ALLOC_STATIC);
  
  
  var ___tm_timezone=allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);
  
  
  var _tzname=allocate(8, "i32*", ALLOC_STATIC);
  
  var _daylight=allocate(1, "i32*", ALLOC_STATIC);
  
  var _timezone=allocate(1, "i32*", ALLOC_STATIC);function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
  
      SAFE_HEAP_STORE(((_timezone)|0), ((-(new Date()).getTimezoneOffset() * 60)|0), 4);
  
      var winter = new Date(2000, 0, 1);
      var summer = new Date(2000, 6, 1);
      SAFE_HEAP_STORE(((_daylight)|0), ((Number(winter.getTimezoneOffset() != summer.getTimezoneOffset()))|0), 4);
  
      function extractZone(date) {
        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return match ? match[1] : "GMT";
      };
      var winterName = extractZone(winter);
      var summerName = extractZone(summer);
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
        // Northern hemisphere
        SAFE_HEAP_STORE(((_tzname)|0), ((winterNamePtr)|0), 4);
        SAFE_HEAP_STORE((((_tzname)+(4))|0), ((summerNamePtr)|0), 4);
      } else {
        SAFE_HEAP_STORE(((_tzname)|0), ((summerNamePtr)|0), 4);
        SAFE_HEAP_STORE((((_tzname)+(4))|0), ((winterNamePtr)|0), 4);
      }
    }function _localtime_r(time, tmPtr) {
      _tzset();
      var date = new Date(((SAFE_HEAP_LOAD(((time)|0), 4, 0))|0)*1000);
      SAFE_HEAP_STORE(((tmPtr)|0), ((date.getSeconds())|0), 4);
      SAFE_HEAP_STORE((((tmPtr)+(4))|0), ((date.getMinutes())|0), 4);
      SAFE_HEAP_STORE((((tmPtr)+(8))|0), ((date.getHours())|0), 4);
      SAFE_HEAP_STORE((((tmPtr)+(12))|0), ((date.getDate())|0), 4);
      SAFE_HEAP_STORE((((tmPtr)+(16))|0), ((date.getMonth())|0), 4);
      SAFE_HEAP_STORE((((tmPtr)+(20))|0), ((date.getFullYear()-1900)|0), 4);
      SAFE_HEAP_STORE((((tmPtr)+(24))|0), ((date.getDay())|0), 4);
  
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      SAFE_HEAP_STORE((((tmPtr)+(28))|0), ((yday)|0), 4);
      SAFE_HEAP_STORE((((tmPtr)+(36))|0), ((-(date.getTimezoneOffset() * 60))|0), 4);
  
      // DST is in December in South
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dst = (date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
      SAFE_HEAP_STORE((((tmPtr)+(32))|0), ((dst)|0), 4);
  
      var zonePtr = ((SAFE_HEAP_LOAD((((_tzname)+(dst ? Runtime.QUANTUM_SIZE : 0))|0), 4, 0))|0);
      SAFE_HEAP_STORE((((tmPtr)+(40))|0), ((zonePtr)|0), 4);
  
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function _SDL_WM_SetIcon() { /* This function would set the application window icon surface, which doesn't apply for web canvases, so a no-op. */ }

  var _BDtoIHigh=true;

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }


  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _SDL_WM_SetCaption(title, icon) {
      if (title && typeof Module['setWindowTitle'] !== 'undefined') {
        Module['setWindowTitle'](Pointer_stringify(title));
      }
      icon = icon && Pointer_stringify(icon);
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  var __sigalrm_handler=0;function _signal(sig, func) {
      if (sig == 14 /*SIGALRM*/) {
        __sigalrm_handler = func;
      } else {
        Module.printErr('Calling stub instead of signal()');
      }
      return 0;
    }

  var _BItoD=true;

  function _SDL_PushEvent(ptr) {
      var copy = _malloc(28);
      _memcpy(copy, ptr, 28);
      SDL.events.push(copy);
      return 0;
    }

  
  function _SDL_AudioQuit() {
      for (var i = 0; i < SDL.numChannels; ++i) {
        if (SDL.channels[i].audio) {
          SDL.channels[i].audio.pause();
          SDL.channels[i].audio = undefined;
        }
      }
      if (SDL.music.audio) SDL.music.audio.pause();
      SDL.music.audio = undefined;
    }function _SDL_Quit() {
      _SDL_AudioQuit();
      Module.print('SDL_Quit called (and ignored)');
    }

  function _SDL_EnableUNICODE(on) {
      var ret = SDL.unicode || 0;
      SDL.unicode = on;
      return ret;
    }

  function _SDL_SetColorKey(surf, flag, key) {
      // SetColorKey assigns one color to be rendered as transparent. I don't
      // think the canvas API allows for anything like this, and iterating through
      // each pixel to replace that color seems prohibitively expensive.
      Runtime.warnOnce('SDL_SetColorKey is a no-op for performance reasons');
      return 0;
    }

  function _SDL_EnableKeyRepeat(delay, interval) {
      // TODO
    }

  function _SDL_MapRGB(fmt, r, g, b) {
      SDL.checkPixelFormat(fmt);
      // We assume the machine is little-endian.
      return r&0xff|(g&0xff)<<8|(b&0xff)<<16|0xff000000;
    }

  
  var PROCINFO={ppid:1,pid:42,sid:42,pgid:42};function ___syscall20(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // getpid
      return PROCINFO.pid;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function _SDL_SetColors(surf, colors, firstColor, nColors) {
      var surfData = SDL.surfaces[surf];
  
      // we should create colors array
      // only once cause client code
      // often wants to change portion 
      // of palette not all palette.
      if (!surfData.colors) {
        var buffer = new ArrayBuffer(256 * 4); // RGBA, A is unused, but faster this way
        surfData.colors = new Uint8Array(buffer);
        surfData.colors32 = new Uint32Array(buffer);
      } 
  
      for (var i = 0; i < nColors; ++i) {
        var index = (firstColor + i) * 4;
        surfData.colors[index] = ((SAFE_HEAP_LOAD((((colors)+(i*4))|0), 1, 1))|0);
        surfData.colors[index + 1] = ((SAFE_HEAP_LOAD((((colors)+(i*4 + 1))|0), 1, 1))|0);
        surfData.colors[index + 2] = ((SAFE_HEAP_LOAD((((colors)+(i*4 + 2))|0), 1, 1))|0);
        surfData.colors[index + 3] = 255; // opaque
      }
  
      return 1;
    }function _SDL_SetPalette(surf, flags, colors, firstColor, nColors) {
      return _SDL_SetColors(surf, colors, firstColor, nColors);
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }

  function _abort() {
      Module['abort']();
    }

  
  var EmterpreterAsync={initted:false,state:0,saveStack:"",yieldCallbacks:[],postAsync:null,asyncFinalizers:[],ensureInit:function () {
        if (this.initted) return;
        this.initted = true;
        abortDecorators.push(function(output, what) {
          if (EmterpreterAsync.state !== 0) {
            return output + '\nThis error happened during an emterpreter-async save or load of the stack. Was there non-emterpreted code on the stack during save (which is unallowed)? You may want to adjust EMTERPRETIFY_BLACKLIST, EMTERPRETIFY_WHITELIST.\nThis is what the stack looked like when we tried to save it: ' + [EmterpreterAsync.state, EmterpreterAsync.saveStack];
          }
          return output;
        });
      },setState:function (s) {
        this.ensureInit();
        this.state = s;
        asm.setAsyncState(s);
      },handle:function (doAsyncOp, yieldDuring) {
        Module['noExitRuntime'] = true;
        if (EmterpreterAsync.state === 0) {
          // save the stack we want to resume. this lets other code run in between
          // XXX this assumes that this stack top never ever leak! exceptions might violate that
          var stack = new Int32Array(HEAP32.subarray(EMTSTACKTOP>>2, asm.emtStackSave()>>2));
          var stacktop = asm.stackSave();
  
          var resumedCallbacksForYield = false;
          function resumeCallbacksForYield() {
            if (resumedCallbacksForYield) return;
            resumedCallbacksForYield = true;
            // allow async callbacks, and also make sure to call the specified yield callbacks. we must
            // do this when nothing is on the stack, i.e. after it unwound
            EmterpreterAsync.yieldCallbacks.forEach(function(func) {
              func();
            });
            Browser.resumeAsyncCallbacks(); // if we were paused (e.g. we are after a sleep), then since we are now yielding, it is safe to call callbacks
          }
  
          var callingDoAsyncOp = 1; // if resume is called synchronously - during the doAsyncOp - we must make it truly async, for consistency
  
          doAsyncOp(function resume(post) {
            if (callingDoAsyncOp) {
              assert(callingDoAsyncOp === 1); // avoid infinite recursion
              callingDoAsyncOp++;
              setTimeout(function() {
                resume(post);
              }, 0);
              return;
            }
  
            assert(EmterpreterAsync.state === 1 || EmterpreterAsync.state === 3);
            EmterpreterAsync.setState(3);
            if (yieldDuring) {
              resumeCallbacksForYield();
            }
            // copy the stack back in and resume
            HEAP32.set(stack, EMTSTACKTOP>>2);
            assert(stacktop === asm.stackSave()); // nothing should have modified the stack meanwhile
            EmterpreterAsync.setState(2);
            // Resume the main loop
            if (Browser.mainLoop.func) {
              Browser.mainLoop.resume();
            }
            assert(!EmterpreterAsync.postAsync);
            EmterpreterAsync.postAsync = post || null;
            asm.emterpret(stack[0]); // pc of the first function, from which we can reconstruct the rest, is at position 0 on the stack
            if (!yieldDuring && EmterpreterAsync.state === 0) {
              // if we did *not* do another async operation, then we know that nothing is conceptually on the stack now, and we can re-allow async callbacks as well as run the queued ones right now
              Browser.resumeAsyncCallbacks();
            }
            if (EmterpreterAsync.state === 0) {
              EmterpreterAsync.asyncFinalizers.forEach(function(func) {
                func();
              });
              EmterpreterAsync.asyncFinalizers.length = 0;
            }
          });
  
          callingDoAsyncOp = 0;
  
          EmterpreterAsync.setState(1);
          EmterpreterAsync.saveStack = new Error().stack; // we can't call  stackTrace()  as it calls compiled code
          // Pause the main loop, until we resume
          if (Browser.mainLoop.func) {
            Browser.mainLoop.pause();
          }
          if (yieldDuring) {
            // do this when we are not on the stack, i.e., the stack unwound. we might be too late, in which case we do it in resume()
            setTimeout(function() {
              resumeCallbacksForYield();
            }, 0);
          } else {
            Browser.pauseAsyncCallbacks();
          }
        } else {
          // nothing to do here, the stack was just recreated. reset the state.
          assert(EmterpreterAsync.state === 2);
          EmterpreterAsync.setState(0);
  
          if (EmterpreterAsync.postAsync) {
            var ret = EmterpreterAsync.postAsync();
            EmterpreterAsync.postAsync = null;
            return ret;
          }
        }
      }};function _emscripten_sleep(ms) {
      EmterpreterAsync.handle(function(resume) {
        setTimeout(function() {
          if (ABORT) return; // do this manually; we can't call into Browser.safeSetTimeout, because that is paused/resumed!
          resume();
        }, ms);
      });
    }

  function _SDL_UpdateRects(surf, numrects, rects) {
      // We actually do the whole screen in Unlock...
    }

  function ___lock() {}

  function ___unlock() {}

  function _SDL_FillRect(surf, rect, color) {
      var surfData = SDL.surfaces[surf];
      assert(!surfData.locked); // but we could unlock and re-lock if we must..
  
      if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
        //in SDL_HWPALETTE color is index (0..255)
        //so we should translate 1 byte value to
        //32 bit canvas
        color = surfData.colors32[color];
      }
  
      var r = rect ? SDL.loadRect(rect) : { x: 0, y: 0, w: surfData.width, h: surfData.height };
  
      if (surfData.clipRect) {
        r = SDL.intersectionOfRects(surfData.clipRect, r);
  
        if (rect) {
          SDL.updateRect(rect, r);
        }
      }
  
      surfData.ctx.save();
      surfData.ctx.fillStyle = SDL.translateColorToCSSRGBA(color);
      surfData.ctx.fillRect(r.x, r.y, r.w, r.h);
      surfData.ctx.restore();
      return 0;
    }

  
  function _SDL_ConvertSurface(surf, format, flags) {
      if  (format) {
        SDL.checkPixelFormat(format);
      }
  
      var oldData = SDL.surfaces[surf];
      var ret = SDL.makeSurface(oldData.width, oldData.height, oldData.flags, false, 'copy:' + oldData.source);
      var newData = SDL.surfaces[ret];
      
      newData.ctx.globalCompositeOperation = "copy";
      newData.ctx.drawImage(oldData.canvas, 0, 0);
      newData.ctx.globalCompositeOperation = oldData.ctx.globalCompositeOperation;
      return ret;
    }function _SDL_DisplayFormatAlpha(surf) {
      return _SDL_ConvertSurface(surf);
    }

  var _fabs=Math_abs;


  var _abs=Math_abs;


  function _SDL_GetModState() {
      return SDL.modState;
    }

  function ___syscall15(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // chmod
      var path = SYSCALLS.getStr(), mode = SYSCALLS.get();
      FS.chmod(path, mode);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _SDL_LowerBlit() {
  return _SDL_UpperBlit.apply(null, arguments)
  }

  function ___syscall10(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // unlink
      var path = SYSCALLS.getStr();
      FS.unlink(path);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _SDL_Init(initFlags) {
      SDL.startTime = Date.now();
      SDL.initFlags = initFlags;
  
      // capture all key events. we just keep down and up, but also capture press to prevent default actions
      if (!Module['doNotCaptureKeyboard']) {
        var keyboardListeningElement = Module['keyboardListeningElement'] || document;
        keyboardListeningElement.addEventListener("keydown", SDL.receiveEvent);
        keyboardListeningElement.addEventListener("keyup", SDL.receiveEvent);
        keyboardListeningElement.addEventListener("keypress", SDL.receiveEvent);
        window.addEventListener("focus", SDL.receiveEvent);
        window.addEventListener("blur", SDL.receiveEvent);
        document.addEventListener("visibilitychange", SDL.receiveEvent);
      }
  
      if (initFlags & 0x200) {
        // SDL_INIT_JOYSTICK
        // Firefox will not give us Joystick data unless we register this NOP
        // callback.
        // https://bugzilla.mozilla.org/show_bug.cgi?id=936104
        addEventListener("gamepadconnected", function() {});
      }
  
      window.addEventListener("unload", SDL.receiveEvent);
      SDL.keyboardState = _malloc(0x10000); // Our SDL needs 512, but 64K is safe for older SDLs
      _memset(SDL.keyboardState, 0, 0x10000);
      // Initialize this structure carefully for closure
      SDL.DOMEventToSDLEvent['keydown']    = 0x300  /* SDL_KEYDOWN */;
      SDL.DOMEventToSDLEvent['keyup']      = 0x301  /* SDL_KEYUP */;
      SDL.DOMEventToSDLEvent['keypress']   = 0x303  /* SDL_TEXTINPUT */;
      SDL.DOMEventToSDLEvent['mousedown']  = 0x401  /* SDL_MOUSEBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['mouseup']    = 0x402  /* SDL_MOUSEBUTTONUP */;
      SDL.DOMEventToSDLEvent['mousemove']  = 0x400  /* SDL_MOUSEMOTION */;
      SDL.DOMEventToSDLEvent['wheel']      = 0x403  /* SDL_MOUSEWHEEL */; 
      SDL.DOMEventToSDLEvent['touchstart'] = 0x700  /* SDL_FINGERDOWN */;
      SDL.DOMEventToSDLEvent['touchend']   = 0x701  /* SDL_FINGERUP */;
      SDL.DOMEventToSDLEvent['touchmove']  = 0x702  /* SDL_FINGERMOTION */;
      SDL.DOMEventToSDLEvent['unload']     = 0x100  /* SDL_QUIT */;
      SDL.DOMEventToSDLEvent['resize']     = 0x7001 /* SDL_VIDEORESIZE/SDL_EVENT_COMPAT2 */;
      SDL.DOMEventToSDLEvent['visibilitychange'] = 0x200 /* SDL_WINDOWEVENT */;
      SDL.DOMEventToSDLEvent['focus']      = 0x200 /* SDL_WINDOWEVENT */;
      SDL.DOMEventToSDLEvent['blur']       = 0x200 /* SDL_WINDOWEVENT */;
  
      // These are not technically DOM events; the HTML gamepad API is poll-based.
      // However, we define them here, as the rest of the SDL code assumes that
      // all SDL events originate as DOM events.
      SDL.DOMEventToSDLEvent['joystick_axis_motion'] = 0x600 /* SDL_JOYAXISMOTION */;
      SDL.DOMEventToSDLEvent['joystick_button_down'] = 0x603 /* SDL_JOYBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['joystick_button_up'] = 0x604 /* SDL_JOYBUTTONUP */;
      return 0; // success
    }

  function _SDL_LoadBMP_RW() {
  return _IMG_Load_RW.apply(null, arguments)
  }

  function _SDL_FreeSurface(surf) {
      if (surf) SDL.freeSurface(surf);
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        SAFE_HEAP_STORE(((ptr)|0), ((ret)|0), 4);
      }
      return ret;
    }

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      SAFE_HEAP_STORE(((result)|0), ((stream.position)|0), 4);
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _SDL_RWFromMem() {
  return _SDL_RWFromConstMem.apply(null, arguments)
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          SAFE_HEAP_STORE((((arg)+(offset))|0), ((2)|0), 2);
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
___buildEnvironment(ENV);
var GLctx; GL.init()
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


var debug_table_ii = ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "asm['___stdio_close']", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "asm['_turn_see']", "asm['_nullstr']", "asm['_ring_num']", "asm['_charge_str']", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
var debug_table_iiii = ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "asm['_sn_write']", "0", "asm['___stdio_write']", "asm['___stdio_seek']", "asm['___stdio_read']", "asm['___stdout_write']", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "asm['_do_read']", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
var debug_table_vi = ["0", "asm['_put_bool']", "0", "0", "asm['_put_inv_t']", "0", "asm['_put_str']", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "asm['_leave']", "0", "0", "0", "0", "0", "0", "0", "asm['_cleanup521']", "asm['_cleanup526']", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
var debug_table_iii = ["0", "0", "asm['_get_bool']", "asm['_get_sf']", "0", "asm['_get_inv_t']", "0", "asm['_get_str']", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
var debug_table_v = ["0", "0", "0", "0", "0", "0", "0", "0", "asm['_unconfuse']", "asm['_come_down']", "asm['_unsee']", "asm['_sight']", "asm['_land']", "0", "0", "0", "0", "0", "0", "asm['_rollwand']", "asm['_swander']", "asm['_visuals']", "asm['_runners']", "asm['_doctor']", "asm['_stomach']", "0", "asm['_nohaste']", "0", "0", "0", "0", "_SDL_Quit", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iii: " + debug_table_iii[x] + "  iiii: " + debug_table_iiii[x] + "  vi: " + debug_table_vi[x] + "  v: " + debug_table_v[x] + "  "); abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iii: " + debug_table_iii[x] + "  ii: " + debug_table_ii[x] + "  vi: " + debug_table_vi[x] + "  v: " + debug_table_v[x] + "  "); abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: v: " + debug_table_v[x] + "  ii: " + debug_table_ii[x] + "  iii: " + debug_table_iii[x] + "  iiii: " + debug_table_iiii[x] + "  "); abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: ii: " + debug_table_ii[x] + "  iiii: " + debug_table_iiii[x] + "  vi: " + debug_table_vi[x] + "  v: " + debug_table_v[x] + "  "); abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: vi: " + debug_table_vi[x] + "  ii: " + debug_table_ii[x] + "  iii: " + debug_table_iii[x] + "  iiii: " + debug_table_iiii[x] + "  "); abort(x) }

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function ftCall_ii(x, a0) {
  if (x < 0 || x >= FUNCTION_TABLE_ii.length) { Module.printErr("Function table mask error (out of range)"); Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iii: " + debug_table_iii[x] + "  iiii: " + debug_table_iiii[x] + "  vi: " + debug_table_vi[x] + "  v: " + debug_table_v[x] + "  ");  ; abort(x) }
  return FUNCTION_TABLE_ii[x](a0);
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function ftCall_iiii(x, a0, a1, a2) {
  if (x < 0 || x >= FUNCTION_TABLE_iiii.length) { Module.printErr("Function table mask error (out of range)"); Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iii: " + debug_table_iii[x] + "  ii: " + debug_table_ii[x] + "  vi: " + debug_table_vi[x] + "  v: " + debug_table_v[x] + "  ");  ; abort(x) }
  return FUNCTION_TABLE_iiii[x](a0, a1, a2);
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function ftCall_vi(x, a0) {
  if (x < 0 || x >= FUNCTION_TABLE_vi.length) { Module.printErr("Function table mask error (out of range)"); Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: v: " + debug_table_v[x] + "  ii: " + debug_table_ii[x] + "  iii: " + debug_table_iii[x] + "  iiii: " + debug_table_iiii[x] + "  ");  ; abort(x) }
  return FUNCTION_TABLE_vi[x](a0);
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function ftCall_iii(x, a0, a1) {
  if (x < 0 || x >= FUNCTION_TABLE_iii.length) { Module.printErr("Function table mask error (out of range)"); Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: ii: " + debug_table_ii[x] + "  iiii: " + debug_table_iiii[x] + "  vi: " + debug_table_vi[x] + "  v: " + debug_table_v[x] + "  ");  ; abort(x) }
  return FUNCTION_TABLE_iii[x](a0, a1);
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function ftCall_v(x) {
  if (x < 0 || x >= FUNCTION_TABLE_v.length) { Module.printErr("Function table mask error (out of range)"); Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: vi: " + debug_table_vi[x] + "  ii: " + debug_table_ii[x] + "  iii: " + debug_table_iii[x] + "  iiii: " + debug_table_iiii[x] + "  ");  ; abort(x) }
  return FUNCTION_TABLE_v[x]();
}


var dynCall_ii = ftCall_ii;


var dynCall_iiii = ftCall_iiii;


var dynCall_vi = ftCall_vi;


var dynCall_iii = ftCall_iii;


var dynCall_v = ftCall_v;


Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "segfault": segfault, "alignfault": alignfault, "ftfault": ftfault, "nullFunc_ii": nullFunc_ii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_vi": nullFunc_vi, "nullFunc_iii": nullFunc_iii, "nullFunc_v": nullFunc_v, "invoke_ii": invoke_ii, "ftCall_ii": ftCall_ii, "invoke_iiii": invoke_iiii, "ftCall_iiii": ftCall_iiii, "invoke_vi": invoke_vi, "ftCall_vi": ftCall_vi, "invoke_iii": invoke_iii, "ftCall_iii": ftCall_iii, "invoke_v": invoke_v, "ftCall_v": ftCall_v, "_fabs": _fabs, "___syscall221": ___syscall221, "_putenv": _putenv, "_SDL_ShowCursor": _SDL_ShowCursor, "_SDL_WM_SetIcon": _SDL_WM_SetIcon, "_SDL_LowerBlit": _SDL_LowerBlit, "_atexit": _atexit, "_SDL_RWFromMem": _SDL_RWFromMem, "_IMG_Load": _IMG_Load, "_abort": _abort, "___unlock": ___unlock, "_TTF_FontHeight": _TTF_FontHeight, "_SDL_CloseAudio": _SDL_CloseAudio, "_SDL_RWFromFile": _SDL_RWFromFile, "_SDL_GetTicks": _SDL_GetTicks, "_SDL_UpdateRects": _SDL_UpdateRects, "___syscall20": ___syscall20, "_SDL_AudioQuit": _SDL_AudioQuit, "_signal": _signal, "_SDL_SetColorKey": _SDL_SetColorKey, "___buildEnvironment": ___buildEnvironment, "___syscall54": ___syscall54, "_SDL_EnableUNICODE": _SDL_EnableUNICODE, "_localtime": _localtime, "_SDL_LockSurface": _SDL_LockSurface, "_SDL_GetError": _SDL_GetError, "_localtime_r": _localtime_r, "_tzset": _tzset, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_SDL_PollEvent": _SDL_PollEvent, "_SDL_Init": _SDL_Init, "_SDL_FreeSurface": _SDL_FreeSurface, "_Mix_PlayChannel": _Mix_PlayChannel, "_TTF_RenderText_Solid": _TTF_RenderText_Solid, "_pthread_cleanup_push": _pthread_cleanup_push, "_Mix_LoadWAV_RW": _Mix_LoadWAV_RW, "_SDL_PauseAudio": _SDL_PauseAudio, "__exit": __exit, "_IMG_Load_RW": _IMG_Load_RW, "_Mix_PlayMusic": _Mix_PlayMusic, "_SDL_PushEvent": _SDL_PushEvent, "_SDL_SetPalette": _SDL_SetPalette, "_SDL_Quit": _SDL_Quit, "_SDL_FillRect": _SDL_FillRect, "_pthread_self": _pthread_self, "_SDL_SetColors": _SDL_SetColors, "_SDL_Flip": _SDL_Flip, "_TTF_SizeText": _TTF_SizeText, "___syscall195": ___syscall195, "_SDL_UpperBlit": _SDL_UpperBlit, "_SDL_UpperBlitScaled": _SDL_UpperBlitScaled, "_Mix_FreeChunk": _Mix_FreeChunk, "_SDL_ConvertSurface": _SDL_ConvertSurface, "___syscall15": ___syscall15, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___syscall10": ___syscall10, "_SDL_GetModState": _SDL_GetModState, "_SDL_MapRGB": _SDL_MapRGB, "_emscripten_sleep": _emscripten_sleep, "_getenv": _getenv, "_sbrk": _sbrk, "_SDL_WM_SetCaption": _SDL_WM_SetCaption, "___lock": ___lock, "_SDL_SetVideoMode": _SDL_SetVideoMode, "___syscall6": ___syscall6, "___syscall5": ___syscall5, "_sysconf": _sysconf, "_time": _time, "_Mix_HaltMusic": _Mix_HaltMusic, "_SDL_DisplayFormatAlpha": _SDL_DisplayFormatAlpha, "___setErrNo": ___setErrNo, "_abs": _abs, "_SDL_FreeRW": _SDL_FreeRW, "___syscall140": ___syscall140, "___syscall196": ___syscall196, "_exit": _exit, "_SDL_RWFromConstMem": _SDL_RWFromConstMem, "_SDL_EnableKeyRepeat": _SDL_EnableKeyRepeat, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "_SDL_LoadBMP_RW": _SDL_LoadBMP_RW, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "DYNAMICTOP": DYNAMICTOP, "cttz_i8": cttz_i8, "_environ": _environ };
Module.asmLibraryArg['EMTSTACKTOP'] = EMTSTACKTOP; Module.asmLibraryArg['EMT_STACK_MAX'] = EMT_STACK_MAX; Module.asmLibraryArg['eb'] = eb;
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var DYNAMICTOP=env.DYNAMICTOP|0;
  var cttz_i8=env.cttz_i8|0;
  var _environ=env._environ|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var segfault=env.segfault;
  var alignfault=env.alignfault;
  var ftfault=env.ftfault;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_v=env.nullFunc_v;
  var invoke_ii=env.invoke_ii;
  var ftCall_ii=env.ftCall_ii;
  var invoke_iiii=env.invoke_iiii;
  var ftCall_iiii=env.ftCall_iiii;
  var invoke_vi=env.invoke_vi;
  var ftCall_vi=env.ftCall_vi;
  var invoke_iii=env.invoke_iii;
  var ftCall_iii=env.ftCall_iii;
  var invoke_v=env.invoke_v;
  var ftCall_v=env.ftCall_v;
  var _fabs=env._fabs;
  var ___syscall221=env.___syscall221;
  var _putenv=env._putenv;
  var _SDL_ShowCursor=env._SDL_ShowCursor;
  var _SDL_WM_SetIcon=env._SDL_WM_SetIcon;
  var _SDL_LowerBlit=env._SDL_LowerBlit;
  var _atexit=env._atexit;
  var _SDL_RWFromMem=env._SDL_RWFromMem;
  var _IMG_Load=env._IMG_Load;
  var _abort=env._abort;
  var ___unlock=env.___unlock;
  var _TTF_FontHeight=env._TTF_FontHeight;
  var _SDL_CloseAudio=env._SDL_CloseAudio;
  var _SDL_RWFromFile=env._SDL_RWFromFile;
  var _SDL_GetTicks=env._SDL_GetTicks;
  var _SDL_UpdateRects=env._SDL_UpdateRects;
  var ___syscall20=env.___syscall20;
  var _SDL_AudioQuit=env._SDL_AudioQuit;
  var _signal=env._signal;
  var _SDL_SetColorKey=env._SDL_SetColorKey;
  var ___buildEnvironment=env.___buildEnvironment;
  var ___syscall54=env.___syscall54;
  var _SDL_EnableUNICODE=env._SDL_EnableUNICODE;
  var _localtime=env._localtime;
  var _SDL_LockSurface=env._SDL_LockSurface;
  var _SDL_GetError=env._SDL_GetError;
  var _localtime_r=env._localtime_r;
  var _tzset=env._tzset;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _SDL_PollEvent=env._SDL_PollEvent;
  var _SDL_Init=env._SDL_Init;
  var _SDL_FreeSurface=env._SDL_FreeSurface;
  var _Mix_PlayChannel=env._Mix_PlayChannel;
  var _TTF_RenderText_Solid=env._TTF_RenderText_Solid;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _Mix_LoadWAV_RW=env._Mix_LoadWAV_RW;
  var _SDL_PauseAudio=env._SDL_PauseAudio;
  var __exit=env.__exit;
  var _IMG_Load_RW=env._IMG_Load_RW;
  var _Mix_PlayMusic=env._Mix_PlayMusic;
  var _SDL_PushEvent=env._SDL_PushEvent;
  var _SDL_SetPalette=env._SDL_SetPalette;
  var _SDL_Quit=env._SDL_Quit;
  var _SDL_FillRect=env._SDL_FillRect;
  var _pthread_self=env._pthread_self;
  var _SDL_SetColors=env._SDL_SetColors;
  var _SDL_Flip=env._SDL_Flip;
  var _TTF_SizeText=env._TTF_SizeText;
  var ___syscall195=env.___syscall195;
  var _SDL_UpperBlit=env._SDL_UpperBlit;
  var _SDL_UpperBlitScaled=env._SDL_UpperBlitScaled;
  var _Mix_FreeChunk=env._Mix_FreeChunk;
  var _SDL_ConvertSurface=env._SDL_ConvertSurface;
  var ___syscall15=env.___syscall15;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___syscall10=env.___syscall10;
  var _SDL_GetModState=env._SDL_GetModState;
  var _SDL_MapRGB=env._SDL_MapRGB;
  var _emscripten_sleep=env._emscripten_sleep;
  var _getenv=env._getenv;
  var _sbrk=env._sbrk;
  var _SDL_WM_SetCaption=env._SDL_WM_SetCaption;
  var ___lock=env.___lock;
  var _SDL_SetVideoMode=env._SDL_SetVideoMode;
  var ___syscall6=env.___syscall6;
  var ___syscall5=env.___syscall5;
  var _sysconf=env._sysconf;
  var _time=env._time;
  var _Mix_HaltMusic=env._Mix_HaltMusic;
  var _SDL_DisplayFormatAlpha=env._SDL_DisplayFormatAlpha;
  var ___setErrNo=env.___setErrNo;
  var _abs=env._abs;
  var _SDL_FreeRW=env._SDL_FreeRW;
  var ___syscall140=env.___syscall140;
  var ___syscall196=env.___syscall196;
  var _exit=env._exit;
  var _SDL_RWFromConstMem=env._SDL_RWFromConstMem;
  var _SDL_EnableKeyRepeat=env._SDL_EnableKeyRepeat;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var _SDL_LoadBMP_RW=env._SDL_LoadBMP_RW;
  var tempFloat = 0.0;
  var asyncState = 0;

var EMTSTACKTOP = env.EMTSTACKTOP|0;
var EMT_STACK_MAX = env.EMT_STACK_MAX|0;
var eb = env.eb|0;
// EMSCRIPTEN_START_FUNCS

function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0, $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0, $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0, $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0, $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0, $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0, $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 label = 0;
 sp = STACKTOP;
 $0 = $bytes >>> 0 < 245;
 asyncState ? abort(-12) | 0 : 0;
 do {
  if ($0) {
   $1 = $bytes >>> 0 < 11;
   $2 = $bytes + 11 | 0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8 | 0) == 0;
   if (!$9) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = $11 + $5 | 0;
    $13 = $12 << 1;
    $14 = 50516 + ($13 << 2) | 0;
    $$sum10 = $13 + 2 | 0;
    $15 = 50516 + ($$sum10 << 2) | 0;
    $16 = (tempInt = SAFE_HEAP_LOAD($15 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $17 = $16 + 8 | 0;
    $18 = (tempInt = SAFE_HEAP_LOAD($17 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $19 = ($14 | 0) == ($18 | 0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      SAFE_HEAP_STORE(50476 | 0, $22 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     } else {
      $23 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $24 = $18 >>> 0 < $23 >>> 0;
      if ($24) {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      }
      $25 = $18 + 12 | 0;
      $26 = (tempInt = SAFE_HEAP_LOAD($25 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $27 = ($26 | 0) == ($16 | 0);
      if ($27) {
       SAFE_HEAP_STORE($25 | 0, $14 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       SAFE_HEAP_STORE($15 | 0, $18 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       break;
      } else {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      }
     }
    } while (0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = $16 + 4 | 0;
    SAFE_HEAP_STORE($30 | 0, $29 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $$sum1112 = $28 | 4;
    $31 = $16 + $$sum1112 | 0;
    $32 = (tempInt = SAFE_HEAP_LOAD($31 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $33 = $32 | 1;
    SAFE_HEAP_STORE($31 | 0, $33 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $mem$0 = $17;
    return $mem$0 | 0;
   }
   $34 = (tempInt = SAFE_HEAP_LOAD(50484 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $35 = $4 >>> 0 > $34 >>> 0;
   if ($35) {
    $36 = ($7 | 0) == 0;
    if (!$36) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = 0 - $38 | 0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = 0 - $41 | 0;
     $43 = $41 & $42;
     $44 = $43 + -1 | 0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = $62 + $63 | 0;
     $65 = $64 << 1;
     $66 = 50516 + ($65 << 2) | 0;
     $$sum4 = $65 + 2 | 0;
     $67 = 50516 + ($$sum4 << 2) | 0;
     $68 = (tempInt = SAFE_HEAP_LOAD($67 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $69 = $68 + 8 | 0;
     $70 = (tempInt = SAFE_HEAP_LOAD($69 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $71 = ($66 | 0) == ($70 | 0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       SAFE_HEAP_STORE(50476 | 0, $74 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $88 = $34;
      } else {
       $75 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $76 = $70 >>> 0 < $75 >>> 0;
       if ($76) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
       $77 = $70 + 12 | 0;
       $78 = (tempInt = SAFE_HEAP_LOAD($77 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $79 = ($78 | 0) == ($68 | 0);
       if ($79) {
        SAFE_HEAP_STORE($77 | 0, $66 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        SAFE_HEAP_STORE($67 | 0, $70 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $$pre = (tempInt = SAFE_HEAP_LOAD(50484 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $88 = $$pre;
        break;
       } else {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
      }
     } while (0);
     $80 = $64 << 3;
     $81 = $80 - $4 | 0;
     $82 = $4 | 3;
     $83 = $68 + 4 | 0;
     SAFE_HEAP_STORE($83 | 0, $82 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $84 = $68 + $4 | 0;
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = $68 + $$sum56 | 0;
     SAFE_HEAP_STORE($86 | 0, $85 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $87 = $68 + $80 | 0;
     SAFE_HEAP_STORE($87 | 0, $81 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $89 = ($88 | 0) == 0;
     if (!$89) {
      $90 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = 50516 + ($92 << 2) | 0;
      $94 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96 | 0) == 0;
      if ($97) {
       $98 = $94 | $95;
       SAFE_HEAP_STORE(50476 | 0, $98 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $$pre105 = $92 + 2 | 0;
       $$pre106 = 50516 + ($$pre105 << 2) | 0;
       $$pre$phiZ2D = $$pre106;
       $F4$0 = $93;
      } else {
       $$sum9 = $92 + 2 | 0;
       $99 = 50516 + ($$sum9 << 2) | 0;
       $100 = (tempInt = SAFE_HEAP_LOAD($99 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $101 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $102 = $100 >>> 0 < $101 >>> 0;
       if ($102) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       } else {
        $$pre$phiZ2D = $99;
        $F4$0 = $100;
       }
      }
      SAFE_HEAP_STORE($$pre$phiZ2D | 0, $90 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $103 = $F4$0 + 12 | 0;
      SAFE_HEAP_STORE($103 | 0, $90 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $104 = $90 + 8 | 0;
      SAFE_HEAP_STORE($104 | 0, $F4$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $105 = $90 + 12 | 0;
      SAFE_HEAP_STORE($105 | 0, $93 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     }
     SAFE_HEAP_STORE(50484 | 0, $81 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     SAFE_HEAP_STORE(50496 | 0, $84 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $mem$0 = $69;
     return $mem$0 | 0;
    }
    $106 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $107 = ($106 | 0) == 0;
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = 0 - $106 | 0;
     $109 = $106 & $108;
     $110 = $109 + -1 | 0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = $128 + $129 | 0;
     $131 = 50780 + ($130 << 2) | 0;
     $132 = (tempInt = SAFE_HEAP_LOAD($131 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $133 = $132 + 4 | 0;
     $134 = (tempInt = SAFE_HEAP_LOAD($133 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $135 = $134 & -8;
     $136 = $135 - $4 | 0;
     $rsize$0$i = $136;
     $t$0$i = $132;
     $v$0$i = $132;
     while (1) {
      $137 = $t$0$i + 16 | 0;
      $138 = (tempInt = SAFE_HEAP_LOAD($137 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $139 = ($138 | 0) == (0 | 0);
      if ($139) {
       $140 = $t$0$i + 20 | 0;
       $141 = (tempInt = SAFE_HEAP_LOAD($140 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $142 = ($141 | 0) == (0 | 0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;
        $v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = $144 + 4 | 0;
      $145 = (tempInt = SAFE_HEAP_LOAD($143 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $146 = $145 & -8;
      $147 = $146 - $4 | 0;
      $148 = $147 >>> 0 < $rsize$0$i >>> 0;
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;
      $t$0$i = $144;
      $v$0$i = $$v$0$i;
     }
     $149 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $150 = $v$0$i$lcssa >>> 0 < $149 >>> 0;
     if ($150) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $151 = $v$0$i$lcssa + $4 | 0;
     $152 = $v$0$i$lcssa >>> 0 < $151 >>> 0;
     if (!$152) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $153 = $v$0$i$lcssa + 24 | 0;
     $154 = (tempInt = SAFE_HEAP_LOAD($153 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $155 = $v$0$i$lcssa + 12 | 0;
     $156 = (tempInt = SAFE_HEAP_LOAD($155 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $157 = ($156 | 0) == ($v$0$i$lcssa | 0);
     do {
      if ($157) {
       $167 = $v$0$i$lcssa + 20 | 0;
       $168 = (tempInt = SAFE_HEAP_LOAD($167 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $169 = ($168 | 0) == (0 | 0);
       if ($169) {
        $170 = $v$0$i$lcssa + 16 | 0;
        $171 = (tempInt = SAFE_HEAP_LOAD($170 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $172 = ($171 | 0) == (0 | 0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;
         $RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;
        $RP$0$i = $167;
       }
       while (1) {
        $173 = $R$0$i + 20 | 0;
        $174 = (tempInt = SAFE_HEAP_LOAD($173 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $175 = ($174 | 0) == (0 | 0);
        if (!$175) {
         $R$0$i = $174;
         $RP$0$i = $173;
         continue;
        }
        $176 = $R$0$i + 16 | 0;
        $177 = (tempInt = SAFE_HEAP_LOAD($176 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $178 = ($177 | 0) == (0 | 0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;
         $RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;
         $RP$0$i = $176;
        }
       }
       $179 = $RP$0$i$lcssa >>> 0 < $149 >>> 0;
       if ($179) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       } else {
        SAFE_HEAP_STORE($RP$0$i$lcssa | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = $v$0$i$lcssa + 8 | 0;
       $159 = (tempInt = SAFE_HEAP_LOAD($158 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $160 = $159 >>> 0 < $149 >>> 0;
       if ($160) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
       $161 = $159 + 12 | 0;
       $162 = (tempInt = SAFE_HEAP_LOAD($161 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $163 = ($162 | 0) == ($v$0$i$lcssa | 0);
       if (!$163) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
       $164 = $156 + 8 | 0;
       $165 = (tempInt = SAFE_HEAP_LOAD($164 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $166 = ($165 | 0) == ($v$0$i$lcssa | 0);
       if ($166) {
        SAFE_HEAP_STORE($161 | 0, $156 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        SAFE_HEAP_STORE($164 | 0, $159 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $R$1$i = $156;
        break;
       } else {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
      }
     } while (0);
     $180 = ($154 | 0) == (0 | 0);
     do {
      if (!$180) {
       $181 = $v$0$i$lcssa + 28 | 0;
       $182 = (tempInt = SAFE_HEAP_LOAD($181 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $183 = 50780 + ($182 << 2) | 0;
       $184 = (tempInt = SAFE_HEAP_LOAD($183 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $185 = ($v$0$i$lcssa | 0) == ($184 | 0);
       if ($185) {
        SAFE_HEAP_STORE($183 | 0, $R$1$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $cond$i = ($R$1$i | 0) == (0 | 0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $189 = $188 & $187;
         SAFE_HEAP_STORE(50480 | 0, $189 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         break;
        }
       } else {
        $190 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $191 = $154 >>> 0 < $190 >>> 0;
        if ($191) {
         _abort(), asyncState ? abort(-12) | 0 : 0;
        }
        $192 = $154 + 16 | 0;
        $193 = (tempInt = SAFE_HEAP_LOAD($192 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $194 = ($193 | 0) == ($v$0$i$lcssa | 0);
        if ($194) {
         SAFE_HEAP_STORE($192 | 0, $R$1$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
        } else {
         $195 = $154 + 20 | 0;
         SAFE_HEAP_STORE($195 | 0, $R$1$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
        }
        $196 = ($R$1$i | 0) == (0 | 0);
        if ($196) {
         break;
        }
       }
       $197 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $198 = $R$1$i >>> 0 < $197 >>> 0;
       if ($198) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
       $199 = $R$1$i + 24 | 0;
       SAFE_HEAP_STORE($199 | 0, $154 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $200 = $v$0$i$lcssa + 16 | 0;
       $201 = (tempInt = SAFE_HEAP_LOAD($200 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $202 = ($201 | 0) == (0 | 0);
       do {
        if (!$202) {
         $203 = $201 >>> 0 < $197 >>> 0;
         if ($203) {
          _abort(), asyncState ? abort(-12) | 0 : 0;
         } else {
          $204 = $R$1$i + 16 | 0;
          SAFE_HEAP_STORE($204 | 0, $201 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $205 = $201 + 24 | 0;
          SAFE_HEAP_STORE($205 | 0, $R$1$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
          break;
         }
        }
       } while (0);
       $206 = $v$0$i$lcssa + 20 | 0;
       $207 = (tempInt = SAFE_HEAP_LOAD($206 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $208 = ($207 | 0) == (0 | 0);
       if (!$208) {
        $209 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $210 = $207 >>> 0 < $209 >>> 0;
        if ($210) {
         _abort(), asyncState ? abort(-12) | 0 : 0;
        } else {
         $211 = $R$1$i + 20 | 0;
         SAFE_HEAP_STORE($211 | 0, $207 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $212 = $207 + 24 | 0;
         SAFE_HEAP_STORE($212 | 0, $R$1$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
         break;
        }
       }
      }
     } while (0);
     $213 = $rsize$0$i$lcssa >>> 0 < 16;
     if ($213) {
      $214 = $rsize$0$i$lcssa + $4 | 0;
      $215 = $214 | 3;
      $216 = $v$0$i$lcssa + 4 | 0;
      SAFE_HEAP_STORE($216 | 0, $215 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $$sum4$i = $214 + 4 | 0;
      $217 = $v$0$i$lcssa + $$sum4$i | 0;
      $218 = (tempInt = SAFE_HEAP_LOAD($217 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $219 = $218 | 1;
      SAFE_HEAP_STORE($217 | 0, $219 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     } else {
      $220 = $4 | 3;
      $221 = $v$0$i$lcssa + 4 | 0;
      SAFE_HEAP_STORE($221 | 0, $220 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = $v$0$i$lcssa + $$sum$i35 | 0;
      SAFE_HEAP_STORE($223 | 0, $222 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $$sum1$i = $rsize$0$i$lcssa + $4 | 0;
      $224 = $v$0$i$lcssa + $$sum1$i | 0;
      SAFE_HEAP_STORE($224 | 0, $rsize$0$i$lcssa | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $225 = (tempInt = SAFE_HEAP_LOAD(50484 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $226 = ($225 | 0) == 0;
      if (!$226) {
       $227 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = 50516 + ($229 << 2) | 0;
       $231 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233 | 0) == 0;
       if ($234) {
        $235 = $231 | $232;
        SAFE_HEAP_STORE(50476 | 0, $235 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $$pre$i = $229 + 2 | 0;
        $$pre8$i = 50516 + ($$pre$i << 2) | 0;
        $$pre$phi$iZ2D = $$pre8$i;
        $F1$0$i = $230;
       } else {
        $$sum3$i = $229 + 2 | 0;
        $236 = 50516 + ($$sum3$i << 2) | 0;
        $237 = (tempInt = SAFE_HEAP_LOAD($236 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $238 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $239 = $237 >>> 0 < $238 >>> 0;
        if ($239) {
         _abort(), asyncState ? abort(-12) | 0 : 0;
        } else {
         $$pre$phi$iZ2D = $236;
         $F1$0$i = $237;
        }
       }
       SAFE_HEAP_STORE($$pre$phi$iZ2D | 0, $227 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $240 = $F1$0$i + 12 | 0;
       SAFE_HEAP_STORE($240 | 0, $227 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $241 = $227 + 8 | 0;
       SAFE_HEAP_STORE($241 | 0, $F1$0$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $242 = $227 + 12 | 0;
       SAFE_HEAP_STORE($242 | 0, $230 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      }
      SAFE_HEAP_STORE(50484 | 0, $rsize$0$i$lcssa | 0, 4), asyncState ? abort(-12) | 0 : 0;
      SAFE_HEAP_STORE(50496 | 0, $151 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     }
     $243 = $v$0$i$lcssa + 8 | 0;
     $mem$0 = $243;
     return $mem$0 | 0;
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = $bytes >>> 0 > 4294967231;
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = $bytes + 11 | 0;
    $246 = $245 & -8;
    $247 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $248 = ($247 | 0) == 0;
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = 0 - $246 | 0;
     $250 = $245 >>> 8;
     $251 = ($250 | 0) == 0;
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = $246 >>> 0 > 16777215;
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = $250 + 1048320 | 0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = $256 + 520192 | 0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = $261 + 245760 | 0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = 14 - $265 | 0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = $266 + $268 | 0;
       $270 = $269 << 1;
       $271 = $269 + 7 | 0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = 50780 + ($idx$0$i << 2) | 0;
     $276 = (tempInt = SAFE_HEAP_LOAD($275 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $277 = ($276 | 0) == (0 | 0);
     L123 : do {
      if ($277) {
       $rsize$2$i = $249;
       $t$1$i = 0;
       $v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i | 0) == 31;
       $279 = $idx$0$i >>> 1;
       $280 = 25 - $279 | 0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;
       $rst$0$i = 0;
       $sizebits$0$i = $282;
       $t$0$i14 = $276;
       $v$0$i16 = 0;
       while (1) {
        $283 = $t$0$i14 + 4 | 0;
        $284 = (tempInt = SAFE_HEAP_LOAD($283 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $285 = $284 & -8;
        $286 = $285 - $246 | 0;
        $287 = $286 >>> 0 < $rsize$0$i15 >>> 0;
        if ($287) {
         $288 = ($285 | 0) == ($246 | 0);
         if ($288) {
          $rsize$331$i = $286;
          $t$230$i = $t$0$i14;
          $v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;
          $v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;
         $v$1$i = $v$0$i16;
        }
        $289 = $t$0$i14 + 20 | 0;
        $290 = (tempInt = SAFE_HEAP_LOAD($289 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $291 = $sizebits$0$i >>> 31;
        $292 = ($t$0$i14 + 16 | 0) + ($291 << 2) | 0;
        $293 = (tempInt = SAFE_HEAP_LOAD($292 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $294 = ($290 | 0) == (0 | 0);
        $295 = ($290 | 0) == ($293 | 0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293 | 0) == (0 | 0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;
         $t$1$i = $rst$1$i;
         $v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;
         $rst$0$i = $rst$1$i;
         $sizebits$0$i = $297;
         $t$0$i14 = $293;
         $v$0$i16 = $v$1$i;
        }
       }
      }
     } while (0);
     if ((label | 0) == 86) {
      $298 = ($t$1$i | 0) == (0 | 0);
      $299 = ($v$2$i | 0) == (0 | 0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = 0 - $300 | 0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303 | 0) == 0;
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = 0 - $303 | 0;
       $306 = $303 & $305;
       $307 = $306 + -1 | 0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = $325 + $326 | 0;
       $328 = 50780 + ($327 << 2) | 0;
       $329 = (tempInt = SAFE_HEAP_LOAD($328 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $t$2$ph$i = $329;
       $v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;
       $v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i | 0) == (0 | 0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;
       $v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;
       $t$230$i = $t$2$ph$i;
       $v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label | 0) == 90) {
      while (1) {
       label = 0;
       $331 = $t$230$i + 4 | 0;
       $332 = (tempInt = SAFE_HEAP_LOAD($331 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $333 = $332 & -8;
       $334 = $333 - $246 | 0;
       $335 = $334 >>> 0 < $rsize$331$i >>> 0;
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = $t$230$i + 16 | 0;
       $337 = (tempInt = SAFE_HEAP_LOAD($336 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $338 = ($337 | 0) == (0 | 0);
       if (!$338) {
        $rsize$331$i = $$rsize$3$i;
        $t$230$i = $337;
        $v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = $t$230$i + 20 | 0;
       $340 = (tempInt = SAFE_HEAP_LOAD($339 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $341 = ($340 | 0) == (0 | 0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;
        $v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;
        $t$230$i = $340;
        $v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i | 0) == (0 | 0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = (tempInt = SAFE_HEAP_LOAD(50484 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $344 = $343 - $246 | 0;
      $345 = $rsize$3$lcssa$i >>> 0 < $344 >>> 0;
      if ($345) {
       $346 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $347 = $v$3$lcssa$i >>> 0 < $346 >>> 0;
       if ($347) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
       $348 = $v$3$lcssa$i + $246 | 0;
       $349 = $v$3$lcssa$i >>> 0 < $348 >>> 0;
       if (!$349) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       }
       $350 = $v$3$lcssa$i + 24 | 0;
       $351 = (tempInt = SAFE_HEAP_LOAD($350 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $352 = $v$3$lcssa$i + 12 | 0;
       $353 = (tempInt = SAFE_HEAP_LOAD($352 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $354 = ($353 | 0) == ($v$3$lcssa$i | 0);
       do {
        if ($354) {
         $364 = $v$3$lcssa$i + 20 | 0;
         $365 = (tempInt = SAFE_HEAP_LOAD($364 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $366 = ($365 | 0) == (0 | 0);
         if ($366) {
          $367 = $v$3$lcssa$i + 16 | 0;
          $368 = (tempInt = SAFE_HEAP_LOAD($367 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $369 = ($368 | 0) == (0 | 0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;
           $RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;
          $RP$0$i17 = $364;
         }
         while (1) {
          $370 = $R$0$i18 + 20 | 0;
          $371 = (tempInt = SAFE_HEAP_LOAD($370 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $372 = ($371 | 0) == (0 | 0);
          if (!$372) {
           $R$0$i18 = $371;
           $RP$0$i17 = $370;
           continue;
          }
          $373 = $R$0$i18 + 16 | 0;
          $374 = (tempInt = SAFE_HEAP_LOAD($373 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $375 = ($374 | 0) == (0 | 0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;
           $RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;
           $RP$0$i17 = $373;
          }
         }
         $376 = $RP$0$i17$lcssa >>> 0 < $346 >>> 0;
         if ($376) {
          _abort(), asyncState ? abort(-12) | 0 : 0;
         } else {
          SAFE_HEAP_STORE($RP$0$i17$lcssa | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = $v$3$lcssa$i + 8 | 0;
         $356 = (tempInt = SAFE_HEAP_LOAD($355 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $357 = $356 >>> 0 < $346 >>> 0;
         if ($357) {
          _abort(), asyncState ? abort(-12) | 0 : 0;
         }
         $358 = $356 + 12 | 0;
         $359 = (tempInt = SAFE_HEAP_LOAD($358 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $360 = ($359 | 0) == ($v$3$lcssa$i | 0);
         if (!$360) {
          _abort(), asyncState ? abort(-12) | 0 : 0;
         }
         $361 = $353 + 8 | 0;
         $362 = (tempInt = SAFE_HEAP_LOAD($361 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $363 = ($362 | 0) == ($v$3$lcssa$i | 0);
         if ($363) {
          SAFE_HEAP_STORE($358 | 0, $353 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          SAFE_HEAP_STORE($361 | 0, $356 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $R$1$i20 = $353;
          break;
         } else {
          _abort(), asyncState ? abort(-12) | 0 : 0;
         }
        }
       } while (0);
       $377 = ($351 | 0) == (0 | 0);
       do {
        if (!$377) {
         $378 = $v$3$lcssa$i + 28 | 0;
         $379 = (tempInt = SAFE_HEAP_LOAD($378 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $380 = 50780 + ($379 << 2) | 0;
         $381 = (tempInt = SAFE_HEAP_LOAD($380 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $382 = ($v$3$lcssa$i | 0) == ($381 | 0);
         if ($382) {
          SAFE_HEAP_STORE($380 | 0, $R$1$i20 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $cond$i21 = ($R$1$i20 | 0) == (0 | 0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $386 = $385 & $384;
           SAFE_HEAP_STORE(50480 | 0, $386 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           break;
          }
         } else {
          $387 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $388 = $351 >>> 0 < $387 >>> 0;
          if ($388) {
           _abort(), asyncState ? abort(-12) | 0 : 0;
          }
          $389 = $351 + 16 | 0;
          $390 = (tempInt = SAFE_HEAP_LOAD($389 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $391 = ($390 | 0) == ($v$3$lcssa$i | 0);
          if ($391) {
           SAFE_HEAP_STORE($389 | 0, $R$1$i20 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          } else {
           $392 = $351 + 20 | 0;
           SAFE_HEAP_STORE($392 | 0, $R$1$i20 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          }
          $393 = ($R$1$i20 | 0) == (0 | 0);
          if ($393) {
           break;
          }
         }
         $394 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $395 = $R$1$i20 >>> 0 < $394 >>> 0;
         if ($395) {
          _abort(), asyncState ? abort(-12) | 0 : 0;
         }
         $396 = $R$1$i20 + 24 | 0;
         SAFE_HEAP_STORE($396 | 0, $351 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $397 = $v$3$lcssa$i + 16 | 0;
         $398 = (tempInt = SAFE_HEAP_LOAD($397 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $399 = ($398 | 0) == (0 | 0);
         do {
          if (!$399) {
           $400 = $398 >>> 0 < $394 >>> 0;
           if ($400) {
            _abort(), asyncState ? abort(-12) | 0 : 0;
           } else {
            $401 = $R$1$i20 + 16 | 0;
            SAFE_HEAP_STORE($401 | 0, $398 | 0, 4), asyncState ? abort(-12) | 0 : 0;
            $402 = $398 + 24 | 0;
            SAFE_HEAP_STORE($402 | 0, $R$1$i20 | 0, 4), asyncState ? abort(-12) | 0 : 0;
            break;
           }
          }
         } while (0);
         $403 = $v$3$lcssa$i + 20 | 0;
         $404 = (tempInt = SAFE_HEAP_LOAD($403 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $405 = ($404 | 0) == (0 | 0);
         if (!$405) {
          $406 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $407 = $404 >>> 0 < $406 >>> 0;
          if ($407) {
           _abort(), asyncState ? abort(-12) | 0 : 0;
          } else {
           $408 = $R$1$i20 + 20 | 0;
           SAFE_HEAP_STORE($408 | 0, $404 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           $409 = $404 + 24 | 0;
           SAFE_HEAP_STORE($409 | 0, $R$1$i20 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           break;
          }
         }
        }
       } while (0);
       $410 = $rsize$3$lcssa$i >>> 0 < 16;
       L199 : do {
        if ($410) {
         $411 = $rsize$3$lcssa$i + $246 | 0;
         $412 = $411 | 3;
         $413 = $v$3$lcssa$i + 4 | 0;
         SAFE_HEAP_STORE($413 | 0, $412 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum18$i = $411 + 4 | 0;
         $414 = $v$3$lcssa$i + $$sum18$i | 0;
         $415 = (tempInt = SAFE_HEAP_LOAD($414 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $416 = $415 | 1;
         SAFE_HEAP_STORE($414 | 0, $416 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        } else {
         $417 = $246 | 3;
         $418 = $v$3$lcssa$i + 4 | 0;
         SAFE_HEAP_STORE($418 | 0, $417 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = $v$3$lcssa$i + $$sum$i2334 | 0;
         SAFE_HEAP_STORE($420 | 0, $419 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum1$i24 = $rsize$3$lcssa$i + $246 | 0;
         $421 = $v$3$lcssa$i + $$sum1$i24 | 0;
         SAFE_HEAP_STORE($421 | 0, $rsize$3$lcssa$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = $rsize$3$lcssa$i >>> 0 < 256;
         if ($423) {
          $424 = $422 << 1;
          $425 = 50516 + ($424 << 2) | 0;
          $426 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428 | 0) == 0;
          if ($429) {
           $430 = $426 | $427;
           SAFE_HEAP_STORE(50476 | 0, $430 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           $$pre$i25 = $424 + 2 | 0;
           $$pre43$i = 50516 + ($$pre$i25 << 2) | 0;
           $$pre$phi$i26Z2D = $$pre43$i;
           $F5$0$i = $425;
          } else {
           $$sum17$i = $424 + 2 | 0;
           $431 = 50516 + ($$sum17$i << 2) | 0;
           $432 = (tempInt = SAFE_HEAP_LOAD($431 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $433 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $434 = $432 >>> 0 < $433 >>> 0;
           if ($434) {
            _abort(), asyncState ? abort(-12) | 0 : 0;
           } else {
            $$pre$phi$i26Z2D = $431;
            $F5$0$i = $432;
           }
          }
          SAFE_HEAP_STORE($$pre$phi$i26Z2D | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $435 = $F5$0$i + 12 | 0;
          SAFE_HEAP_STORE($435 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum15$i = $246 + 8 | 0;
          $436 = $v$3$lcssa$i + $$sum15$i | 0;
          SAFE_HEAP_STORE($436 | 0, $F5$0$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum16$i = $246 + 12 | 0;
          $437 = $v$3$lcssa$i + $$sum16$i | 0;
          SAFE_HEAP_STORE($437 | 0, $425 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438 | 0) == 0;
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = $rsize$3$lcssa$i >>> 0 > 16777215;
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = $438 + 1048320 | 0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = $444 + 520192 | 0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = $449 + 245760 | 0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = 14 - $453 | 0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = $454 + $456 | 0;
           $458 = $457 << 1;
           $459 = $457 + 7 | 0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = 50780 + ($I7$0$i << 2) | 0;
         $$sum2$i = $246 + 28 | 0;
         $464 = $v$3$lcssa$i + $$sum2$i | 0;
         SAFE_HEAP_STORE($464 | 0, $I7$0$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum3$i27 = $246 + 16 | 0;
         $465 = $v$3$lcssa$i + $$sum3$i27 | 0;
         $$sum4$i28 = $246 + 20 | 0;
         $466 = $v$3$lcssa$i + $$sum4$i28 | 0;
         SAFE_HEAP_STORE($466 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         SAFE_HEAP_STORE($465 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $467 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469 | 0) == 0;
         if ($470) {
          $471 = $467 | $468;
          SAFE_HEAP_STORE(50480 | 0, $471 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          SAFE_HEAP_STORE($463 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum5$i = $246 + 24 | 0;
          $472 = $v$3$lcssa$i + $$sum5$i | 0;
          SAFE_HEAP_STORE($472 | 0, $463 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum6$i = $246 + 12 | 0;
          $473 = $v$3$lcssa$i + $$sum6$i | 0;
          SAFE_HEAP_STORE($473 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum7$i = $246 + 8 | 0;
          $474 = $v$3$lcssa$i + $$sum7$i | 0;
          SAFE_HEAP_STORE($474 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          break;
         }
         $475 = (tempInt = SAFE_HEAP_LOAD($463 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $476 = $475 + 4 | 0;
         $477 = (tempInt = SAFE_HEAP_LOAD($476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $478 = $477 & -8;
         $479 = ($478 | 0) == ($rsize$3$lcssa$i | 0);
         L217 : do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i | 0) == 31;
           $481 = $I7$0$i >>> 1;
           $482 = 25 - $481 | 0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;
           $T$028$i = $475;
           while (1) {
            $491 = $K12$029$i >>> 31;
            $492 = ($T$028$i + 16 | 0) + ($491 << 2) | 0;
            $487 = (tempInt = SAFE_HEAP_LOAD($492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
            $493 = ($487 | 0) == (0 | 0);
            if ($493) {
             $$lcssa232 = $492;
             $T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = $487 + 4 | 0;
            $488 = (tempInt = SAFE_HEAP_LOAD($486 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
            $489 = $488 & -8;
            $490 = ($489 | 0) == ($rsize$3$lcssa$i | 0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;
             $T$028$i = $487;
            }
           }
           $494 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $495 = $$lcssa232 >>> 0 < $494 >>> 0;
           if ($495) {
            _abort(), asyncState ? abort(-12) | 0 : 0;
           } else {
            SAFE_HEAP_STORE($$lcssa232 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
            $$sum11$i = $246 + 24 | 0;
            $496 = $v$3$lcssa$i + $$sum11$i | 0;
            SAFE_HEAP_STORE($496 | 0, $T$028$i$lcssa | 0, 4), asyncState ? abort(-12) | 0 : 0;
            $$sum12$i = $246 + 12 | 0;
            $497 = $v$3$lcssa$i + $$sum12$i | 0;
            SAFE_HEAP_STORE($497 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
            $$sum13$i = $246 + 8 | 0;
            $498 = $v$3$lcssa$i + $$sum13$i | 0;
            SAFE_HEAP_STORE($498 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
            break L199;
           }
          }
         } while (0);
         $499 = $T$0$lcssa$i + 8 | 0;
         $500 = (tempInt = SAFE_HEAP_LOAD($499 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $501 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $502 = $500 >>> 0 >= $501 >>> 0;
         $not$$i = $T$0$lcssa$i >>> 0 >= $501 >>> 0;
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = $500 + 12 | 0;
          SAFE_HEAP_STORE($504 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          SAFE_HEAP_STORE($499 | 0, $348 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum8$i = $246 + 8 | 0;
          $505 = $v$3$lcssa$i + $$sum8$i | 0;
          SAFE_HEAP_STORE($505 | 0, $500 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum9$i = $246 + 12 | 0;
          $506 = $v$3$lcssa$i + $$sum9$i | 0;
          SAFE_HEAP_STORE($506 | 0, $T$0$lcssa$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
          $$sum10$i = $246 + 24 | 0;
          $507 = $v$3$lcssa$i + $$sum10$i | 0;
          SAFE_HEAP_STORE($507 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          break;
         } else {
          _abort(), asyncState ? abort(-12) | 0 : 0;
         }
        }
       } while (0);
       $508 = $v$3$lcssa$i + 8 | 0;
       $mem$0 = $508;
       return $mem$0 | 0;
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while (0);
 $509 = (tempInt = SAFE_HEAP_LOAD(50484 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $510 = $509 >>> 0 < $nb$0 >>> 0;
 if (!$510) {
  $511 = $509 - $nb$0 | 0;
  $512 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $513 = $511 >>> 0 > 15;
  if ($513) {
   $514 = $512 + $nb$0 | 0;
   SAFE_HEAP_STORE(50496 | 0, $514 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   SAFE_HEAP_STORE(50484 | 0, $511 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $515 = $511 | 1;
   $$sum2 = $nb$0 + 4 | 0;
   $516 = $512 + $$sum2 | 0;
   SAFE_HEAP_STORE($516 | 0, $515 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $517 = $512 + $509 | 0;
   SAFE_HEAP_STORE($517 | 0, $511 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $518 = $nb$0 | 3;
   $519 = $512 + 4 | 0;
   SAFE_HEAP_STORE($519 | 0, $518 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  } else {
   SAFE_HEAP_STORE(50484 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   SAFE_HEAP_STORE(50496 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $520 = $509 | 3;
   $521 = $512 + 4 | 0;
   SAFE_HEAP_STORE($521 | 0, $520 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $$sum1 = $509 + 4 | 0;
   $522 = $512 + $$sum1 | 0;
   $523 = (tempInt = SAFE_HEAP_LOAD($522 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $524 = $523 | 1;
   SAFE_HEAP_STORE($522 | 0, $524 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  }
  $525 = $512 + 8 | 0;
  $mem$0 = $525;
  return $mem$0 | 0;
 }
 $526 = (tempInt = SAFE_HEAP_LOAD(50488 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $527 = $526 >>> 0 > $nb$0 >>> 0;
 if ($527) {
  $528 = $526 - $nb$0 | 0;
  SAFE_HEAP_STORE(50488 | 0, $528 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $529 = (tempInt = SAFE_HEAP_LOAD(50500 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $530 = $529 + $nb$0 | 0;
  SAFE_HEAP_STORE(50500 | 0, $530 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $531 = $528 | 1;
  $$sum = $nb$0 + 4 | 0;
  $532 = $529 + $$sum | 0;
  SAFE_HEAP_STORE($532 | 0, $531 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $533 = $nb$0 | 3;
  $534 = $529 + 4 | 0;
  SAFE_HEAP_STORE($534 | 0, $533 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $535 = $529 + 8 | 0;
  $mem$0 = $535;
  return $mem$0 | 0;
 }
 $536 = (tempInt = SAFE_HEAP_LOAD(50948 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $537 = ($536 | 0) == 0;
 do {
  if ($537) {
   $538 = (tempInt = _sysconf(30) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
   $539 = $538 + -1 | 0;
   $540 = $539 & $538;
   $541 = ($540 | 0) == 0;
   if ($541) {
    SAFE_HEAP_STORE(50956 | 0, $538 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50952 | 0, $538 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50960 | 0, -1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50964 | 0, -1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50968 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50920 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $542 = (tempInt = _time(0 | 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    SAFE_HEAP_STORE(50948 | 0, $544 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    break;
   } else {
    _abort(), asyncState ? abort(-12) | 0 : 0;
   }
  }
 } while (0);
 $545 = $nb$0 + 48 | 0;
 $546 = (tempInt = SAFE_HEAP_LOAD(50956 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $547 = $nb$0 + 47 | 0;
 $548 = $546 + $547 | 0;
 $549 = 0 - $546 | 0;
 $550 = $548 & $549;
 $551 = $550 >>> 0 > $nb$0 >>> 0;
 if (!$551) {
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $552 = (tempInt = SAFE_HEAP_LOAD(50916 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $553 = ($552 | 0) == 0;
 if (!$553) {
  $554 = (tempInt = SAFE_HEAP_LOAD(50908 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $555 = $554 + $550 | 0;
  $556 = $555 >>> 0 <= $554 >>> 0;
  $557 = $555 >>> 0 > $552 >>> 0;
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return $mem$0 | 0;
  }
 }
 $558 = (tempInt = SAFE_HEAP_LOAD(50920 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $559 = $558 & 4;
 $560 = ($559 | 0) == 0;
 L258 : do {
  if ($560) {
   $561 = (tempInt = SAFE_HEAP_LOAD(50500 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $562 = ($561 | 0) == (0 | 0);
   L260 : do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = 50924;
     while (1) {
      $563 = (tempInt = SAFE_HEAP_LOAD($sp$0$i$i | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $564 = $563 >>> 0 > $561 >>> 0;
      if (!$564) {
       $565 = $sp$0$i$i + 4 | 0;
       $566 = (tempInt = SAFE_HEAP_LOAD($565 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $567 = $563 + $566 | 0;
       $568 = $567 >>> 0 > $561 >>> 0;
       if ($568) {
        $$lcssa228 = $sp$0$i$i;
        $$lcssa230 = $565;
        break;
       }
      }
      $569 = $sp$0$i$i + 8 | 0;
      $570 = (tempInt = SAFE_HEAP_LOAD($569 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $571 = ($570 | 0) == (0 | 0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = (tempInt = SAFE_HEAP_LOAD(50488 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $595 = $548 - $594 | 0;
     $596 = $595 & $549;
     $597 = $596 >>> 0 < 2147483647;
     if ($597) {
      $598 = (tempInt = _sbrk($596 | 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
      $599 = (tempInt = SAFE_HEAP_LOAD($$lcssa228 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $600 = (tempInt = SAFE_HEAP_LOAD($$lcssa230 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $601 = $599 + $600 | 0;
      $602 = ($598 | 0) == ($601 | 0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598 | 0) == (-1 | 0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;
        $tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;
       $ssize$1$ph$i = $596;
       $tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while (0);
   do {
    if ((label | 0) == 174) {
     $572 = (tempInt = _sbrk(0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
     $573 = ($572 | 0) == (-1 | 0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = (tempInt = SAFE_HEAP_LOAD(50952 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $576 = $575 + -1 | 0;
      $577 = $576 & $574;
      $578 = ($577 | 0) == 0;
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = $576 + $574 | 0;
       $580 = 0 - $575 | 0;
       $581 = $579 & $580;
       $582 = $550 - $574 | 0;
       $583 = $582 + $581 | 0;
       $ssize$0$i = $583;
      }
      $584 = (tempInt = SAFE_HEAP_LOAD(50908 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $585 = $584 + $ssize$0$i | 0;
      $586 = $ssize$0$i >>> 0 > $nb$0 >>> 0;
      $587 = $ssize$0$i >>> 0 < 2147483647;
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = (tempInt = SAFE_HEAP_LOAD(50916 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $589 = ($588 | 0) == 0;
       if (!$589) {
        $590 = $585 >>> 0 <= $584 >>> 0;
        $591 = $585 >>> 0 > $588 >>> 0;
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (tempInt = _sbrk($ssize$0$i | 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
       $593 = ($592 | 0) == ($572 | 0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;
        $tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;
        $ssize$1$ph$i = $ssize$0$i;
        $tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while (0);
   L280 : do {
    if ((label | 0) == 184) {
     $604 = 0 - $ssize$1$ph$i | 0;
     $605 = ($br$0$ph$i | 0) != (-1 | 0);
     $606 = $ssize$1$ph$i >>> 0 < 2147483647;
     $or$cond5$i = $606 & $605;
     $607 = $545 >>> 0 > $ssize$1$ph$i >>> 0;
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = (tempInt = SAFE_HEAP_LOAD(50956 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $609 = $547 - $ssize$1$ph$i | 0;
       $610 = $609 + $608 | 0;
       $611 = 0 - $608 | 0;
       $612 = $610 & $611;
       $613 = $612 >>> 0 < 2147483647;
       if ($613) {
        $614 = (tempInt = _sbrk($612 | 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
        $615 = ($614 | 0) == (-1 | 0);
        if ($615) {
         (tempInt = _sbrk($604 | 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = $612 + $ssize$1$ph$i | 0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while (0);
     $617 = ($br$0$ph$i | 0) == (-1 | 0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;
      $tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while (0);
   $618 = (tempInt = SAFE_HEAP_LOAD(50920 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $619 = $618 | 4;
   SAFE_HEAP_STORE(50920 | 0, $619 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while (0);
 if ((label | 0) == 191) {
  $620 = $550 >>> 0 < 2147483647;
  if ($620) {
   $621 = (tempInt = _sbrk($550 | 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
   $622 = (tempInt = _sbrk(0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
   $623 = ($621 | 0) != (-1 | 0);
   $624 = ($622 | 0) != (-1 | 0);
   $or$cond3$i = $623 & $624;
   $625 = $621 >>> 0 < $622 >>> 0;
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = $626 - $627 | 0;
    $629 = $nb$0 + 40 | 0;
    $630 = $628 >>> 0 > $629 >>> 0;
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;
     $tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label | 0) == 194) {
  $631 = (tempInt = SAFE_HEAP_LOAD(50908 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $632 = $631 + $tsize$254$i | 0;
  SAFE_HEAP_STORE(50908 | 0, $632 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $633 = (tempInt = SAFE_HEAP_LOAD(50912 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $634 = $632 >>> 0 > $633 >>> 0;
  if ($634) {
   SAFE_HEAP_STORE(50912 | 0, $632 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  }
  $635 = (tempInt = SAFE_HEAP_LOAD(50500 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $636 = ($635 | 0) == (0 | 0);
  L299 : do {
   if ($636) {
    $637 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $638 = ($637 | 0) == (0 | 0);
    $639 = $tbase$255$i >>> 0 < $637 >>> 0;
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     SAFE_HEAP_STORE(50492 | 0, $tbase$255$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
    }
    SAFE_HEAP_STORE(50924 | 0, $tbase$255$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50928 | 0, $tsize$254$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50936 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $640 = (tempInt = SAFE_HEAP_LOAD(50948 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    SAFE_HEAP_STORE(50512 | 0, $640 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50508 | 0, -1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $i$02$i$i = 0;
    while (1) {
     $641 = $i$02$i$i << 1;
     $642 = 50516 + ($641 << 2) | 0;
     $$sum$i$i = $641 + 3 | 0;
     $643 = 50516 + ($$sum$i$i << 2) | 0;
     SAFE_HEAP_STORE($643 | 0, $642 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $$sum1$i$i = $641 + 2 | 0;
     $644 = 50516 + ($$sum1$i$i << 2) | 0;
     SAFE_HEAP_STORE($644 | 0, $642 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $645 = $i$02$i$i + 1 | 0;
     $exitcond$i$i = ($645 | 0) == 32;
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = $tsize$254$i + -40 | 0;
    $647 = $tbase$255$i + 8 | 0;
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649 | 0) == 0;
    $651 = 0 - $648 | 0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = $tbase$255$i + $653 | 0;
    $655 = $646 - $653 | 0;
    SAFE_HEAP_STORE(50500 | 0, $654 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50488 | 0, $655 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $656 = $655 | 1;
    $$sum$i13$i = $653 + 4 | 0;
    $657 = $tbase$255$i + $$sum$i13$i | 0;
    SAFE_HEAP_STORE($657 | 0, $656 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $$sum2$i$i = $tsize$254$i + -36 | 0;
    $658 = $tbase$255$i + $$sum2$i$i | 0;
    SAFE_HEAP_STORE($658 | 0, 40 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $659 = (tempInt = SAFE_HEAP_LOAD(50964 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    SAFE_HEAP_STORE(50504 | 0, $659 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   } else {
    $sp$084$i = 50924;
    while (1) {
     $660 = (tempInt = SAFE_HEAP_LOAD($sp$084$i | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $661 = $sp$084$i + 4 | 0;
     $662 = (tempInt = SAFE_HEAP_LOAD($661 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $663 = $660 + $662 | 0;
     $664 = ($tbase$255$i | 0) == ($663 | 0);
     if ($664) {
      $$lcssa222 = $660;
      $$lcssa224 = $661;
      $$lcssa226 = $662;
      $sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = $sp$084$i + 8 | 0;
     $666 = (tempInt = SAFE_HEAP_LOAD($665 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $667 = ($666 | 0) == (0 | 0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label | 0) == 204) {
     $668 = $sp$084$i$lcssa + 12 | 0;
     $669 = (tempInt = SAFE_HEAP_LOAD($668 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $670 = $669 & 8;
     $671 = ($670 | 0) == 0;
     if ($671) {
      $672 = $635 >>> 0 >= $$lcssa222 >>> 0;
      $673 = $635 >>> 0 < $tbase$255$i >>> 0;
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = $$lcssa226 + $tsize$254$i | 0;
       SAFE_HEAP_STORE($$lcssa224 | 0, $674 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $675 = (tempInt = SAFE_HEAP_LOAD(50488 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $676 = $675 + $tsize$254$i | 0;
       $677 = $635 + 8 | 0;
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679 | 0) == 0;
       $681 = 0 - $678 | 0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = $635 + $683 | 0;
       $685 = $676 - $683 | 0;
       SAFE_HEAP_STORE(50500 | 0, $684 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       SAFE_HEAP_STORE(50488 | 0, $685 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $686 = $685 | 1;
       $$sum$i17$i = $683 + 4 | 0;
       $687 = $635 + $$sum$i17$i | 0;
       SAFE_HEAP_STORE($687 | 0, $686 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $$sum2$i18$i = $676 + 4 | 0;
       $688 = $635 + $$sum2$i18$i | 0;
       SAFE_HEAP_STORE($688 | 0, 40 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $689 = (tempInt = SAFE_HEAP_LOAD(50964 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       SAFE_HEAP_STORE(50504 | 0, $689 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       break;
      }
     }
    }
    $690 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $691 = $tbase$255$i >>> 0 < $690 >>> 0;
    if ($691) {
     SAFE_HEAP_STORE(50492 | 0, $tbase$255$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = $tbase$255$i + $tsize$254$i | 0;
    $sp$183$i = 50924;
    while (1) {
     $693 = (tempInt = SAFE_HEAP_LOAD($sp$183$i | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $694 = ($693 | 0) == ($692 | 0);
     if ($694) {
      $$lcssa219 = $sp$183$i;
      $sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = $sp$183$i + 8 | 0;
     $696 = (tempInt = SAFE_HEAP_LOAD($695 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $697 = ($696 | 0) == (0 | 0);
     if ($697) {
      $sp$0$i$i$i = 50924;
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label | 0) == 212) {
     $698 = $sp$183$i$lcssa + 12 | 0;
     $699 = (tempInt = SAFE_HEAP_LOAD($698 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $700 = $699 & 8;
     $701 = ($700 | 0) == 0;
     if ($701) {
      SAFE_HEAP_STORE($$lcssa219 | 0, $tbase$255$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $702 = $sp$183$i$lcssa + 4 | 0;
      $703 = (tempInt = SAFE_HEAP_LOAD($702 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $704 = $703 + $tsize$254$i | 0;
      SAFE_HEAP_STORE($702 | 0, $704 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $705 = $tbase$255$i + 8 | 0;
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707 | 0) == 0;
      $709 = 0 - $706 | 0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = $tbase$255$i + $711 | 0;
      $$sum112$i = $tsize$254$i + 8 | 0;
      $713 = $tbase$255$i + $$sum112$i | 0;
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715 | 0) == 0;
      $717 = 0 - $714 | 0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = $719 + $tsize$254$i | 0;
      $720 = $tbase$255$i + $$sum113$i | 0;
      $721 = $720;
      $722 = $712;
      $723 = $721 - $722 | 0;
      $$sum$i19$i = $711 + $nb$0 | 0;
      $724 = $tbase$255$i + $$sum$i19$i | 0;
      $725 = $723 - $nb$0 | 0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = $711 + 4 | 0;
      $727 = $tbase$255$i + $$sum1$i20$i | 0;
      SAFE_HEAP_STORE($727 | 0, $726 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $728 = ($720 | 0) == ($635 | 0);
      L324 : do {
       if ($728) {
        $729 = (tempInt = SAFE_HEAP_LOAD(50488 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $730 = $729 + $725 | 0;
        SAFE_HEAP_STORE(50488 | 0, $730 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        SAFE_HEAP_STORE(50500 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $731 = $730 | 1;
        $$sum42$i$i = $$sum$i19$i + 4 | 0;
        $732 = $tbase$255$i + $$sum42$i$i | 0;
        SAFE_HEAP_STORE($732 | 0, $731 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       } else {
        $733 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $734 = ($720 | 0) == ($733 | 0);
        if ($734) {
         $735 = (tempInt = SAFE_HEAP_LOAD(50484 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $736 = $735 + $725 | 0;
         SAFE_HEAP_STORE(50484 | 0, $736 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         SAFE_HEAP_STORE(50496 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $737 = $736 | 1;
         $$sum40$i$i = $$sum$i19$i + 4 | 0;
         $738 = $tbase$255$i + $$sum40$i$i | 0;
         SAFE_HEAP_STORE($738 | 0, $737 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum41$i$i = $736 + $$sum$i19$i | 0;
         $739 = $tbase$255$i + $$sum41$i$i | 0;
         SAFE_HEAP_STORE($739 | 0, $736 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         break;
        }
        $$sum2$i21$i = $tsize$254$i + 4 | 0;
        $$sum114$i = $$sum2$i21$i + $719 | 0;
        $740 = $tbase$255$i + $$sum114$i | 0;
        $741 = (tempInt = SAFE_HEAP_LOAD($740 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $742 = $741 & 3;
        $743 = ($742 | 0) == 1;
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = $741 >>> 0 < 256;
         L332 : do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = $$sum3738$i$i + $tsize$254$i | 0;
           $747 = $tbase$255$i + $$sum124$i | 0;
           $748 = (tempInt = SAFE_HEAP_LOAD($747 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $$sum39$i$i = $tsize$254$i + 12 | 0;
           $$sum125$i = $$sum39$i$i + $719 | 0;
           $749 = $tbase$255$i + $$sum125$i | 0;
           $750 = (tempInt = SAFE_HEAP_LOAD($749 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $751 = $745 << 1;
           $752 = 50516 + ($751 << 2) | 0;
           $753 = ($748 | 0) == ($752 | 0);
           do {
            if (!$753) {
             $754 = $748 >>> 0 < $755 >>> 0;
             if ($754) {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             }
             $756 = $748 + 12 | 0;
             $757 = (tempInt = SAFE_HEAP_LOAD($756 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $758 = ($757 | 0) == ($720 | 0);
             if ($758) {
              break;
             }
             _abort(), asyncState ? abort(-12) | 0 : 0;
            }
           } while (0);
           $759 = ($750 | 0) == ($748 | 0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
            $763 = $762 & $761;
            SAFE_HEAP_STORE(50476 | 0, $763 | 0, 4), asyncState ? abort(-12) | 0 : 0;
            break;
           }
           $764 = ($750 | 0) == ($752 | 0);
           do {
            if ($764) {
             $$pre57$i$i = $750 + 8 | 0;
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = $750 >>> 0 < $755 >>> 0;
             if ($765) {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             }
             $766 = $750 + 8 | 0;
             $767 = (tempInt = SAFE_HEAP_LOAD($766 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $768 = ($767 | 0) == ($720 | 0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort(), asyncState ? abort(-12) | 0 : 0;
            }
           } while (0);
           $769 = $748 + 12 | 0;
           SAFE_HEAP_STORE($769 | 0, $750 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           SAFE_HEAP_STORE($$pre$phi58$i$iZ2D | 0, $748 | 0, 4), asyncState ? abort(-12) | 0 : 0;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = $$sum34$i$i + $tsize$254$i | 0;
           $770 = $tbase$255$i + $$sum115$i | 0;
           $771 = (tempInt = SAFE_HEAP_LOAD($770 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $$sum5$i$i = $tsize$254$i + 12 | 0;
           $$sum116$i = $$sum5$i$i + $719 | 0;
           $772 = $tbase$255$i + $$sum116$i | 0;
           $773 = (tempInt = SAFE_HEAP_LOAD($772 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $774 = ($773 | 0) == ($720 | 0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = $$sum2$i21$i + $$sum67$i$i | 0;
             $784 = $tbase$255$i + $$sum122$i | 0;
             $785 = (tempInt = SAFE_HEAP_LOAD($784 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $786 = ($785 | 0) == (0 | 0);
             if ($786) {
              $$sum123$i = $$sum67$i$i + $tsize$254$i | 0;
              $787 = $tbase$255$i + $$sum123$i | 0;
              $788 = (tempInt = SAFE_HEAP_LOAD($787 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
              $789 = ($788 | 0) == (0 | 0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;
               $RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;
              $RP$0$i$i = $784;
             }
             while (1) {
              $790 = $R$0$i$i + 20 | 0;
              $791 = (tempInt = SAFE_HEAP_LOAD($790 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
              $792 = ($791 | 0) == (0 | 0);
              if (!$792) {
               $R$0$i$i = $791;
               $RP$0$i$i = $790;
               continue;
              }
              $793 = $R$0$i$i + 16 | 0;
              $794 = (tempInt = SAFE_HEAP_LOAD($793 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
              $795 = ($794 | 0) == (0 | 0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;
               $RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;
               $RP$0$i$i = $793;
              }
             }
             $796 = $RP$0$i$i$lcssa >>> 0 < $755 >>> 0;
             if ($796) {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             } else {
              SAFE_HEAP_STORE($RP$0$i$i$lcssa | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = $$sum3536$i$i + $tsize$254$i | 0;
             $775 = $tbase$255$i + $$sum117$i | 0;
             $776 = (tempInt = SAFE_HEAP_LOAD($775 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $777 = $776 >>> 0 < $755 >>> 0;
             if ($777) {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             }
             $778 = $776 + 12 | 0;
             $779 = (tempInt = SAFE_HEAP_LOAD($778 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $780 = ($779 | 0) == ($720 | 0);
             if (!$780) {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             }
             $781 = $773 + 8 | 0;
             $782 = (tempInt = SAFE_HEAP_LOAD($781 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $783 = ($782 | 0) == ($720 | 0);
             if ($783) {
              SAFE_HEAP_STORE($778 | 0, $773 | 0, 4), asyncState ? abort(-12) | 0 : 0;
              SAFE_HEAP_STORE($781 | 0, $776 | 0, 4), asyncState ? abort(-12) | 0 : 0;
              $R$1$i$i = $773;
              break;
             } else {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             }
            }
           } while (0);
           $797 = ($771 | 0) == (0 | 0);
           if ($797) {
            break;
           }
           $$sum30$i$i = $tsize$254$i + 28 | 0;
           $$sum118$i = $$sum30$i$i + $719 | 0;
           $798 = $tbase$255$i + $$sum118$i | 0;
           $799 = (tempInt = SAFE_HEAP_LOAD($798 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $800 = 50780 + ($799 << 2) | 0;
           $801 = (tempInt = SAFE_HEAP_LOAD($800 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $802 = ($720 | 0) == ($801 | 0);
           do {
            if ($802) {
             SAFE_HEAP_STORE($800 | 0, $R$1$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
             $cond$i$i = ($R$1$i$i | 0) == (0 | 0);
             if (!$cond$i$i) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $806 = $805 & $804;
             SAFE_HEAP_STORE(50480 | 0, $806 | 0, 4), asyncState ? abort(-12) | 0 : 0;
             break L332;
            } else {
             $807 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $808 = $771 >>> 0 < $807 >>> 0;
             if ($808) {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             }
             $809 = $771 + 16 | 0;
             $810 = (tempInt = SAFE_HEAP_LOAD($809 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
             $811 = ($810 | 0) == ($720 | 0);
             if ($811) {
              SAFE_HEAP_STORE($809 | 0, $R$1$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
             } else {
              $812 = $771 + 20 | 0;
              SAFE_HEAP_STORE($812 | 0, $R$1$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
             }
             $813 = ($R$1$i$i | 0) == (0 | 0);
             if ($813) {
              break L332;
             }
            }
           } while (0);
           $814 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $815 = $R$1$i$i >>> 0 < $814 >>> 0;
           if ($815) {
            _abort(), asyncState ? abort(-12) | 0 : 0;
           }
           $816 = $R$1$i$i + 24 | 0;
           SAFE_HEAP_STORE($816 | 0, $771 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = $$sum3132$i$i + $tsize$254$i | 0;
           $817 = $tbase$255$i + $$sum119$i | 0;
           $818 = (tempInt = SAFE_HEAP_LOAD($817 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $819 = ($818 | 0) == (0 | 0);
           do {
            if (!$819) {
             $820 = $818 >>> 0 < $814 >>> 0;
             if ($820) {
              _abort(), asyncState ? abort(-12) | 0 : 0;
             } else {
              $821 = $R$1$i$i + 16 | 0;
              SAFE_HEAP_STORE($821 | 0, $818 | 0, 4), asyncState ? abort(-12) | 0 : 0;
              $822 = $818 + 24 | 0;
              SAFE_HEAP_STORE($822 | 0, $R$1$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
              break;
             }
            }
           } while (0);
           $$sum120$i = $$sum2$i21$i + $$sum3132$i$i | 0;
           $823 = $tbase$255$i + $$sum120$i | 0;
           $824 = (tempInt = SAFE_HEAP_LOAD($823 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $825 = ($824 | 0) == (0 | 0);
           if ($825) {
            break;
           }
           $826 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $827 = $824 >>> 0 < $826 >>> 0;
           if ($827) {
            _abort(), asyncState ? abort(-12) | 0 : 0;
           } else {
            $828 = $R$1$i$i + 20 | 0;
            SAFE_HEAP_STORE($828 | 0, $824 | 0, 4), asyncState ? abort(-12) | 0 : 0;
            $829 = $824 + 24 | 0;
            SAFE_HEAP_STORE($829 | 0, $R$1$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
            break;
           }
          }
         } while (0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = $$sum9$i$i + $tsize$254$i | 0;
         $830 = $tbase$255$i + $$sum121$i | 0;
         $831 = $744 + $725 | 0;
         $oldfirst$0$i$i = $830;
         $qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;
         $qsize$0$i$i = $725;
        }
        $832 = $oldfirst$0$i$i + 4 | 0;
        $833 = (tempInt = SAFE_HEAP_LOAD($832 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $834 = $833 & -2;
        SAFE_HEAP_STORE($832 | 0, $834 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = $$sum$i19$i + 4 | 0;
        $836 = $tbase$255$i + $$sum10$i$i | 0;
        SAFE_HEAP_STORE($836 | 0, $835 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $$sum11$i$i = $qsize$0$i$i + $$sum$i19$i | 0;
        $837 = $tbase$255$i + $$sum11$i$i | 0;
        SAFE_HEAP_STORE($837 | 0, $qsize$0$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $838 = $qsize$0$i$i >>> 3;
        $839 = $qsize$0$i$i >>> 0 < 256;
        if ($839) {
         $840 = $838 << 1;
         $841 = 50516 + ($840 << 2) | 0;
         $842 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844 | 0) == 0;
         do {
          if ($845) {
           $846 = $842 | $843;
           SAFE_HEAP_STORE(50476 | 0, $846 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           $$pre$i22$i = $840 + 2 | 0;
           $$pre56$i$i = 50516 + ($$pre$i22$i << 2) | 0;
           $$pre$phi$i23$iZ2D = $$pre56$i$i;
           $F4$0$i$i = $841;
          } else {
           $$sum29$i$i = $840 + 2 | 0;
           $847 = 50516 + ($$sum29$i$i << 2) | 0;
           $848 = (tempInt = SAFE_HEAP_LOAD($847 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $849 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $850 = $848 >>> 0 < $849 >>> 0;
           if (!$850) {
            $$pre$phi$i23$iZ2D = $847;
            $F4$0$i$i = $848;
            break;
           }
           _abort(), asyncState ? abort(-12) | 0 : 0;
          }
         } while (0);
         SAFE_HEAP_STORE($$pre$phi$i23$iZ2D | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $851 = $F4$0$i$i + 12 | 0;
         SAFE_HEAP_STORE($851 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum27$i$i = $$sum$i19$i + 8 | 0;
         $852 = $tbase$255$i + $$sum27$i$i | 0;
         SAFE_HEAP_STORE($852 | 0, $F4$0$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum28$i$i = $$sum$i19$i + 12 | 0;
         $853 = $tbase$255$i + $$sum28$i$i | 0;
         SAFE_HEAP_STORE($853 | 0, $841 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854 | 0) == 0;
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = $qsize$0$i$i >>> 0 > 16777215;
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = $854 + 1048320 | 0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = $860 + 520192 | 0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = $865 + 245760 | 0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = 14 - $869 | 0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = $870 + $872 | 0;
          $874 = $873 << 1;
          $875 = $873 + 7 | 0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while (0);
        $879 = 50780 + ($I7$0$i$i << 2) | 0;
        $$sum12$i$i = $$sum$i19$i + 28 | 0;
        $880 = $tbase$255$i + $$sum12$i$i | 0;
        SAFE_HEAP_STORE($880 | 0, $I7$0$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $$sum13$i$i = $$sum$i19$i + 16 | 0;
        $881 = $tbase$255$i + $$sum13$i$i | 0;
        $$sum14$i$i = $$sum$i19$i + 20 | 0;
        $882 = $tbase$255$i + $$sum14$i$i | 0;
        SAFE_HEAP_STORE($882 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        SAFE_HEAP_STORE($881 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $883 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885 | 0) == 0;
        if ($886) {
         $887 = $883 | $884;
         SAFE_HEAP_STORE(50480 | 0, $887 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         SAFE_HEAP_STORE($879 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum15$i$i = $$sum$i19$i + 24 | 0;
         $888 = $tbase$255$i + $$sum15$i$i | 0;
         SAFE_HEAP_STORE($888 | 0, $879 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum16$i$i = $$sum$i19$i + 12 | 0;
         $889 = $tbase$255$i + $$sum16$i$i | 0;
         SAFE_HEAP_STORE($889 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum17$i$i = $$sum$i19$i + 8 | 0;
         $890 = $tbase$255$i + $$sum17$i$i | 0;
         SAFE_HEAP_STORE($890 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         break;
        }
        $891 = (tempInt = SAFE_HEAP_LOAD($879 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $892 = $891 + 4 | 0;
        $893 = (tempInt = SAFE_HEAP_LOAD($892 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $894 = $893 & -8;
        $895 = ($894 | 0) == ($qsize$0$i$i | 0);
        L418 : do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i | 0) == 31;
          $897 = $I7$0$i$i >>> 1;
          $898 = 25 - $897 | 0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;
          $T$050$i$i = $891;
          while (1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = ($T$050$i$i + 16 | 0) + ($907 << 2) | 0;
           $903 = (tempInt = SAFE_HEAP_LOAD($908 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $909 = ($903 | 0) == (0 | 0);
           if ($909) {
            $$lcssa = $908;
            $T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = $903 + 4 | 0;
           $904 = (tempInt = SAFE_HEAP_LOAD($902 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
           $905 = $904 & -8;
           $906 = ($905 | 0) == ($qsize$0$i$i | 0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L418;
           } else {
            $K8$051$i$i = $901;
            $T$050$i$i = $903;
           }
          }
          $910 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
          $911 = $$lcssa >>> 0 < $910 >>> 0;
          if ($911) {
           _abort(), asyncState ? abort(-12) | 0 : 0;
          } else {
           SAFE_HEAP_STORE($$lcssa | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           $$sum23$i$i = $$sum$i19$i + 24 | 0;
           $912 = $tbase$255$i + $$sum23$i$i | 0;
           SAFE_HEAP_STORE($912 | 0, $T$050$i$i$lcssa | 0, 4), asyncState ? abort(-12) | 0 : 0;
           $$sum24$i$i = $$sum$i19$i + 12 | 0;
           $913 = $tbase$255$i + $$sum24$i$i | 0;
           SAFE_HEAP_STORE($913 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           $$sum25$i$i = $$sum$i19$i + 8 | 0;
           $914 = $tbase$255$i + $$sum25$i$i | 0;
           SAFE_HEAP_STORE($914 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
           break L324;
          }
         }
        } while (0);
        $915 = $T$0$lcssa$i25$i + 8 | 0;
        $916 = (tempInt = SAFE_HEAP_LOAD($915 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $917 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $918 = $916 >>> 0 >= $917 >>> 0;
        $not$$i26$i = $T$0$lcssa$i25$i >>> 0 >= $917 >>> 0;
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = $916 + 12 | 0;
         SAFE_HEAP_STORE($920 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         SAFE_HEAP_STORE($915 | 0, $724 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum20$i$i = $$sum$i19$i + 8 | 0;
         $921 = $tbase$255$i + $$sum20$i$i | 0;
         SAFE_HEAP_STORE($921 | 0, $916 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum21$i$i = $$sum$i19$i + 12 | 0;
         $922 = $tbase$255$i + $$sum21$i$i | 0;
         SAFE_HEAP_STORE($922 | 0, $T$0$lcssa$i25$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
         $$sum22$i$i = $$sum$i19$i + 24 | 0;
         $923 = $tbase$255$i + $$sum22$i$i | 0;
         SAFE_HEAP_STORE($923 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
         break;
        } else {
         _abort(), asyncState ? abort(-12) | 0 : 0;
        }
       }
      } while (0);
      $$sum1819$i$i = $711 | 8;
      $924 = $tbase$255$i + $$sum1819$i$i | 0;
      $mem$0 = $924;
      return $mem$0 | 0;
     } else {
      $sp$0$i$i$i = 50924;
     }
    }
    while (1) {
     $925 = (tempInt = SAFE_HEAP_LOAD($sp$0$i$i$i | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $926 = $925 >>> 0 > $635 >>> 0;
     if (!$926) {
      $927 = $sp$0$i$i$i + 4 | 0;
      $928 = (tempInt = SAFE_HEAP_LOAD($927 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $929 = $925 + $928 | 0;
      $930 = $929 >>> 0 > $635 >>> 0;
      if ($930) {
       $$lcssa215 = $925;
       $$lcssa216 = $928;
       $$lcssa217 = $929;
       break;
      }
     }
     $931 = $sp$0$i$i$i + 8 | 0;
     $932 = (tempInt = SAFE_HEAP_LOAD($931 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = $$lcssa216 + -47 | 0;
    $$sum1$i15$i = $$lcssa216 + -39 | 0;
    $933 = $$lcssa215 + $$sum1$i15$i | 0;
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935 | 0) == 0;
    $937 = 0 - $934 | 0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = $$sum$i14$i + $939 | 0;
    $940 = $$lcssa215 + $$sum2$i16$i | 0;
    $941 = $635 + 16 | 0;
    $942 = $940 >>> 0 < $941 >>> 0;
    $943 = $942 ? $635 : $940;
    $944 = $943 + 8 | 0;
    $945 = $tsize$254$i + -40 | 0;
    $946 = $tbase$255$i + 8 | 0;
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948 | 0) == 0;
    $950 = 0 - $947 | 0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = $tbase$255$i + $952 | 0;
    $954 = $945 - $952 | 0;
    SAFE_HEAP_STORE(50500 | 0, $953 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50488 | 0, $954 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $955 = $954 | 1;
    $$sum$i$i$i = $952 + 4 | 0;
    $956 = $tbase$255$i + $$sum$i$i$i | 0;
    SAFE_HEAP_STORE($956 | 0, $955 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $$sum2$i$i$i = $tsize$254$i + -36 | 0;
    $957 = $tbase$255$i + $$sum2$i$i$i | 0;
    SAFE_HEAP_STORE($957 | 0, 40 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $958 = (tempInt = SAFE_HEAP_LOAD(50964 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    SAFE_HEAP_STORE(50504 | 0, $958 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $959 = $943 + 4 | 0;
    SAFE_HEAP_STORE($959 | 0, 27 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($944 | 0, (tempInt = SAFE_HEAP_LOAD(50924 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($944 + 4 | 0, (tempInt = SAFE_HEAP_LOAD(50924 + 4 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($944 + 8 | 0, (tempInt = SAFE_HEAP_LOAD(50924 + 8 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($944 + 12 | 0, (tempInt = SAFE_HEAP_LOAD(50924 + 12 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50924 | 0, $tbase$255$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50928 | 0, $tsize$254$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50936 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE(50932 | 0, $944 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $960 = $943 + 28 | 0;
    SAFE_HEAP_STORE($960 | 0, 7 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $961 = $943 + 32 | 0;
    $962 = $961 >>> 0 < $$lcssa217 >>> 0;
    if ($962) {
     $964 = $960;
     while (1) {
      $963 = $964 + 4 | 0;
      SAFE_HEAP_STORE($963 | 0, 7 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $965 = $964 + 8 | 0;
      $966 = $965 >>> 0 < $$lcssa217 >>> 0;
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943 | 0) == ($635 | 0);
    if (!$967) {
     $968 = $943;
     $969 = $635;
     $970 = $968 - $969 | 0;
     $971 = (tempInt = SAFE_HEAP_LOAD($959 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $972 = $971 & -2;
     SAFE_HEAP_STORE($959 | 0, $972 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $973 = $970 | 1;
     $974 = $635 + 4 | 0;
     SAFE_HEAP_STORE($974 | 0, $973 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     SAFE_HEAP_STORE($943 | 0, $970 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $975 = $970 >>> 3;
     $976 = $970 >>> 0 < 256;
     if ($976) {
      $977 = $975 << 1;
      $978 = 50516 + ($977 << 2) | 0;
      $979 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981 | 0) == 0;
      if ($982) {
       $983 = $979 | $980;
       SAFE_HEAP_STORE(50476 | 0, $983 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $$pre$i$i = $977 + 2 | 0;
       $$pre14$i$i = 50516 + ($$pre$i$i << 2) | 0;
       $$pre$phi$i$iZ2D = $$pre14$i$i;
       $F$0$i$i = $978;
      } else {
       $$sum4$i$i = $977 + 2 | 0;
       $984 = 50516 + ($$sum4$i$i << 2) | 0;
       $985 = (tempInt = SAFE_HEAP_LOAD($984 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $986 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $987 = $985 >>> 0 < $986 >>> 0;
       if ($987) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       } else {
        $$pre$phi$i$iZ2D = $984;
        $F$0$i$i = $985;
       }
      }
      SAFE_HEAP_STORE($$pre$phi$i$iZ2D | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $988 = $F$0$i$i + 12 | 0;
      SAFE_HEAP_STORE($988 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $989 = $635 + 8 | 0;
      SAFE_HEAP_STORE($989 | 0, $F$0$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $990 = $635 + 12 | 0;
      SAFE_HEAP_STORE($990 | 0, $978 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991 | 0) == 0;
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = $970 >>> 0 > 16777215;
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = $991 + 1048320 | 0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = $997 + 520192 | 0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = $1002 + 245760 | 0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = 14 - $1006 | 0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = $1007 + $1009 | 0;
       $1011 = $1010 << 1;
       $1012 = $1010 + 7 | 0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = 50780 + ($I1$0$i$i << 2) | 0;
     $1017 = $635 + 28 | 0;
     SAFE_HEAP_STORE($1017 | 0, $I1$0$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $1018 = $635 + 20 | 0;
     SAFE_HEAP_STORE($1018 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     SAFE_HEAP_STORE($941 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $1019 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021 | 0) == 0;
     if ($1022) {
      $1023 = $1019 | $1020;
      SAFE_HEAP_STORE(50480 | 0, $1023 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      SAFE_HEAP_STORE($1016 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $1024 = $635 + 24 | 0;
      SAFE_HEAP_STORE($1024 | 0, $1016 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $1025 = $635 + 12 | 0;
      SAFE_HEAP_STORE($1025 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $1026 = $635 + 8 | 0;
      SAFE_HEAP_STORE($1026 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      break;
     }
     $1027 = (tempInt = SAFE_HEAP_LOAD($1016 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $1028 = $1027 + 4 | 0;
     $1029 = (tempInt = SAFE_HEAP_LOAD($1028 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $1030 = $1029 & -8;
     $1031 = ($1030 | 0) == ($970 | 0);
     L459 : do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i | 0) == 31;
       $1033 = $I1$0$i$i >>> 1;
       $1034 = 25 - $1033 | 0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;
       $T$06$i$i = $1027;
       while (1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = ($T$06$i$i + 16 | 0) + ($1043 << 2) | 0;
        $1039 = (tempInt = SAFE_HEAP_LOAD($1044 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $1045 = ($1039 | 0) == (0 | 0);
        if ($1045) {
         $$lcssa211 = $1044;
         $T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = $1039 + 4 | 0;
        $1040 = (tempInt = SAFE_HEAP_LOAD($1038 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
        $1041 = $1040 & -8;
        $1042 = ($1041 | 0) == ($970 | 0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;
         $T$06$i$i = $1039;
        }
       }
       $1046 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $1047 = $$lcssa211 >>> 0 < $1046 >>> 0;
       if ($1047) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       } else {
        SAFE_HEAP_STORE($$lcssa211 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $1048 = $635 + 24 | 0;
        SAFE_HEAP_STORE($1048 | 0, $T$06$i$i$lcssa | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $1049 = $635 + 12 | 0;
        SAFE_HEAP_STORE($1049 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $1050 = $635 + 8 | 0;
        SAFE_HEAP_STORE($1050 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        break L299;
       }
      }
     } while (0);
     $1051 = $T$0$lcssa$i$i + 8 | 0;
     $1052 = (tempInt = SAFE_HEAP_LOAD($1051 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $1053 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $1054 = $1052 >>> 0 >= $1053 >>> 0;
     $not$$i$i = $T$0$lcssa$i$i >>> 0 >= $1053 >>> 0;
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = $1052 + 12 | 0;
      SAFE_HEAP_STORE($1056 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      SAFE_HEAP_STORE($1051 | 0, $635 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $1057 = $635 + 8 | 0;
      SAFE_HEAP_STORE($1057 | 0, $1052 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $1058 = $635 + 12 | 0;
      SAFE_HEAP_STORE($1058 | 0, $T$0$lcssa$i$i | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $1059 = $635 + 24 | 0;
      SAFE_HEAP_STORE($1059 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      break;
     } else {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
    }
   }
  } while (0);
  $1060 = (tempInt = SAFE_HEAP_LOAD(50488 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $1061 = $1060 >>> 0 > $nb$0 >>> 0;
  if ($1061) {
   $1062 = $1060 - $nb$0 | 0;
   SAFE_HEAP_STORE(50488 | 0, $1062 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $1063 = (tempInt = SAFE_HEAP_LOAD(50500 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $1064 = $1063 + $nb$0 | 0;
   SAFE_HEAP_STORE(50500 | 0, $1064 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $1065 = $1062 | 1;
   $$sum$i32 = $nb$0 + 4 | 0;
   $1066 = $1063 + $$sum$i32 | 0;
   SAFE_HEAP_STORE($1066 | 0, $1065 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $1067 = $nb$0 | 3;
   $1068 = $1063 + 4 | 0;
   SAFE_HEAP_STORE($1068 | 0, $1067 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $1069 = $1063 + 8 | 0;
   $mem$0 = $1069;
   return $mem$0 | 0;
  }
 }
 $1070 = (tempInt = ___errno_location() | 0, asyncState ? abort(-12) | 0 : tempInt) | 0;
 SAFE_HEAP_STORE($1070 | 0, 12 | 0, 4), asyncState ? abort(-12) | 0 : 0;
 $mem$0 = 0;
 return $mem$0 | 0;
}
function emterpret(pc) {
 pc = pc | 0;
 var sp = 0, inst = 0, lx = 0, ly = 0, lz = 0;
 var ld = 0.0;
 HEAP32[EMTSTACKTOP >> 2] = pc;
 sp = EMTSTACKTOP + 8 | 0;
 assert(HEAPU8[pc >> 0] >>> 0 == 140 | 0);
 lx = HEAPU16[pc + 2 >> 1] | 0;
 EMTSTACKTOP = EMTSTACKTOP + (lx + 1 << 3) | 0;
 assert((EMTSTACKTOP | 0) <= (EMT_STACK_MAX | 0) | 0);
 if ((asyncState | 0) != 2) {} else {
  pc = (HEAP32[sp - 4 >> 2] | 0) - 8 | 0;
 }
 pc = pc + 4 | 0;
 while (1) {
  pc = pc + 4 | 0;
  inst = HEAP32[pc >> 2] | 0;
  lx = inst >> 8 & 255;
  ly = inst >> 16 & 255;
  lz = inst >>> 24;
  switch (inst & 255) {
  case 0:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] | 0;
   break;
  case 1:
   HEAP32[sp + (lx << 3) >> 2] = inst >> 16;
   break;
  case 2:
   pc = pc + 4 | 0;
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[pc >> 2] | 0;
   break;
  case 3:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) + (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 4:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) - (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 5:
   HEAP32[sp + (lx << 3) >> 2] = Math_imul(HEAP32[sp + (ly << 3) >> 2] | 0, HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 6:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) / (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 7:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] >>> 0) / (HEAP32[sp + (lz << 3) >> 2] >>> 0) >>> 0;
   break;
  case 8:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) % (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 9:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] >>> 0) % (HEAP32[sp + (lz << 3) >> 2] >>> 0) >>> 0;
   break;
  case 12:
   HEAP32[sp + (lx << 3) >> 2] = !(HEAP32[sp + (ly << 3) >> 2] | 0);
   break;
  case 13:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) == (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 14:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) != (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 15:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) < (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 16:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] >>> 0 < HEAP32[sp + (lz << 3) >> 2] >>> 0 | 0;
   break;
  case 17:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) <= (HEAP32[sp + (lz << 3) >> 2] | 0) | 0;
   break;
  case 18:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] >>> 0 <= HEAP32[sp + (lz << 3) >> 2] >>> 0 | 0;
   break;
  case 19:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) & (HEAP32[sp + (lz << 3) >> 2] | 0);
   break;
  case 20:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] | 0 | (HEAP32[sp + (lz << 3) >> 2] | 0);
   break;
  case 21:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) ^ (HEAP32[sp + (lz << 3) >> 2] | 0);
   break;
  case 22:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) << (HEAP32[sp + (lz << 3) >> 2] | 0);
   break;
  case 24:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) >>> (HEAP32[sp + (lz << 3) >> 2] | 0);
   break;
  case 25:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) + (inst >> 24) | 0;
   break;
  case 26:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) - (inst >> 24) | 0;
   break;
  case 27:
   HEAP32[sp + (lx << 3) >> 2] = Math_imul(HEAP32[sp + (ly << 3) >> 2] | 0, inst >> 24) | 0;
   break;
  case 28:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) / (inst >> 24) | 0;
   break;
  case 29:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] >>> 0) / (lz >>> 0) >>> 0;
   break;
  case 30:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) % (inst >> 24) | 0;
   break;
  case 31:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] >>> 0) % (lz >>> 0) >>> 0;
   break;
  case 32:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) == inst >> 24 | 0;
   break;
  case 33:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) != inst >> 24 | 0;
   break;
  case 34:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) < inst >> 24 | 0;
   break;
  case 35:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] >>> 0 < lz >>> 0 | 0;
   break;
  case 36:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) <= inst >> 24 | 0;
   break;
  case 37:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] >>> 0 <= lz >>> 0 | 0;
   break;
  case 38:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) & inst >> 24;
   break;
  case 39:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] | 0 | inst >> 24;
   break;
  case 40:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) ^ inst >> 24;
   break;
  case 41:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) << lz;
   break;
  case 42:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) >> lz;
   break;
  case 43:
   HEAP32[sp + (lx << 3) >> 2] = (HEAP32[sp + (ly << 3) >> 2] | 0) >>> lz;
   break;
  case 45:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) == (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = pc + 4 | 0;
   } else {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 46:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) != (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = pc + 4 | 0;
   } else {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 47:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) < (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = pc + 4 | 0;
   } else {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 48:
   if (HEAP32[sp + (ly << 3) >> 2] >>> 0 < HEAP32[sp + (lz << 3) >> 2] >>> 0) {
    pc = pc + 4 | 0;
   } else {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 49:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) <= (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = pc + 4 | 0;
   } else {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 50:
   if (HEAP32[sp + (ly << 3) >> 2] >>> 0 <= HEAP32[sp + (lz << 3) >> 2] >>> 0) {
    pc = pc + 4 | 0;
   } else {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 52:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) == (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   } else {
    pc = pc + 4 | 0;
   }
   break;
  case 53:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) != (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   } else {
    pc = pc + 4 | 0;
   }
   break;
  case 54:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) < (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   } else {
    pc = pc + 4 | 0;
   }
   break;
  case 55:
   if (HEAP32[sp + (ly << 3) >> 2] >>> 0 < HEAP32[sp + (lz << 3) >> 2] >>> 0) {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   } else {
    pc = pc + 4 | 0;
   }
   break;
  case 56:
   if ((HEAP32[sp + (ly << 3) >> 2] | 0) <= (HEAP32[sp + (lz << 3) >> 2] | 0)) {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   } else {
    pc = pc + 4 | 0;
   }
   break;
  case 57:
   if (HEAP32[sp + (ly << 3) >> 2] >>> 0 <= HEAP32[sp + (lz << 3) >> 2] >>> 0) {
    pc = HEAP32[pc + 4 >> 2] | 0;
    pc = pc - 4 | 0;
    continue;
   } else {
    pc = pc + 4 | 0;
   }
   break;
  case 58:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[sp + (ly << 3) >> 3];
   break;
  case 59:
   HEAPF64[sp + (lx << 3) >> 3] = +(inst >> 16);
   break;
  case 60:
   pc = pc + 4 | 0;
   HEAPF64[sp + (lx << 3) >> 3] = +(HEAP32[pc >> 2] | 0);
   break;
  case 61:
   pc = pc + 4 | 0;
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF32[pc >> 2];
   break;
  case 62:
   HEAP32[tempDoublePtr >> 2] = HEAP32[pc + 4 >> 2];
   HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[pc + 8 >> 2];
   pc = pc + 8 | 0;
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[tempDoublePtr >> 3];
   break;
  case 63:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[sp + (ly << 3) >> 3] + +HEAPF64[sp + (lz << 3) >> 3];
   break;
  case 64:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[sp + (ly << 3) >> 3] - +HEAPF64[sp + (lz << 3) >> 3];
   break;
  case 65:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[sp + (ly << 3) >> 3] * +HEAPF64[sp + (lz << 3) >> 3];
   break;
  case 66:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[sp + (ly << 3) >> 3] / +HEAPF64[sp + (lz << 3) >> 3];
   break;
  case 68:
   HEAPF64[sp + (lx << 3) >> 3] = -+HEAPF64[sp + (ly << 3) >> 3];
   break;
  case 69:
   HEAP32[sp + (lx << 3) >> 2] = +HEAPF64[sp + (ly << 3) >> 3] == +HEAPF64[sp + (lz << 3) >> 3] | 0;
   break;
  case 70:
   HEAP32[sp + (lx << 3) >> 2] = +HEAPF64[sp + (ly << 3) >> 3] != +HEAPF64[sp + (lz << 3) >> 3] | 0;
   break;
  case 74:
   HEAP32[sp + (lx << 3) >> 2] = +HEAPF64[sp + (ly << 3) >> 3] >= +HEAPF64[sp + (lz << 3) >> 3] | 0;
   break;
  case 75:
   HEAP32[sp + (lx << 3) >> 2] = ~~+HEAPF64[sp + (ly << 3) >> 3];
   break;
  case 76:
   HEAPF64[sp + (lx << 3) >> 3] = +(HEAP32[sp + (ly << 3) >> 2] | 0);
   break;
  case 77:
   HEAPF64[sp + (lx << 3) >> 3] = +(HEAP32[sp + (ly << 3) >> 2] >>> 0);
   break;
  case 78:
   HEAP32[sp + (lx << 3) >> 2] = HEAP8[HEAP32[sp + (ly << 3) >> 2] >> 0];
   break;
  case 79:
   HEAP32[sp + (lx << 3) >> 2] = HEAPU8[HEAP32[sp + (ly << 3) >> 2] >> 0];
   break;
  case 80:
   HEAP32[sp + (lx << 3) >> 2] = HEAP16[HEAP32[sp + (ly << 3) >> 2] >> 1];
   break;
  case 81:
   HEAP32[sp + (lx << 3) >> 2] = HEAPU16[HEAP32[sp + (ly << 3) >> 2] >> 1];
   break;
  case 82:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[HEAP32[sp + (ly << 3) >> 2] >> 2];
   break;
  case 83:
   HEAP8[HEAP32[sp + (lx << 3) >> 2] >> 0] = HEAP32[sp + (ly << 3) >> 2] | 0;
   break;
  case 84:
   HEAP16[HEAP32[sp + (lx << 3) >> 2] >> 1] = HEAP32[sp + (ly << 3) >> 2] | 0;
   break;
  case 85:
   HEAP32[HEAP32[sp + (lx << 3) >> 2] >> 2] = HEAP32[sp + (ly << 3) >> 2] | 0;
   break;
  case 86:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[HEAP32[sp + (ly << 3) >> 2] >> 3];
   break;
  case 87:
   HEAPF64[HEAP32[sp + (lx << 3) >> 2] >> 3] = +HEAPF64[sp + (ly << 3) >> 3];
   break;
  case 88:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF32[HEAP32[sp + (ly << 3) >> 2] >> 2];
   break;
  case 89:
   HEAPF32[HEAP32[sp + (lx << 3) >> 2] >> 2] = +HEAPF64[sp + (ly << 3) >> 3];
   break;
  case 119:
   pc = pc + (inst >> 16 << 2) | 0;
   pc = pc - 4 | 0;
   continue;
   break;
  case 120:
   if (HEAP32[sp + (lx << 3) >> 2] | 0) {
    pc = pc + (inst >> 16 << 2) | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 121:
   if (!(HEAP32[sp + (lx << 3) >> 2] | 0)) {
    pc = pc + (inst >> 16 << 2) | 0;
    pc = pc - 4 | 0;
    continue;
   }
   break;
  case 125:
   pc = pc + 4 | 0;
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (ly << 3) >> 2] | 0 ? HEAP32[sp + (lz << 3) >> 2] | 0 : HEAP32[sp + ((HEAPU8[pc >> 0] | 0) << 3) >> 2] | 0;
   break;
  case 126:
   pc = pc + 4 | 0;
   HEAPF64[sp + (lx << 3) >> 3] = HEAP32[sp + (ly << 3) >> 2] | 0 ? +HEAPF64[sp + (lz << 3) >> 3] : +HEAPF64[sp + ((HEAPU8[pc >> 0] | 0) << 3) >> 3];
   break;
  case 127:
   HEAP32[sp + (lx << 3) >> 2] = tempDoublePtr;
   break;
  case 128:
   HEAP32[sp + (lx << 3) >> 2] = tempRet0;
   break;
  case 129:
   tempRet0 = HEAP32[sp + (lx << 3) >> 2] | 0;
   break;
  case 130:
   switch (ly | 0) {
   case 0:
    {
     HEAP32[sp + (lx << 3) >> 2] = STACK_MAX;
     continue;
    }
   case 1:
    {
     HEAP32[sp + (lx << 3) >> 2] = _environ;
     continue;
    }
   case 2:
    {
     HEAP32[sp + (lx << 3) >> 2] = DYNAMICTOP;
     continue;
    }
   case 3:
    {
     HEAP32[sp + (lx << 3) >> 2] = cttz_i8;
     continue;
    }
   default:
    assert(0);
   }
   break;
  case 132:
   switch (inst >> 8 & 255) {
   case 0:
    {
     STACK_MAX = HEAP32[sp + (lz << 3) >> 2] | 0;
     continue;
    }
   case 1:
    {
     _environ = HEAP32[sp + (lz << 3) >> 2] | 0;
     continue;
    }
   case 2:
    {
     DYNAMICTOP = HEAP32[sp + (lz << 3) >> 2] | 0;
     continue;
    }
   case 3:
    {
     cttz_i8 = HEAP32[sp + (lz << 3) >> 2] | 0;
     continue;
    }
   default:
    assert(0);
   }
   break;
  case 134:
   lz = HEAPU8[(HEAP32[pc + 4 >> 2] | 0) + 1 | 0] | 0;
   ly = 0;
   assert((EMTSTACKTOP + 8 | 0) <= (EMT_STACK_MAX | 0) | 0);
   if ((asyncState | 0) != 2) {
    while ((ly | 0) < (lz | 0)) {
     HEAP32[EMTSTACKTOP + (ly << 3) + 8 >> 2] = HEAP32[sp + (HEAPU8[pc + 8 + ly >> 0] << 3) >> 2] | 0;
     HEAP32[EMTSTACKTOP + (ly << 3) + 12 >> 2] = HEAP32[sp + (HEAPU8[pc + 8 + ly >> 0] << 3) + 4 >> 2] | 0;
     ly = ly + 1 | 0;
    }
   }
   HEAP32[sp - 4 >> 2] = pc;
   emterpret(HEAP32[pc + 4 >> 2] | 0);
   if ((asyncState | 0) == 1) {
    EMTSTACKTOP = sp - 8 | 0;
    return;
   }
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[EMTSTACKTOP >> 2] | 0;
   HEAP32[sp + (lx << 3) + 4 >> 2] = HEAP32[EMTSTACKTOP + 4 >> 2] | 0;
   pc = pc + (4 + lz + 3 >> 2 << 2) | 0;
   break;
  case 135:
   switch (inst >>> 16 | 0) {
   case 0:
    {
     HEAP32[sp - 4 >> 2] = pc;
     abort();
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     continue;
    }
   case 1:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _bitshift64Shl(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 2:
    {
     HEAP32[sp - 4 >> 2] = pc;
     ld = +Math_abs(+HEAPF64[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 3]);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAPF64[sp + (lx << 3) >> 3] = ld;
     pc = pc + 4 | 0;
     continue;
    }
   case 3:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _bitshift64Lshr(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 4:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _memset(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 5:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _malloc(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 6:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _free(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 7:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _exit(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 8:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _abort();
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     continue;
    }
   case 9:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _strncpy(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 10:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = Math_abs(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 11:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_Init(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 12:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _atexit(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 13:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_GetError() | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     continue;
    }
   case 14:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _getenv(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 15:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_RWFromFile(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 16:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_LoadBMP_RW(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 17:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_RWFromMem(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 18:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _SDL_WM_SetIcon(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 19:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_SetVideoMode(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 7 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 20:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_MapRGB(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 7 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 21:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_EnableUNICODE(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 22:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _strlen(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 23:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _strcat(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 24:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _strcpy(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 25:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _signal(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 26:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _memcpy(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 27:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = Math_clz32(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 28:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ftCall_iii(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 29:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_GetModState() | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     continue;
    }
   case 30:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_PollEvent(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 31:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_PushEvent(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 32:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_LowerBlit(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 7 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 33:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_UpperBlit(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 7 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 34:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _time(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 35:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall146(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 36:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _pthread_cleanup_push(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 37:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _pthread_cleanup_pop(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 38:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _localtime(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 39:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall221(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 40:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall54(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 41:
    {
     HEAP32[sp - 4 >> 2] = pc;
     ___lock(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 42:
    {
     HEAP32[sp - 4 >> 2] = pc;
     ___unlock(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 43:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ftCall_ii(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 44:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_SetPalette(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 7 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 8 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 8 | 0;
     continue;
    }
   case 45:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_SetColorKey(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 46:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_FillRect(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 47:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall145(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 48:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_ShowCursor(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 49:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ftCall_iiii(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 7 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 50:
    {
     HEAP32[sp - 4 >> 2] = pc;
     ftCall_vi(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 51:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _SDL_FreeSurface(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 52:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_DisplayFormatAlpha(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 53:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall5(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 54:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall6(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 55:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall140(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 56:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_GetTicks() | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     continue;
    }
   case 57:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_Flip(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 58:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _SDL_UpdateRects(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 6 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 59:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall15(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 60:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall196(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 61:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall195(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 62:
    {
     HEAP32[sp - 4 >> 2] = pc;
     segfault();
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     continue;
    }
   case 63:
    {
     HEAP32[sp - 4 >> 2] = pc;
     alignfault();
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     continue;
    }
   case 64:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall10(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 65:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _pthread_self() | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     continue;
    }
   case 66:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _SDL_WM_SetCaption(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 67:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _emscripten_sleep(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 68:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = ___syscall20(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 69:
    {
     HEAP32[sp - 4 >> 2] = pc;
     ftfault();
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     continue;
    }
   case 70:
    {
     HEAP32[sp - 4 >> 2] = pc;
     lz = _SDL_EnableKeyRepeat(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0, HEAP32[sp + (HEAPU8[pc + 5 >> 0] << 3) >> 2] | 0) | 0;
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     } else HEAP32[sp + (lx << 3) >> 2] = lz;
     pc = pc + 4 | 0;
     continue;
    }
   case 71:
    {
     HEAP32[sp - 4 >> 2] = pc;
     nullFunc_iiii(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 72:
    {
     HEAP32[sp - 4 >> 2] = pc;
     nullFunc_iii(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 73:
    {
     HEAP32[sp - 4 >> 2] = pc;
     nullFunc_ii(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 74:
    {
     HEAP32[sp - 4 >> 2] = pc;
     _SDL_Quit();
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     continue;
    }
   case 75:
    {
     HEAP32[sp - 4 >> 2] = pc;
     nullFunc_vi(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   case 76:
    {
     HEAP32[sp - 4 >> 2] = pc;
     nullFunc_v(HEAP32[sp + (HEAPU8[pc + 4 >> 0] << 3) >> 2] | 0);
     if ((asyncState | 0) == 1) {
      EMTSTACKTOP = sp - 8 | 0;
      return;
     };
     pc = pc + 4 | 0;
     continue;
    }
   default:
    assert(0);
   }
   break;
  case 136:
   HEAP32[sp + (lx << 3) >> 2] = STACKTOP;
   break;
  case 137:
   STACKTOP = HEAP32[sp + (lx << 3) >> 2] | 0;
   break;
  case 138:
   lz = HEAP32[sp + (lz << 3) >> 2] | 0;
   lx = (HEAP32[sp + (lx << 3) >> 2] | 0) - (HEAP32[sp + (ly << 3) >> 2] | 0) >>> 0;
   if (lx >>> 0 >= lz >>> 0) {
    pc = pc + (lz << 2) | 0;
    continue;
   }
   pc = HEAP32[pc + 4 + (lx << 2) >> 2] | 0;
   pc = pc - 4 | 0;
   continue;
   break;
  case 139:
   EMTSTACKTOP = sp - 8 | 0;
   HEAP32[EMTSTACKTOP >> 2] = HEAP32[sp + (lx << 3) >> 2] | 0;
   HEAP32[EMTSTACKTOP + 4 >> 2] = HEAP32[sp + (lx << 3) + 4 >> 2] | 0;
   return;
   break;
  case 141:
   HEAP32[sp + (lx << 3) >> 2] = HEAP32[sp + (inst >>> 16 << 3) >> 2] | 0;
   break;
  case 142:
   HEAPF64[sp + (lx << 3) >> 3] = +HEAPF64[sp + (inst >>> 16 << 3) >> 3];
   break;
  case 143:
   HEAP32[sp + (inst >>> 16 << 3) >> 2] = HEAP32[sp + (lx << 3) >> 2] | 0;
   break;
  case 144:
   HEAPF64[sp + (inst >>> 16 << 3) >> 3] = +HEAPF64[sp + (lx << 3) >> 3];
   break;
  default:
   assert(0);
  }
 }
 assert(0);
}

function _free($mem) {
 $mem = $mem | 0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 label = 0;
 sp = STACKTOP;
 $0 = ($mem | 0) == (0 | 0);
 asyncState ? abort(-12) | 0 : 0;
 if ($0) {
  return;
 }
 $1 = $mem + -8 | 0;
 $2 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $3 = $1 >>> 0 < $2 >>> 0;
 if ($3) {
  _abort(), asyncState ? abort(-12) | 0 : 0;
 }
 $4 = $mem + -4 | 0;
 $5 = (tempInt = SAFE_HEAP_LOAD($4 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $6 = $5 & 3;
 $7 = ($6 | 0) == 1;
 if ($7) {
  _abort(), asyncState ? abort(-12) | 0 : 0;
 }
 $8 = $5 & -8;
 $$sum = $8 + -8 | 0;
 $9 = $mem + $$sum | 0;
 $10 = $5 & 1;
 $11 = ($10 | 0) == 0;
 do {
  if ($11) {
   $12 = (tempInt = SAFE_HEAP_LOAD($1 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $13 = ($6 | 0) == 0;
   if ($13) {
    return;
   }
   $$sum2 = -8 - $12 | 0;
   $14 = $mem + $$sum2 | 0;
   $15 = $12 + $8 | 0;
   $16 = $14 >>> 0 < $2 >>> 0;
   if ($16) {
    _abort(), asyncState ? abort(-12) | 0 : 0;
   }
   $17 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $18 = ($14 | 0) == ($17 | 0);
   if ($18) {
    $$sum3 = $8 + -4 | 0;
    $103 = $mem + $$sum3 | 0;
    $104 = (tempInt = SAFE_HEAP_LOAD($103 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $105 = $104 & 3;
    $106 = ($105 | 0) == 3;
    if (!$106) {
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
    SAFE_HEAP_STORE(50484 | 0, $15 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $107 = $104 & -2;
    SAFE_HEAP_STORE($103 | 0, $107 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $108 = $15 | 1;
    $$sum20 = $$sum2 + 4 | 0;
    $109 = $mem + $$sum20 | 0;
    SAFE_HEAP_STORE($109 | 0, $108 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($9 | 0, $15 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    return;
   }
   $19 = $12 >>> 3;
   $20 = $12 >>> 0 < 256;
   if ($20) {
    $$sum30 = $$sum2 + 8 | 0;
    $21 = $mem + $$sum30 | 0;
    $22 = (tempInt = SAFE_HEAP_LOAD($21 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $$sum31 = $$sum2 + 12 | 0;
    $23 = $mem + $$sum31 | 0;
    $24 = (tempInt = SAFE_HEAP_LOAD($23 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $25 = $19 << 1;
    $26 = 50516 + ($25 << 2) | 0;
    $27 = ($22 | 0) == ($26 | 0);
    if (!$27) {
     $28 = $22 >>> 0 < $2 >>> 0;
     if ($28) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $29 = $22 + 12 | 0;
     $30 = (tempInt = SAFE_HEAP_LOAD($29 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $31 = ($30 | 0) == ($14 | 0);
     if (!$31) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
    }
    $32 = ($24 | 0) == ($22 | 0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $36 = $35 & $34;
     SAFE_HEAP_STORE(50476 | 0, $36 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
    $37 = ($24 | 0) == ($26 | 0);
    if ($37) {
     $$pre60 = $24 + 8 | 0;
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = $24 >>> 0 < $2 >>> 0;
     if ($38) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $39 = $24 + 8 | 0;
     $40 = (tempInt = SAFE_HEAP_LOAD($39 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $41 = ($40 | 0) == ($14 | 0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
    }
    $42 = $22 + 12 | 0;
    SAFE_HEAP_STORE($42 | 0, $24 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($$pre$phi61Z2D | 0, $22 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   $$sum22 = $$sum2 + 24 | 0;
   $43 = $mem + $$sum22 | 0;
   $44 = (tempInt = SAFE_HEAP_LOAD($43 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $$sum23 = $$sum2 + 12 | 0;
   $45 = $mem + $$sum23 | 0;
   $46 = (tempInt = SAFE_HEAP_LOAD($45 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $47 = ($46 | 0) == ($14 | 0);
   do {
    if ($47) {
     $$sum25 = $$sum2 + 20 | 0;
     $57 = $mem + $$sum25 | 0;
     $58 = (tempInt = SAFE_HEAP_LOAD($57 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $59 = ($58 | 0) == (0 | 0);
     if ($59) {
      $$sum24 = $$sum2 + 16 | 0;
      $60 = $mem + $$sum24 | 0;
      $61 = (tempInt = SAFE_HEAP_LOAD($60 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $62 = ($61 | 0) == (0 | 0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;
       $RP$0 = $60;
      }
     } else {
      $R$0 = $58;
      $RP$0 = $57;
     }
     while (1) {
      $63 = $R$0 + 20 | 0;
      $64 = (tempInt = SAFE_HEAP_LOAD($63 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $65 = ($64 | 0) == (0 | 0);
      if (!$65) {
       $R$0 = $64;
       $RP$0 = $63;
       continue;
      }
      $66 = $R$0 + 16 | 0;
      $67 = (tempInt = SAFE_HEAP_LOAD($66 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $68 = ($67 | 0) == (0 | 0);
      if ($68) {
       $R$0$lcssa = $R$0;
       $RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;
       $RP$0 = $66;
      }
     }
     $69 = $RP$0$lcssa >>> 0 < $2 >>> 0;
     if ($69) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     } else {
      SAFE_HEAP_STORE($RP$0$lcssa | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = $$sum2 + 8 | 0;
     $48 = $mem + $$sum29 | 0;
     $49 = (tempInt = SAFE_HEAP_LOAD($48 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $50 = $49 >>> 0 < $2 >>> 0;
     if ($50) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $51 = $49 + 12 | 0;
     $52 = (tempInt = SAFE_HEAP_LOAD($51 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $53 = ($52 | 0) == ($14 | 0);
     if (!$53) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $54 = $46 + 8 | 0;
     $55 = (tempInt = SAFE_HEAP_LOAD($54 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $56 = ($55 | 0) == ($14 | 0);
     if ($56) {
      SAFE_HEAP_STORE($51 | 0, $46 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      SAFE_HEAP_STORE($54 | 0, $49 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $R$1 = $46;
      break;
     } else {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
    }
   } while (0);
   $70 = ($44 | 0) == (0 | 0);
   if ($70) {
    $p$0 = $14;
    $psize$0 = $15;
   } else {
    $$sum26 = $$sum2 + 28 | 0;
    $71 = $mem + $$sum26 | 0;
    $72 = (tempInt = SAFE_HEAP_LOAD($71 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $73 = 50780 + ($72 << 2) | 0;
    $74 = (tempInt = SAFE_HEAP_LOAD($73 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $75 = ($14 | 0) == ($74 | 0);
    if ($75) {
     SAFE_HEAP_STORE($73 | 0, $R$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $cond = ($R$1 | 0) == (0 | 0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $79 = $78 & $77;
      SAFE_HEAP_STORE(50480 | 0, $79 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $p$0 = $14;
      $psize$0 = $15;
      break;
     }
    } else {
     $80 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $81 = $44 >>> 0 < $80 >>> 0;
     if ($81) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $82 = $44 + 16 | 0;
     $83 = (tempInt = SAFE_HEAP_LOAD($82 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $84 = ($83 | 0) == ($14 | 0);
     if ($84) {
      SAFE_HEAP_STORE($82 | 0, $R$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     } else {
      $85 = $44 + 20 | 0;
      SAFE_HEAP_STORE($85 | 0, $R$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     }
     $86 = ($R$1 | 0) == (0 | 0);
     if ($86) {
      $p$0 = $14;
      $psize$0 = $15;
      break;
     }
    }
    $87 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $88 = $R$1 >>> 0 < $87 >>> 0;
    if ($88) {
     _abort(), asyncState ? abort(-12) | 0 : 0;
    }
    $89 = $R$1 + 24 | 0;
    SAFE_HEAP_STORE($89 | 0, $44 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $$sum27 = $$sum2 + 16 | 0;
    $90 = $mem + $$sum27 | 0;
    $91 = (tempInt = SAFE_HEAP_LOAD($90 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $92 = ($91 | 0) == (0 | 0);
    do {
     if (!$92) {
      $93 = $91 >>> 0 < $87 >>> 0;
      if ($93) {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      } else {
       $94 = $R$1 + 16 | 0;
       SAFE_HEAP_STORE($94 | 0, $91 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $95 = $91 + 24 | 0;
       SAFE_HEAP_STORE($95 | 0, $R$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       break;
      }
     }
    } while (0);
    $$sum28 = $$sum2 + 20 | 0;
    $96 = $mem + $$sum28 | 0;
    $97 = (tempInt = SAFE_HEAP_LOAD($96 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $98 = ($97 | 0) == (0 | 0);
    if ($98) {
     $p$0 = $14;
     $psize$0 = $15;
    } else {
     $99 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $100 = $97 >>> 0 < $99 >>> 0;
     if ($100) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     } else {
      $101 = $R$1 + 20 | 0;
      SAFE_HEAP_STORE($101 | 0, $97 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $102 = $97 + 24 | 0;
      SAFE_HEAP_STORE($102 | 0, $R$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $p$0 = $14;
      $psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;
   $psize$0 = $8;
  }
 } while (0);
 $110 = $p$0 >>> 0 < $9 >>> 0;
 if (!$110) {
  _abort(), asyncState ? abort(-12) | 0 : 0;
 }
 $$sum19 = $8 + -4 | 0;
 $111 = $mem + $$sum19 | 0;
 $112 = (tempInt = SAFE_HEAP_LOAD($111 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $113 = $112 & 1;
 $114 = ($113 | 0) == 0;
 if ($114) {
  _abort(), asyncState ? abort(-12) | 0 : 0;
 }
 $115 = $112 & 2;
 $116 = ($115 | 0) == 0;
 if ($116) {
  $117 = (tempInt = SAFE_HEAP_LOAD(50500 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $118 = ($9 | 0) == ($117 | 0);
  if ($118) {
   $119 = (tempInt = SAFE_HEAP_LOAD(50488 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $120 = $119 + $psize$0 | 0;
   SAFE_HEAP_STORE(50488 | 0, $120 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   SAFE_HEAP_STORE(50500 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $121 = $120 | 1;
   $122 = $p$0 + 4 | 0;
   SAFE_HEAP_STORE($122 | 0, $121 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $123 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $124 = ($p$0 | 0) == ($123 | 0);
   if (!$124) {
    return;
   }
   SAFE_HEAP_STORE(50496 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   SAFE_HEAP_STORE(50484 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   return;
  }
  $125 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $126 = ($9 | 0) == ($125 | 0);
  if ($126) {
   $127 = (tempInt = SAFE_HEAP_LOAD(50484 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $128 = $127 + $psize$0 | 0;
   SAFE_HEAP_STORE(50484 | 0, $128 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   SAFE_HEAP_STORE(50496 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $129 = $128 | 1;
   $130 = $p$0 + 4 | 0;
   SAFE_HEAP_STORE($130 | 0, $129 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $131 = $p$0 + $128 | 0;
   SAFE_HEAP_STORE($131 | 0, $128 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   return;
  }
  $132 = $112 & -8;
  $133 = $132 + $psize$0 | 0;
  $134 = $112 >>> 3;
  $135 = $112 >>> 0 < 256;
  do {
   if ($135) {
    $136 = $mem + $8 | 0;
    $137 = (tempInt = SAFE_HEAP_LOAD($136 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $$sum1718 = $8 | 4;
    $138 = $mem + $$sum1718 | 0;
    $139 = (tempInt = SAFE_HEAP_LOAD($138 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $140 = $134 << 1;
    $141 = 50516 + ($140 << 2) | 0;
    $142 = ($137 | 0) == ($141 | 0);
    if (!$142) {
     $143 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $144 = $137 >>> 0 < $143 >>> 0;
     if ($144) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $145 = $137 + 12 | 0;
     $146 = (tempInt = SAFE_HEAP_LOAD($145 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $147 = ($146 | 0) == ($9 | 0);
     if (!$147) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
    }
    $148 = ($139 | 0) == ($137 | 0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $152 = $151 & $150;
     SAFE_HEAP_STORE(50476 | 0, $152 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     break;
    }
    $153 = ($139 | 0) == ($141 | 0);
    if ($153) {
     $$pre58 = $139 + 8 | 0;
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $155 = $139 >>> 0 < $154 >>> 0;
     if ($155) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $156 = $139 + 8 | 0;
     $157 = (tempInt = SAFE_HEAP_LOAD($156 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $158 = ($157 | 0) == ($9 | 0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
    }
    $159 = $137 + 12 | 0;
    SAFE_HEAP_STORE($159 | 0, $139 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($$pre$phi59Z2D | 0, $137 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   } else {
    $$sum5 = $8 + 16 | 0;
    $160 = $mem + $$sum5 | 0;
    $161 = (tempInt = SAFE_HEAP_LOAD($160 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $$sum67 = $8 | 4;
    $162 = $mem + $$sum67 | 0;
    $163 = (tempInt = SAFE_HEAP_LOAD($162 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
    $164 = ($163 | 0) == ($9 | 0);
    do {
     if ($164) {
      $$sum9 = $8 + 12 | 0;
      $175 = $mem + $$sum9 | 0;
      $176 = (tempInt = SAFE_HEAP_LOAD($175 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $177 = ($176 | 0) == (0 | 0);
      if ($177) {
       $$sum8 = $8 + 8 | 0;
       $178 = $mem + $$sum8 | 0;
       $179 = (tempInt = SAFE_HEAP_LOAD($178 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $180 = ($179 | 0) == (0 | 0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;
        $RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;
       $RP9$0 = $175;
      }
      while (1) {
       $181 = $R7$0 + 20 | 0;
       $182 = (tempInt = SAFE_HEAP_LOAD($181 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $183 = ($182 | 0) == (0 | 0);
       if (!$183) {
        $R7$0 = $182;
        $RP9$0 = $181;
        continue;
       }
       $184 = $R7$0 + 16 | 0;
       $185 = (tempInt = SAFE_HEAP_LOAD($184 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $186 = ($185 | 0) == (0 | 0);
       if ($186) {
        $R7$0$lcssa = $R7$0;
        $RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;
        $RP9$0 = $184;
       }
      }
      $187 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $188 = $RP9$0$lcssa >>> 0 < $187 >>> 0;
      if ($188) {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      } else {
       SAFE_HEAP_STORE($RP9$0$lcssa | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = $mem + $8 | 0;
      $166 = (tempInt = SAFE_HEAP_LOAD($165 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $167 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $168 = $166 >>> 0 < $167 >>> 0;
      if ($168) {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      }
      $169 = $166 + 12 | 0;
      $170 = (tempInt = SAFE_HEAP_LOAD($169 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $171 = ($170 | 0) == ($9 | 0);
      if (!$171) {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      }
      $172 = $163 + 8 | 0;
      $173 = (tempInt = SAFE_HEAP_LOAD($172 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $174 = ($173 | 0) == ($9 | 0);
      if ($174) {
       SAFE_HEAP_STORE($169 | 0, $163 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       SAFE_HEAP_STORE($172 | 0, $166 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $R7$1 = $163;
       break;
      } else {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      }
     }
    } while (0);
    $189 = ($161 | 0) == (0 | 0);
    if (!$189) {
     $$sum12 = $8 + 20 | 0;
     $190 = $mem + $$sum12 | 0;
     $191 = (tempInt = SAFE_HEAP_LOAD($190 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $192 = 50780 + ($191 << 2) | 0;
     $193 = (tempInt = SAFE_HEAP_LOAD($192 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $194 = ($9 | 0) == ($193 | 0);
     if ($194) {
      SAFE_HEAP_STORE($192 | 0, $R7$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $cond47 = ($R7$1 | 0) == (0 | 0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
       $198 = $197 & $196;
       SAFE_HEAP_STORE(50480 | 0, $198 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       break;
      }
     } else {
      $199 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $200 = $161 >>> 0 < $199 >>> 0;
      if ($200) {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      }
      $201 = $161 + 16 | 0;
      $202 = (tempInt = SAFE_HEAP_LOAD($201 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $203 = ($202 | 0) == ($9 | 0);
      if ($203) {
       SAFE_HEAP_STORE($201 | 0, $R7$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      } else {
       $204 = $161 + 20 | 0;
       SAFE_HEAP_STORE($204 | 0, $R7$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      }
      $205 = ($R7$1 | 0) == (0 | 0);
      if ($205) {
       break;
      }
     }
     $206 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $207 = $R7$1 >>> 0 < $206 >>> 0;
     if ($207) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     }
     $208 = $R7$1 + 24 | 0;
     SAFE_HEAP_STORE($208 | 0, $161 | 0, 4), asyncState ? abort(-12) | 0 : 0;
     $$sum13 = $8 + 8 | 0;
     $209 = $mem + $$sum13 | 0;
     $210 = (tempInt = SAFE_HEAP_LOAD($209 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $211 = ($210 | 0) == (0 | 0);
     do {
      if (!$211) {
       $212 = $210 >>> 0 < $206 >>> 0;
       if ($212) {
        _abort(), asyncState ? abort(-12) | 0 : 0;
       } else {
        $213 = $R7$1 + 16 | 0;
        SAFE_HEAP_STORE($213 | 0, $210 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        $214 = $210 + 24 | 0;
        SAFE_HEAP_STORE($214 | 0, $R7$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
        break;
       }
      }
     } while (0);
     $$sum14 = $8 + 12 | 0;
     $215 = $mem + $$sum14 | 0;
     $216 = (tempInt = SAFE_HEAP_LOAD($215 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $217 = ($216 | 0) == (0 | 0);
     if (!$217) {
      $218 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $219 = $216 >>> 0 < $218 >>> 0;
      if ($219) {
       _abort(), asyncState ? abort(-12) | 0 : 0;
      } else {
       $220 = $R7$1 + 20 | 0;
       SAFE_HEAP_STORE($220 | 0, $216 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       $221 = $216 + 24 | 0;
       SAFE_HEAP_STORE($221 | 0, $R7$1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
       break;
      }
     }
    }
   }
  } while (0);
  $222 = $133 | 1;
  $223 = $p$0 + 4 | 0;
  SAFE_HEAP_STORE($223 | 0, $222 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $224 = $p$0 + $133 | 0;
  SAFE_HEAP_STORE($224 | 0, $133 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $225 = (tempInt = SAFE_HEAP_LOAD(50496 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $226 = ($p$0 | 0) == ($225 | 0);
  if ($226) {
   SAFE_HEAP_STORE(50484 | 0, $133 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  SAFE_HEAP_STORE($111 | 0, $227 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $228 = $psize$0 | 1;
  $229 = $p$0 + 4 | 0;
  SAFE_HEAP_STORE($229 | 0, $228 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $230 = $p$0 + $psize$0 | 0;
  SAFE_HEAP_STORE($230 | 0, $psize$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = $psize$1 >>> 0 < 256;
 if ($232) {
  $233 = $231 << 1;
  $234 = 50516 + ($233 << 2) | 0;
  $235 = (tempInt = SAFE_HEAP_LOAD(50476 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237 | 0) == 0;
  if ($238) {
   $239 = $235 | $236;
   SAFE_HEAP_STORE(50476 | 0, $239 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $$pre = $233 + 2 | 0;
   $$pre57 = 50516 + ($$pre << 2) | 0;
   $$pre$phiZ2D = $$pre57;
   $F16$0 = $234;
  } else {
   $$sum11 = $233 + 2 | 0;
   $240 = 50516 + ($$sum11 << 2) | 0;
   $241 = (tempInt = SAFE_HEAP_LOAD($240 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $242 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $243 = $241 >>> 0 < $242 >>> 0;
   if ($243) {
    _abort(), asyncState ? abort(-12) | 0 : 0;
   } else {
    $$pre$phiZ2D = $240;
    $F16$0 = $241;
   }
  }
  SAFE_HEAP_STORE($$pre$phiZ2D | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $244 = $F16$0 + 12 | 0;
  SAFE_HEAP_STORE($244 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $245 = $p$0 + 8 | 0;
  SAFE_HEAP_STORE($245 | 0, $F16$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  $246 = $p$0 + 12 | 0;
  SAFE_HEAP_STORE($246 | 0, $234 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247 | 0) == 0;
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = $psize$1 >>> 0 > 16777215;
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = $247 + 1048320 | 0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = $253 + 520192 | 0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = $258 + 245760 | 0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = 14 - $262 | 0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = $263 + $265 | 0;
   $267 = $266 << 1;
   $268 = $266 + 7 | 0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = 50780 + ($I18$0 << 2) | 0;
 $273 = $p$0 + 28 | 0;
 SAFE_HEAP_STORE($273 | 0, $I18$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
 $274 = $p$0 + 16 | 0;
 $275 = $p$0 + 20 | 0;
 SAFE_HEAP_STORE($275 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE($274 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
 $276 = (tempInt = SAFE_HEAP_LOAD(50480 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278 | 0) == 0;
 L199 : do {
  if ($279) {
   $280 = $276 | $277;
   SAFE_HEAP_STORE(50480 | 0, $280 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   SAFE_HEAP_STORE($272 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $281 = $p$0 + 24 | 0;
   SAFE_HEAP_STORE($281 | 0, $272 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $282 = $p$0 + 12 | 0;
   SAFE_HEAP_STORE($282 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
   $283 = $p$0 + 8 | 0;
   SAFE_HEAP_STORE($283 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
  } else {
   $284 = (tempInt = SAFE_HEAP_LOAD($272 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $285 = $284 + 4 | 0;
   $286 = (tempInt = SAFE_HEAP_LOAD($285 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $287 = $286 & -8;
   $288 = ($287 | 0) == ($psize$1 | 0);
   L202 : do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0 | 0) == 31;
     $290 = $I18$0 >>> 1;
     $291 = 25 - $290 | 0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;
     $T$051 = $284;
     while (1) {
      $300 = $K19$052 >>> 31;
      $301 = ($T$051 + 16 | 0) + ($300 << 2) | 0;
      $296 = (tempInt = SAFE_HEAP_LOAD($301 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $302 = ($296 | 0) == (0 | 0);
      if ($302) {
       $$lcssa = $301;
       $T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = $296 + 4 | 0;
      $297 = (tempInt = SAFE_HEAP_LOAD($295 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
      $298 = $297 & -8;
      $299 = ($298 | 0) == ($psize$1 | 0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;
       $T$051 = $296;
      }
     }
     $303 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
     $304 = $$lcssa >>> 0 < $303 >>> 0;
     if ($304) {
      _abort(), asyncState ? abort(-12) | 0 : 0;
     } else {
      SAFE_HEAP_STORE($$lcssa | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $305 = $p$0 + 24 | 0;
      SAFE_HEAP_STORE($305 | 0, $T$051$lcssa | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $306 = $p$0 + 12 | 0;
      SAFE_HEAP_STORE($306 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      $307 = $p$0 + 8 | 0;
      SAFE_HEAP_STORE($307 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
      break L199;
     }
    }
   } while (0);
   $308 = $T$0$lcssa + 8 | 0;
   $309 = (tempInt = SAFE_HEAP_LOAD($308 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $310 = (tempInt = SAFE_HEAP_LOAD(50492 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
   $311 = $309 >>> 0 >= $310 >>> 0;
   $not$ = $T$0$lcssa >>> 0 >= $310 >>> 0;
   $312 = $311 & $not$;
   if ($312) {
    $313 = $309 + 12 | 0;
    SAFE_HEAP_STORE($313 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    SAFE_HEAP_STORE($308 | 0, $p$0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $314 = $p$0 + 8 | 0;
    SAFE_HEAP_STORE($314 | 0, $309 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $315 = $p$0 + 12 | 0;
    SAFE_HEAP_STORE($315 | 0, $T$0$lcssa | 0, 4), asyncState ? abort(-12) | 0 : 0;
    $316 = $p$0 + 24 | 0;
    SAFE_HEAP_STORE($316 | 0, 0 | 0, 4), asyncState ? abort(-12) | 0 : 0;
    break;
   } else {
    _abort(), asyncState ? abort(-12) | 0 : 0;
   }
  }
 } while (0);
 $317 = (tempInt = SAFE_HEAP_LOAD(50508 | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
 $318 = $317 + -1 | 0;
 SAFE_HEAP_STORE(50508 | 0, $318 | 0, 4), asyncState ? abort(-12) | 0 : 0;
 $319 = ($318 | 0) == 0;
 if ($319) {
  $sp$0$in$i = 50932;
 } else {
  return;
 }
 while (1) {
  $sp$0$i = (tempInt = SAFE_HEAP_LOAD($sp$0$in$i | 0, 4, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0;
  $320 = ($sp$0$i | 0) == (0 | 0);
  $321 = $sp$0$i + 8 | 0;
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 SAFE_HEAP_STORE(50508 | 0, -1 | 0, 4), asyncState ? abort(-12) | 0 : 0;
 return;
}

function _strlen($s) {
 $s = $s | 0;
 var $$0 = 0, $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0, sp = 0;
 label = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $0 & 3;
 $2 = ($1 | 0) == 0;
 L1 : do {
  if ($2) {
   $$01$lcssa = $s;
   label = 4;
  } else {
   $$014 = $s;
   $21 = $0;
   while (1) {
    $3 = SAFE_HEAP_LOAD($$014 >> 0 | 0, 1, 0) | 0 | 0;
    $4 = $3 << 24 >> 24 == 0;
    if ($4) {
     $$pn = $21;
     break L1;
    }
    $5 = $$014 + 1 | 0;
    $6 = $5;
    $7 = $6 & 3;
    $8 = ($7 | 0) == 0;
    if ($8) {
     $$01$lcssa = $5;
     label = 4;
     break;
    } else {
     $$014 = $5;
     $21 = $6;
    }
   }
  }
 } while (0);
 if ((label | 0) == 4) {
  $w$0 = $$01$lcssa;
  while (1) {
   $9 = SAFE_HEAP_LOAD($w$0 | 0, 4, 0) | 0 | 0;
   $10 = $9 + -16843009 | 0;
   $11 = $9 & -2139062144;
   $12 = $11 ^ -2139062144;
   $13 = $12 & $10;
   $14 = ($13 | 0) == 0;
   $15 = $w$0 + 4 | 0;
   if ($14) {
    $w$0 = $15;
   } else {
    $$lcssa20 = $9;
    $w$0$lcssa = $w$0;
    break;
   }
  }
  $16 = $$lcssa20 & 255;
  $17 = $16 << 24 >> 24 == 0;
  if ($17) {
   $$1$lcssa = $w$0$lcssa;
  } else {
   $$pn15 = $w$0$lcssa;
   while (1) {
    $18 = $$pn15 + 1 | 0;
    $$pre = SAFE_HEAP_LOAD($18 >> 0 | 0, 1, 0) | 0 | 0;
    $19 = $$pre << 24 >> 24 == 0;
    if ($19) {
     $$1$lcssa = $18;
     break;
    } else {
     $$pn15 = $18;
    }
   }
  }
  $20 = $$1$lcssa;
  $$pn = $20;
 }
 $$0 = $$pn - $0 | 0;
 return $$0 | 0;
}

function copyTempDouble(ptr) {
 ptr = ptr | 0;
 asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 1 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 1 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 2 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 2 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 3 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 3 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 4 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 4 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 5 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 5 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 6 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 6 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 7 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 7 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
}

function copyTempFloat(ptr) {
 ptr = ptr | 0;
 asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 1 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 1 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 2 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 2 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
 SAFE_HEAP_STORE(tempDoublePtr + 3 >> 0 | 0, (tempInt = SAFE_HEAP_LOAD(ptr + 3 >> 0 | 0, 1, 0) | 0, asyncState ? abort(-12) | 0 : tempInt) | 0 | 0, 1), asyncState ? abort(-12) | 0 : 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if ((num | 0) == 0) return ret | 0;
   SAFE_HEAP_STORE(dest | 0, SAFE_HEAP_LOAD(src | 0, 1, 0) | 0 | 0, 1);
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   SAFE_HEAP_STORE(dest | 0, SAFE_HEAP_LOAD(src | 0, 4, 0) | 0 | 0, 4);
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  SAFE_HEAP_STORE(dest | 0, SAFE_HEAP_LOAD(src | 0, 1, 0) | 0 | 0, 1);
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    SAFE_HEAP_STORE(ptr | 0, value | 0, 1);
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   SAFE_HEAP_STORE(ptr | 0, value4 | 0, 4);
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  SAFE_HEAP_STORE(ptr | 0, value | 0, 1);
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function runPostSets() {}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = a;
  HEAP32[EMTSTACKTOP + 16 >> 2] = b;
  HEAP32[EMTSTACKTOP + 24 >> 2] = c;
  HEAP32[EMTSTACKTOP + 32 >> 2] = d;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 418544 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function SAFE_HEAP_LOAD(dest, bytes, unsigned) {
 dest = dest | 0;
 bytes = bytes | 0;
 unsigned = unsigned | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = dest;
  HEAP32[EMTSTACKTOP + 16 >> 2] = bytes;
  HEAP32[EMTSTACKTOP + 24 >> 2] = unsigned;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 407320 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = a;
  HEAP32[EMTSTACKTOP + 16 >> 2] = b;
  HEAP32[EMTSTACKTOP + 24 >> 2] = c;
  HEAP32[EMTSTACKTOP + 32 >> 2] = d;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 420180 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _main($argc, $argv, $envp) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 $envp = $envp | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $argc;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $argv;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $envp;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 214568 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function ___stdio_seek($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $off;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $whence;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 376016 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function ___stdout_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $buf;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $len;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 380912 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function ___stdio_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $buf;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $len;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 222272 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function ___stdio_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $buf;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $len;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 262676 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 var ander = 0;
 asyncState ? abort(-12) | 0 : 0;
 if ((bits | 0) < 32) {
  ander = (1 << bits) - 1 | 0;
  tempRet0 = high >> bits;
  return low >>> bits | (high & ander) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}

function _do_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $buf;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $len;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 420028 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_34(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423084 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_33(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423100 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_31(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423116 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_30(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421400 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_29(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421424 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_28(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421472 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_27(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421448 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_26(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423132 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_25(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423148 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_24(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423164 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_23(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423180 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_22(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423196 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_21(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423212 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_20(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423228 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_19(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423244 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_14(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421376 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_12(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423260 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_11(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423276 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_10(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423292 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_9(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423388 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_8(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423404 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_7(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421328 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_6(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423420 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_5(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421280 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_4(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423436 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_3(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421352 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_2(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421304 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iiii_1(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423452 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 var ander = 0;
 asyncState ? abort(-12) | 0 : 0;
 if ((bits | 0) < 32) {
  ander = (1 << bits) - 1 | 0;
  tempRet0 = high << bits | (low & ander << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function ___stpncpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $d;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $s;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $n;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 239296 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _sn_write($f, $s, $l) {
 $f = $f | 0;
 $s = $s | 0;
 $l = $l | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $s;
  HEAP32[EMTSTACKTOP + 24 >> 2] = $l;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 405840 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function SAFE_HEAP_STORE(dest, value, bytes) {
 dest = dest | 0;
 value = value | 0;
 bytes = bytes | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = dest;
  HEAP32[EMTSTACKTOP + 16 >> 2] = value;
  HEAP32[EMTSTACKTOP + 24 >> 2] = bytes;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 413300 | 0);
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 var ander = 0;
 asyncState ? abort(-12) | 0 : 0;
 if ((bits | 0) < 32) {
  ander = (1 << bits) - 1 | 0;
  tempRet0 = high >>> bits;
  return low >>> bits | (high & ander) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function b61(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421868 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b60(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421896 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b59(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421924 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b58(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421952 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b57(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421980 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b56(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422008 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b55(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422036 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b54(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422064 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b53(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422092 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b52(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422120 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b51(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422148 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b50(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422176 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b49(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422204 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b48(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422232 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b47(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422260 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b46(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422288 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b45(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422316 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b44(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422344 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b43(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422372 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b42(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422400 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b41(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422428 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b40(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422456 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b39(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422484 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b38(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422512 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b37(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422540 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b36(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422568 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b35(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422596 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b34(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422624 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b33(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422652 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b32(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  HEAP32[EMTSTACKTOP + 24 >> 2] = p2;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422712 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = stackBase;
  HEAP32[EMTSTACKTOP + 16 >> 2] = stackMax;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 420800 | 0);
}

function _get_str($vopt, $win) {
 $vopt = $vopt | 0;
 $win = $win | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $vopt;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $win;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 211980 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _get_inv_t($vp, $win) {
 $vp = $vp | 0;
 $win = $win | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $vp;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $win;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 295844 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _get_bool($vp, $win) {
 $vp = $vp | 0;
 $win = $win | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $vp;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $win;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 307052 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _get_sf($vp, $win) {
 $vp = $vp | 0;
 $win = $win | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $vp;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $win;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 373284 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_34(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425092 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_33(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425108 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_32(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421840 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_31(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425124 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_30(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422912 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_29(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422988 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_28(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423308 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_27(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423012 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_26(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425140 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_25(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425156 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_24(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425172 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_23(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425188 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_22(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425204 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_21(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425220 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_20(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425236 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_19(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425252 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_18(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421540 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_17(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421640 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_16(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421668 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_15(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421612 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_14(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 422832 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_13(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421812 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_12(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425268 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_11(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425284 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_10(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425300 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_9(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425372 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_8(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425388 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_6(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425404 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_4(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425420 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_iii_1(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425436 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function ___stpcpy($d, $s) {
 $d = $d | 0;
 $s = $s | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $d;
  HEAP32[EMTSTACKTOP + 16 >> 2] = $s;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 281604 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b123(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423900 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b122(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423928 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b121(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423956 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b120(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423984 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b119(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424012 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b118(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424040 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b117(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424068 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b116(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424096 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b115(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424124 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b114(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424152 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b113(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424180 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b112(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424208 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b111(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424236 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b110(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424264 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b109(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424292 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b108(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424320 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b107(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424348 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b106(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424376 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b105(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424404 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b104(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424432 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b103(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424460 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b102(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424488 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b101(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424516 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b100(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424544 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b99(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424572 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b98(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424600 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b97(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424628 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b96(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424656 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b95(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424684 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b94(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  HEAP32[EMTSTACKTOP + 16 >> 2] = p1;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424712 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _turn_see($turn_off) {
 $turn_off = $turn_off | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $turn_off;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 292820 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _nullstr($ignored) {
 $ignored = $ignored | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $ignored;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 417508 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _charge_str($obj) {
 $obj = $obj | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $obj;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 384460 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _strcat($dest, $src) {
 $dest = $dest | 0;
 $src = $src | 0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 label = 0;
 sp = STACKTOP;
 $0 = _strlen($dest) | 0;
 $1 = $dest + $0 | 0;
 _strcpy($1, $src) | 0;
 return $dest | 0;
}

function _ring_num($obj) {
 $obj = $obj | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $obj;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 382136 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function ___stdio_close($f) {
 $f = $f | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 410780 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_34(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426880 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_33(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426896 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_32(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424804 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_31(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426912 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_26(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426928 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_25(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426944 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_24(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426960 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_23(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426976 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_22(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426992 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_21(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427008 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_20(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427024 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_19(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427040 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_18(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423748 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_17(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423836 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_16(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423868 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_15(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 423804 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_13(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424740 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_12(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427056 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_11(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427072 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_10(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427088 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_9(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427124 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_8(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427140 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_7(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425004 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_6(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427156 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_5(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424932 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_4(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427172 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_3(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425032 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_2(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424960 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function fpemu_ii_1(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427188 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _fflush($f) {
 $f = $f | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $f;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 311668 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b30(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425660 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b29(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425688 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b28(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425716 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b27(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425744 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b26(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425772 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b25(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425800 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b24(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425828 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b23(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425856 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b22(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425884 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b21(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425912 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b20(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425940 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b19(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425968 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b18(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425996 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b17(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426024 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b16(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426052 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b15(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426080 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b14(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426108 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b13(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426136 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b12(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426164 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b11(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426192 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b10(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426220 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b9(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426248 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b8(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426276 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b7(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426304 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b6(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426332 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b5(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426360 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b4(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426388 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b3(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426416 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b2(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426444 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function b1(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426472 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 return ret | 0;
}

function setDynamicTop(value) {
 value = value | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = value;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424988 | 0);
}

function _put_str($str) {
 $str = $str | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $str;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 416264 | 0);
}

function _put_inv_t($ip) {
 $ip = $ip | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $ip;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 411092 | 0);
}

function _leave($sig) {
 $sig = $sig | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $sig;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 399072 | 0);
}

function fpemu_vi_32(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425316 | 0);
}

function fpemu_vi_31(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426540 | 0);
}

function fpemu_vi_30(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425480 | 0);
}

function fpemu_vi_29(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425588 | 0);
}

function fpemu_vi_28(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425636 | 0);
}

function fpemu_vi_27(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425612 | 0);
}

function fpemu_vi_26(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426612 | 0);
}

function fpemu_vi_24(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426632 | 0);
}

function fpemu_vi_23(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426748 | 0);
}

function fpemu_vi_22(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426652 | 0);
}

function fpemu_vi_21(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426672 | 0);
}

function fpemu_vi_20(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426692 | 0);
}

function fpemu_vi_19(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426556 | 0);
}

function fpemu_vi_18(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424772 | 0);
}

function fpemu_vi_17(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424868 | 0);
}

function fpemu_vi_16(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424900 | 0);
}

function fpemu_vi_15(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 424836 | 0);
}

function fpemu_vi_14(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425348 | 0);
}

function fpemu_vi_13(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425060 | 0);
}

function fpemu_vi_12(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427104 | 0);
}

function fpemu_vi_11(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426840 | 0);
}

function fpemu_vi_10(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426860 | 0);
}

function _cleanup526($p) {
 $p = $p | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $p;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 418316 | 0);
}

function _cleanup521($p) {
 $p = $p | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $p;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 418384 | 0);
}

function fpemu_vi_9(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426500 | 0);
}

function fpemu_vi_8(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426520 | 0);
}

function fpemu_vi_7(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425532 | 0);
}

function fpemu_vi_5(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425452 | 0);
}

function fpemu_vi_3(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425560 | 0);
}

function fpemu_vi_2(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 425504 | 0);
}

function _put_bool($b) {
 $b = $b | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = $b;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 411248 | 0);
}

function b92(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427204 | 0);
}

function b91(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427228 | 0);
}

function b90(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427252 | 0);
}

function b89(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427276 | 0);
}

function b88(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427300 | 0);
}

function b87(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427324 | 0);
}

function b86(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427348 | 0);
}

function b85(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427372 | 0);
}

function b84(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427396 | 0);
}

function b83(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427420 | 0);
}

function b82(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427444 | 0);
}

function b81(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427468 | 0);
}

function b80(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427492 | 0);
}

function b79(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427516 | 0);
}

function b78(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427540 | 0);
}

function b77(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427564 | 0);
}

function b76(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427588 | 0);
}

function b75(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427612 | 0);
}

function b74(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427636 | 0);
}

function b73(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427660 | 0);
}

function b72(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427684 | 0);
}

function b71(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427708 | 0);
}

function b70(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427732 | 0);
}

function b69(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427756 | 0);
}

function b68(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427780 | 0);
}

function b67(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427804 | 0);
}

function b66(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427828 | 0);
}

function b65(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427852 | 0);
}

function b64(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427876 | 0);
}

function b63(p0) {
 p0 = p0 | 0;
 if ((asyncState | 0) != 2) {
  HEAP32[EMTSTACKTOP + 8 >> 2] = p0;
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427900 | 0);
}

function ___errno_location() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 414980 | 0);
 return HEAP32[EMTSTACKTOP >> 2] | 0;
}

function _strncpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var label = 0, sp = 0;
 label = 0;
 sp = STACKTOP;
 ___stpncpy($d, $s, $n) | 0;
 return $d | 0;
}

function _strcpy($dest, $src) {
 $dest = $dest | 0;
 $src = $src | 0;
 var label = 0, sp = 0;
 label = 0;
 sp = STACKTOP;
 ___stpcpy($dest, $src) | 0;
 return $dest | 0;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if ((__THREW__ | 0) == 0) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function fpemu_v_34() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428264 | 0);
}

function fpemu_v_33() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428292 | 0);
}

function fpemu_v_32() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427960 | 0);
}

function fpemu_v_30() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428056 | 0);
}

function fpemu_v_29() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428180 | 0);
}

function fpemu_v_28() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428236 | 0);
}

function fpemu_v_27() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428208 | 0);
}

function fpemu_v_25() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428404 | 0);
}

function fpemu_v_18() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426576 | 0);
}

function fpemu_v_17() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426768 | 0);
}

function fpemu_v_16() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426804 | 0);
}

function fpemu_v_15() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 426712 | 0);
}

function fpemu_v_14() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427996 | 0);
}

function fpemu_v_13() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 427924 | 0);
}

function _unconfuse() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 407456 | 0);
}

function _come_down() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 219548 | 0);
}

function fpemu_v_7() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428116 | 0);
}

function fpemu_v_6() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428376 | 0);
}

function fpemu_v_5() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428024 | 0);
}

function fpemu_v_4() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428320 | 0);
}

function fpemu_v_3() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428148 | 0);
}

function fpemu_v_2() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428084 | 0);
}

function fpemu_v_1() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428348 | 0);
}

function _rollwand() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 409908 | 0);
}

function _visuals() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 245636 | 0);
}

function _swander() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 421064 | 0);
}

function _stomach() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 257352 | 0);
}

function _runners() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 250820 | 0);
}

function _nohaste() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 412704 | 0);
}

function _doctor() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 297588 | 0);
}

function _unsee() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 344472 | 0);
}

function _sight() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 385908 | 0);
}

function _land() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 410908 | 0);
}

function b154() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428432 | 0);
}

function b153() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428456 | 0);
}

function b152() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428480 | 0);
}

function b151() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428504 | 0);
}

function b150() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428528 | 0);
}

function b149() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428552 | 0);
}

function b148() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428576 | 0);
}

function b147() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428600 | 0);
}

function b146() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428624 | 0);
}

function b145() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428648 | 0);
}

function b144() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428672 | 0);
}

function b143() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428696 | 0);
}

function b142() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428720 | 0);
}

function b141() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428744 | 0);
}

function b140() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428768 | 0);
}

function b139() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428792 | 0);
}

function b138() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428816 | 0);
}

function b137() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428840 | 0);
}

function b136() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428864 | 0);
}

function b135() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428888 | 0);
}

function b134() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428912 | 0);
}

function b133() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428936 | 0);
}

function b132() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428960 | 0);
}

function b131() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 428984 | 0);
}

function b130() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 429008 | 0);
}

function b129() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 429032 | 0);
}

function b128() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 429056 | 0);
}

function b127() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 429080 | 0);
}

function b126() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 429104 | 0);
}

function b125() {
 if ((asyncState | 0) != 2) {
  if ((asyncState | 0) == 1) asyncState = 3;
 }
 emterpret(eb + 429128 | 0);
}

function emtStackSave() {
 asyncState ? abort(-12) | 0 : 0;
 return EMTSTACKTOP | 0;
}

function getTempRet0() {
 asyncState ? abort(-12) | 0 : 0;
 return tempRet0 | 0;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function emtStackRestore(x) {
 x = x | 0;
 EMTSTACKTOP = x;
}

function setAsyncState(x) {
 x = x | 0;
 asyncState = x;
}

function stackSave() {
 return STACKTOP | 0;
}

// EMSCRIPTEN_END_FUNCS

var FUNCTION_TABLE_ii = [b1,fpemu_ii_1,fpemu_ii_2,fpemu_ii_3,fpemu_ii_4,fpemu_ii_5,fpemu_ii_6,fpemu_ii_7,fpemu_ii_8,fpemu_ii_9,fpemu_ii_10,fpemu_ii_11,fpemu_ii_12,fpemu_ii_13,___stdio_close,fpemu_ii_15,fpemu_ii_16,fpemu_ii_17,fpemu_ii_18,fpemu_ii_19,fpemu_ii_20,fpemu_ii_21,fpemu_ii_22,fpemu_ii_23,fpemu_ii_24,fpemu_ii_25,fpemu_ii_26,_turn_see,_nullstr
,_ring_num,_charge_str,fpemu_ii_31,fpemu_ii_32,fpemu_ii_33,fpemu_ii_34,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25
,b26,b27,b28,b29,b30];
var FUNCTION_TABLE_iiii = [b32,fpemu_iiii_1,fpemu_iiii_2,fpemu_iiii_3,fpemu_iiii_4,fpemu_iiii_5,fpemu_iiii_6,fpemu_iiii_7,fpemu_iiii_8,fpemu_iiii_9,fpemu_iiii_10,fpemu_iiii_11,fpemu_iiii_12,_sn_write,fpemu_iiii_14,___stdio_write,___stdio_seek,___stdio_read,___stdout_write,fpemu_iiii_19,fpemu_iiii_20,fpemu_iiii_21,fpemu_iiii_22,fpemu_iiii_23,fpemu_iiii_24,fpemu_iiii_25,fpemu_iiii_26,fpemu_iiii_27,fpemu_iiii_28
,fpemu_iiii_29,fpemu_iiii_30,fpemu_iiii_31,_do_read,fpemu_iiii_33,fpemu_iiii_34,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52,b53,b54,b55,b56
,b57,b58,b59,b60,b61];
var FUNCTION_TABLE_vi = [b63,_put_bool,fpemu_vi_2,fpemu_vi_3,_put_inv_t,fpemu_vi_5,_put_str,fpemu_vi_7,fpemu_vi_8,fpemu_vi_9,fpemu_vi_10,fpemu_vi_11,fpemu_vi_12,fpemu_vi_13,fpemu_vi_14,fpemu_vi_15,fpemu_vi_16,fpemu_vi_17,fpemu_vi_18,fpemu_vi_19,fpemu_vi_20,fpemu_vi_21,fpemu_vi_22,fpemu_vi_23,fpemu_vi_24,_leave,fpemu_vi_26,fpemu_vi_27,fpemu_vi_28
,fpemu_vi_29,fpemu_vi_30,fpemu_vi_31,fpemu_vi_32,_cleanup521,_cleanup526,b64,b65,b66,b67,b68,b69,b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b80,b81,b82,b83,b84,b85,b86,b87
,b88,b89,b90,b91,b92];
var FUNCTION_TABLE_iii = [b94,fpemu_iii_1,_get_bool,_get_sf,fpemu_iii_4,_get_inv_t,fpemu_iii_6,_get_str,fpemu_iii_8,fpemu_iii_9,fpemu_iii_10,fpemu_iii_11,fpemu_iii_12,fpemu_iii_13,fpemu_iii_14,fpemu_iii_15,fpemu_iii_16,fpemu_iii_17,fpemu_iii_18,fpemu_iii_19,fpemu_iii_20,fpemu_iii_21,fpemu_iii_22,fpemu_iii_23,fpemu_iii_24,fpemu_iii_25,fpemu_iii_26,fpemu_iii_27,fpemu_iii_28
,fpemu_iii_29,fpemu_iii_30,fpemu_iii_31,fpemu_iii_32,fpemu_iii_33,fpemu_iii_34,b95,b96,b97,b98,b99,b100,b101,b102,b103,b104,b105,b106,b107,b108,b109,b110,b111,b112,b113,b114,b115,b116,b117,b118
,b119,b120,b121,b122,b123];
var FUNCTION_TABLE_v = [b125,fpemu_v_1,fpemu_v_2,fpemu_v_3,fpemu_v_4,fpemu_v_5,fpemu_v_6,fpemu_v_7,_unconfuse,_come_down,_unsee,_sight,_land,fpemu_v_13,fpemu_v_14,fpemu_v_15,fpemu_v_16,fpemu_v_17,fpemu_v_18,_rollwand,_swander,_visuals,_runners,_doctor,_stomach,fpemu_v_25,_nohaste,fpemu_v_27,fpemu_v_28
,fpemu_v_29,fpemu_v_30,_SDL_Quit,fpemu_v_32,fpemu_v_33,fpemu_v_34,b126,b127,b128,b129,b130,b131,b132,b133,b134,b135,b136,b137,b138,b139,b140,b141,b142,b143,b144,b145,b146,b147,b148,b149
,b150,b151,b152,b153,b154];

  return { _main: _main, _land: _land, _visuals: _visuals, _i64Subtract: _i64Subtract, _put_str: _put_str, setThrew: setThrew, ___stdio_write: ___stdio_write, _bitshift64Lshr: _bitshift64Lshr, _get_bool: _get_bool, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, _do_read: _do_read, _charge_str: _charge_str, _memset: _memset, ___stdio_read: ___stdio_read, emterpret: emterpret, _cleanup521: _cleanup521, _memcpy: _memcpy, _sight: _sight, ___errno_location: ___errno_location, _doctor: _doctor, _stomach: _stomach, _put_bool: _put_bool, emtStackSave: emtStackSave, setAsyncState: setAsyncState, stackAlloc: stackAlloc, _unsee: _unsee, getTempRet0: getTempRet0, _unconfuse: _unconfuse, _cleanup526: _cleanup526, setTempRet0: setTempRet0, ___stdout_write: ___stdout_write, _i64Add: _i64Add, _sn_write: _sn_write, setDynamicTop: setDynamicTop, stackRestore: stackRestore, emtStackRestore: emtStackRestore, _leave: _leave, _ring_num: _ring_num, _get_sf: _get_sf, ___stdio_seek: ___stdio_seek, _rollwand: _rollwand, _get_str: _get_str, stackSave: stackSave, _put_inv_t: _put_inv_t, _free: _free, runPostSets: runPostSets, establishStackSpace: establishStackSpace, _get_inv_t: _get_inv_t, _malloc: _malloc, _nullstr: _nullstr, ___stdio_close: ___stdio_close, _come_down: _come_down, _swander: _swander, _nohaste: _nohaste, _runners: _runners, _turn_see: _turn_see };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memset = Module["_memset"] = asm["_memset"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];

function b1(p0) {
 p0 = p0|0; nullFunc_ii(0);return 0;
}
function fpemu_ii_1(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_2(p0) {
 p0 = p0|0; return asm['_get_bool'](p0|0,0)|0
}
function fpemu_ii_3(p0) {
 p0 = p0|0; return asm['_get_sf'](p0|0,0)|0
}
function fpemu_ii_4(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_5(p0) {
 p0 = p0|0; return asm['_get_inv_t'](p0|0,0)|0
}
function fpemu_ii_6(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_7(p0) {
 p0 = p0|0; return asm['_get_str'](p0|0,0)|0
}
function fpemu_ii_8(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_9(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_10(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_11(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_12(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_13(p0) {
 p0 = p0|0; return asm['_sn_write'](p0|0,0,0)|0
}
function fpemu_ii_15(p0) {
 p0 = p0|0; return asm['___stdio_write'](p0|0,0,0)|0
}
function fpemu_ii_16(p0) {
 p0 = p0|0; return asm['___stdio_seek'](p0|0,0,0)|0
}
function fpemu_ii_17(p0) {
 p0 = p0|0; return asm['___stdio_read'](p0|0,0,0)|0
}
function fpemu_ii_18(p0) {
 p0 = p0|0; return asm['___stdout_write'](p0|0,0,0)|0
}
function fpemu_ii_19(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_20(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_21(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_22(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_23(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_24(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_25(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_26(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_31(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_32(p0) {
 p0 = p0|0; return asm['_do_read'](p0|0,0,0)|0
}
function fpemu_ii_33(p0) {
 p0 = p0|0; return 0
}
function fpemu_ii_34(p0) {
 p0 = p0|0; return 0
}
function b2(p0) {
 p0 = p0|0; nullFunc_ii(35);return 0;
}
function b3(p0) {
 p0 = p0|0; nullFunc_ii(36);return 0;
}
function b4(p0) {
 p0 = p0|0; nullFunc_ii(37);return 0;
}
function b5(p0) {
 p0 = p0|0; nullFunc_ii(38);return 0;
}
function b6(p0) {
 p0 = p0|0; nullFunc_ii(39);return 0;
}
function b7(p0) {
 p0 = p0|0; nullFunc_ii(40);return 0;
}
function b8(p0) {
 p0 = p0|0; nullFunc_ii(41);return 0;
}
function b9(p0) {
 p0 = p0|0; nullFunc_ii(42);return 0;
}
function b10(p0) {
 p0 = p0|0; nullFunc_ii(43);return 0;
}
function b11(p0) {
 p0 = p0|0; nullFunc_ii(44);return 0;
}
function b12(p0) {
 p0 = p0|0; nullFunc_ii(45);return 0;
}
function b13(p0) {
 p0 = p0|0; nullFunc_ii(46);return 0;
}
function b14(p0) {
 p0 = p0|0; nullFunc_ii(47);return 0;
}
function b15(p0) {
 p0 = p0|0; nullFunc_ii(48);return 0;
}
function b16(p0) {
 p0 = p0|0; nullFunc_ii(49);return 0;
}
function b17(p0) {
 p0 = p0|0; nullFunc_ii(50);return 0;
}
function b18(p0) {
 p0 = p0|0; nullFunc_ii(51);return 0;
}
function b19(p0) {
 p0 = p0|0; nullFunc_ii(52);return 0;
}
function b20(p0) {
 p0 = p0|0; nullFunc_ii(53);return 0;
}
function b21(p0) {
 p0 = p0|0; nullFunc_ii(54);return 0;
}
function b22(p0) {
 p0 = p0|0; nullFunc_ii(55);return 0;
}
function b23(p0) {
 p0 = p0|0; nullFunc_ii(56);return 0;
}
function b24(p0) {
 p0 = p0|0; nullFunc_ii(57);return 0;
}
function b25(p0) {
 p0 = p0|0; nullFunc_ii(58);return 0;
}
function b26(p0) {
 p0 = p0|0; nullFunc_ii(59);return 0;
}
function b27(p0) {
 p0 = p0|0; nullFunc_ii(60);return 0;
}
function b28(p0) {
 p0 = p0|0; nullFunc_ii(61);return 0;
}
function b29(p0) {
 p0 = p0|0; nullFunc_ii(62);return 0;
}
function b30(p0) {
 p0 = p0|0; nullFunc_ii(63);return 0;
}
function b32(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0;
}
function fpemu_iiii_1(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_2(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_get_bool'](p0|0,p1|0)|0
}
function fpemu_iiii_3(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_get_sf'](p0|0,p1|0)|0
}
function fpemu_iiii_4(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_5(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_get_inv_t'](p0|0,p1|0)|0
}
function fpemu_iiii_6(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_7(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_get_str'](p0|0,p1|0)|0
}
function fpemu_iiii_8(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_9(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_10(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_11(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_12(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_14(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['___stdio_close'](p0|0)|0
}
function fpemu_iiii_19(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_20(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_21(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_22(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_23(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_24(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_25(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_26(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_27(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_turn_see'](p0|0)|0
}
function fpemu_iiii_28(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_nullstr'](p0|0)|0
}
function fpemu_iiii_29(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_ring_num'](p0|0)|0
}
function fpemu_iiii_30(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return asm['_charge_str'](p0|0)|0
}
function fpemu_iiii_31(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_33(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function fpemu_iiii_34(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; return 0
}
function b33(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(35);return 0;
}
function b34(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(36);return 0;
}
function b35(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(37);return 0;
}
function b36(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(38);return 0;
}
function b37(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(39);return 0;
}
function b38(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(40);return 0;
}
function b39(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(41);return 0;
}
function b40(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(42);return 0;
}
function b41(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(43);return 0;
}
function b42(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(44);return 0;
}
function b43(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(45);return 0;
}
function b44(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(46);return 0;
}
function b45(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(47);return 0;
}
function b46(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(48);return 0;
}
function b47(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(49);return 0;
}
function b48(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(50);return 0;
}
function b49(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(51);return 0;
}
function b50(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(52);return 0;
}
function b51(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(53);return 0;
}
function b52(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(54);return 0;
}
function b53(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(55);return 0;
}
function b54(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(56);return 0;
}
function b55(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(57);return 0;
}
function b56(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(58);return 0;
}
function b57(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(59);return 0;
}
function b58(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(60);return 0;
}
function b59(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(61);return 0;
}
function b60(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(62);return 0;
}
function b61(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(63);return 0;
}
function b63(p0) {
 p0 = p0|0; nullFunc_vi(0);
}
function fpemu_vi_2(p0) {
 p0 = p0|0; asm['_get_bool'](p0|0,0)|0
}
function fpemu_vi_3(p0) {
 p0 = p0|0; asm['_get_sf'](p0|0,0)|0
}
function fpemu_vi_5(p0) {
 p0 = p0|0; asm['_get_inv_t'](p0|0,0)|0
}
function fpemu_vi_7(p0) {
 p0 = p0|0; asm['_get_str'](p0|0,0)|0
}
function fpemu_vi_8(p0) {
 p0 = p0|0; asm['_unconfuse']()
}
function fpemu_vi_9(p0) {
 p0 = p0|0; asm['_come_down']()
}
function fpemu_vi_10(p0) {
 p0 = p0|0; asm['_unsee']()
}
function fpemu_vi_11(p0) {
 p0 = p0|0; asm['_sight']()
}
function fpemu_vi_12(p0) {
 p0 = p0|0; asm['_land']()
}
function fpemu_vi_13(p0) {
 p0 = p0|0; asm['_sn_write'](p0|0,0,0)|0
}
function fpemu_vi_14(p0) {
 p0 = p0|0; asm['___stdio_close'](p0|0)|0
}
function fpemu_vi_15(p0) {
 p0 = p0|0; asm['___stdio_write'](p0|0,0,0)|0
}
function fpemu_vi_16(p0) {
 p0 = p0|0; asm['___stdio_seek'](p0|0,0,0)|0
}
function fpemu_vi_17(p0) {
 p0 = p0|0; asm['___stdio_read'](p0|0,0,0)|0
}
function fpemu_vi_18(p0) {
 p0 = p0|0; asm['___stdout_write'](p0|0,0,0)|0
}
function fpemu_vi_19(p0) {
 p0 = p0|0; asm['_rollwand']()
}
function fpemu_vi_20(p0) {
 p0 = p0|0; asm['_swander']()
}
function fpemu_vi_21(p0) {
 p0 = p0|0; asm['_visuals']()
}
function fpemu_vi_22(p0) {
 p0 = p0|0; asm['_runners']()
}
function fpemu_vi_23(p0) {
 p0 = p0|0; asm['_doctor']()
}
function fpemu_vi_24(p0) {
 p0 = p0|0; asm['_stomach']()
}
function fpemu_vi_26(p0) {
 p0 = p0|0; asm['_nohaste']()
}
function fpemu_vi_27(p0) {
 p0 = p0|0; asm['_turn_see'](p0|0)|0
}
function fpemu_vi_28(p0) {
 p0 = p0|0; asm['_nullstr'](p0|0)|0
}
function fpemu_vi_29(p0) {
 p0 = p0|0; asm['_ring_num'](p0|0)|0
}
function fpemu_vi_30(p0) {
 p0 = p0|0; asm['_charge_str'](p0|0)|0
}
function fpemu_vi_31(p0) {
 p0 = p0|0; _SDL_Quit()
}
function fpemu_vi_32(p0) {
 p0 = p0|0; asm['_do_read'](p0|0,0,0)|0
}
function b64(p0) {
 p0 = p0|0; nullFunc_vi(35);
}
function b65(p0) {
 p0 = p0|0; nullFunc_vi(36);
}
function b66(p0) {
 p0 = p0|0; nullFunc_vi(37);
}
function b67(p0) {
 p0 = p0|0; nullFunc_vi(38);
}
function b68(p0) {
 p0 = p0|0; nullFunc_vi(39);
}
function b69(p0) {
 p0 = p0|0; nullFunc_vi(40);
}
function b70(p0) {
 p0 = p0|0; nullFunc_vi(41);
}
function b71(p0) {
 p0 = p0|0; nullFunc_vi(42);
}
function b72(p0) {
 p0 = p0|0; nullFunc_vi(43);
}
function b73(p0) {
 p0 = p0|0; nullFunc_vi(44);
}
function b74(p0) {
 p0 = p0|0; nullFunc_vi(45);
}
function b75(p0) {
 p0 = p0|0; nullFunc_vi(46);
}
function b76(p0) {
 p0 = p0|0; nullFunc_vi(47);
}
function b77(p0) {
 p0 = p0|0; nullFunc_vi(48);
}
function b78(p0) {
 p0 = p0|0; nullFunc_vi(49);
}
function b79(p0) {
 p0 = p0|0; nullFunc_vi(50);
}
function b80(p0) {
 p0 = p0|0; nullFunc_vi(51);
}
function b81(p0) {
 p0 = p0|0; nullFunc_vi(52);
}
function b82(p0) {
 p0 = p0|0; nullFunc_vi(53);
}
function b83(p0) {
 p0 = p0|0; nullFunc_vi(54);
}
function b84(p0) {
 p0 = p0|0; nullFunc_vi(55);
}
function b85(p0) {
 p0 = p0|0; nullFunc_vi(56);
}
function b86(p0) {
 p0 = p0|0; nullFunc_vi(57);
}
function b87(p0) {
 p0 = p0|0; nullFunc_vi(58);
}
function b88(p0) {
 p0 = p0|0; nullFunc_vi(59);
}
function b89(p0) {
 p0 = p0|0; nullFunc_vi(60);
}
function b90(p0) {
 p0 = p0|0; nullFunc_vi(61);
}
function b91(p0) {
 p0 = p0|0; nullFunc_vi(62);
}
function b92(p0) {
 p0 = p0|0; nullFunc_vi(63);
}
function b94(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(0);return 0;
}
function fpemu_iii_1(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_4(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_6(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_8(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_9(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_10(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_11(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_12(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_13(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['_sn_write'](p0|0,p1|0,0)|0
}
function fpemu_iii_14(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['___stdio_close'](p0|0)|0
}
function fpemu_iii_15(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['___stdio_write'](p0|0,p1|0,0)|0
}
function fpemu_iii_16(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['___stdio_seek'](p0|0,p1|0,0)|0
}
function fpemu_iii_17(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['___stdio_read'](p0|0,p1|0,0)|0
}
function fpemu_iii_18(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['___stdout_write'](p0|0,p1|0,0)|0
}
function fpemu_iii_19(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_20(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_21(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_22(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_23(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_24(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_25(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_26(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_27(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['_turn_see'](p0|0)|0
}
function fpemu_iii_28(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['_nullstr'](p0|0)|0
}
function fpemu_iii_29(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['_ring_num'](p0|0)|0
}
function fpemu_iii_30(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['_charge_str'](p0|0)|0
}
function fpemu_iii_31(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_32(p0,p1) {
 p0 = p0|0;p1 = p1|0; return asm['_do_read'](p0|0,p1|0,0)|0
}
function fpemu_iii_33(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function fpemu_iii_34(p0,p1) {
 p0 = p0|0;p1 = p1|0; return 0
}
function b95(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(35);return 0;
}
function b96(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(36);return 0;
}
function b97(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(37);return 0;
}
function b98(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(38);return 0;
}
function b99(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(39);return 0;
}
function b100(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(40);return 0;
}
function b101(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(41);return 0;
}
function b102(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(42);return 0;
}
function b103(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(43);return 0;
}
function b104(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(44);return 0;
}
function b105(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(45);return 0;
}
function b106(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(46);return 0;
}
function b107(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(47);return 0;
}
function b108(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(48);return 0;
}
function b109(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(49);return 0;
}
function b110(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(50);return 0;
}
function b111(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(51);return 0;
}
function b112(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(52);return 0;
}
function b113(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(53);return 0;
}
function b114(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(54);return 0;
}
function b115(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(55);return 0;
}
function b116(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(56);return 0;
}
function b117(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(57);return 0;
}
function b118(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(58);return 0;
}
function b119(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(59);return 0;
}
function b120(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(60);return 0;
}
function b121(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(61);return 0;
}
function b122(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(62);return 0;
}
function b123(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(63);return 0;
}
function b125() {
 ; nullFunc_v(0);
}
function fpemu_v_1() {
 ; asm['_put_bool'](0)
}
function fpemu_v_2() {
 ; asm['_get_bool'](0,0)|0
}
function fpemu_v_3() {
 ; asm['_get_sf'](0,0)|0
}
function fpemu_v_4() {
 ; asm['_put_inv_t'](0)
}
function fpemu_v_5() {
 ; asm['_get_inv_t'](0,0)|0
}
function fpemu_v_6() {
 ; asm['_put_str'](0)
}
function fpemu_v_7() {
 ; asm['_get_str'](0,0)|0
}
function fpemu_v_13() {
 ; asm['_sn_write'](0,0,0)|0
}
function fpemu_v_14() {
 ; asm['___stdio_close'](0)|0
}
function fpemu_v_15() {
 ; asm['___stdio_write'](0,0,0)|0
}
function fpemu_v_16() {
 ; asm['___stdio_seek'](0,0,0)|0
}
function fpemu_v_17() {
 ; asm['___stdio_read'](0,0,0)|0
}
function fpemu_v_18() {
 ; asm['___stdout_write'](0,0,0)|0
}
function fpemu_v_25() {
 ; asm['_leave'](0)
}
function fpemu_v_27() {
 ; asm['_turn_see'](0)|0
}
function fpemu_v_28() {
 ; asm['_nullstr'](0)|0
}
function fpemu_v_29() {
 ; asm['_ring_num'](0)|0
}
function fpemu_v_30() {
 ; asm['_charge_str'](0)|0
}
function fpemu_v_32() {
 ; asm['_do_read'](0,0,0)|0
}
function fpemu_v_33() {
 ; asm['_cleanup521'](0)
}
function fpemu_v_34() {
 ; asm['_cleanup526'](0)
}
function b126() {
 ; nullFunc_v(35);
}
function b127() {
 ; nullFunc_v(36);
}
function b128() {
 ; nullFunc_v(37);
}
function b129() {
 ; nullFunc_v(38);
}
function b130() {
 ; nullFunc_v(39);
}
function b131() {
 ; nullFunc_v(40);
}
function b132() {
 ; nullFunc_v(41);
}
function b133() {
 ; nullFunc_v(42);
}
function b134() {
 ; nullFunc_v(43);
}
function b135() {
 ; nullFunc_v(44);
}
function b136() {
 ; nullFunc_v(45);
}
function b137() {
 ; nullFunc_v(46);
}
function b138() {
 ; nullFunc_v(47);
}
function b139() {
 ; nullFunc_v(48);
}
function b140() {
 ; nullFunc_v(49);
}
function b141() {
 ; nullFunc_v(50);
}
function b142() {
 ; nullFunc_v(51);
}
function b143() {
 ; nullFunc_v(52);
}
function b144() {
 ; nullFunc_v(53);
}
function b145() {
 ; nullFunc_v(54);
}
function b146() {
 ; nullFunc_v(55);
}
function b147() {
 ; nullFunc_v(56);
}
function b148() {
 ; nullFunc_v(57);
}
function b149() {
 ; nullFunc_v(58);
}
function b150() {
 ; nullFunc_v(59);
}
function b151() {
 ; nullFunc_v(60);
}
function b152() {
 ; nullFunc_v(61);
}
function b153() {
 ; nullFunc_v(62);
}
function b154() {
 ; nullFunc_v(63);
}

var FUNCTION_TABLE_ii = [b1,fpemu_ii_1,fpemu_ii_2,fpemu_ii_3,fpemu_ii_4,fpemu_ii_5,fpemu_ii_6,fpemu_ii_7,fpemu_ii_8,fpemu_ii_9,fpemu_ii_10,fpemu_ii_11,fpemu_ii_12,fpemu_ii_13,asm['___stdio_close'],fpemu_ii_15,fpemu_ii_16,fpemu_ii_17,fpemu_ii_18,fpemu_ii_19,fpemu_ii_20,fpemu_ii_21,fpemu_ii_22,fpemu_ii_23,fpemu_ii_24,fpemu_ii_25,fpemu_ii_26,asm['_turn_see'],asm['_nullstr']
,asm['_ring_num'],asm['_charge_str'],fpemu_ii_31,fpemu_ii_32,fpemu_ii_33,fpemu_ii_34,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25
,b26,b27,b28,b29,b30];
var FUNCTION_TABLE_iiii = [b32,fpemu_iiii_1,fpemu_iiii_2,fpemu_iiii_3,fpemu_iiii_4,fpemu_iiii_5,fpemu_iiii_6,fpemu_iiii_7,fpemu_iiii_8,fpemu_iiii_9,fpemu_iiii_10,fpemu_iiii_11,fpemu_iiii_12,asm['_sn_write'],fpemu_iiii_14,asm['___stdio_write'],asm['___stdio_seek'],asm['___stdio_read'],asm['___stdout_write'],fpemu_iiii_19,fpemu_iiii_20,fpemu_iiii_21,fpemu_iiii_22,fpemu_iiii_23,fpemu_iiii_24,fpemu_iiii_25,fpemu_iiii_26,fpemu_iiii_27,fpemu_iiii_28
,fpemu_iiii_29,fpemu_iiii_30,fpemu_iiii_31,asm['_do_read'],fpemu_iiii_33,fpemu_iiii_34,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52,b53,b54,b55,b56
,b57,b58,b59,b60,b61];
var FUNCTION_TABLE_vi = [b63,asm['_put_bool'],fpemu_vi_2,fpemu_vi_3,asm['_put_inv_t'],fpemu_vi_5,asm['_put_str'],fpemu_vi_7,fpemu_vi_8,fpemu_vi_9,fpemu_vi_10,fpemu_vi_11,fpemu_vi_12,fpemu_vi_13,fpemu_vi_14,fpemu_vi_15,fpemu_vi_16,fpemu_vi_17,fpemu_vi_18,fpemu_vi_19,fpemu_vi_20,fpemu_vi_21,fpemu_vi_22,fpemu_vi_23,fpemu_vi_24,asm['_leave'],fpemu_vi_26,fpemu_vi_27,fpemu_vi_28
,fpemu_vi_29,fpemu_vi_30,fpemu_vi_31,fpemu_vi_32,asm['_cleanup521'],asm['_cleanup526'],b64,b65,b66,b67,b68,b69,b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b80,b81,b82,b83,b84,b85,b86,b87
,b88,b89,b90,b91,b92];
var FUNCTION_TABLE_iii = [b94,fpemu_iii_1,asm['_get_bool'],asm['_get_sf'],fpemu_iii_4,asm['_get_inv_t'],fpemu_iii_6,asm['_get_str'],fpemu_iii_8,fpemu_iii_9,fpemu_iii_10,fpemu_iii_11,fpemu_iii_12,fpemu_iii_13,fpemu_iii_14,fpemu_iii_15,fpemu_iii_16,fpemu_iii_17,fpemu_iii_18,fpemu_iii_19,fpemu_iii_20,fpemu_iii_21,fpemu_iii_22,fpemu_iii_23,fpemu_iii_24,fpemu_iii_25,fpemu_iii_26,fpemu_iii_27,fpemu_iii_28
,fpemu_iii_29,fpemu_iii_30,fpemu_iii_31,fpemu_iii_32,fpemu_iii_33,fpemu_iii_34,b95,b96,b97,b98,b99,b100,b101,b102,b103,b104,b105,b106,b107,b108,b109,b110,b111,b112,b113,b114,b115,b116,b117,b118
,b119,b120,b121,b122,b123];
var FUNCTION_TABLE_v = [b125,fpemu_v_1,fpemu_v_2,fpemu_v_3,fpemu_v_4,fpemu_v_5,fpemu_v_6,fpemu_v_7,asm['_unconfuse'],asm['_come_down'],asm['_unsee'],asm['_sight'],asm['_land'],fpemu_v_13,fpemu_v_14,fpemu_v_15,fpemu_v_16,fpemu_v_17,fpemu_v_18,asm['_rollwand'],asm['_swander'],asm['_visuals'],asm['_runners'],asm['_doctor'],asm['_stomach'],fpemu_v_25,asm['_nohaste'],fpemu_v_27,fpemu_v_28
,fpemu_v_29,fpemu_v_30,_SDL_Quit,fpemu_v_32,fpemu_v_33,fpemu_v_34,b126,b127,b128,b129,b130,b131,b132,b133,b134,b135,b136,b137,b138,b139,b140,b141,b142,b143,b144,b145,b146,b147,b148,b149
,b150,b151,b152,b153,b154];
Module["dynCall_ii"] = dynCall_ii
Module["dynCall_iiii"] = dynCall_iiii
Module["dynCall_vi"] = dynCall_vi
Module["dynCall_iii"] = dynCall_iii
Module["dynCall_v"] = dynCall_v
Module["FUNCTION_TABLE_ii"] = FUNCTION_TABLE_ii;
Module["FUNCTION_TABLE_iiii"] = FUNCTION_TABLE_iiii;
Module["FUNCTION_TABLE_vi"] = FUNCTION_TABLE_vi;
Module["FUNCTION_TABLE_iii"] = FUNCTION_TABLE_iii;
Module["FUNCTION_TABLE_v"] = FUNCTION_TABLE_v;
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setDynamicTop = asm['setDynamicTop'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  var initialEmtStackTop = asm.emtStackSave();

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      // an infinite loop keeps the C stack around, but the emterpreter stack must be unwound - we do not want to restore the call stack at infinite loop
      asm.emtStackRestore(initialEmtStackTop);
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}





if (typeof window === "object" && (typeof ENVIRONMENT_IS_PTHREAD === 'undefined' || !ENVIRONMENT_IS_PTHREAD)) {
  function emrun_register_handlers() {
    // When C code exit()s, we may still have remaining stdout and stderr messages in flight. In that case, we can't close
    // the browser until all those XHRs have finished, so the following state variables track that all communication is done,
    // after which we can close.
    var emrun_num_post_messages_in_flight = 0;
    var emrun_should_close_itself = false;
    function postExit(msg) {
      var http = new XMLHttpRequest();
      http.onreadystatechange = function() {
        if (http.readyState == 4 /*DONE*/) {
          try {
            // Try closing the current browser window, since it exit()ed itself. This can shut down the browser process
            // and emrun does not need to kill the whole browser process.
            if (typeof window !== 'undefined' && window.close) window.close();
          } catch(e) {}
        }
      }
      http.open("POST", "stdio.html", true);
      http.send(msg);
    }
    function post(msg) {
      var http = new XMLHttpRequest();
      ++emrun_num_post_messages_in_flight;
      http.onreadystatechange = function() {
        if (http.readyState == 4 /*DONE*/) {
          if (--emrun_num_post_messages_in_flight == 0 && emrun_should_close_itself) postExit('^exit^'+EXITSTATUS);
        }
      }
      http.open("POST", "stdio.html", true);
      http.send(msg);
    }
    // If the address contains localhost, or we are running the page from port 6931, we can assume we're running the test runner and should post stdout logs.
    if (document.URL.search("localhost") != -1 || document.URL.search(":6931/") != -1) {
      var emrun_http_sequence_number = 1;
      var prevPrint = Module['print'];
      var prevErr = Module['printErr'];
      function emrun_exit() { if (emrun_num_post_messages_in_flight == 0) postExit('^exit^'+EXITSTATUS); else emrun_should_close_itself = true; };
      Module['addOnExit'](emrun_exit);
      Module['print'] = function emrun_print(text) { post('^out^'+(emrun_http_sequence_number++)+'^'+encodeURIComponent(text)); prevPrint(text); }
      Module['printErr'] = function emrun_printErr(text) { post('^err^'+(emrun_http_sequence_number++)+'^'+encodeURIComponent(text)); prevErr(text); }

      // Notify emrun web server that this browser has successfully launched the page.
      post('^pageload^');
    }
  }
  window.addEventListener('load', emrun_register_handlers);
}

// POSTs the given binary data represented as a (typed) array data back to the emrun-based web server.
// To use from C code, call e.g. EM_ASM_({emrun_file_dump("file.dat", HEAPU8.subarray($0, $0 + $1));}, my_data_pointer, my_data_pointer_byte_length);
function emrun_file_dump(filename, data) {
  var http = new XMLHttpRequest();
  Module['print']('Dumping out file "' + filename + '" with ' + data.length + ' bytes of data.');
  http.open("POST", "stdio.html?file=" + filename, true);
  http.send(data); // XXX  this does not work in workers, for some odd reason (issue #2681)
}




